760	Version	The Version field indicates the format of the internet header . This document describes version 4 . 	220	0
760	IHL	Internet Header Length is the length of the internet header in 32 bit words , and thus points to the beginning of the data . Note that the minimum value for a correct header is 5 . 	100	0
760	Type of Service	The Type of Service provides an indication of the abstract parameters of the quality of service desired . These parameters are to be used to guide the selection of the actual service parameters when transmitting a datagram through a particular network . Several networks offer service precedence , which somehow treats high precedence traffic as more important than other traffic . A few networks offer a Stream service , whereby one can achieve a smoother service at some cost . Typically this involves the reservation of resources within the network . Another choice involves a low-delay vs . high-reliability trade off . Typically networks invoke more complex ( and delay producing ) mechanisms as the need for reliability increases . 	240	0
760	Total Length	Total Length is the length of the datagram , measured in octets , including internet header and data . This field allows the length of a datagram to be up to 65,535 octets . Such long datagrams are impractical for most hosts and networks . All hosts must be prepared to accept datagrams of up to 576 octets ( whether they arrive whole 	100	0
760	Identification	An identifying value assigned by the sender to aid in assembling the fragments of a datagram . 	400	0
760	Flags	Flags : 3 bits 	231	0
760	Fragment Offset	This field indicates where in the datagram this fragment belongs . The fragment offset is measured in units of 8 octets ( 64 bits ). The first fragment has offset zero . 	110	0
760	Time to Live	This field indicates the maximum time the datagram is allowed to remain the internet system . If this field contains the value zero , then the datagram should be destroyed . This field is modified in internet header processing . The time is measured in units of seconds . The intention is to cause undeliverable datagrams to be discarded . 	122	0
760	Protocol	This field indicates the next level protocol used in the data portion of the internet datagram . The values for various protocols are specified in reference [ 6 ]. 	231	0
760	Header Checksum	A checksum on the header only . Since some header fields may change ( e.g ., time to live ), this is recomputed and verified at each point that the internet header is processed . 	301	0
760	Source Address	The source address . The first octet is the Source Network , and the following three octets are the Source Local Address . 	230	0
760	Destination Address	The destination address . The first octet is the Destination Network , and the following three octets are the Destination Local Address . 	230	0
760	Options	The option field is variable in length . There may be zero or more options . There are two cases for the format of an option : 	400	0
760	Version	Version : Same as the datagram in error . IHL : As computed . Type of Service : Zero . Total Length : As computed . Identification : A new identification is selected . Flags : Zero . Fragment Offset : Zero . Time to Live : Sixty . Protocol : Same as the datagram in error . Header Checksum : As computed . Source Address : Address of the error reporting module . Destination Address : Source address of the datagram in error . Options : The General Error Report Option . Padding : As needed . 	110	0
760	Padding	The internet header padding is used to ensure that the internet header ends on a 32 bit boundary . The padding is zero . 	302	0
760	Identification	The choice of the Identifier for a datagram is based on the need to provide a way to uniquely identify the fragments of a particular datagram . The protocol module assembling fragments judges fragments to belong to the same datagram if they have the same source , destination , protocol , and Identifier . Thus , the sender must choose the Identifier to be unique for this source , destination pair and protocol for the time the datagram ( or any fragment of it ) could be alive in the internet . 	231	0
760	Type of Service	The type of service ( TOS ) is for internet service quality selection . The type of service is specified along the abstract parameters precedence , reliability , and speed . A further concern is the possibility of efficient handling of streams of datagrams . These abstract parameters are to be mapped into the actual service parameters of the particular networks the datagram traverses . 	231	0
760	Time to Live	The time to live is set by the sender to the maximum time the datagram is allowed to be in the internet system . If the datagram is in the internet system longer than the time to live , then the datagram should be destroyed . This field should be decreased at each point that the internet header is processed to reflect the time spent processing the datagram . Even if no local information is available on the time actually spent , the field should be decremented by 1 . The time is measured in units of seconds ( i.e . the value 1 means one second ). Thus , the maximum time to live is 255 seconds or 4.25 minutes . 	122	0
760	Options	The options are just that , optional . That is , the presence or absence of an option is the choice of the sender , but each internet module must be able to parse every option . There can be several options present in the option field . 	400	0
761	Source Port	Source Port : 16 bits 	302	0
761	Destination Port	Destination Port : 16 bits 	400	0
761	Sequence Number	The sequence number of the first data octet in this segment ( except when SYN is present ). 	201	0
761	Acknowledgment Number	If the ACK control bit is set this field contains the value of the next sequence number the sender of the segment is expecting to receive . Once a connection is established this is always sent . 	201	0
761	Data Offset	The number of 32 bit words in the TCP Header . This indicates where the data begins . The TCP header including options is an integral number of 32 bits long . 	110	0
761	Reserved	Reserved : 6 bits 	500	0
761	URG	URG : Urgent Pointer field significant ACK : Acknowledgment field significant EOL : End of Letter RST : Reset the connection SYN : Synchronize sequence numbers FIN : No more data from sender 	240	0
761	Window	The number of data octets beginning with the one indicated in the acknowledgment field which the sender of this segment is willing to accept . 	110	0
761	Checksum	The checksum field is the 16 bit one's complement of the one's complement sum of all 16 bit words in the header and text . If a segment contains an odd number of header and text octets to be checksummed , the last octet is padded on the right with zeros to form a 16 bit word for checksum purposes . The pad is not transmitted as part of the segment . While computing the checksum , the checksum field itself is replaced with zeros . 	301	0
761	Urgent Pointer	This field communicates the current value of the urgent pointer as a positive offset from the sequence number in this segment . The urgent pointer points to the sequence number of the octet following the urgent data . This field should only be interpreted in segments with the URG control bit set . 	110	0
761	Options	Options may occupy space at the end of the TCP header and are a multiple of 8 bits in length . All options are included in the checksum . An option may begin on any octet boundary . There are two cases for the format of an option : 	110	0
761	Padding	The TCP header padding is used to ensure that the TCP header ends and data begins on a 32 bit boundary . The padding is composed of zeros . 	302	0
761	SYN	SYN-SENT - represents waiting for a matching connection request after having sent a connection request . 	201	0
761	SYN	SYN-RECEIVED - represents waiting for a confirming connection request acknowledgment after having both received and sent a connection request . 	121	0
761	FIN	FIN-WAIT-1 - represents waiting for a connection termination request from the remote TCP , or an acknowledgment of the connection termination request previously sent . 	121	0
761	FIN	FIN-WAIT-2 - represents waiting for a connection termination request from the remote TCP . 	110	0
761	RST	A reset segment ( RST ) should be formed and sent : 	201	0
765	d	String of n data bytes d(1 ),..., d(n ) Count n must be positive . 	302	0
765	n	String of n data bytes d(1 ),..., d(n ) Count n must be positive . 	302	0
777	Type	Type 	240	0
777	Code	Code 	231	0
777	Type	Type 	240	0
777	Code	Code 	231	0
777	Type	Type 	240	0
777	Code	Code 	231	0
777	Parameter	Parameter 	231	0
777	Type	Type 	240	0
777	Type	Type 	240	0
777	Code	Code 	231	0
777	Gateway Internet Address	Address of the gateway to which traffic for the network specified in the internet destination network field of the original datagram's data should be sent . 	230	0
777	Type	Type 	240	0
777	Type	Type 	240	0
783	Source Port	Source Port Picked by originator of packet . 	230	0
783	Length	Length Number of bytes in packet after Datagram header . 	100	0
791	Version	The Version field indicates the format of the internet header . This document describes version 4 . 	220	0
791	IHL	Internet Header Length is the length of the internet header in 32 bit words , and thus points to the beginning of the data . Note that the minimum value for a correct header is 5 . 	100	0
791	Type of Service	The Type of Service provides an indication of the abstract parameters of the quality of service desired . These parameters are to be used to guide the selection of the actual service parameters when transmitting a datagram through a particular network . Several networks offer service precedence , which somehow treats high precedence traffic as more important than other traffic ( generally by accepting only traffic above a certain precedence at time of high load ). The major choice is a three way tradeoff between low-delay , high-reliability , and high-throughput . 	240	0
791	Total Length	Total Length is the length of the datagram , measured in octets , including internet header and data . This field allows the length of a datagram to be up to 65,535 octets . Such long datagrams are impractical for most hosts and networks . All hosts must be prepared to accept datagrams of up to 576 octets ( whether they arrive whole or in fragments ). It is recommended that hosts only send datagrams larger than 576 octets if they have assurance that the destination is prepared to accept the larger datagrams . 	100	0
791	Identification	An identifying value assigned by the sender to aid in assembling the fragments of a datagram . 	400	0
791	Flags	Flags : 3 bits 	231	0
791	Fragment Offset	Fragment Offset : 13 bits 	110	0
791	Time to Live	This field indicates the maximum time the datagram is allowed to remain in the internet system . If this field contains the value zero , then the datagram must be destroyed . This field is modified in internet header processing . The time is measured in units of seconds , but since every module that processes a datagram must decrease the TTL by at least one even if it process the datagram in less than a second , the TTL must be thought of only as an upper bound on the time a datagram may exist . The intention is to cause undeliverable datagrams to be discarded , and to bound the maximum datagram lifetime . 	122	0
791	Protocol	This field indicates the next level protocol used in the data portion of the internet datagram . The values for various protocols are specified in " Assigned Numbers " [ 9 ]. 	231	0
791	Header Checksum	A checksum on the header only . Since some header fields change ( e.g ., time to live ), this is recomputed and verified at each point that the internet header is processed . 	301	0
791	Source Address	Source Address : 32 bits 	230	0
791	Destination Address	Destination Address : 32 bits 	230	0
791	Options	The options may appear or not in datagrams . They must be implemented by all IP modules ( host and gateways ). What is optional is their transmission in any particular datagram , not their implementation . 	400	0
791	Padding	The internet header padding is used to ensure that the internet header ends on a 32 bit boundary . The padding is zero . 	302	0
791	Identification	The choice of the Identifier for a datagram is based on the need to provide a way to uniquely identify the fragments of a particular datagram . The protocol module assembling fragments judges fragments to belong to the same datagram if they have the same source , destination , protocol , and Identifier . Thus , the sender must choose the Identifier to be unique for this source , destination pair and protocol for the time the datagram ( or any fragment of it ) could be alive in the internet . 	231	0
791	Type of Service	The type of service ( TOS ) is for internet service quality selection . The type of service is specified along the abstract parameters precedence , delay , throughput , and reliability . These abstract parameters are to be mapped into the actual service parameters of the particular networks the datagram traverses . 	231	0
791	Time to Live	The time to live is set by the sender to the maximum time the datagram is allowed to be in the internet system . If the datagram is in the internet system longer than the time to live , then the datagram must be destroyed . 	122	0
791	Options	The options are optional in each datagram , but required in implementations . That is , the presence or absence of an option is the choice of the sender , but each internet module must be able to parse every option . There can be several options present in the option field . 	400	0
792	Type	Type 	240	0
792	Code	Code 	231	0
792	Checksum	The checksum is the 16-bit ones's complement of the one's complement sum of the ICMP message starting with the ICMP Type . For computing the checksum , the checksum field should be zero . This checksum may be replaced in the future . 	301	0
792	Type	Type 	240	0
792	Code	Code 	231	0
792	Checksum	The checksum is the 16-bit ones's complement of the one's complement sum of the ICMP message starting with the ICMP Type . For computing the checksum , the checksum field should be zero . This checksum may be replaced in the future . 	301	0
792	Type	Type 	240	0
792	Code	Code 	231	0
792	Checksum	The checksum is the 16-bit ones's complement of the one's complement sum of the ICMP message starting with the ICMP Type . For computing the checksum , the checksum field should be zero . This checksum may be replaced in the future . 	301	0
792	Pointer	Pointer 	302	0
792	Type	Type 	240	0
792	Code	Code 	231	0
792	Checksum	The checksum is the 16-bit ones's complement of the one's complement sum of the ICMP message starting with the ICMP Type . For computing the checksum , the checksum field should be zero . This checksum may be replaced in the future . 	301	0
792	Type	Type 	240	0
792	Code	Code 	231	0
792	Checksum	The checksum is the 16-bit ones's complement of the one's complement sum of the ICMP message starting with the ICMP Type . For computing the checksum , the checksum field should be zero . This checksum may be replaced in the future . 	301	0
792	Gateway Internet Address	Address of the gateway to which traffic for the network specified in the internet destination network field of the original datagram's data should be sent . 	230	0
792	Type	Type 	240	0
792	Code	Code 	231	0
792	Checksum	The checksum is the 16-bit ones's complement of the one's complement sum of the ICMP message starting with the ICMP Type . For computing the checksum , the checksum field should be zero . If the total length is odd , the received data is padded with one octet of zeros for computing the checksum . This checksum may be replaced in the future . 	301	0
792	Identifier	If code = 0 , an identifier to aid in matching echos and replies , may be zero . 	302	0
792	Sequence Number	If code = 0 , a sequence number to aid in matching echos and replies , may be zero . 	201	0
792	Type	Type 	240	0
792	Code	Code 	231	0
792	Checksum	The checksum is the 16-bit ones's complement of the one's complement sum of the ICMP message starting with the ICMP Type . For computing the checksum , the checksum field should be zero . This checksum may be replaced in the future . 	301	0
792	Identifier	If code = 0 , an identifier to aid in matching timestamp and replies , may be zero . 	302	0
792	Sequence Number	If code = 0 , a sequence number to aid in matching timestamp and replies , may be zero . 	201	0
792	Type	Type 	240	0
792	Code	Code 	231	0
792	Checksum	The checksum is the 16-bit ones's complement of the one's complement sum of the ICMP message starting with the ICMP Type . For computing the checksum , the checksum field should be zero . This checksum may be replaced in the future . 	301	0
792	Identifier	If code = 0 , an identifier to aid in matching request and replies , may be zero . 	302	0
792	Sequence Number	If code = 0 , a sequence number to aid in matching request and replies , may be zero . 	200	0
793	Source Port	Source Port : 16 bits 	302	0
793	Destination Port	Destination Port : 16 bits 	400	0
793	Sequence Number	The sequence number of the first data octet in this segment ( except when SYN is present ). If SYN is present the sequence number is the initial sequence number ( ISN ) and the first data octet is ISN+1 . 	201	0
793	Acknowledgment Number	If the ACK control bit is set this field contains the value of the next sequence number the sender of the segment is expecting to receive . Once a connection is established this is always sent . 	201	0
793	Data Offset	The number of 32 bit words in the TCP Header . This indicates where the data begins . The TCP header ( even one including options ) is an integral number of 32 bits long . 	110	0
793	Reserved	Reserved : 6 bits 	500	0
793	URG	URG : Urgent Pointer field significant ACK : Acknowledgment field significant PSH : Push Function RST : Reset the connection SYN : Synchronize sequence numbers FIN : No more data from sender 	240	0
793	Window	The number of data octets beginning with the one indicated in the acknowledgment field which the sender of this segment is willing to accept . 	110	0
793	Checksum	The checksum field is the 16 bit one's complement of the one's complement sum of all 16 bit words in the header and text . If a segment contains an odd number of header and text octets to be checksummed , the last octet is padded on the right with zeros to form a 16 bit word for checksum purposes . The pad is not transmitted as part of the segment . While computing the checksum , the checksum field itself is replaced with zeros . 	301	0
793	Urgent Pointer	This field communicates the current value of the urgent pointer as a positive offset from the sequence number in this segment . The urgent pointer points to the sequence number of the octet following the urgent data . This field is only be interpreted in segments with the URG control bit set . 	110	0
793	Options	Options may occupy space at the end of the TCP header and are a multiple of 8 bits in length . All options are included in the checksum . An option may begin on any octet boundary . There are two cases for the format of an option : 	110	0
793	Padding	The TCP header padding is used to ensure that the TCP header ends and data begins on a 32 bit boundary . The padding is composed of zeros . 	302	0
793	SYN	SYN-SENT - represents waiting for a matching connection request after having sent a connection request . 	201	0
793	SYN	SYN-RECEIVED - represents waiting for a confirming connection request acknowledgment after having both received and sent a connection request . 	121	0
793	FIN	FIN-WAIT-1 - represents waiting for a connection termination request from the remote TCP , or an acknowledgment of the connection termination request previously sent . 	121	0
793	FIN	FIN-WAIT-2 - represents waiting for a connection termination request from the remote TCP . 	110	0
823	Gateway Type	Gateway Type 12 ( decimal ) 	231	0
823	Gateway Type	Gateway Type Acknowledgments are type 2 . Negative acknowledgments are type 10 . 	240	0
823	Gateway Type	Gateway Type 8 for echo message; 0 for echo reply . 	231	0
823	Gateway Type	Gateway Type 9 	240	0
869	.	HMP messages are sent using the version 4 IP header as described in RFC-791 " Internet Protocol ." The HMP protocol number is 20 ( decimal ). The time to live field should be set to a reasonable value for the hosts being monitored . 	121	0
869	Trap ID	This is usually the program counter at the trap . The ID identifies the trap , and does not have to be a program counter , provided it uniquely identifies the trap . 	230	0
869	Trap ID	This is ( usually ) the program counter at the trap . The ID identifies the trap , and does not have to be a program counter , provided that it uniquely identifies the trap . 	230	0
869	Version Number	Version Number 	220	0
869	Version Number	Version Number 	220	0
869	Gateway Version #	Gateway Version # 	220	0
869	Size of Trap Entry	The size in 16-bit words of the trap entry , not including the size field . 	100	0
869	Time of Trap	Time of Trap 	121	0
869	Trap ID	Trap ID 	202	0
869	Process ID	Process ID 	202	0
869	Count of this Trap	Count of this Trap 	202	0
869	Version Number	Version Number 	220	0
869	Patch Version Number	Patch Version Number 	220	0
869	Time Since Gateway Restart	Time Since Gateway Restart 	121	0
869	Measurement Flags	Flags that , if set , indicate which measurements are turned on . Current values are : 	301	0
869	Memory Idle	The number of bytes of buffer memory that have been allocated but are currently idle . 	400	0
869	Memory Free	The number of bytes of buffer memory that has not been allocated . 	400	0
869	Buffers	Buffers 	231	0
869	Data Size for Interface	Data Size for Interface 	400	0
869	Interface Address	Interface Address 	230	0
869	Neighbor Address	Neighbor Address 	230	0
869	Gateway Version Number	Gateway Version Number 	220	0
869	Number of Interfaces	Number of Interfaces 	400	0
869	Number of Neighbors	Number of Neighbors 	202	0
869	Number of Host Unreachable	The number of packets dropped because the Host was unreachable . 	302	0
869	Number of Net Unreachable	The number of packets dropped because the Network was unreachable . 	303	0
869	Interface Address	Interface Address 	230	0
869	Packets Dropped on Input	The number of packets on input to this interface because there were not enough buffers . 	400	0
869	Count of IP Errors	Count of IP Errors 	231	0
869	Count of Datagrams for Us	Count of Datagrams for Us 	400	0
869	Datagrams to be Forwarded	The number of datagrams were not for this gateway and should be sent out another interface . 	303	0
869	Count of Datagrams Looped	The number of datagrams that were received on and sent out of this interface . 	202	0
869	Count of Bytes Input	Count of Bytes Input 	301	0
869	Count of Datagrams From Us	Count of Datagrams From Us 	400	0
869	Count that were Forwarded	Count that were Forwarded 	303	0
869	Count of Local Net Dropped	The number of packets that were dropped because of local network flow control restrictions . 	202	0
869	Count of Queue full Dropped	The number of packets that were dropped because the output queue was full . 	202	0
869	Count of Bytes Output	Count of Bytes Output 	302	0
869	Neighbor Address	Neighbor Address 	230	0
869	Count of Routing Updates TO	Count of Routing Updates TO 	202	0
869	Count of Routing Updates FROM	The number of routing updates received from this neighbor gateway . 	202	0
869	Datagrams Local Net Dropped	The number of datagrams dropped to this neighbor gateway because of local network flow control restrictions . 	231	0
869	Datagrams Queue full Dropped	The number of datagrams dropped to this neighbor because the output queue was full . 	231	0
869	Count of Bytes send to Neighbor	Count of Bytes send to Neighbor 	302	0
869	Gateway Version Number	Gateway Version Number 	220	0
869	Overflow counter	Overflow counter 	400	0
869	Collection Time in Min	The time period in minutes in which the HTM data is being collected . 	121	0
869	Number of HTM entries	Number of HTM entries 	231	0
869	IP Source Address	IP Source Address 	230	0
869	IP Destination Address	IP Destination Address 	230	0
869	IP Protocol	IP Protocol 	231	0
869	Counter for SRC -> DST datagrams	The number of datagrams sent in the Source to Destination address direction . 	230	0
869	Counter for DST -> SRC datagrams	The number of datagrams sent in the Destination to Source address direction . 	202	0
869	Gateway Version #	Gateway Version # 	220	0
869	Interface Address	Interface Address 	230	0
869	Neighbor Address	Neighbor Address 	230	0
869	Distance	The distance in hops to this network . Zero hops means that the network is directly connected to this gateway . A negative number means that the network is currently unreachable . 	100	0
869	Neighbor #	The neighbor gateway that is the next hop to reach this network . This is an index into the previous information on this gateway's neighbor gateways . This field is only valid if the Distance is greater than zero . 	230	0
904	EGP Version #	EGP Version # assigned number identifying the EGP version ( currently 2 ) 	220	0
904	Type	Type identifies the message type 	240	0
904	Code	Code identifies the message code ( subtype ) 	231	0
904	Status	Status contains message-dependent status information 	230	0
904	Checksum	Checksum The EGP checksum is the 16-bit one's complement of the one's complement sum of the EGP message starting with the EGP version number field . When computing the checksum the checksum field itself should be zero . 	301	0
904	Autonomous System #	Autonomous System # assigned number identifying the particular autonomous system 	231	0
904	Sequence #	Sequence # send state variable ( commands ) or receive state variable ( responses and indications ) 	301	0
904	Type	Type 3 	240	0
904	Code	Code 0 Request command 1 Confirm response 2 Refuse response 3 Cease command 4 Cease-ack response 	240	0
904	Status	Status ( see below ) 0 unspecified 1 active mode 2 passive mode 3 insufficient resources 4 administratively prohibited 5 going down 6 parameter problem 7 protocol violation 	240	0
904	Hello Interval	Hello Interval minimum Hello command polling interval ( seconds ) 	120	0
904	Poll Interval	Poll Interval minumum Poll command polling interval ( seconds ) 	120	0
904	Type	Type 5 	240	0
904	Code	Code 0 Hello command 1 I-H-U response 	302	0
904	Status	Status 0 indeterminate 1 Up state 2 Down state Exterior Gateway Protocol Formal Specification Page 21 D.L . Mills 	240	0
904	Type	Type 2 	240	0
904	Code	Code 0 	302	0
904	Status	Status 0 indeterminate 1 Up state 2 Down state 	240	0
904	IP Source Network	IP Source Network IP network number of the network about which reachability information is being requested ( coded as 1 , 2 or 3 octets , left justified with trailing zeros ) Exterior Gateway Protocol Formal Specification Page 22 D.L . Mills 	230	0
904	Type	Type 1 	240	0
904	Code	Code 0 	302	0
904	Status	Status 0 indeterminate 1 Up state 2 Down state 128 unsolicited message bit 	240	0
904	IP Source Network	IP Source Network IP network number of the network about which reachability information is being supplied ( coded as 1 , 2 or 3 octets , left justified with trailing zeros ) 	230	0
904	Type	Type 8 	240	0
904	Code	Code 0 	302	0
904	Status	Status 0 indeterminate 1 Up state 2 Down state 128 unsolicited message bit 	240	0
904	Reason	Reason ( see below ) 0 unspecified 1 bad EGP header format 2 bad EGP data field format 3 reachability info unavailable 4 excessive polling rate 5 no response 	240	0
917	Type	Type 	240	0
917	Code	Code 	231	0
917	Checksum	Checksum 	301	0
917	Identifier	Identifier 	202	0
917	Sequence Number	Sequence Number 	200	0
950	Type	Type 	240	0
950	Code	Code 	231	0
950	Checksum	Checksum 	301	0
950	Identifier	Identifier 	202	0
950	Sequence Number	A sequence number to aid in matching requests and replies , may be zero . 	200	0
950	Address Mask	Address Mask 	230	0
958	Status	This is a six-bit code indicating the status of the local clock . Values are assigned to indicate whether it is operating correctly or in one of several error states . 	121	0
958	Precision	This is a 16-bit signed integer indicating the precision of the local clock , in seconds to the nearest power of two . For instance , a 60-Hz line-frequency clock would be assigned the value - 6 , while a 1000-Hz crystal clock would be assigned the value - 10 . 	121	0
958	Estimated Error	This is a 32-bit fixed-point number indicating the estimated error of the local clock at the time last set . The value is in seconds , with fraction point between bits 15 and 16 , and is computed by the sender based on the reported error of the reference clock , the precision and drift rate of the local clock and the time the local clock was last set . For statistical purposes this quantity can be assumed equal to the estimated or computed standard deviation , as described in [ 12 ]. 	121	0
958	Estimated Drift Rate	This is a 32-bit signed fixed-point number indicating the estimated drift rate of the local clock . The value is dimensionless , with fraction point to the left of the high-order bit . While for most purposes this value can be estimated based on the hardware characteristics , it is possible to compute it quite accurately , as described in [ 12 ]. 	121	0
958	Reference Clock Identifier	This is a 32-bit code identifying the particular reference clock . The interpretation of its value depends on value of Reference Clock Type . In the case of a primary clock locally synchronized to Standard Time ( type 1 ), the value is an ASCII string identifying the clock . In the case of a secondary clock remotely synchronized to an Internet host via NTP ( type 2 ), the value is the 32-bit Internet address of that host . In other cases the value is undefined . 	121	0
958	Source Port	UDP source port number . In the case of unsymmetric mode and a client request this field is assigned by the client host , while for a server reply it is copied from the Destination Port field of the client request . In the case of symmetric mode , both the Source Port and Destination Port fields are assigned the NTP service-port number 123 . 	400	0
958	Destination Port	UDP destination port number . In the case of unsymmetric mode and a client request this field is assigned the NTP service-port number 123 , while for a server reply it is copied form the Source Port field of the client request . In the case of symmetric mode , both the Source Port and Destination Port fields are assigned the NTP service-port number 123 . 	400	0
958	Length	Length 	100	0
958	Checksum	Checksum 	301	0
958	LI	Code warning of impending leap-second to be inserted at the end of the last day of the current month . Bits are coded as follows : 	240	0
958	Status	Status 	302	0
958	Type	Reference Clock Type ( Type ) 	302	0
958	Precision	Signed integer in the range + 32 to - 32 indicating the precision of the local clock , in seconds to the nearest power of two . 	121	0
958	Estimated Error	Fixed-point number indicating the estimated error of the local clock at the time last set , in seconds with fraction point between bits 15 and 16 . 	121	0
958	Estimated Drift Rate	Signed fixed-point number indicating the estimated drift rate of the local clock , in dimensionless units with fraction point to the left of the high-order bit . 	121	0
958	Reference Clock Identifier	Reference Clock Identifier 	202	0
959	d	String of n data bytes d(1 ),..., d(n ) Count n must be positive . 	302	0
959	n	String of n data bytes d(1 ),..., d(n ) Count n must be positive . 	302	0
966	Type	Type 	240	0
966	Code	For a Create Group Request message , the Code field indicates if the group is to be restricted : 	231	0
966	Checksum	The checksum is the 16-bit one's complement of the one's complement sum of the IGMP message starting with the IGMP Type . For computing the checksum , the checksum field should be zero . This checksum may be replaced in the future . 	301	0
966	Identifier	Identifier 	202	0
966	Sequence Number	Sequence Number 	200	0
966	Group Address	Group Address 	230	0
966	Access Key	Access Key 	230	0
966	Type	Type 	240	0
966	Code	Code 	231	0
966	Checksum	The checksum is the 16-bit one's complement of the one's complement sum of the IGMP message starting with the IGMP Type . For computing the checksum , the checksum field should be zero . This checksum may be replaced in the future . 	301	0
966	Identifier	Identifier 	230	0
966	Sequence Number	Sequence Number 	200	0
966	Group Address	Group Address 	230	0
966	Access Key	For a Join Group Request message , the access key allocated when the group was created ( 0 for unrestricted groups ). 	230	0
966	Type	Type 	240	0
966	Code	Code 	231	0
966	Checksum	The checksum is the 16-bit one's complement of the one's complement sum of the IGMP message starting with the IGMP Type . For computing the checksum , the checksum field should be zero . This checksum may be replaced in the future . 	301	0
966	Identifier	Identifier 	202	0
966	Sequence Number	Sequence Number 	200	0
966	Group Address	Group Address 	230	0
983	vrsn	1 . vrsn 8 bits 	240	0
983	packet length	2 . packet length 16 bits ( min=8 , max=65535 ) 	100	0
983	code	4 . code 4 bits 	240	0
983	credit	5 . credit 4 bits 	240	0
983	source reference	7 . source reference 16 bits 	240	0
983	class	8 . class 4 bits 	240	0
983	header length	10 . variable data ( header length - 6 ) octets 	400	0
983	packet length	11 . user data ( packet length - header length - 5 ) octets 	240	0
983	reason	8 . reason 8 bits 	240	0
988	Type	Type 	240	0
988	Code	In a Create Group Request message , the code field indicates if the new host group is to be public or private : 	210	0
988	Checksum	The checksum is the 16-bit one's complement of the one's complement sum of the IGMP message starting with the IGMP Type . For computing the checksum , the checksum field should be zero . 	301	0
988	Identifier	In a Confirm Group Request message , the identifier field contains zero . 	301	0
988	Group Address	In a Create Group Request message , the group address field contains zero . 	230	0
988	Access Key	Access Key 	230	0
1002	NAME_TRN_ID	NAME_TRN_ID Transaction ID for Name Service Transaction . Requestor places a unique value for each active transaction . Responder puts NAME_TRN_ID value from request packet in response packet . 	231	0
1002	OPCODE	OPCODE Packet type code , see table below . 	231	0
1002	NM_FLAGS	NM_FLAGS Flags for operation , see table below . 	231	0
1002	RCODE	RCODE Result codes of request . Table of RCODE values for each response packet below . 	231	0
1002	QDCOUNT	QDCOUNT Unsigned 16 bit integer specifying the number of entries in the question section of a Name 	231	0
1002	ANCOUNT	ANCOUNT Unsigned 16 bit integer specifying the number of resource records in the answer section of a Name Service packet . 	231	0
1002	NSCOUNT	NSCOUNT Unsigned 16 bit integer specifying the number of resource records in the authority section of a Name Service packet . 	231	0
1002	ARCOUNT	ARCOUNT Unsigned 16 bit integer specifying the number of resource records in the additional records section of a Name Service packet . 	231	0
1002	OPCODE	OPCODE 1-4 Operation specifier : 0 = query 5 = registration 6 = release 7 = WACK 8 = refresh 	240	0
1002	QUESTION_NAME	QUESTION_NAME The compressed name representation of the NetBIOS name for the request . 	230	0
1002	QUESTION_TYPE	QUESTION_TYPE The type of request . The values for this field are specified for each request . 	231	0
1002	QUESTION_CLASS	QUESTION_CLASS The class of the request . The values for this field are specified for each request . 	231	0
1002	RR_NAME	RR_NAME The compressed name representation of the NetBIOS name corresponding to this resource record . 	230	0
1002	RR_TYPE	RR_TYPE Resource record type code 	231	0
1002	RR_CLASS	RR_CLASS Resource record class code 	231	0
1002	TTL	TTL The Time To Live of a the resource record's name . 	120	0
1002	RDLENGTH	RDLENGTH Unsigned 16 bit integer that specifies the number of bytes in the RDATA field . 	100	0
1002	RDATA	RDATA RR_CLASS and RR_TYPE dependent field . Contains the resource information for the NetBIOS name . 	231	0
1002	FLAGS	The TYPE , FLAGS , and LENGTH fields are present in every session packet . 	231	0
1002	TTL	adjust refresh timeout value , TTL , for this name; return success; /* name can be added */ 	301	0
1006	vrsn	vrsn 8 bits 	302	0
1006	packet length	packet length 16 bits ( min=7 , max=65535 ) 	100	0
1042	B	IEEE 802 networks may be used as IP networks of any class ( A , B , or C ). These systems use two Link Service Access Point ( LSAP ) fields of the LLC header in much the same way the ARPANET uses the " link " field . Further , there is an extension of the LLC header called the Sub-Network Access Protocol ( SNAP ). 	231	0
1042	B	The Broadcast Indicators are used to indicate the routing desired for a particular frame . A frame may be routed through a single specified route , through every distinct non-repeating route in a multi-ring network , or through a single route determined by a spanning tree algorithm such that the frame appears on every ring exactly once . The values which may be used at this time are ( in binary ): 	200	0
1042	LTH	The Length bits are used to indicate the length or the RI field , including the RC and RD fields . Only even values between 2 and 30 inclusive are allowed . 	100	0
1042	D	The D bit specifies the order of the RD fields . If D equals 1 , the routing-designator fields are specified in reverse order . 	210	0
1042	LF	The LF bits specify the maximum MTU supported by all bridges along a specific route . All multi-ring broadcast frames should be transmitted with a value at least as large as the supported MTU . The values used are : 	200	0
1042	LF	LF ( binary ) MAC MTU IP MTU 	231	0
1042	r	These bits are reserved for future use and must be set to 0 by the transmitter and ignored by the receiver . 	500	0
1045	MsgDelivery	CoresidentEntity , MsgDelivery and SegmentSize fields are in use . The RequestCode field specifies the type of Request . It is analogous to a packet type field of the Ethernet , acting as a switch for higher-level protocols . The CoresidentEntity field , if used , designates a subgroup of the ServerEntityId group to which the Request should be routed , namely those members that are co-resident with the specified entity ( or entity group ). The primary intended use is to specify the manager for a particular service that is co-resident with a particular entity , using the well-known entity group identifier for the service manager in the ServerEntityId field and the identifier for the entity in the CoresidentEntity field . The next 12 octets are user - or application-specified . 	231	0
1045	Domain	Domain The 13-bit identifier specifying the naming and administration domain for the client and server named in the packet . 	230	0
1045	Length	Length A 13-bit field that specifies the number of 32-bit words in the segment data portion of the packet ( if any ), excluding the checksum field . ( Every VMTP packet is required to be a multiple of 64 bits , possibly by padding out the segment data .) The minimum legal Length is 0 , the maximum length is 4096 and it must be an even number . 	100	0
1045	RetransmitCount	RetransmitCount : 3 bits - the ordinal number of transmissions of this packet group prior to this one , modulo 8 . This field is used in estimation of roundtrip times . This count may wrap around during a message transaction . However , it should be sufficient to match acknowledgments and responses with a particular transmission . 	122	0
1045	PGcount	PGcount : 8 bits The number of packet groups that this packet group represents in addition to that specified by the Transaction field . This is used in acknowledging multiple packet groups in streamed communication . 	231	0
1045	Transaction	Transaction : 32 bits : Identifier for this message transaction . 	231	0
1045	PacketDelivery	PacketDelivery : 32 bits : Delivery indicates the segment blocks contained in this packet . Each bit corresponds to one 512-octet block of segment data . A 1 bit in the i-th bit position ( counting the LSB as 0 ) indicates the presence of the i-th segment block . 	210	0
1045	RES	RES Reserved for future use . Must be 0 . 	500	0
1045	MsgDelivery	MsgDelivery : 32 bits The segment blocks being transmitted ( in total ) in this packet group following the conventions for the PacketDelivery field . This field is ignored by the protocol and treated as an additional user data field if MDM is 0 . On transmission , the user level sets the MsgDelivery to indicate those portions of the segment to be transmitted . On receipt , the MsgDelivery field is modified by the VMTP module to indicate the segment data blocks that were actually received before the message control block is passed to the user or RPC level . In particular , the kernel does not discard the packet group if segment data blocks are missing . A Server or Client entity receiving a message with a MsgDelivery in use must check the field to ensure adequate delivery and retry the operation if necessary . 	400	0
1045	SegmentSize	SegmentSize : 32 bits Size of segment in octets , up to a maximum of 16 kilooctets without streaming and 4 megaoctets with streaming , if SDA is set . Otherwise , this field is ignored by the protocol and treated as an additional user data field . 	200	0
1045	Checksum	Checksum : 32 bits . The 32-bit checksum for the header and segment data . 	301	0
1045	Transaction	Transaction Identifier for transaction , at least one greater than the previously issued Request from this Client . 	230	0
1045	RequestCode	RequestCode Request code for this request , indicating the operation to perform . 	202	0
1045	STI	STI 1 if this Response is using one or more of the transaction identifiers skipped by the Client after the Request to which this is a Response . STI in the Request essentially allocates up to 256 transaction identifiers for the Server to use in a run of Response packet groups . 	210	0
1045	PGcount	PGcount The number of consecutively previous packet groups that this response is acknowledging in addition to the one identified by the Transaction identifier . 	231	0
1045	Checksum	Checksum 14 , 43 Checksum , not set 44 Client 7 , 10 , 38 Client timer 16 CMD 42 , 110 CMG 32 , 40 Co-resident entity 25 Code 42 CoResidentEntity 42 , 43 CRE 21 , 42 	240	0
1045	DGM	DGM 42 Digital signature , VMTP management 95 , 101 Diskless workstations 2 Domain 9 , 38 Domain 1 102 Domain 3 104 	240	0
1045	LEE	LEE 32 , 37 Little-endian 9 	240	0
1045	RAE	RAE 37 Rate control 18 Real-time 2 , 4 Realtime 22 	240	0
1045	SDA	SDA 42 Security 4 , 19 Segment block 41 Segment data 43 SegmentSize 42 , 43 Selective retransmission 18 Server 7 , 10 , 41 Server group 8 Sockets , VMTP 118 STI 26 , 40 Streaming 25 , 55 Strictly stable 8 Subgroups 21 	240	0
1054	Version	This memo specifies version 1 of IGMP . Version 0 is specified in RFC-988 and is now obsolete . 	220	0
1054	Type	Type 	240	0
1054	Unused	Unused 	302	0
1054	Checksum	The checksum is the 16-bit one's complement of the one's complement sum of the 8-octet IGMP message . For computing the checksum , the checksum field is zeroed . 	301	0
1054	Group Address	In a Host Membership Query message , the group address field is zeroed when sent , ignored when received . 	230	0
1059	Stratum	This is an integer indicating the stratum of the logical clock . A value of zero is interpreted as unspecified , one as a primary clock ( synchronized by outside means ) and remaining values as the stratum level ( synchronized by NTP ). For comparison purposes a value of zero is considered greater than any other value . 	121	0
1059	Precision	This is a signed integer indicating the precision of the logical clock , in seconds to the nearest power of two . For instance , a 60-Hz line-frequency clock would be assigned the value - 6 , while a 1000-Hz crystal-derived clock would be assigned the value - 10 . 	121	0
1059	Synchronizing Distance	This is a fixed-point number indicating the estimated roundtrip delay to the primary clock , in seconds . 	121	0
1059	Estimated Drift Rate	This is a fixed-point number indicating the estimated drift rate of the local clock , in dimensionless units . 	121	0
1059	Reference Clock Identifier	This is a code identifying the particular reference clock or server . The interpretation of the value depends on the stratum . For stratum values of zero ( unspecified ) or one ( primary clock ), the value is an ASCII string identifying the reason or clock , respectively . For stratum values greater than one ( synchronized by NTP ), the value is the 32-bit Internet address of the reference server . 	121	0
1059	Source Port	UDP source port number . In the case of a client request this field is assigned by the client host , while for a server reply it is copied from the Destination Port field of the client request . In the case of symmetric mode , both the Source Port and Destination Port fields are assigned the NTP service-port number 123 . 	400	0
1059	Destination Port	UDP destination port number . In the case of a client request this field is assigned the NTP service-port number 123 , while for a server reply it is copied from the Source Port field of the client request . In the case of symmetric mode , both the Source Port and Destination Port fields are assigned the NTP service-port number 123 . 	400	0
1059	Length	Length 	100	0
1059	Checksum	Checksum 	301	0
1059	LI	Two-bit code warning of impending leap-second to be inserted at the end of the last day of the current month . Bits are coded as follows : 	121	0
1059	VN	Version Number ( VN ) 	220	0
1059	Stratum	Integer identifying stratum level of local clock . Values are defined as follows : 	240	0
1059	Poll	Signed integer indicating the maximum interval between successive messages , in seconds to the nearest power of two . 	120	0
1059	Precision	Signed integer indicating the precision of the local clock , in seconds to the nearest power of two . 	121	0
1059	Synchronizing Distance	Fixed-point number indicating the estimated roundtrip delay to the primary synchronizing source , in seconds with fraction point between bits 15 and 16 . 	121	0
1059	Estimated Drift Rate	Fixed-point number indicating the estimated drift rate of the local clock , in dimensionless units with fraction point to the left of the most significant bit . 	121	0
1059	Reference Clock Identifier	Code identifying the particular reference clock . In the case of type 0 ( unspecified ) or type 1 ( primary reference ), this is a left-justified , zero-filled ASCII string , for example : 	121	0
1086	address type	address type ( 2 octets ) - a binary-encoded value in network order indicating the address type . The value 3 is used for X.25 addressing of this format . 	231	0
1086	address type	address type ( 2 octets ) - a binary-encoded value in network order . The value 2 is used . 	201	0
1086	TCP port	TCP port ( 2 octets ) - a binary-encoded value in network order . 	301	0
1086	IP address	IP address ( 4 octets ) - a binary-encoded value in network order . 	230	0
1105	Marker	The Marker field is 16 bits of all ones . This field is used to mark the start of a message . If the first two bytes of a message are not all ones then we have a synchronization error and the BGP connection should be closed after sending a notification message with opcode 5 ( connection not synchronized ). No notification data is sent . 	301	0
1105	Length	The Length field is 16 bits . It is the total length of the message , incluluding header , in bytes . If an illegal length is encountered ( more than 1024 bytes or less than 8 bytes ), a notification message with opcode 6 ( bad message length ) and two data bytes of the bad length should be sent and the BGP connection closed . 	100	0
1105	Version	The Version field is 8 bits of protocol version number . The current BGP version number is 1 . If a bad version number is found , a notification message with opcode 8 ( bad version number ) should be sent and the BGP connection closed . The bad version number should be included in one byte of notification data . 	220	0
1105	Type	The Type field is 8 bits of message type code . The following type codes are defined : 	231	0
1105	My Autonomous System	This field is our 16 bit autonomous system number . If there is a problem with this field , a notification message with opcode 9 ( invalid AS field ) should be sent and the BGP connection closed . No notification data is sent . 	231	0
1105	Link Type	Link Type : 8 bits 	231	0
1105	Authentication Data	The Authentication Data field is a variable length field containing authentication data . If the value of Authentication Code field is zero , the Authentication Data field has zero length . If authentication fails , a notification message with opcode 3 ( authentication failure ) and no data is sent and the BGP connection is closed . 	400	0
1105	Gateway	The Gateway field is the address of a gateway that has routes to the Internet networks listed in the rest of the UPDATE message . This gateway MUST belong to the same AS as the BGP peer who advertises it . If there is a problem with the gateway field , a notification message with subcode 6 ( invalid gateway field ) is sent . 	230	0
1105	AS count	This field is the count of Direction and AS Number pairs in this UPDATE message . If an incorrect AS count field is detected , subcode 1 ( invalid AS count ) is specified in the notification message . 	231	0
1105	Direction	The Direction field is an octet containing the direction taken by the routing information when exiting the AS defined by the succeeding AS Number field . The following values are defined . 	301	0
1105	AS Number	This field is the AS number that transmitted the routing information . If there is a problem with this AS number , a notification message with subcode 3 ( invalid autonomous system ) is sent . 	231	0
1105	Net Count	The Net Count field is the number of Metric and Network field pairs which follow this field . If there is a problem with this field , a notification with subcode 7 ( invalid net count field ) is sent . 	231	0
1105	Network	The Network field is four bytes of Internet network number . If there is a problem with the network field , a notification message with subcode 8 ( invalid network field ) is sent . 	400	0
1105	Metric	The Metric field is 16 bits of an unspecified metric . BGP metrics are comparable ONLY if routes have exactly the same AS path . A metric of all ones indicates the network is unreachable . In all other cases the metric field is MEANINGLESS and MUST BE IGNORED . There are no illegal metric values . 	231	0
1105	Opcode	The Opcode field describes the type of NOTIFICATION . The following opcodes have been defined . 	231	0
1105	Data	The Data field contains zero or more bytes of data to be used in diagnosing the reason for the NOTIFICATION . The contents of the Data field depend upon the opcode . See the opcode descriptions above for more details . 	400	0
1112	Version	This memo specifies version 1 of IGMP . Version 0 is specified in RFC-988 and is now obsolete . 	220	0
1112	Type	Type 	240	0
1112	Unused	Unused 	302	0
1112	Checksum	The checksum is the 16-bit one's complement of the one's complement sum of the 8-octet IGMP message . For computing the checksum , the checksum field is zeroed . 	301	0
1112	Group Address	Group Address 	230	0
1134	Code	The Code field is one octet and identifies the kind of LCP packet . LCP Codes are assigned as follows : 	231	0
1134	Identifier	The Identifier field is one octet and aids in matching requests and replies . 	301	0
1134	Length	The Length field is two octets and indicates the length of the LCP packet including the Code , Identifier , Length and Data fields . Octets outside the range of the Length field should be treated as Data Link Layer padding and should be ignored on reception . 	100	0
1134	Code	Code 	231	0
1134	Identifier	The Identifier field should be changed on each transmission . On reception , the Identifier field should be copied into the Identifier field of the appropriate reply packet . 	231	0
1134	Code	Code 	231	0
1134	Identifier	The Identifier field is a copy of the Identifier field of the Configure-Request which caused this Configure-Ack . 	301	0
1134	Code	Code 	231	0
1134	Identifier	The Identifier field is a copy of the Identifier field of the Configure-Request which caused this Configure-Nak . 	231	0
1134	Code	Code 	231	0
1134	Identifier	The Identifier field is a copy of the Identifier field of the Configure-Request which caused this Configure-Reject . 	301	0
1134	Code	Code 	231	0
1134	Identifier	The Identifier field is one octet and aids in matching requests and replies . 	301	0
1134	Code	Code 	231	0
1134	Identifier	Identifier 	202	0
1134	Code	Code 	231	0
1134	Identifier	Identifier 	202	0
1134	Rejected-Protocol	The Rejected-Protocol field is two octets and contains the Protocol of the Data Link Layer frame which is being rejected . 	400	0
1134	Code	Code 	231	0
1134	Identifier	The Identifier field is one octet and aids in matching Echo - Requests and Echo-Replies . 	301	0
1134	Magic-Number	The Magic-Number field is four octets and aids in detecting loopbacked links . Unless modified by a Configuration Option , the Magic-Number MUST always be transmitted as zero and MUST always be ignored on reception . Further use of the Magic-Number is beyond the scope of this discussion . 	500	0
1134	Code	Code 	231	0
1134	Identifier	The Identifier field is one octet and is for use by the Discard - Request transmitter . 	301	0
1134	Magic-Number	The Magic-Number field is four octets and aids in detecting loopbacked links . Unless modified by a configuration option , the Magic-Number MUST always be transmitted as zero and MUST always be ignored on reception . Further use of the Magic-Number is beyond the scope of this discussion . 	500	0
1134	Type	The Type field is one octet and indicates the type of Configuration Option . The most up-to-date values of the Type field are specified in the most recent " Assigned Numbers " RFC [ 11 ]. 	231	0
1134	Length	The Length field is one octet and indicates the length of this Configuration Option including the Type , Length and Data fields . If a negotiable Configuration Option is received in a Configure - Request but with an invalid Length , a Configure-Nak should be transmitted which includes the desired Configuration Option with an appropriate Length and Data . 	100	0
1171	Code	The Code field is one octet and identifies the kind of LCP packet . LCP Codes are assigned as follows : 	231	0
1171	Identifier	The Identifier field is one octet and aids in matching requests and replies . 	301	0
1171	Length	The Length field is two octets and indicates the length of the LCP packet including the Code , Identifier , Length and Data fields . Octets outside the range of the Length field should be treated as Data Link Layer padding and should be ignored on reception . 	100	0
1171	Code	Code 	231	0
1171	Identifier	The Identifier field should be changed on each transmission . On reception , the Identifier field should be copied into the Identifier field of the appropriate reply packet . 	231	0
1171	Code	Code 	231	0
1171	Identifier	The Identifier field is a copy of the Identifier field of the Configure-Request which caused this Configure-Ack . 	301	0
1171	Code	Code 	231	0
1171	Identifier	The Identifier field is a copy of the Identifier field of the Configure-Request which caused this Configure-Nak . 	301	0
1171	Code	Code 	231	0
1171	Identifier	The Identifier field is a copy of the Identifier field of the Configure-Request which caused this Configure-Reject . 	301	0
1171	Code	Code 	231	0
1171	Identifier	The Identifier field is one octet and aids in matching requests and replies . 	301	0
1171	Code	Code 	231	0
1171	Identifier	Identifier 	202	0
1171	Code	Code 	231	0
1171	Identifier	Identifier 	202	0
1171	Rejected-Protocol	The Rejected-Protocol field is two octets and contains the Protocol of the Data Link Layer frame which is being rejected . 	400	0
1171	Code	Code 	231	0
1171	Identifier	The Identifier field is one octet and aids in matching Echo - Requests and Echo-Replies . 	301	0
1171	Magic-Number	The Magic-Number field is four octets and aids in detecting loopbacked links . Unless modified by a Configuration Option , the Magic-Number MUST always be transmitted as zero and MUST always be ignored on reception . Further use of the Magic-Number is beyond the scope of this discussion . 	500	0
1171	Code	Code 	231	0
1171	Identifier	The Identifier field is one octet and is for use by the Discard - Request transmitter . 	301	0
1171	Magic-Number	The Magic-Number field is four octets and aids in detecting loopbacked links . Unless modified by a configuration option , the Magic-Number MUST always be transmitted as zero and MUST always be ignored on reception . Further use of the Magic-Number is beyond 	500	0
1171	Type	The Type field is one octet and indicates the type of Configuration Option . The most up-to-date values of the Type field are specified in the most recent " Assigned Numbers " RFC [ 12 ]. 	231	0
1171	Length	The Length field is one octet and indicates the length of this Configuration Option including the Type , Length and Data fields . If a negotiable Configuration Option is received in a Configure - Request but with an invalid Length , a Configure-Nak should be transmitted which includes the desired Configuration Option with an appropriate Length and Data . 	100	0
1172	Maximum-Receive-Unit	2.1 . Maximum-Receive-Unit 	240	0
1172	Type	Type 	240	0
1172	Length	Length 	100	0
1172	Maximum-Receive-Unit	The Maximum-Receive-Unit field is two octets and indicates the new maximum receive unit . The Maximum-Receive-Unit covers only the Data Link Layer Information field but not the header , trailer or any transparency bits or bytes . 	231	0
1172	Async-Control-Character-Map	2.2 . Async-Control-Character-Map 	240	0
1172	Type	Type 	240	0
1172	Length	Length 	100	0
1172	Async-Control-Character-Map	The Async-Control-Character-Map field is four octets and indicates the new async control character map . The map is encoded in big - endian fashion where each numbered bit corresponds to the ASCII control character of the same value . If the bit is cleared to zero , then that ASCII control character need not be mapped . If the bit is set to one , then that ASCII control character must remain mapped . E.g ., if bit 19 is set to zero , then the ASCII control character 19 ( DC3 , Control-S ) may be sent in the clear . 	210	0
1172	Authentication-Type	2.3 . Authentication-Type 	240	0
1172	Type	Type 	240	0
1172	Length	Length 	100	0
1172	Authentication-Type	The Authentication-Type field is two octets and indicates the type of authentication protocol desired . Values for the Authentication-Type are always the same as the PPP Data Link Layer Protocol field values for that same authentication protocol . The most up-to-date values of the Authentication-Type field are specified in " Assigned Numbers " [ 2 ]. Initial values are assigned as follows : 	231	0
1172	Magic-Number	2.4 . Magic-Number 	240	0
1172	Type	Type 	240	0
1172	Length	Length 	100	0
1172	Magic-Number	The Magic-Number field is four octets and indicates a number which is very likely to be unique to one end of the link . A Magic - Number of zero is illegal and must not be sent . 	200	0
1172	Type	Type 	240	0
1172	Length	Length 	100	0
1172	Reporting-Period	The Reporting-Period field is four octets and indicates the maximum time in micro-seconds that the remote end should wait between transmission of LCP Link-Quality-Report packets . A value of zero is illegal and should always be nak'd or rejected . An LCP implementation is always free to transmit LCP Link-Quality-Report packets at a faster rate than that which was requested by , and acknowledged to , the remote end . 	120	0
1172	Type	Type 	240	0
1172	Length	Length 	100	0
1172	Type	Type 	240	0
1172	Length	Length 	100	0
1172	Out-Tx-Packets-Ctr	Out-Tx-Packets-Ctr is a 32-bit counter maintained by the Tx process which increases by one for each transmitted Data Link Layer packet . 	400	0
1172	Out-Tx-Octets-Ctr	Out-Tx-Octets-Ctr is a 32-bit counter maintained by the Tx process which increases by one for each octet in a transmitted Data Link Layer packet . All octets which are included in the FCS calculation MUST be counted , as should the FCS octets themselves . All other octets MUST NOT be counted . 	231	0
1172	In-Rx-Packets-Ctr	In-Rx-Packets-Ctr is a 32-bit counter maintained by the Rx process which increases by one for each successfully received Data Link Layer packet . Packets with incorrect FCS fields or other problems 	400	0
1172	In-Rx-Octets-Ctr	In-Rx-Octets-Ctr is a 32-bit counter maintained by the Rx process which increases by one for each octet in a successfully received Data Link Layer packet . All octets which are included in an FCS calculation MUST be counted , as should the FCS octets themselves . All other octets MUST NOT be counted . 	301	0
1172	In-Tx-LQRs	In-Tx-LQRs is an 8-bit state variable which indicates the number of Link-Quality-Report packets which the peer had to transmit in order for the local end to receive exactly one LQR . In-Tx-LQRs defines the length of the " period " over which In-Tx-Packets , In - Tx-Octets , In-Rx-Packets , and In-Rx-Octets were measured . In-Tx - LQRs is calculated by subtracting Last-In-Id from the received Identifier . If more than 255 LQRs in a row are lost , In-Tx-LQRs will be ambiguous since the Identifier field and all state variables based on it are only 8 bits . It is assumed that the Link Quality Monitoring policy will be robust enough to handle this case ( it should probably close down the link long before this happens ). 	240	0
1172	Last-In-Id	Last-In-Id is an 8-bit state variable which stores the value of the last received Identifier . Last-In-Id should be updated after In-Tx-LQRs has been calculated . 	303	0
1172	In-Tx-Packets	In-Tx-Packets is a 32-bit state variable which indicates the number of packets which were transmitted on the inbound link during the last period . In-Tx-Packets is calculated by subtracting Last-Out-Tx-Packets-Ctr from the received Out-Tx - Packets-Ctr . 	201	0
1172	In-Tx-Octets	In-Tx-Octets is a 32-bit state variable which indicates the number of octets which were transmitted on the inbound link during the last period . In-Tx-Octets is calculated by subtracting Last-Out - Tx-Octets-Ctr from the received Out-Tx-Octets-Ctr . 	200	0
1172	In-Rx-Packets	In-Rx-Packets is a 32-bit state variable which indicates the number of packets which were received on the inbound link during the last period . In-Rx-Packets is calculated by subtracting Last-In-Rx-Packets-Ctr from the received In-Rx-Packets-Ctr . 	201	0
1172	In-Rx-Octets	In-Rx-Octets is a 32-bit state variable which indicates the number of octets which were received on the inbound link during the last period . In-Rx-Octets is calculated by subtracting Last-In-Rx - Octets-Ctr from the received In-Rx-Octets-Ctr . 	200	0
1172	Code	Code 	231	0
1172	Identifier	The Identifier field is one octet and indicates the sequence number for this Link-Quality-Report . The Identifier field is copied from the Out-Identifier-Ctr counter on transmission . On reception , the Identifier field is used to calculate In-Tx-LQRs and is then stored in Last-In-Id . 	301	0
1172	Length	The Length field is two octets and indicates the length of the LQM packet including the Code , Identifier , Length and all defined fields . Octets outside the range of the length field should be treated as Data Link Layer padding and should be ignored on reception . In order for the correct In-Tx-Octets and In-Rx-Octets values to be calculated , Link-Quality-Reports MUST be consistently transmitted with the same amount of padding . 	100	0
1172	Magic-Number	The Magic-Number field is four octets and aids in detecting looped-back links . Unless modified by a Configuration Option , the Magic-Number MUST always be transmitted as zero and MUST always be ignored on reception . If Magic-Numbers have been negotiated , incoming LQM packets should be checked to make sure that the local end is not seeing its own Magic-Number and thus a looped-back link . 	500	0
1172	In-Tx-LQRs	The In-Tx-LQRs field is one octet and indicates the number of periods covered by the Measurements section of this Link-Quality - Report . The In-Tx-LQRs field is copied from the In-Tx-LQRs state variable on transmission . 	100	0
1172	Last-In-Id	The Prev-In-Id field is one octet and indicates the age of the Measurements section of this Link-Quality-Report . The Last-In-Id field is copied from the Last-In-Id field on transmission . On reception , the Last-In-Id field may be compared with the Out - Identifier-Ctr to determine how many , if any , outbound Link - Quality-Reports have been lost . 	231	0
1172	V	The V field is 1 bit and indicates whether or not the Measurements section of this Link-Quality-Report is valid . The V field is copied from the Measurements-Valid state variable on transmission . If the V field is not set to 1 , then the In-Tx-LQRs , Last-In-Id , In-Tx-Packets , In-Tx-Octets , In-Rx-Packets and In-Rx-Octets fields should be ignored . 	210	0
1172	Reserved	Reserved 	500	0
1172	In-Tx-Packets	The In-Tx-Packets field is four octets and indicates the number of packets transmitted on the inbound link of the Link-Quality-Report transmitter during the last measured period . The In-Tx-Packets field is copied from the In-Tx-Packets state variable on transmission . 	231	0
1172	In-Tx-Octets	The In-Tx-Octets field is four octets and indicates the number of octets transmitted on the inbound link of the Link-Quality-Report transmitter during the last measured period . The In-Tx-Octets field is copied from the In-Tx-Octets state variable on transmission . 	231	0
1172	In-Rx-Packets	The In-Rx-Packets field is four octets and indicates the number of packets received on the inbound link of the Link-Quality-Report transmitter during the last measured period . The In-Rx-Packets field is copied from the In-Rx-Packets state variable on transmission . 	231	0
1172	In-Rx-Octets	The In-Rx-Octets field is four octets and indicates the number of octets received on the inbound link of the Link-Quality-Report transmitter during the last measured period . The In-Rx-Octets field is copied from the In-Rx-Octets state variable on transmission . 	231	0
1172	In-Rx-Packets	The In-Rx-Packets field is four octets and is used to calculate the number of packets received on the inbound link of the Link - Quality-Report receiver during a period . The In-Rx-Packets field is copied from the In-Rx-Packets-Ctr counter on reception . The In-Rx-Packets is not shown because it is not actually transmitted over the link . Rather , it is logically appended ( in an implementation dependent manner ) to the packet by the implementation's Rx process . 	231	0
1172	In-Rx-Octets	The In-Rx-Octets field is four octets and is used to calculate the number of octets received on the inbound link of the Link - Quality-Report receiver during a period . The In-Rx-Octets field is copied from the In-Rx-Octets-Ctr counter on reception . The In-Rx-Octets is not shown because it is not actually transmitted over the link . Rather , it is logically appended ( in an implementation dependent manner ) to the packet by the implementation's Rx process . 	400	0
1172	Code	The Code field is one octet and identifies the type of PAP packet . PAP Codes are assigned as follows : 	231	0
1172	Identifier	The Identifier field is one octet and aids in matching requests and replies . 	301	0
1172	Length	The Length field is two octets and indicates the length of the PAP packet including the Code , Identifier , Length and Data fields . Octets outside the range of the Length field should be treated as Data Link Layer padding and should be ignored on reception . 	100	0
1172	Code	Code 	231	0
1172	Identifier	The Identifier field is one octet and aids in matching requests and replies . The Identifier field should be changed each time a Authenticate is transmitted which is different from the preceding request . 	301	0
1172	Passwd-Length	The Passwd-Length field is one octet and indicates the length of the Password field 	100	0
1172	Code	Code 	231	0
1172	Identifier	The Identifier field is one octet and aids in matching requests and replies . The Identifier field MUST be copied from the Identifier field of the Authenticate which caused this Authenticate-Ack . 	231	0
1172	Msg-Length	The Msg-Length field is one octet and indicates the length of the Message field 	100	0
1172	Code	Code 	231	0
1172	Identifier	The Identifier field is one octet and aids in matching requests and replies . The Identifier field MUST be copied from the Identifier field of the Authenticate which caused this Authenticate-Nak . 	231	0
1172	Msg-Length	The Msg-Length field is one octet and indicates the length of the Message field 	100	0
1172	Type	Type 	240	0
1172	Length	Length 	100	0
1172	Source-IP-Address	The four octet Source-IP-Address is the desired local address of the sender of a Configure-Request . In a Configure-Ack , Configure-Nak or Configure-Reject , the Source-IP-Address is the remote address of the sender , and is thus a local address with respect to the Configuration Option receiver . 	230	0
1172	Destination-IP-Address	The four octet Destination-IP-Address is the remote address with respect to the sender of a Configure-Request . In a Configure-Ack , Configure-Nak or Configure-Reject , the Destination-IP-Address is the local address of the sender , and is thus a remote address with respect to the Configuration Option receiver . 	230	0
1172	Compression-Type	5.2 . Compression-Type 	240	0
1172	Type	Type 	240	0
1172	Length	Length 	100	0
1172	Compression-Type	The Compression-Type field is two octets and indicates the type of compression protocol desired . Values for the Compression-Type are always the same as the PPP Data Link Layer Protocol field values for that same compression protocol . The most up-to-date values of the Compression-Type field are specified in " Assigned Numbers " [ 2 ]. Initial values are assigned as follows : 	231	0
1190	ST	This memo defines the Internet Stream Protocol , Version 2 ( ST-II ), an IP-layer protocol that provides end-to-end guaranteed service across an internet . This specification obsoletes IEN 119 " ST - A Proposed Internet Stream Protocol " written by Jim Forgie in 1979 , the previous specification of ST . ST-II is not compatible with Version 1 of the protocol , but maintains much of the architecture and philosophy of that version . It is intended to fill in some of the areas left unaddressed , to make it easier to implement , and to support a wider range of applications . 	231	0
1190	ST	ST-II supports a wider variety of applications than did the original ST . The differences between ST and ST-II are fairly straight forward yet provide great improvements . Four of the more notable differences are : 	231	0
1190	ST	2.3 . Relationship Between Applications and ST 	240	0
1190	D	o Create a stream from an application at A to three peers at B , C and D , 	240	0
1190	Options	3.6 . Options 	240	0
1190	SAP	RecvNet ( SAP ) -> result , src , dst , len , BufPTR ) 	231	0
1190	SAP	SendNet ( src , dst , SAP , len , BufPTR ) -> result 	301	0
1190	SAP	GetNotification ( SAP ) -> result , infop 	302	0
1190	DetectorIPAddress	4.2.2.1 . DetectorIPAddress 	240	0
1190	ErroredPDU	4.2.2.2 . ErroredPDU 	240	0
1190	ErroredPDU	include the field or parameter identified by ErrorOffset; an ErrorOffset of zero would imply a problem with the IP Version Number or ST Version Number fields . 	231	0
1190	ReasonCode	4.2.2.12 . ReasonCode 	240	0
1190	ReasonCode	Figure 33 . ReasonCode 	302	0
1190	G	G ( bit 8 ) is used to request a global , stream-wide change; the TargetList parameter may be omitted when the G bit is specified . 	302	0
1190	G	G ( bit 8 ) is used to request a global , stream-wide change; the TargetList parameter may be omitted when the G bit is specified . 	302	0
1190	H	H ( bit 8 ) is used for the HID Field option; see Section 3.6.1 ( page 44 ). It is set to one ( 1 ) only if the HID field contains either zero ( when the HID selection is being deferred ), or the proposed HID . This bit is zero ( 0 ) if the HID field does not contain valid data and should be ignored . 	210	0
1190	P	P ( bit 9 ) is used for the PTP option; see Section 3.6.2 ( page 44 ). 	210	0
1190	R	Reference is non-zero to inform the receiver that an ACK should be promptly sent so that the sender can update its round-trip time estimates . If the Reference is zero , no ACK should be sent . 	302	0
1205	Logical Record Length	This field indicates the length , in octets , of this logical record including the header length . The length is calculated BEFORE 	100	0
1205	Record Type	This field indicates the SNA record type . It should always be set to ' 12A0'X to indicate the General Data Stream ( GDS ) record type . 	210	0
1205	Reserved	Reserved : 16 bits 	303	0
1205	Var Hdr Len	The length , in octets , of the variable portion of the header . Currently this is always ' 04'X . 	100	0
1205	Opcode	This field contains the operation code . It is set to indicate the type of operation requested by the sender . The following are the valid values : 	231	0
1220	MAC Type	MAC Type : 0 : Reserved 1 : IEEE 802.3/Ethernet 2 : IEEE 802.4 3 : IEEE 802.5 4 : FDDI other : Assigned by the Internet Assigned Numbers Authority 	240	0
1220	Frame Control	Frame Control : On 802.4 , 802.5 , and FDDI LANs , there are a few octets preceding the Destination MAC Address , one of which is protected by the FCS . Since the MAC Type field defines the bit ordering , these are sent in MAC order . A pad octet is present to avoid odd machine address boundary problems . 	400	0
1220	Destination MAC Address	Destination MAC Address : As defined by the IEEE . Since the MAC Type field defines the bit ordering , this is sent in MAC order . 	230	0
1220	Source MAC Address	Source MAC Address : As defined by the IEEE . Since the MAC Type field defines the bit ordering , this is sent in MAC order . 	230	0
1220	LLC data	LLC data : This is the remainder of the MAC frame . This is that portion of the frame which is ( or would be were it present ) protected by the LAN FCS; for example , the 802.5 Access Control field , and Status Trailer are not meaningful to transmit to another ring , and are omitted . 	400	0
1241	Flow ID	Flow ID - A 32-bit identifier which uniquely distinguishes a flow in a given Encapsulator or Decapsulator . Flow IDs are specific to a single Encapsulator/Decapsulator Entity and are not global quantities . 	231	0
1241	Flow ID	Flow ID - This is the key for this table of information and represents the Flow ID relative to the current Encapsulator . 	231	0
1241	Vers	Vers 4 bits The version number of the encapsulation protocol . The version of the protocol described by this document is 1 . 	220	0
1241	HL	HL 4 bits The header length of the Encapsulation Protocol Header in octets . 	100	0
1241	MT	MT 4 bits The message type of the Encapsulation Protocol message . A data message has a message type of 1 . An error message has a message type of 2 . 	240	0
1241	RC	RC 4 bits The reason code . This field is unused in the Data Message and must have a value of 0 . In the Error Message it contains the reason code for the Error Message . Defined reason code 	301	0
1241	Checksum	Checksum 16 bits A one's complement checksum for the Encapsulation Protocol Header . This field is set to 0 upon calculation of the checksum and is filled with the checksum calculation result before the data message is sent . 	301	0
1241	Flow ID	Flow ID 32 bits The Flow ID as seen by the Decapsulator or Encapsulator to which this message is being sent . In the case of an Unknown Flow ID error , the Flow ID causing the error is used . 	230	0
1247	TOS	OSPF calculates separate routes for each Type of Service ( TOS ). When several equal-cost routes to a destination exist , traffic is distributed equally among them . The cost of a route is described by a single dimensionless metric . 	231	0
1247	Type	Type Packet name Protocol function __________________________________________________________ 1 Hello Discover/maintain neighbors 2 Database Description Summarize database contents 3 Link State Request Database download 4 Link State Update Database update 5 Link State Ack Flooding acknowledgment 	240	0
1247	Autype	Autype and Authentication Each OSPF packet exchange is authenticated . Authentication types are assigned by the protocol and documented in Appendix E . A different authentication scheme can be used for each OSPF area . The 64-bit authentication field is set by the appropriate authentication procedure ( determined by Autype ). This procedure should be the last called when forming the packet to be sent . The setting of the authentication field is determined by the packet contents and the authentication key ( which is configurable on a per-interface basis ). 	231	0
1247	Type	Type Packet name detailed section ( transmit ) _________________________________________________________ 1 Hello Section 9.5 2 Database description Section 10.8 3 Link state request Section 10.9 4 Link state update Section 13.3 5 Link state ack Section 13.5 	240	0
1247	Type	Type Packet name detailed section ( receive ) ________________________________________________________ 1 Hello Section 10.5 2 Database description Section 10.6 3 Link state request Section 10.7 4 Link state update Section 13 5 Link state ack Section 13.7 	240	0
1247	Type	Type Dest Area Path Type Cost Next Hop(s ) Adv . Router(s ) __________________________________________________________________________ N N1 0 intra-area 10 RT3 * N N2 0 intra-area 10 RT3 * N N3 0 intra-area 7 RT3 * N N4 0 intra-area 8 RT3 * N Ib 0 intra-area 7 * * N Ia 0 intra-area 12 RT10 * N N6 0 intra-area 8 RT10 * N N7 0 intra-area 12 RT10 * N N8 0 intra-area 10 RT10 * N N9 0 intra-area 11 RT10 * N N10 0 intra-area 13 RT10 * N N11 0 intra-area 14 RT10 * N H1 0 intra-area 21 RT10 * ASBR RT5 0 intra-area 6 RT5 * ASBR RT7 0 intra-area 8 RT10 * __________________________________________________________________________ N N12 * type 1 external 10 RT10 RT7 N N13 * type 1 external 14 RT5 RT5 N N14 * type 1 external 14 RT5 RT5 N N15 * type 1 external 17 RT10 RT7 	240	0
1247	Type	Type Dest Area Path Type Cost Next Hop(s ) Adv . Router(s ) _______________________________________________________________________________ N N1 1 intra-area 4 RT1 * N N2 1 intra-area 4 RT2 * N N3 1 intra-area 1 * * N N4 1 intra-area 3 RT3 * BR RT3 1 intra-area 1 * * _______________________________________________________________________________ N Ib 0 intra-area 22 RT5 * N Ia 0 intra-area 27 RT5 * BR RT3 0 intra-area 21 RT5 * BR RT7 0 intra-area 14 RT5 * BR RT10 0 intra-area 22 RT5 * BR RT11 0 intra-area 25 RT5 * ASBR RT5 0 intra-area 8 * * ASBR RT7 0 intra-area 14 RT5 * _______________________________________________________________________________ N N6 0 inter-area 15 RT5 RT7 N N7 0 inter-area 19 RT5 RT7 N N8 0 inter-area 18 RT5 RT7 N N9-N11,H1 0 inter-area 26 RT5 RT11 _______________________________________________________________________________ N N12 * type 1 external 16 RT5 RT5,RT7 N N13 * type 1 external 16 RT5 RT5 N N14 * type 1 external 16 RT5 RT5 N N15 * type 1 external 23 RT5 RT7 	240	0
1247	Type	Type Dest Area Path Type Cost Next Hop(s ) Adv . Router(s ) __________________________________________________________________________ N Ib 0 intra-area 16 RT3 * N Ia 0 intra-area 21 RT3 * BR RT3 0 intra-area 1 * * BR RT10 0 intra-area 16 RT3 * BR RT11 0 intra-area 19 RT3 * __________________________________________________________________________ N N9-N11,H1 0 inter-area 20 RT3 RT11 	240	0
1247	5	The stub networks are added to the tree in the procedure's second stage . In this stage , all router vertices are again examined . Those that have been determined to be unreachable in the above first phase are discarded . For each reachable router vertex ( call it V ), the associated router links advertisement is found in the link state database . Each stub network link appearing in the advertisement is then examined , and the following steps are executed : 	400	0
1247	Type	Type Description ________________________________ 1 Hello 2 Database Description 3 Link State Request 4 Link State Update 5 Link State Acknowledgment 	240	0
1247	Type	Type Description __________________________________________________ 1 Point-to-point connection to another router 2 Connection to a transit network 3 Connection to a stub network 4 Virtual link 	240	0
1247	Type	Type Link ID ______________________________________ 1 Neighboring router's ID 2 IP address of Designated Router 3 IP network/subnet number 4 Neighboring router's ID 	240	0
1247	T	T1 The state of a router interface changes . Interface state changes are documented in Section 9.3 . In general , they will cause new link state advertisements to be originated . The logging message produced should include the interface's IP address ( or other name ), interface type ( virtual link , etc .) and old and new state values ( as documented in Section 9.1 ). 	240	0
1247	T	T2 The state of a neighbor changes . Neighbor state changes are documented in Section 10.3 . The logging message produced should include the neighbor IP address , and old and new state values . 	240	0
1247	T	T3 The ( Backup ) Designated Router has changed on one of the attached networks . See Section 9.4 . The logging message produced should include the network IP address , and the old and new ( Backup ) Designated Routers . 	240	0
1247	T	T4 The router is originating a new instance of a link state advertisement . The logging message produced should indicate the LS type , Link State ID and Advertising Router associated with the advertisement ( see Section 12.4 ). 	240	0
1247	T	T5 The router has received a new instance of a link state advertisement . The router receives these in Link State Update packets . This will cause recalculation of the routing table . The logging message produced should indicate the advertisement's LS type , Link State ID and Advertising Router . The message should also include the neighbor from whom the advertisement was received . 	240	0
1247	T	T6 An entry in the routing table has changed ( see Section 11 ). The logging message produced should indicate the Destination type , Destination ID , and the old and new paths to the destination . 	231	0
1247	E	E1 The checksum in a received link state advertisement is incorrect . The advertisement is discarded ( see Section 13 ). The logging message should include the advertisement's LS type , Link State ID and Advertising Router ( which may be incorrect ). The message should also include the neighbor from whom the advertisement was received . 	301	0
1247	E	E2 During the aging process , it is discovered that one of the link state advertisements in the database has an incorrect checksum . This indicates memory corruption or a software error in the router itself . The router should be dumped and restarted . 	303	0
1247	Area ID	Area ID # ifcs AuType # nets # routers ______________________________________________ 0 1 1 2 7 1 2 0 4 4 	240	0
1247	LS type	LS type Link State ID Advertising Router LS seq no LS age LS checksum _______________________________________________________________________________ 1 192.1.1.1 192.1.1.1 * * * 1 192.1.1.2 192.1.1.2 * * * 1 192.1.1.3 192.1.1.3 * * * 1 192.1.1.4 192.1.1.4 * * * _______________________________________________________________________________ 2 192.1.1.4 192.1.1.4 * * * _______________________________________________________________________________ 3 Ia,Ib 192.1.1.3 * * * 3 N6 192.1.1.3 * * * 3 N7 192.1.1.3 * * * 3 N8 192.1.1.3 * * * 3 N9-N11,H1 192.1.1.3 * * * 3 Ia,Ib 192.1.1.4 * * * 3 N6 192.1.1.4 * * * 3 N7 192.1.1.4 * * * 3 N8 192.1.1.4 * * * 3 N9-N11,H1 192.1.1.4 * * * 4 RT5 192.1.1.3 * * * 4 RT7 192.1.1.3 * * * 4 RT5 192.1.1.4 * * * 4 RT7 192.1.1.4 * * * _______________________________________________________________________________ 4 N12 RT5's ID * * * 4 N13 RT5's ID * * * 4 N14 RT5's ID * * * 4 N12 RT7's ID * * * 	240	0
1247	LS type	LS type Link State ID Advertising Router LS seq no LS age LS checksum _______________________________________________________________________________ 4 N15 RT7's ID * * * 	240	0
1256	Type	Type 9 	240	0
1256	Code	Code 0 	302	0
1256	Checksum	Checksum The 16-bit one's complement of the one's complement sum of the ICMP message , start - ing with the ICMP Type . For computing the checksum , the Checksum field is set to 0 . 	301	0
1256	Num Addrs	Num Addrs The number of router addresses advertised in this message . 	230	0
1256	Addr Entry Size	Addr Entry Size The number of 32-bit words of information per each router address ( 2 , in the version of the protocol described here ). 	230	0
1256	Lifetime	Lifetime The maximum number of seconds that the router addresses may be considered valid . 	120	0
1256	Type	Type 10 	240	0
1256	Code	Code 0 	302	0
1256	Checksum	Checksum The 16-bit one's complement of the one's complement sum of the ICMP message , start - ing with the ICMP Type . For computing the checksum , the Checksum field is set to 0 . 	301	0
1256	Reserved	Reserved Sent as 0; ignored on reception . 	500	0
1267	BGP Identifier	BGP Identifier : This 4-octet unsigned integer indicates the BGP Identifier of the sender . A given BGP speaker sets the value of its BGP Identifier to the IP address of one of its interfaces . The value of the BGP Identifier is determined on startup and is the same for every local interface and every BGP peer . 	230	0
1267	Path Attributes	5 . Path Attributes 	240	0
1307	Identifier	The identifier is a value assigned by the DSLCP used to uniquely identify link setup transactions . It is intended to be used with the endpoint addresses by a link controller to identify a transaction . 	231	0
1307	Total length	The total length , in octets , including the header of this DSLCP control message . 	100	0
1307	Function	Function : 16 bits 	400	0
1307	Event Status	The state of the controlled link , relative to the last function request . 	202	0
1331	Code	The Code field is one octet and identifies the kind of LCP packet . When a packet is received with an invalid Code field , a Code - Reject packet is transmitted . 	231	0
1331	Identifier	The Identifier field is one octet and aids in matching requests and replies . When a packet is received with an invalid Identifier field , the packet is silently discarded . 	301	0
1331	Length	The Length field is two octets and indicates the length of the LCP packet including the Code , Identifier , Length and Data fields . Octets outside the range of the Length field should be treated as Data Link Layer padding and should be ignored on reception . When a packet is received with an invalid Length field , the packet is silently discarded . 	100	0
1331	Code	Code 	231	0
1331	Identifier	The Identifier field SHOULD be changed on each transmission . On reception , the Identifier field should be copied into the Identifier field of the appropriate reply packet . 	231	0
1331	Code	Code 	231	0
1331	Identifier	The Identifier field is a copy of the Identifier field of the Configure-Request which caused this Configure-Ack . 	301	0
1331	Code	Code 	231	0
1331	Identifier	The Identifier field is a copy of the Identifier field of the Configure-Request which caused this Configure-Nak . 	301	0
1331	Code	Code 	231	0
1331	Identifier	The Identifier field is a copy of the Identifier field of the Configure-Request which caused this Configure-Reject . 	301	0
1331	Code	Code 	231	0
1331	Identifier	The Identifier field is one octet and aids in matching requests and replies . 	301	0
1331	Code	Code 	231	0
1331	Identifier	Identifier 	202	0
1331	Code	Code 	231	0
1331	Identifier	Identifier 	202	0
1331	Rejected-Protocol	The Rejected-Protocol field is two octets and contains the Protocol of the Data Link Layer frame which is being rejected . 	400	0
1331	Code	Code 	231	0
1331	Identifier	The Identifier field is one octet and aids in matching Echo - Requests and Echo-Replies . 	301	0
1331	Magic-Number	The Magic-Number field is four octets and aids in detecting links which are in the looped-back condition . Unless modified by a Configuration Option , the Magic-Number MUST be transmitted as zero and MUST be ignored on reception . See the Magic-Number Configuration Option for further explanation . 	302	0
1331	Code	Code 	231	0
1331	Identifier	The Identifier field is one octet and is for use by the Discard - Request transmitter . 	301	0
1331	Magic-Number	The Magic-Number field is four octets and aids in detecting links which are in the looped-back condition . Unless modified by a configuration option , the Magic-Number MUST be transmitted as zero and MUST be ignored on reception . See the Magic-Number Configuration Option for further explanation . 	500	0
1331	Type	The Type field is one octet and indicates the type of Configuration Option . The most up-to-date values of the LCP Option Type field are specified in the most recent " Assigned Numbers " RFC [ 11 ]. Current values are assigned as follows : 	231	0
1331	Length	The Length field is one octet and indicates the length of this Configuration Option including the Type , Length and Data fields . If a negotiable Configuration Option is received in a Configure - Request but with an invalid Length , a Configure-Nak SHOULD be transmitted which includes the desired Configuration Option with an appropriate Length and Data . 	100	0
1331	Maximum-Receive-Unit	7.2 . Maximum-Receive-Unit 	240	0
1331	Type	Type 	240	0
1331	Length	Length 	100	0
1331	Maximum-Receive-Unit	The Maximum-Receive-Unit field is two octets and indicates the new maximum receive unit . The Maximum-Receive-Unit covers only the Data Link Layer Information field . It does not include the header , padding , FCS , nor any transparency bits or bytes . 	231	0
1331	Async-Control-Character-Map	7.3 . Async-Control-Character-Map 	240	0
1331	Type	Type 	240	0
1331	Length	Length 	100	0
1331	Async-Control-Character-Map	The Async-Control-Character-Map field is four octets and indicates the new async control character map . The map is encoded in big - endian fashion where each numbered bit corresponds to the ASCII control character of the same value . If the bit is cleared to zero , then that ASCII control character need not be mapped . If the bit is set to one , then that ASCII control character must remain mapped . E.g ., if bit 19 is set to zero , then the ASCII control character 19 ( DC3 , Control-S ) may be sent in the clear . 	210	0
1331	Authentication-Protocol	7.4 . Authentication-Protocol 	240	0
1331	Type	Type 	240	0
1331	Length	Length 	100	0
1331	Authentication-Protocol	The Authentication-Protocol field is two octets and indicates the authentication protocol desired . Values for this field are always the same as the PPP Data Link Layer Protocol field values for that same authentication protocol . 	231	0
1331	Quality-Protocol	7.5 . Quality-Protocol 	240	0
1331	Type	Type 	240	0
1331	Length	Length 	100	0
1331	Quality-Protocol	The Quality-Protocol field is two octets and indicates the link quality monitoring protocol desired . Values for this field are always the same as the PPP Data Link Layer Protocol field values for that same monitoring protocol . 	231	0
1331	Magic-Number	7.6 . Magic-Number 	240	0
1331	Type	Type 	240	0
1331	Length	Length 	100	0
1331	Magic-Number	The Magic-Number field is four octets and indicates a number which is very likely to be unique to one end of the link . A Magic - Number of zero is illegal and MUST always be Nak'd , if it is not Rejected outright . 	301	0
1331	Type	Type 	240	0
1331	Length	Length 	100	0
1331	Type	Type 	240	0
1331	Length	Length 	100	0
1332	IP-Compression-Protocol	3.2 . IP-Compression-Protocol 	240	0
1332	Type	Type 	240	0
1332	Length	Length 	100	0
1332	IP-Compression-Protocol	The IP-Compression-Protocol field is two octets and indicates the compression protocol desired . Values for this field are always the same as the PPP Data Link Layer Protocol field values for that same compression protocol . 	231	0
1332	IP-Address	3.3 . IP-Address 	240	0
1332	Type	Type 	240	0
1332	Length	Length 	100	0
1332	IP-Address	The four octet IP-Address is the desired local address of the sender of a Configure-Request . If all four octets are set to zero , it indicates a request that the peer provide the IP-Address information . 	230	0
1332	Type	Type 	240	0
1332	Length	Length 	100	0
1332	IP-Compression-Protocol	IP-Compression-Protocol 	400	0
1332	Max-Slot-Id	The Max-Slot-Id field is one octet and indicates the maximum slot identifier . This is one less than the actual number of slots; the slot identifier has values from zero to Max-Slot-Id . 	231	0
1332	Comp-Slot-Id	The Comp-Slot-Id field is one octet and indicates whether the slot identifier field may be compressed . 	231	0
1333	Type	Type 	240	0
1333	Length	Length 	100	0
1333	Quality-Protocol	Quality-Protocol 	400	0
1333	Reporting-Period	The Reporting-Period field is four octets and indicates the maximum time in hundredths of seconds between transmission of packets . The peer MAY transmit packets at a faster rate than that which was negotiated . 	122	0
1333	Magic-Number	The Magic-Number field is four octets and aids in detecting links which are in the looped-back condition . Unless modified by a Configuration Option , the Magic-Number MUST be transmitted as zero and MUST be ignored on reception . If Magic-Numbers have been negotiated , incoming LQR packets SHOULD be checked to ensure that the local end is not seeing its own Magic-Number and thus a looped-back link . See the Magic-Number Configuration Option for further explanation . 	302	0
1333	LastOutLQRs	The LastOutLQRs field is four octets , and is copied from the most recently received PeerOutLQRs on transmission . 	231	0
1333	LastOutPackets	The LastOutPackets field is four octets , and is copied from the most recently received PeerOutPackets on transmission . 	231	0
1333	LastOutOctets	The LastOutOctets field is four octets , and is copied from the most recently received PeerOutOctets on transmission . 	231	0
1333	PeerInLQRs	The PeerInLQRs field is four octets , and is copied from the most recently received SaveInLQRs on transmission . 	231	0
1333	PeerInPackets	The PeerInPackets field is four octets , and is copied from the most recently received SaveInPackets on transmission . 	231	0
1333	PeerInDiscards	The PeerInDiscards field is four octets , and is copied from the most recently received SaveInDiscards on transmission . 	231	0
1333	PeerInErrors	The PeerInErrors field is four octets , and is copied from the most recently received SaveInErrors on transmission . 	231	0
1333	PeerInOctets	The PeerInOctets field is four octets , and is copied from the most recently received SaveInOctets on transmission . 	231	0
1333	PeerOutLQRs	The PeerOutLQRs field is four octets , and is copied from OutLQRs on transmission . This number MUST include this LQR . 	231	0
1333	PeerOutPackets	The PeerOutPackets field is four octets , and is copied from the current MIB ifOutUniPackets and ifOutNUniPackets on transmission . This number MUST include this LQR . 	231	0
1333	PeerOutOctets	The PeerOutOctets field is four octets , and is copied from the current MIB ifOutOctets on transmission . This number MUST include this LQR . 	231	0
1333	SaveInLQRs	The SaveInLQRs field is four octets , and is copied from InLQRs on reception . This number MUST include this LQR . 	400	0
1333	SaveInPackets	The SaveInPackets field is four octets , and is copied from the current MIB ifInUniPackets and ifInNUniPackets on reception . This number MUST include this LQR . 	231	0
1333	SaveInErrors	The SaveInErrors field is four octets , and is copied from the current MIB ifInErrors on reception . This number MUST include this LQR . 	231	0
1333	SaveInOctets	The SaveInOctets field is four octets , and is copied from the current InGoodOctets on reception . This number MUST include this LQR . 	231	0
1334	Type	Type 	240	0
1334	Length	Length 	100	0
1334	Authentication-Protocol	Authentication-Protocol 	400	0
1334	Code	The Code field is one octet and identifies the type of PAP packet . PAP Codes are assigned as follows : 	231	0
1334	Identifier	The Identifier field is one octet and aids in matching requests and replies . 	301	0
1334	Length	The Length field is two octets and indicates the length of the PAP packet including the Code , Identifier , Length and Data fields . Octets outside the range of the Length field should be treated as Data Link Layer padding and should be ignored on reception . 	100	0
1334	Code	Code 	231	0
1334	Identifier	The Identifier field is one octet and aids in matching requests and replies . The Identifier field MUST be changed each time an Authenticate-Request packet is issued . 	301	0
1334	Passwd-Length	The Passwd-Length field is one octet and indicates the length of the Password field . 	100	0
1334	Code	Code 	231	0
1334	Identifier	The Identifier field is one octet and aids in matching requests and replies . The Identifier field MUST be copied from the Identifier field of the Authenticate-Request which caused this reply . 	301	0
1334	Msg-Length	The Msg-Length field is one octet and indicates the length of the Message field . 	100	0
1334	Type	Type 	240	0
1334	Length	Length 	100	0
1334	Authentication-Protocol	Authentication-Protocol 	400	0
1334	Algorithm	The Algorithm field is one octet and indicates the one-way hash method to be used . The most up-to-date values of the CHAP Algorithm field are specified in the most recent " Assigned Numbers " RFC [ 2 ]. Current values are assigned as follows : 	231	0
1334	Code	The Code field is one octet and identifies the type of CHAP packet . CHAP Codes are assigned as follows : 	231	0
1334	Identifier	The Identifier field is one octet and aids in matching challenges , responses and replies . 	301	0
1334	Length	The Length field is two octets and indicates the length of the CHAP packet including the Code , Identifier , Length and Data fields . Octets outside the range of the Length field should be treated as Data Link Layer padding and should be ignored on reception . 	100	0
1334	Code	Code 	231	0
1334	Identifier	The Identifier field is one octet . The Identifier field MUST be changed each time a Challenge is sent . 	301	0
1334	Value-Size	Value-Size 	231	0
1334	Code	Code 	231	0
1334	Identifier	The Identifier field is one octet and aids in matching requests and replies . The Identifier field MUST be copied from the Identifier field of the Response which caused this reply . 	301	0
1350	Source Port	Source Port Picked by originator of packet . 	230	0
1350	Length	Length Number of bytes in UDP packet , including UDP header . 	100	0
1350	Checksum	Checksum Reference 2 describes rules for computing checksum . ( The implementor of this should be sure that the correct algorithm is used here .) Field contains zero if unused . 	301	0
1361	LI	Leap Indicator ( LI ): This is a two-bit code warning of an impending leap second to be inserted/deleted in the last minute of the current day , with bit 0 and bit 1 , respectively , coded as follows : 	210	0
1361	VN	Version Number ( VN ): This is a three-bit integer indicating the NTP version number , currently 3 . 	220	0
1361	Mode	Mode : This is a three-bit integer indicating the mode , with values defined as follows : 	240	0
1361	Stratum	Stratum : This is a eight-bit integer indicating the stratum level of the local clock , with values defined as follows : 	121	0
1361	Precision	Precision : This is an eight-bit signed integer indicating the precision of the local clock , in seconds to the nearest power of two . The values that normally appear in this field range from - 6 for mains-frequency clocks to - 18 for microsecond clocks found in some workstations . 	121	0
1361	Root Delay	Root Delay : This is a 32-bit signed fixed-point number indicating the total roundtrip delay to the primary reference source , in seconds with fraction point between bits 15 and 16 . Note that this variable can take on both positive and negative values , depending on the relative time and frequency errors . The values that normally appear in this field range from negative values of a few milliseconds to positive values of several hundred milliseconds . 	122	0
1361	Root Dispersion	Root Dispersion : This is a 32-bit unsigned fixed-point number indicating the maximum error relative to the primary reference source , in seconds with fraction point between bits 15 and 16 . The values that normally appear in this field range from zero to several hundred milliseconds . 	200	0
1363	Maximum Transmission Unit	A 16-bit integer in Internet byte order which is the maximum number of bytes in the largest possible packet to be transmitted over this flow . 	200	0
1363	Token Bucket Rate	The token bucket rate is one of three fields used to define how traffic will be injected into the internetwork by the sending application . ( The other two fields are the token bucket size and the maximum transmission rate .) 	231	0
1363	Token Bucket Size	The token bucket size controls the maximum amount of data that the flow can send at the peak rate . More formally , if the token bucket size is B , and the token bucket rate is R , over any arbitrarily chosen interval T in the life of the flow , the amount of data that the flow sends cannot have exceeded B + ( R * T ) bytes . 	400	0
1363	Maximum Transmission Rate	The maximum transmission rate limits how fast packets may be sent back to back from the host . Consider that if the token bucket is full , it is possible for the flow to send a series of back-to-back packets equal to the size of the token bucket . If the token bucket size is large , this back-to-back run may be long enough to significantly inhibit multiplexing . 	400	0
1363	Minimum Delay Noticed	The minimum delay noticed field tells the internetwork that the host and application are effectively insensitive to improvements in end-to-end delay below this value . The network is encouraged to drive the delay down to this value but need not try to improve the delay further . 	302	0
1363	0	1 - the application is moderately delay sensitive e.g ., avoid satellite links where possible ). 	210	0
1363	Maximum Delay Variation	If a receiving application requires data to be delivered in the same pattern that the data was transmitted , it may be necessary for the receiving host to briefly buffer data as it is received so that the receiver can restore the old transmission pattern . ( An easy example of this is a case where an application wishes to send and transmit data such as voice samples , which are generated and played at regular intervals . The regular intervals may be distorted by queueing effects in the network and the receiver may 	400	0
1363	Loss Sensitivity	This field indicates how sensitive the flow's traffic is to losses . Loss sensitivity can be expressed in one of two ways : either as a number of losses of MTU-sized packets in an interval , or simply as a value indicating a level of sensitivity . 	231	0
1363	0	1 - the flow is sensitive to loss ( where possible choose the path with the lowest loss rate ). 	210	0
1363	Burst Loss Sensitivity	This field states how sensitive the flow is to losses of consecutive packets . The field enumerates the maximum number of consecutive MTU-sized packets that may be lost . 	100	0
1363	Loss Interval	This field determines the period over which the maximum number of losses per interval are measured . In other words , given any arbitrarily chosen interval of this length , the number of losses may not exceed the number in the Loss Sensitivity field . 	120	0
1363	Quality of Guarantee	It is expected that the internetwork will likely have to offer more than one type of guarantee . 	303	0
1364	a	a is 1 bit called the Automatic bit , indicating that the Completeness and PathLength bits have been generated automatically by a router . The meaning of this characteristic and its setting are defined below . 	210	0
1364	c	c is 1 bit of Completeness information . The meaning of this characteristic and its settings are defined below . 	301	0
1364	a	a is 1 bit called the Automatic bit , set to 0 . 	210	0
1374	Reserved	D1_Area_Size ( 8 bits ) should be sent as 3 . Destinations shall accept any value that HIPPI-FP defines as legal : from 3 to 127 ( 32 bit HIPPI ) or 3 to 255 ( 64 bit HIPPI ). 	240	0
1374	Reserved	Destination_IEEE_Address ( 48 bits ) shall contain the 48 bit Universal LAN MAC Address of the Destination if known , otherwise zero . 	230	0
1374	Reserved	Reserved ( bits 30 , 29 ) should be zero . Destinations shall accept any value for these bits . 	500	0
1374	Source Address	Destination Address ( bits 11-0 ) shall contain the Switch Address of the Destination . 	230	0
1374	L	L = Locally defined ( 1 => entire I-field is locally defined ) W = Width ( 1 => 64 bit connection ) D = Direction ( 1 => swap Source and Destination Address ) PS = Path Selection ( 01 => Logical Address Mode ) C = Camp-on ( 1 => wait until Destination is free ) 	240	0
1374	L	L The " Locally Defined " bit , when set , indicates that the I-field is not in the standard format . The meaning of bits 30-0 are locally defined . 	210	0
1374	W	W The Width bit , when set , requests a 64 bit connection through the switch . It is meaningless if Cable B is not installed at the Source . If W is set and either the Source or the requested Destination has no Cable B to the switch , the switch rejects the connection . Otherwise the switch connects both Cable A and Cable B if W is set , or Cable A only if W is clear . This feature is useful if both Source and Destination implementations can selectively disable or enable Cable B on each new connection . 	210	0
1374	D	D The Direction bit , when set , reverses the sense of the Source Address and Destination Address fields . In other words , D=1 means that the Source Address is in bits 0-11 and the Destination Address is in bits 12-23 . This bit was defined to give devices a simple way to route return messages . It is not useful for LAN operations . 	210	0
1374	C	C The Camp-on bit requests the switch not to reject the connection if the selected Destination is busy ( connected to another Source ) but wait and make the connection when the Destination is free . 	210	0
1376	Length LSB	Length LSB 	100	0
1376	DATA	DATA 	202	0
1377	Type	Type 	240	0
1377	Length	Length 	100	0
1377	Alignment	This field specifies the offset of the beginning of the OSI NPDU relative to the beginning of the PPP packet header ( not including any leading Flag Sequences ). 	110	0
1378	Type	Type 	240	0
1378	Length	Length 	100	0
1378	Reserved	This octet is reserved and MUST be set to zero on transmission and ignored on reception . 	500	0
1378	AT-Net	The two octet AT-Net is the desired local AppleTalk network number of the sender of the Configure-Request . This two octet quantity represents a 16 bit unsigned number sent " network byte order " ( most significant octet first ). 	231	0
1378	AT-Node	The one octet AT-Node is the desired local AppleTalk node ID of the sender of the Configure-Request . 	230	0
1378	Routing-Protocol	3.2 . Routing-Protocol 	240	0
1378	Type	Type 	240	0
1378	Length	Length 	100	0
1378	Routing-Protocol	The Routing-Protocol field is two octets and indicates the type of Routing-Protocol desired . This two octet quantity represents a 16 bit number sent " network byte order " ( most significant octet first ). 	231	0
1378	Type	Type 	240	0
1378	Length	Length 	100	0
1378	AT-Compression-Protocol	3.4 . AT-Compression-Protocol 	240	0
1378	Type	Type 	240	0
1378	Length	Length 	100	0
1378	AT-Compression-Protocol	The AT-Compression-Protocol field is two octets and indicates the compression protocol desired . Values for this field are always the same as the PPP Data Link Layer Protocol field values for that same compression protocol . 	231	0
1378	Type	Type 	240	0
1378	Length	Length 	100	0
1378	Server-class	The Server-class field is two octets and indicates the class of the communication server providing the remote end of the PPP connection . 	231	0
1378	Server-implementation-id	The Server-implementation-id field is four octets and indicates the version of the communication server providing the remote end of the PPP connection . 	220	0
1378	Type	Type 	240	0
1378	Length	Length 	100	0
1378	Type	Type 	240	0
1378	Length	Length 	100	0
1378	Reserved	This octet is reserved and MUST be set to zero on transmission and ignored on reception . 	500	0
1378	AT-Net	The two octet AT-Net is the AppleTalk network number of the default router . This two octet quantity represents a 16 bit unsigned number sent in " network byte order " ( most significant octet first ). 	231	0
1378	AT-Node	AT-Node 	230	0
1385	Version	The Version field is identical to that of IP . This field is set purely for compatibility with IP hosts . It is not checked by EIP hosts . 	220	0
1385	IHL	Internet Header Length is identical to that of IP . IHL is set to the length of EIP header purely for compatibility with IP . This field is not checked by EIP hosts . see below the EIP Extension Length field for more details ) 	100	0
1385	Type of Service	Type of Service : 8 bits 	231	0
1385	Total Length	Total Length : 16 bits 	100	0
1385	Identification	Identification : 16 bits 	400	0
1385	Flags	Flags : 3 bits 	231	0
1385	Fragment Offset	Fragment Offset : 13 bits 	110	0
1385	Time to Live	Time to Live : 8 bits 	302	0
1385	Protocol	Protocol : 8 bits 	400	0
1385	Header Checksum	Header Checksum : 16 bits 	301	0
1385	Source Host Number	The Source Host Number field is used for identifying the source host but is unique only within the source network ( the equivalent of the host portion of the source IP address ). 	230	0
1385	Destination Host Number	The Destination Host Number field is used for identifying the destination host but is unique only within the destination network ( the equivalent of the host portion of the destination IP address ). 	230	0
1385	EIP ID	The EIP ID field equals to 0x8A . The EIP ID value is chosen in such a way that , to IP hosts and IP routers , an EIP appears to be an IP packet with a new IP option of following parameters : 	231	0
1393	F	F ( copy to fragments ) 	302	0
1393	C	C ( class ) 	302	0
1393	Number	Number 	202	0
1393	ID Number	An arbitrary number used by the originator of the Outbound Packet to identify the ICMP Traceroute messages . It is NOT related to the ID number in the IP header . 	231	0
1393	ID Number	The ID Number as copied from the IP Traceroute option of the packet which caused this Traceroute message to be sent . This is NOT related to the ID number in the IP header . 	231	0
1403	a	a is 1 bit called the Automatic bit , indicating that the Completeness and PathLength bits have been generated automatically by a router . The meaning of this characteristic and its setting are defined below . 	210	0
1403	c	c is 1 bit of Completeness information . The meaning of this characteristic and its settings are defined below . 	301	0
1403	a	a is 1 bit called the Automatic bit , set to 0 . 	210	0
1475	R	R(r,d,i,h ) A route that means : " from router r , to go toward final destination d , replace the forward route identifier in the packet with i , and take next hop h ." 	210	0
1475	C	Router C announces a route R(C,Y,0,Y ) to router B . It includes in it an identifier Ri(C,Y ) internal to C , that will allow C to find the route rapidly . ( A table index , or an actual memory address .) 	210	0
1475	A	Router A creates a route R(A,Y,Ri(B,Y),B ) via router B . It has no one to announce it to . 	302	0
1475	version	As noted in the description of datagram format , it is possible to provide a mostly-transparent bridge between version 4 and version 7 . 	220	0
1531	B	B : BROADCAST flag 	240	0
1531	MBZ	MBZ : MUST BE ZERO ( reserved for future use ) 	500	0
1541	B	B : BROADCAST flag 	240	0
1541	MBZ	MBZ : MUST BE ZERO ( reserved for future use ) 	500	0
1548	Code	The Code field is one octet and identifies the kind of LCP packet . When a packet is received with an invalid Code field , a Code - Reject packet is transmitted . 	231	0
1548	Identifier	The Identifier field is one octet and aids in matching requests and replies . When a packet is received with an invalid Identifier field , the packet is silently discarded . 	301	0
1548	Length	The Length field is two octets and indicates the length of the LCP packet including the Code , Identifier , Length and Data fields . Octets outside the range of the Length field are treated as padding and are ignored on reception . When a packet is received with an invalid Length field , the packet is silently discarded . 	100	0
1548	Code	Code 	231	0
1548	Identifier	The Identifier field MUST be changed whenever the content of the Options field changes , and whenever a valid reply has been received for a previous request . For retransmissions , the Identifier MAY remain unchanged . 	301	0
1548	Code	Code 	231	0
1548	Identifier	The Identifier field is a copy of the Identifier field of the Configure-Request which caused this Configure-Ack . 	301	0
1548	Code	Code 	231	0
1548	Identifier	The Identifier field is a copy of the Identifier field of the Configure-Request which caused this Configure-Nak . 	231	0
1548	Code	Code 	231	0
1548	Identifier	The Identifier field is a copy of the Identifier field of the Configure-Request which caused this Configure-Reject . 	301	0
1548	Code	Code 	231	0
1548	Identifier	On transmission , the Identifier field MUST be changed whenever the content of the Data field changes , and whenever a valid reply has been received for a previous request . For retransmissions , the Identifier MAY remain unchanged . On reception , the Identifier field of the Terminate-Request is copied into the Identifier field of the Terminate-Ack packet . 	301	0
1548	Code	Code 	231	0
1548	Identifier	Identifier 	202	0
1548	Code	Code 	231	0
1548	Identifier	Identifier 	202	0
1548	Rejected-Protocol	The Rejected-Protocol field is two octets and contains the PPP Protocol field of the packet which is being rejected . 	231	0
1548	Code	Code 	231	0
1548	Identifier	On transmission , the Identifier field MUST be changed whenever the content of the Data field changes , and whenever a valid reply has been received for a previous request . For retransmissions , the Identifier MAY remain unchanged . 	301	0
1548	Magic-Number	The Magic-Number field is four octets and aids in detecting links which are in the looped-back condition . Until the Magic-Number Configuration Option has been successfully negotiated , the Magic - Number MUST be transmitted as zero . See the Magic-Number Configuration Option for further explanation . 	302	0
1548	Code	Code 	231	0
1548	Identifier	Identifier 	202	0
1548	Magic-Number	The Magic-Number field is four octets and aids in detecting links which are in the looped-back condition . Until the Magic-Number Configuration Option has been successfully negotiated , the Magic - Number MUST be transmitted as zero . See the Magic-Number Configuration Option for further explanation . 	302	0
1548	Type	The Type field is one octet and indicates the type of Configuration Option . Up-to-date values of the LCP Option Type field are specified in the most recent " Assigned Numbers " RFC [ 2 ]. 	231	0
1548	Length	The Length field is one octet and indicates the length of this Configuration Option including the Type , Length and Data fields . If a negotiable Configuration Option is received in a Configure - Request but with an invalid Length , a Configure-Nak SHOULD be transmitted which includes the desired Configuration Option with an appropriate Length and Data . 	100	0
1548	Type	Type 	240	0
1548	Length	Length 	100	0
1548	Maximum-Receive-Unit	The Maximum-Receive-Unit field is two octets , and specifies the maximum number of octets in the Information and Padding fields . It does not include the framing , Protocol field , FCS , nor any transparency bits or bytes . 	400	0
1548	Type	Type 	240	0
1548	Length	Length 	100	0
1548	Async-Control-Character-Map	The Async-Control-Character-Map field is four octets and indicates the set of control characters to be mapped . The map is sent most significant octet first . 	301	0
1548	Type	Type 	240	0
1548	Length	Length 	100	0
1548	Authentication-Protocol	The Authentication-Protocol field is two octets and indicates the authentication protocol desired . Values for this field are always the same as the PPP Protocol field values for that same authentication protocol . 	231	0
1548	Type	Type 	240	0
1548	Length	Length 	100	0
1548	Quality-Protocol	The Quality-Protocol field is two octets and indicates the link quality monitoring protocol desired . Values for this field are always the same as the PPP Protocol field values for that same monitoring protocol . 	231	0
1548	Type	Type 	240	0
1548	Length	Length 	100	0
1548	Magic-Number	The Magic-Number field is four octets and indicates a number which is very likely to be unique to one end of the link . A Magic - Number of zero is illegal and MUST always be Nak'd , if it is not Rejected outright . 	301	0
1548	Type	Type 	240	0
1548	Length	Length 	100	0
1548	Type	Type 	240	0
1548	Length	Length 	100	0
1552	Type	Type 	240	0
1552	Length	Length 	100	0
1552	IPX-Network-Number	The four octet IPX-Network-Number is the desired local IPX network number of the sender of the Configure-Request . This number may be zero , which is interpreted as being a local network of unknown number that is not used by the routing protocol . 	231	0
1552	Type	Type 	240	0
1552	Length	Length 	100	0
1552	IPX-Node-Number	The six octet IPX-Node-Number is the desired local IPX node number of the sender of the Configure-Request . 	231	0
1552	Type	Type 	240	0
1552	Length	Length 	100	0
1552	IPX-Compression-Protocol	The IPX-Compression-Protocol field is two octets and indicates the compression protocol desired . Odd values for this field are always the same as the PPP Data Link Layer Protocol field values for that same compression protocol . Even values are used when the compression protocol is interleaved with IPX packets . 	231	0
1552	Type	Type 	240	0
1552	Length	Length 	100	0
1552	IPX-Routing-Protocol	The IPX-Routing-Protocol field is two octets and indicates the type of Routing-Protocol desired . This two octet quantity is sent most significant octet first . 	231	0
1552	Type	Type 	240	0
1552	Length	Length 	100	0
1552	Type	Type 	240	0
1552	Length	Length 	100	0
1553	Length	When set to one ( 1 ), the length flag indicates the inclusion of the IPX data length field in the compressed packet . When set to zero ( 0 ), the length flag indicates the omission of the IPX data length field in the compressed packet . 	210	0
1553	Type	Type 	240	0
1553	Length	Length 	100	0
1553	IPX-Compression-Protocol	IPX-Compression-Protocol 	400	0
1553	Max-Slot-Id	Max-Slot-Id 	231	0
1553	Options	The Options field is one octet , and is comprised of the " logical or " of the following values : 	231	0
1561	.	This one-octet field identifies this as the ISO/IEC 8473 protocol; it MUST set to binary 1000 0001 . 	231	0
1561	.	Header Length is the length of the CLNP header in octets , and thus points to the beginning of the data . The value 255 is reserved . The header length is the same for all fragments of the same ( original ) CLNP packet . 	100	0
1561	.	This one-octet field identifies the version of the protocol; it MUST be set to a binary value 0000 0001 . 	220	0
1561	.	Like the TTL field of IP , this field indicates the maximum time the datagram is allowed to remain in the internet system . If this field contains the value zero , then the datagram MUST be destroyed; a host , however , MUST NOT send a datagram with a lifetime value of zero . This field is modified in internet header processing . The time is measured in units of 500 milliseconds , but since every module that processes a datagram MUST decrease the TTL by at least one even if it process the datagram in less than 500 millisecond , the TTL must be thought of only as an upper bound on the time a datagram may exist . The intention is to cause undeliverable datagrams to be discarded , and to bound the maximum CLNP datagram lifetime . [ Like IP , the colloquial usage of TTL in CLNP is as a coarse hop-count .] 	120	0
1561	.	Three flags are defined . These occupy bits 0 , 1 , and 2 of the Flags/Type octet : 	240	0
1561	.	The type field distinguishes data CLNP packets from Error Reports from Echo packets . The following values of the type field apply : 	231	0
1561	.	Like the Total Length of the IP header , the Fragment length field contains the length in octets of the fragment ( i.e ., this datagram ) including both header and data . 	100	0
1561	.	A checksum is computed on the header only . It MUST be verified at each host/router that processes the packet; if header fields are changed during processing ( e.g ., the Lifetime ), the checksum is modified . If the checksum is not used , this field MUST be coded with a value of zero ( 0 ). See Appendix A for algorithms used in the computation and adjustment of the checksum . Readers are encouraged to see [ 10 ] for a description of an efficient implementation of the checksum algorithm . 	301	0
1561	.	CLNP uses OSI network service access point addresses ( NSAPAs ); NSAPAs serve the same identification and location functions as an IP address , plus the protocol selector value encoded in the IPv4 datagram header , and with additional hierarchy . General purpose 	231	0
1561	.	Like the Identification field of IP , this 16-bit field is used to distinguish segments of the same ( original ) packet for the purposes of reassembly . This field is present when the fragmentation permitted flag is set to one . 	400	0
1561	.	Like the Fragment Offset of IP , this 16-bit is used to identify the relative octet position of the data in this fragment with respect to the start of the data submitted to CLNP; i.e ., it indicates where in the original datagram this fragment belongs . The offset is measured in octets; the value of this field shall always be a multiple of eight ( 8 ). This field is present when the fragmentation permitted flag is set to one . 	110	0
1561	.	The total length of the CLNP packet in octets is determined by the originator and placed in the Total Length field of the header . The Total Length field specifies the entire length of the original datagram , including both the header and data . This field MUST NOT be changed in any fragment of the original packet for the duration of the packet lifetime . This field is present when the fragmentation permitted flag is set to one . 	100	0
1561	.	All CLNP options are " triplets " of the form < parameter code >, < parameter length >, and < parameter value >. Both the parameter code and length fields are always one octet long; the length parameter value , in octets , is indicated in the parameter length field . The following options are defined for CLNP for TUBA . 	231	0
1561	.	The following is a summary of the rules for processing an Error Report : 	400	0
1561	.	Table 5-1 provides a loose comparison of ICMP message types and codes to CLNP Error Type Codes ( values in Internet decimal ): 	231	0
1561	Source Address	* Source Address ( including Reserved field ) 	230	0
1570	Code	Code 	231	0
1570	Identifier	Identifier 	202	0
1570	Length	Length 	100	0
1570	Magic-Number	The Magic-Number field is four octets and aids in detecting links which are in the looped-back condition . Until the Magic-Number Configuration Option has been successfully negotiated , the Magic - Number MUST be transmitted as zero . See the Magic-Number Configuration Option for further explanation . 	302	0
1570	Code	Code 	231	0
1570	Identifier	Identifier 	230	0
1570	Length	Length 	100	0
1570	Magic-Number	The Magic-Number field is four octets and aids in detecting links which are in the looped-back condition . Until the Magic-Number Configuration Option has been successfully negotiated , the Magic - Number MUST be transmitted as zero . See the Magic-Number Configuration Option for further explanation . 	302	0
1570	Seconds-Remaining	The Seconds-Remaining field is four octets and indicates the number of integral seconds remaining in this session . This 32 bit 	120	0
1570	Type	Type 	240	0
1570	Length	Length 	100	0
1570	Options	This field is one octet , and is comprised of the " logical or " of the following values : 	231	0
1570	Type	Type 	240	0
1570	Length	Length 	100	0
1570	Maximum	This field specifies the largest number of padding octets which may be added to the frame . The value may range from 1 to 255 , but values of 2 , 4 , or 8 are most likely . 	100	0
1570	Type	Type 	240	0
1570	Length	Length 	100	0
1570	Operation	The Operation field is one octet and indicates the contents of the Message field . 	301	0
1570	Type	Type 	240	0
1570	Length	Length 	100	0
1583	Type	Type Packet name Protocol function __________________________________________________________ 1 Hello Discover/maintain neighbors 2 Database Description Summarize database contents 3 Link State Request Database download 4 Link State Update Database update 5 Link State Ack Flooding acknowledgment 	240	0
1583	AuType	AuType and Authentication Each OSPF packet exchange is authenticated . Authentication types are assigned by the protocol and documented in Appendix D . A different authentication scheme can be used for each OSPF area . The 64-bit authentication field is set by the appropriate authentication procedure ( determined by AuType ). This procedure should be the last called when 	231	0
1583	Type	Type Packet name detailed section ( transmit ) _________________________________________________________ 1 Hello Section 9.5 2 Database description Section 10.8 3 Link state request Section 10.9 4 Link state update Section 13.3 5 Link state ack Section 13.5 	240	0
1583	Type	Type Packet name detailed section ( receive ) ________________________________________________________ 1 Hello Section 10.5 2 Database description Section 10.6 3 Link state request Section 10.7 4 Link state update Section 13 5 Link state ack Section 13.7 	240	0
1583	I	Packets , with the initialize ( I ), more ( M ) and master ( MS ) bits set . This Database Description Packet should be otherwise empty . This Database Description Packet should be retransmitted at intervals of RxmtInterval until the next state is entered ( see Section 10.8 ). 	302	0
1583	M	Packets , with the initialize ( I ), more ( M ) and master ( MS ) bits set . This Database Description Packet should be otherwise empty . This Database Description Packet should be retransmitted at intervals of RxmtInterval until the next state is entered ( see Section 10.8 ). 	302	0
1583	MS	Packets , with the initialize ( I ), more ( M ) and master ( MS ) bits set . This Database Description Packet should be otherwise empty . This Database Description Packet should be retransmitted at intervals of RxmtInterval until the next state is entered ( see Section 10.8 ). 	302	0
1583	Type	Type Dest Area Path Type Cost Next Adv . Hop(s ) Router(s ) ____________________________________________________________ N N1 0 intra-area 10 RT3 * N N2 0 intra-area 10 RT3 * N N3 0 intra-area 7 RT3 * N N4 0 intra-area 8 RT3 * N Ib 0 intra-area 7 * * N Ia 0 intra-area 12 RT10 * N N6 0 intra-area 8 RT10 * N N7 0 intra-area 12 RT10 * N N8 0 intra-area 10 RT10 * N N9 0 intra-area 11 RT10 * N N10 0 intra-area 13 RT10 * N N11 0 intra-area 14 RT10 * N H1 0 intra-area 21 RT10 * ASBR RT5 0 intra-area 6 RT5 * ASBR RT7 0 intra-area 8 RT10 * ____________________________________________________________ N N12 * type 1 ext . 10 RT10 RT7 N N13 * type 1 ext . 14 RT5 RT5 N N14 * type 1 ext . 14 RT5 RT5 N N15 * type 1 ext . 17 RT10 RT7 	240	0
1583	Type	Type Dest Area Path Type Cost Next Adv . Hops(s ) Router(s ) __________________________________________________________________ N N1 1 intra-area 4 RT1 * N N2 1 intra-area 4 RT2 * N N3 1 intra-area 1 * * N N4 1 intra-area 3 RT3 * BR RT3 1 intra-area 1 * * __________________________________________________________________ N Ib 0 intra-area 22 RT5 * N Ia 0 intra-area 27 RT5 * BR RT3 0 intra-area 21 RT5 * BR RT7 0 intra-area 14 RT5 * BR RT10 0 intra-area 22 RT5 * BR RT11 0 intra-area 25 RT5 * ASBR RT5 0 intra-area 8 * * ASBR RT7 0 intra-area 14 RT5 * __________________________________________________________________ N N6 0 inter-area 15 RT5 RT7 N N7 0 inter-area 19 RT5 RT7 N N8 0 inter-area 18 RT5 RT7 N N9-N11,H1 0 inter-area 26 RT5 RT11 __________________________________________________________________ N N12 * type 1 ext . 16 RT5 RT5,RT7 N N13 * type 1 ext . 16 RT5 RT5 N N14 * type 1 ext . 16 RT5 RT5 N N15 * type 1 ext . 23 RT5 RT7 	240	0
1583	Type	Type Dest Area Path Type Cost Next Adv . Hop(s ) Router(s ) ________________________________________________________________ N Ib 0 intra-area 16 RT3 * N Ia 0 intra-area 21 RT3 * BR RT3 0 intra-area 1 * * BR RT10 0 intra-area 16 RT3 * BR RT11 0 intra-area 19 RT3 * ________________________________________________________________ N N9-N11,H1 0 inter-area 20 RT3 RT11 	240	0
1583	LS age	This field is the age of the link state advertisement in seconds . It should be processed as an unsigned 16-bit integer . It is set to 0 when the link state advertisement is originated . It must be incremented by InfTransDelay on every hop of the flooding procedure . Link state advertisements are also aged as they are held in each router's database . 	121	0
1583	Options	The Options field in the link state advertisement header indicates which optional capabilities are associated with the advertisement . OSPF's optional capabilities are described in Section 4.5 . There are currently two optional capabilities defined; they are represented by the T-bit and E-bit found in the Options field . The rest of the Options field should be set to zero . 	231	0
1583	LS type	The LS type field dictates the format and function of the link state advertisement . Advertisements of different types have different names ( e.g ., router links or network links ). All advertisement types , except the AS external link advertisements ( LS type = 5 ), are flooded throughout a single area only . AS external link advertisements are flooded throughout the entire Autonomous System , excepting stub areas ( see Section 3.6 ). Each separate advertisement type is briefly described below in Table 15 . 	231	0
1583	Link State ID	This field identifies the piece of the routing domain that is being described by the advertisement . Depending on the advertisement's LS type , the Link State ID takes on the values listed in Table 16 . 	230	0
1583	Advertising Router	This field specifies the OSPF Router ID of the advertisement's originator . For router links advertisements , this field is identical to the Link State ID field . Network link advertisements are originated by the network's Designated Router . Summary link advertisements are originated by area border routers . AS external link advertisements are originated by AS boundary routers . 	230	0
1583	LS sequence number	The sequence number field is a signed 32-bit integer . It is used to detect old and duplicate link state advertisements . 	200	0
1583	LS checksum	This field is the checksum of the complete contents of the advertisement , excepting the LS age field . The LS age field is excepted so that an advertisement's age can be incremented without updating the checksum . The checksum used is the same that is used for ISO connectionless datagrams; it is commonly referred to as the Fletcher checksum . It is documented in Annex B of [ RFC 905 ]. The link state advertisement header also contains the length of the advertisement in bytes; subtracting the size of the LS age field ( two bytes ) yields the amount of data to checksum . 	400	0
1583	5	The stub networks are added to the tree in the procedure's second stage . In this stage , all router vertices are again examined . Those that have been determined to be unreachable in the above first phase are discarded . For each reachable router vertex ( call it V ), the associated router links advertisement is found in the link state database . Each stub network link appearing in the advertisement is then examined , and the following steps are executed : 	400	0
1583	Type	Type Description ________________________________ 1 Hello 2 Database Description 3 Link State Request 4 Link State Update 5 Link State Acknowledgment 	240	0
1583	Type	Type Description __________________________________________________ 1 Point-to-point connection to another router 2 Connection to a transit network 3 Connection to a stub network 4 Virtual link 	240	0
1583	Type	Type Link ID ______________________________________ 1 Neighboring router's Router ID 2 IP address of Designated Router 3 IP network/subnet number 4 Neighboring router's Router ID 	240	0
1583	AuType	AuType Description ___________________________________________ 0 No authentication 1 Simple password All others Reserved for assignment by the IANA ( iana@ISI.EDU ) 	240	0
1613	Version	The version number of the XOT protocol is encoded in the first two octets . The version number MUST be 0 . Other values of this field are reserved for future use . If a value other than 0 is received , then the TCP connection MUST be closed . 	220	0
1613	Length	The length of the X.25 packet is encoded in the second two octets . Values must be legal X.25 packet lengths . If the Length field has an illegal value , then the TCP connection MUST be closed . 	100	0
1638	Pads	Any PPP frame may have padding inserted in the " Optional Data Link Layer Padding " field . This number tells the receiving system how many pad octets to strip off . 	200	0
1638	MAC Type	Up-to-date values of the MAC Type field are specified in the most recent " Assigned Numbers " RFC [ 4 ]. Current values are assigned as follows : 	231	0
1638	Frame Control	On 802.4 , 802.5 , and FDDI LANs , there are a few octets preceding the Destination MAC Address , one of which is protected by the FCS . 	400	0
1638	Destination MAC Address	Destination MAC Address 	230	0
1638	Source MAC Address	Source MAC Address 	230	0
1638	Frame FCS	Mentioned primarily for clarity . The FCS used on the PPP link is separate from and unrelated to the LAN FCS . 	231	0
1638	Spanning Tree Protocol	Up-to-date values of the Spanning-Tree-Protocol field are specified in the most recent " Assigned Numbers " RFC [ 4 ]. Current values are assigned as follows : 	231	0
1638	Type	Type 	240	0
1638	Length	Length 	100	0
1638	LAN Segment Number	A 12-bit number identifying the LAN segment , as defined in the IEEE 802.1D Source Routing Specification . 	231	0
1638	Type	Type 	240	0
1638	Length	Length 	100	0
1638	LAN Segment Number	A 12-bit number identifying the LAN segment , as defined in the IEEE 802.1D Source Routing Specification . 	231	0
1638	Type	Type 	240	0
1638	Length	Length 	100	0
1638	MAC Type	One of the values of the PDU MAC Type field ( previously described in the " Bridged LAN Traffic " section ) that this system is prepared to receive and service . 	231	0
1638	Type	Type 	240	0
1638	Length	Length 	100	0
1638	Type	Type 	240	0
1638	Length	Length 	100	0
1638	Type	Type 	240	0
1638	Length	Length 	100	0
1638	Type	Type 	240	0
1638	Length	2 octets plus 1 additional octet for each protocol that will be actively supported . Most systems will only support a single spanning tree protocol , resulting in a length of 3 . 	100	0
1661	Code	Code 	231	0
1661	Identifier	The Identifier field is one octet , and aids in matching requests and replies . When a packet is received with an invalid Identifier field , the packet is silently discarded without affecting the automaton . 	301	0
1661	Length	The Length field is two octets , and indicates the length of the LCP packet , including the Code , Identifier , Length and Data fields . The Length MUST NOT exceed the MRU of the link . 	100	0
1661	Code	Code 	231	0
1661	Identifier	The Identifier field MUST be changed whenever the contents of the Options field changes , and whenever a valid reply has been received for a previous request . For retransmissions , the Identifier MAY remain unchanged . 	301	0
1661	Code	Code 	231	0
1661	Identifier	The Identifier field is a copy of the Identifier field of the Configure-Request which caused this Configure-Ack . 	301	0
1661	Code	Code 	231	0
1661	Identifier	The Identifier field is a copy of the Identifier field of the Configure-Request which caused this Configure-Nak . 	301	0
1661	Code	Code 	231	0
1661	Identifier	The Identifier field is a copy of the Identifier field of the Configure-Request which caused this Configure-Reject . 	301	0
1661	Code	Code 	231	0
1661	Identifier	On transmission , the Identifier field MUST be changed whenever the content of the Data field changes , and whenever a valid reply has been received for a previous request . For retransmissions , the Identifier MAY remain unchanged . 	301	0
1661	Code	Code 	231	0
1661	Identifier	Identifier 	202	0
1661	Code	Code 	231	0
1661	Identifier	Identifier 	202	0
1661	Rejected-Protocol	The Rejected-Protocol field is two octets , and contains the PPP Protocol field of the packet which is being rejected . 	400	0
1661	Code	Code 	231	0
1661	Identifier	On transmission , the Identifier field MUST be changed whenever the content of the Data field changes , and whenever a valid reply has been received for a previous request . For retransmissions , the Identifier MAY remain unchanged . 	301	0
1661	Magic-Number	The Magic-Number field is four octets , and aids in detecting links which are in the looped-back condition . Until the Magic-Number Configuration Option has been successfully negotiated , the Magic - Number MUST be transmitted as zero . See the Magic-Number Configuration Option for further explanation . 	301	0
1661	Code	Code 	231	0
1661	Identifier	Identifier 	202	0
1661	Magic-Number	The Magic-Number field is four octets , and aids in detecting links which are in the looped-back condition . Until the Magic-Number Configuration Option has been successfully negotiated , the Magic - Number MUST be transmitted as zero . See the Magic-Number Configuration Option for further explanation . 	301	0
1661	Type	The Type field is one octet , and indicates the type of Configuration Option . Up-to-date values of the LCP Option Type field are specified in the most recent " Assigned Numbers " RFC [ 2 ]. This document concerns the following values : 	231	0
1661	Length	The Length field is one octet , and indicates the length of this Configuration Option including the Type , Length and Data fields . 	100	0
1661	Maximum-Receive-Unit	6.1 . Maximum-Receive-Unit ( MRU ) 	240	0
1661	Type	Type 	240	0
1661	Length	Length 	100	0
1661	Maximum-Receive-Unit	The Maximum-Receive-Unit field is two octets , and specifies the maximum number of octets in the Information and Padding fields . It does not include the framing , Protocol field , FCS , nor any transparency bits or bytes . 	400	0
1661	Authentication-Protocol	6.2 . Authentication-Protocol 	240	0
1661	Type	Type 	240	0
1661	Length	Length 	100	0
1661	Authentication-Protocol	The Authentication-Protocol field is two octets , and indicates the authentication protocol desired . Values for this field are always the same as the PPP Protocol field values for that same authentication protocol . 	231	0
1661	Quality-Protocol	6.3 . Quality-Protocol 	240	0
1661	Type	Type 	240	0
1661	Length	Length 	100	0
1661	Quality-Protocol	The Quality-Protocol field is two octets , and indicates the link quality monitoring protocol desired . Values for this field are always the same as the PPP Protocol field values for that same monitoring protocol . 	231	0
1661	Magic-Number	6.4 . Magic-Number 	240	0
1661	Type	Type 	240	0
1661	Length	Length 	100	0
1661	Magic-Number	The Magic-Number field is four octets , and indicates a number which is very likely to be unique to one end of the link . A Magic-Number of zero is illegal and MUST always be Nak'd , if it is not Rejected outright . 	301	0
1661	Type	Type 	240	0
1661	Length	Length 	100	0
1661	Type	Type 	240	0
1661	Length	Length 	100	0
1662	ACCM	7.1 . Async-Control-Character-Map ( ACCM ) 	240	0
1662	Type	Type 	240	0
1662	Length	Length 	100	0
1662	ACCM	The ACCM field is four octets , and indicates the set of control characters to be mapped . The map is sent most significant octet first . 	301	0
1663	Type	Type 	240	0
1663	Length	Length 	100	0
1663	Window	A value between 1 and 127 . This indicates the number of frames the receiver will buffer , which is the maximum number that the sender should send without receiving an acknowledgement . If window < 8 , then modulo 8 sequencing is used on the link . Otherwise , modulo 128 sequencing is used . 	110	0
1701	Flags	The GRE flags are encoded in the first two octets . Bit 0 is the most significant bit , bit 15 is the least significant bit . Bits 13 through 15 are reserved for the Version field . Bits 5 through 12 are reserved for future use and MUST be transmitted as zero . 	302	0
1701	Protocol Type	The Protocol Type field contains the protocol type of the payload packet . In general , the value will be the Ethernet protocol type field for the packet . Currently defined protocol types are listed below . Additional values may be defined in other documents . 	231	0
1701	Address Family	The Address Family field contains a two octet value which indicates the syntax and semantics of the Routing Information field . The values for this field and the corresponding syntax and semantics for Routing Information are defined in other documents . 	231	0
1701	SRE Offset	The SRE Offset field indicates the octet offset from the start of the Routing Information field to the first octet of the active entry in Source Route Entry to be examined . 	110	0
1701	SRE Length	The SRE Length field contains the number of octets in the SRE . If the SRE Length is 0 , this indicates this is the last SRE in the Routing field . 	100	0
1705	Destination TA	Destination TA : 64 bits . The Destination Transport Address . The concatenation of the 24 bit IEEE assigned Ethernet address and the 40 bit representation of the machines serial number for the remote node . 	230	0
1705	Source TA	Source TA : 64 Bits . The Source Transport Address . The concatenation of the 24 bit IEEE assigned Ethernet address and the 40 bit representation of the machines serial number for the local node . 	230	0
1705	Destination Port Number	Destination Port Number : 28 Bits . Identifies the specific application on the remote node . 	230	0
1705	Source Port Number	Source Port Number : 28 Bits . Identifies the specific application on the local node . 	230	0
1705	QoS	QoS : 4 bits . The Quality of Service parameter may be set by the user application and passed down to a network layer that supports different levels of service . 	231	0
1705	Sequence Number	Sequence Number : 64 Bits . The sequence number of the first data octet in this segment ( accept when the S bit is present ). If S bit is on , the sequence number is the initial sequence number ( ISN ) and the first data octet is ISN+1 . ( The ISN is computed using the existing algorithm ). 	201	0
1705	Acknowledgment Number	Acknowledgment Number : 64 Bits . If the A bit is set , this field contains the value of the next sequence number the sender of this segment is expecting to receive . Once a connection is established , this is always sent . 	201	0
1705	Checksum	Checksum : 16 Bits . The checksum field has the same meaning as in the current version of TCP . The current 96 bit pseudo header is NOT used in calculating the checksum . The checksum covers only the information present in this header . The checksum field itself is set to zero for the calculation . 	301	0
1705	Type	Type : 16 bits The type field identifies the particular option . 	231	0
1705	Length	Length : 16 bits The length field represents the size of the option data to follow , in octets . 	100	0
1705	Destination TA	Destination TA : 64 bits . The Destination Transport Address . The concatenation of the 24 bit IEEE assigned Ethernet address and the 40 bit representation of the machines serial number for the remote node . 	230	0
1705	Source TA	Source TA : 64 Bits . The Source Transport Address . The concatenation of the 24 bit IEEE assigned Ethernet address and the 40 bit representation of the machines serial number for the local node . 	230	0
1705	Destination Port Number	Destination Port Number : 28 Bits . Identifies the specific application on the remote node . 	230	0
1705	Source Port Number	Source Port Number : 28 Bits . Identifies the specific application on the local node . 	230	0
1705	QoS	QoS : 4 bits . The Quality of Service parameter may be set by the user application and passed down to a network layer that supports different levels of service . 	231	0
1705	Length	Length : 16 bits The length parameter represents the length of the data area in octets . This value will be set to zero if no data is sent within this packet . 	100	0
1705	Checksum	Checksum : 16 bits The checksum parameter has the same meaning as in the current version of UDP . The current 96 bit pseudo header is NOT used in calculating the checksum . The checksum covers only the information present in this header . The checksum field itself is set to zero for the calculation . 	301	0
1710	Version	Version 4-bit Internet Protocol version number = 6 . 	220	0
1710	Flow Label	Flow Label 28-bit field . See SIPP Quality of Service section . 	231	0
1710	Payload Length	Payload Length 16-bit unsigned integer . Length of payload , i.e ., the rest of the packet following the SIPP header , in octets . 	100	0
1710	Payload Type	Payload Type 8-bit selector . Identifies the type of header immediately following the SIPP header . Uses the same values as the IPv4 Protocol field [ STD 2 , RFC 1700 ]. 	231	0
1710	Hop Limit	Hop Limit 8-bit unsigned integer . Decremented by 1 by each node that forwards the packet . The packet is discarded if Hop Limit is decremented to zero . 	100	0
1710	Source Address	Source Address 64 bits . An address of the initial sender of the packet . See [ ROUT ] for details . 	230	0
1710	Destination Address	Destination Address 64 bits . An address of the intended recipient of the packet ( possibly not the ultimate recipient , if an optional Routing Header is present ). 	230	0
1710	R	R ( Reserved ) 1-bit subfield . Initialized to zero for transmission; Ignored on reception . 	500	0
1710	DP	DP ( Drop Priority ) 3-bit unsigned integer . Specifies the priority of the packet , relative to other packets from the same source , for being discarded by a router under conditions of congestion . Larger values indicates a greater willingness by the sender to allow the packet to be discarded . 	231	0
1710	Flow ID	Flow ID 24-bit subfield used to identify a specific flow . 	400	0
1752	Version	* Version - Internet Protocol version number . IPng has been assigned version number 6 . ( 4-bit field ) 	220	0
1752	Flow Label	* Flow Label - This field may be used by a host to label those packets for which it is requesting special handling by routers within a network , such as non-default quality of service or " real - time " service . ( 28-bit field ) 	400	0
1752	Payload Length	* Payload Length - Length of the remainder of the packet following the IPv6 header , in octets . To permit payloads of greater than 64K bytes , if the value in this field is 0 the actual packet length will be found in an Hop-by-Hop option . ( 16-bit unsigned integer ) 	100	0
1752	Next Header	* Next Header - Identifies the type of header immediately following the IPv6 header . The Next Header field uses the same values as the IPv4 Protocol field ( 8-bit selector field ) 	231	0
1752	Hop Limit	* Hop Limit - Used to limit the impact of routing loops . The Hop Limit field is decremented by 1 by each node that forwards the packet . The packet is discarded if Hop Limit is decremented to zero . ( 8-bit unsigned integer ) 	301	0
1752	Source Address	* Source Address - An address of the initial sender of the packet . ( 128 bit field ) 	230	0
1752	Destination Address	* Destination Address - An address of the intended recipient of the packet ( possibly not the ultimate recipient , if an optional Routing Header is present ). ( 128 bit field ) 	230	0
1752	Next Header	* Next Header - Identifies the type of header immediately following the Hop-by-Hop Options header . Uses the same values as the IPv4 Protocol field . ( 8-bit selector ) 	231	0
1752	Hdr Ext Len	* Hdr Ext Len - Length of the Hop-by-Hop Options header in 8-octet units , not including the first 8 octets . ( 8-bit unsigned integer ) 	100	0
1752	Options	* Options - Contains one or more TLV-encoded options . ( Variable - length field , of length such that the complete Hop-by-Hop Options header is an integer multiple of 8 octets long .) 	400	0
1752	Option Type	* Opt Data Len - Length of the Option Data field of this option , in octets . ( 8-bit unsigned integer ) 	100	0
1752	Opt Data Len	* Opt Data Len - Length of the Option Data field of this option , in octets . ( 8-bit unsigned integer ) 	100	0
1752	Option Data	The Option Type identifiers are internally encoded such that their highest-order two bits specify the action that must be taken if the processing IPv6 node does not recognize the Option Type : 	231	0
1752	Next Header	* Next Header - Identifies the type of header immediately following the Routing Header . Uses the same values as the IPv4 Protocol field . ( 8-bit selector ) 	231	0
1752	Routing Type	* Routing Type - Indicates the type of routing supported by this header . Value must be 1 . 	231	0
1752	Reserved	* Reserved - Initialized to zero for transmission; ignored on reception . 	500	0
1752	SrcRouteLen	* SrcRouteLen - Source Route Length - Number of source route elements/hops in the SDRP Routing header . Length of SDRP routing header can be calculated from this value ( length = SrcRouteLen * 16 + 8 ) This field may not exceed a value of 24 . ( 8 bit unsigned integer ) 	100	0
1752	NextHopPtr	* NextHopPtr - Next Hop Pointer - Index of next element/hop to be processed; initialized to 0 to point to first element/hop in the source route . When Next Hop Pointer is equal to Source Route Length then the Source Route is completed . ( 8 bit unsigned integer ) 	301	0
1752	Source Route	* Source Route - A list of IPv6 addresses indicating the path that this packet should follow . A Source Route can contain an arbitrary intermix of unicast and cluster addresses . ( integral multiple of 128 bits ) 	230	0
1752	Next Header	* Next Header - Identifies the type of header immediately following the Fragment header . Uses the same values as the IPv4 Protocol field . ( 8 bit selector ) 	231	0
1752	Reserved	* Reserved , Res - Initialized to zero for transmission; ignored on reception . 	500	0
1752	Res	* Reserved , Res - Initialized to zero for transmission; ignored on reception . 	500	0
1752	Fragment Offset	* Fragment Offset - The offset , in 8-octet units , of the following payload , relative to the start of the original , unfragmented payload . ( 13-bit unsigned integer ) 	110	0
1752	Identification	* Identification - A value assigned to the original payload that is different than that of any other fragmented payload sent recently with the same IPv6 Source Address , IPv6 Destination Address , and Fragment Next Header value . ( If a Routing header is present , the IPv6 Destination Address is that of the final destination .) The Identification value is carried in the Fragment header of all of the original payload's fragments , and is used by the destination to identify all fragments belonging to the same original payload . ( 32 bit field ) 	230	0
1752	Next Header	* Next Header - Identifies the type of header immediately following the Authentication header . Uses the same values as the IPv4 Protocol field . ( 8-bit selector ) 	231	0
1752	Auth Data Len	* Auth Data Len - Length of the Authentication Data field in 8 - octet units . ( 8-bit unsigned integer ) 	100	0
1752	Reserved	* Reserved - Initialized to zero for transmission; ignored on reception . 	500	0
1752	Authentication Data	* Authentication Data - Algorithm-specific information required to authenticate the source of the packet and assure its integrity , as specified for the pre-established security association . ( Variable-length field , an integer multiple of 8 octets long .) 	400	0
1752	Initialization Vector	* Initialization Vector - This field is optional and its value depends on the SAID in use . For example , the field may contain cryptographic synchronization data for a block oriented encryption algorithm . It may also be used to contain a cryptographic initialization vector . A Privacy Header implementation will normally use the SAID value to determine whether this field is present and , if it is , the field's size and use . ( presence and length dependent on SAID ) 	400	0
1752	Next Header	* Next Header - encrypted - Identifies the type of header immediately following the Privacy header . Uses the same values as the IPv4 Protocol field . ( 8 bit selector ) 	231	0
1752	Reserved	* Length - encrypted - Length of the Privacy Header in 8-octet units , not including the first 8 octets . ( 8-bit unsigned integer ) 	100	0
1761	Original Length	32-bit unsigned integer representing the length in octets of the captured packet as received via a network . 	100	0
1761	Included Length	32-bit unsigned integer representing the length of the Packet Data field . This is the number of octets of the captured packet that are included in this packet record . If the received packet was truncated , the Included Length field will be less than the Original Length field . 	100	0
1761	Packet Record Length	32-bit unsigned integer representing the total length of this packet record in octets . This includes the 24 octets of descriptive information , the length of the Packet Data field , and the length of the Pad field . 	100	0
1761	Cumulative Drops	32-bit unsigned integer representing the number of packets that were lost by the system that created the packet file between the first packet record in the file and this one . Packets may be lost because of insufficient resources in the capturing system , or for other reasons . Note : some implementations lack the ability to count dropped packets . Those implementations may set the cumulative drops value to zero . 	200	0
1761	Timestamp Seconds	32-bit unsigned integer representing the time , in seconds since January 1 , 1970 , when the packet arrived . 	121	0
1761	Timestamp Microseconds	32-bit unsigned integer representing microsecond resolution of packet arrival time . 	121	0
1762	Length LSB	Length LSB 	100	0
1762	DATA	DATA 	202	0
1763	Type	Type 	240	0
1763	Length	Length 	100	0
1763	Type	Type 	240	0
1763	Length	Length 	100	0
1763	Type	Type 	240	0
1763	Length	Length 	100	0
1763	Type	Type 	240	0
1763	Length	Length 	100	0
1769	LI	Leap Indicator ( LI ): This is a two-bit code warning of an impending leap second to be inserted/deleted in the last minute of the current day , with bit 0 and bit 1 , respectively , coded as follows : 	210	0
1769	VN	Version Number ( VN ): This is a three-bit integer indicating the NTP version number , currently 3 . 	220	0
1769	Mode	Mode : This is a three-bit integer indicating the mode , with values defined as follows : 	240	0
1769	Stratum	Stratum : This is a eight-bit unsigned integer indicating the stratum level of the local clock , with values defined as follows : 	121	0
1769	Precision	Precision : This is an eight-bit signed integer indicating the precision of the local clock , in seconds to the nearest power of two . The values that normally appear in this field range from - 6 for mains-frequency clocks to - 20 for microsecond clocks found in some workstations . 	121	0
1769	Root Delay	Root Delay : This is a 32-bit signed fixed-point number indicating the total roundtrip delay to the primary reference source , in seconds with fraction point between bits 15 and 16 . Note that this variable can take on both positive and negative values , depending on the relative time and frequency offsets . The values that normally appear in this field range from negative values of a few milliseconds to positive values of several hundred milliseconds . 	122	0
1769	Root Dispersion	Root Dispersion : This is a 32-bit unsigned fixed-point number indicating the nominal error relative to the primary reference source , in seconds with fraction point between bits 15 and 16 . The values that normally appear in this field range from 0 to several hundred milliseconds . 	110	0
1788	Type	Type 37 	220	0
1788	Code	Code 0 	302	0
1788	Checksum	Checksum The ICMP Checksum . 	301	0
1788	Identifier	Identifier If Code is zero , a value to aid in matching requests and replies . For example , it might be used like a port in TCP or UDP to identify a session . May be zero . 	302	0
1788	Sequence Number	Sequence Number If Code is zero , a value to aid in matching requests and replies . For example , the number might be incremented on each request sent . May be zero . 	201	0
1788	Type	Type 38 	231	0
1788	Code	Code 0 	302	0
1788	Checksum	Checksum The ICMP Checksum . 	301	0
1788	Identifier	Identifier Copied from the request . 	230	0
1788	Sequence Number	Time-To-Live The number of seconds that the name may be cached . For historic reasons , this value is a signed 2s - complement number . 	120	0
1788	Time-To-Live	Time-To-Live The number of seconds that the name may be cached . For historic reasons , this value is a signed 2s - complement number . 	120	0
1819	D	o Create a stream from A to the peers at B , C and D , 	240	0
1819	R	o HelloTimer represents the time in millisecond since the agent was restarted , modulo the precision of the field . It is used to detect duplicate or delayed HELLO messages . 	121	0
1829	Payload Data	Payload Data 	400	0
1829	Pad Length	This field indicates the size of the Padding field . It does not include the Pad Length and Payload Type fields . The value typically ranges from 0 to 7 , but may be up to 255 to permit hiding of the actual data length . 	100	0
1829	Payload Type	This field indicates the contents of the Payload Data field , using the IP Protocol/Payload value . Up-to-date values of the IP Protocol/Payload are specified in the most recent " Assigned Numbers " [ RFC-1700 ]. 	231	0
1841	Protocol Type	Protocol Type Function 	400	0
1841	Address	This PPP-specified field is one octet and contains the binary sequence 11111111 ( hexadecimal 0xFF ), the All-Stations address . PPP does not assign individual station addresses . The All-Stations address must be recognized and received by all devices . For more information on this field , refer to " The Point-to-Point Protocol ( PPP ) for the Transmission of Multi-protocol Datagrams over Point - to-Point Links ." ( References , [ 1 ]) 	230	0
1841	Control	This PPP-specified field is one octet and contains the binary sequence 00000011 ( hexadecimal 0x03 ), the Unnumbered Information ( UI ) command with the P/F bit set to zero . 	302	0
1841	Protocol-Type	The Protocol-Type field is two octets and contains the IETF-assigned protocol type value . Valid LAN extension interface protocol type values are as follows : 	231	0
1841	Code	The Code field is one octet and identifies the type of LCP packet that the LAN extension interface packet is sending . Valid values are as follows : 	231	0
1841	Identifier	The Identifier field is one octet and contains a randomly generated value . The value aids matching requests and replies . It is recommended that a non-zero value be used for the identifier . That is , zero could be used in the future for unsolicited messages from the LAN extension interface unit . Valid values are 0x01-0xFF . 	301	0
1841	Length	The Length field is two octets and indicates the length of the entire packet in octets , including the Code , Identifier , Length , and startup options fields . 	100	0
1841	Option-Type	The Option-Type field is one octet and identifies the startup option being negotiated . Valid values are as follows : 	240	0
1841	Option-Length	The Option-Length field is one octet and specifies the length of the startup option fields , including the Option-Type , Option-Data , and Option-Length fields . 	100	0
1841	Option-Data	The Option-Data field contains the data relating to the value specified in the Option-Type field . That is , if the Option-Type field specifies MAC type ( 0x01 ), then the Option-Data field contains the MAC type ( Ethernet , Token Ring , and so on ). If the Option-Type field specifies MAC address ( 0x03 ), then the Option-Data field contains the actual MAC address . If the Option-Type field specifies LAN Extension ( 0x05 ), then the Option-Data field contains LAN extension interface software information . The following table defines the contents of the Option-Data field for each possible Option-Type field value : 	400	0
1841	Address	This PPP-specified field is a single octet and contains the binary sequence 11111111 ( hexadecimal 0xFF ), the All-Stations address . PPP does not assign individual station addresses . The All-Stations address must be recognized and received by all devices . For more information on this field , refer to " The Point-to-Point Protocol ( PPP ) for the Transmission of Multi-protocol Datagrams over Point - to-Point Links ." ( References , [ 1 ]) 	230	0
1841	Control	This PPP-specified field is a single octet and contains the binary sequence 00000011 ( hexadecimal 0x03 ), the Unnumbered Information ( UI ) command with the P/F bit set to zero . 	302	0
1841	Protocol-Type	The Protocol-Type field is two octets and contains the IETF-assigned protocol type value . Valid LAN extension interface protocol type values follow : 	231	0
1841	Code	The Code field is one octet and identifies the type of PPP-LEX packet . Valid values are as follows : 	231	0
1841	Identifier	The Identifier field is one octet and contains a randomly generated value . The value aids matching requests and replies . It is recommended that a non-zero value be used for the identifier . That is , zero could be used in the future for unsolicited messages from the LAN extension interface unit . Valid values are 0x01-0xFF . 	301	0
1841	Length	The Length field is two octets and indicates the length in octets of the entire packet , including the Code , Identifier , Length , and remote command options fields . 	100	0
1841	Option-Type	The Option-Type field is one octet and identifies the remote command option being transmitted . Valid values are as follows : 	240	0
1841	Option-Flags	This field is one octet and further specifies the remote command option , containing specific actions that must be followed . 	231	0
1841	Option-Length	The Option-Length field is two octets and specifies the length in octets of the remote command option fields , including the Option - Type , Option-Flags , Option-Length , and Option-Data fields . 	100	0
1841	Option-Data	Option-Data field contains data relating to the remote command option specified in the Option-Type field . 	400	0
1841	Protocol Type	The Protocol Type field contains a 16-bit number that is any Ethernet type code . See the most recent " Assigned Numbers " RFC for the correct Ethernet type code . 	231	0
1841	Option-Flags	Option-Flags None Option-Length 4 octets Option-Data None 	100	0
1841	Option-Type	Option-Type 0x08 ( Download Request ) Option-Flags None Option-Length The same value as that sent by the LEX_RCMD_REQUEST packet Option-Data Block Number , File Size , and Filename of the code/image to be downloaded . 	240	0
1841	Identifier	Identifier The same value as that sent by LEX_RCMD_REQUEST packet Length 34 octets Option-Type 0x0B ( Inventory Request ) Option-Flags None Option-Length 26 octets Option-Data Inventory data . See the following " Option-Data Field Descriptions " section for details . 	240	0
1841	Flash Size	This field contains the LAN extension interface unit's Flash size in bytes . 	400	0
1841	Serial Number	This field provides the LAN extension interface unit's serial number . This is an unassigned , 32-bit number . 	231	0
1841	HW Version	This field contains the version number of the LAN extension interface hardware unit . 	220	0
1841	PROM Major Ver	This field contains part of the version number of the PROM image . " Major " indicates which major software release this revision belongs to . For example , if the PROM version number is 1.2 , then the major version number is 1 . 	220	0
1841	PROM Minor Ver	This field contains part of the version number of the PROM image . " Minor " indicates which minor software release this revision belongs to . For example , if the PROM version number is 1.2 , then the minor version number is 2 . 	220	0
1841	Flash Major Ver	This field contains the " major " version number of the Flash image . For example , if the Flash image version number is 1.2 , then the major version number is 1 . 	220	0
1841	Flash Minor Ver	This field contains the " minor " version number of the Flash image . For example , if the Flash image version number is 1.2 , then the minor version number is 2 . 	220	0
1841	FLAGS	FLAGS report the boot status of the LAN extension interface unit . The flags are as follows : 	240	0
1841	RAM Major Ver	This field contains the " major " version number of the running image in RAM . For example , if the RAM image version number is 1.2 , then the major version number is 1 . 	220	0
1841	RAM Minor Ver	This field contains the " minor " version number of the running image in RAM . For example , if the RAM image version number is 1.2 , then the minor version number is 2 . 	220	0
1841	HDLC FLAG	HDLC FLAG 	400	0
1841	I	* F : Set bit F if the LAN FCS field is present . Because PPP-LEX data packets do not contain the LAN FCS field , this bit should not be set ( field=0 ). 	210	0
1841	Z	* F : Set bit F if the LAN FCS field is present . Because PPP-LEX data packets do not contain the LAN FCS field , this bit should not be set ( field=0 ). 	210	0
1841	F	* F : Set bit F if the LAN FCS field is present . Because PPP-LEX data packets do not contain the LAN FCS field , this bit should not be set ( field=0 ). 	210	0
1841	I	* I : Set bit I if the LAN ID field is present . Because PPP-LEX data packets do not contain the field , this bit should not be set ( field=0 ). 	302	0
1841	Z	* Z : Set bit Z if IEEE 802.3 Pad must be zero filled to minimum size . 	302	0
1841	Pad	Any PPP frame may have padding inserted in the Optional Data Link Layer Padding field . The value tells the receiving system how many pad octets to strip off . The LAN extension interface protocol does not support the Optional Data Link Layer Padding field , so the value of this field should be zero . 	400	0
1841	Destination MAC Address	This field is 6 octets and contains the MAC address of the destination system as defined by IEEE . The MAC Type field defines the bit ordering . 	230	0
1841	Source MAC Address	This field is 6 octets and contains the MAC address of the destination system as defined by IEEE . The MAC Type field defines the bit ordering . 	230	0
1841	LLC Data	This field is the remainder of the MAC frame which is ( or would be if it were present ) protected by the LAN FCS . 	400	0
1851	Payload Data	Payload Data 	400	0
1851	Pad Length	This field indicates the size of the Padding field . It does not include the Pad Length and Payload Type fields . The value typically ranges from 0 to 7 , but may be up to 255 to permit hiding of the actual data length . 	100	0
1851	Payload Type	This field indicates the contents of the Payload Data field , using the IP Protocol/Payload value . Up-to-date values of the IP Protocol/Payload are specified in the most recent " Assigned Numbers " [ RFC-1700 ]. 	231	0
1859	vrsn	vrsn 8 bits 	302	0
1859	packet length	packet length 16 bits ( min=7 , max=65535 ) 	100	0
1877	Type	Type 	240	0
1877	Length	Length 	100	0
1877	Primary-DNS-Address	The four octet Primary-DNS-Address is the address of the primary DNS server to be used by the local peer . If all four octets are set to zero , it indicates an explicit request that the peer provide the address information in a Config-Nak packet . 	230	0
1877	Type	Type 	240	0
1877	Length	Length 	100	0
1877	Primary-NBNS-Address	The four octet Primary-NBNS-Address is the address of the primary NBNS server to be used by the local peer . If all four octets are set to zero , it indicates an explicit request that the peer 	230	0
1877	Type	Type 	240	0
1877	Length	Length 	100	0
1877	Secondary-DNS-Address	The four octet Secondary-DNS-Address is the address of the primary NBNS server to be used by the local peer . If all four octets are set to zero , it indicates an explicit request that the peer provide the address information in a Config-Nak packet . 	230	0
1877	Type	Type 	240	0
1877	Length	Length 	100	0
1877	Secondary-NBNS-Address	The four octet Secondary-NBNS-Address is the address of the secondary NBNS server to be used by the local peer . If all four octets are set to zero , it indicates an explicit request that the peer provide the address information in a Config-Nak packet . 	230	0
1883	Options	Changes in the way IP header options are encoded allows for more efficient forwarding , less stringent limits on the length of options , and greater flexibility for introducing new options in the future . 	231	0
1883	Version	Version 4-bit Internet Protocol version number = 6 . 	220	0
1883	Prio .	Prio . 4-bit priority value . See section 7 . 	231	0
1883	Flow Label	Flow Label 24-bit flow label . See section 6 . 	400	0
1883	Payload Length	Payload Length 16-bit unsigned integer . Length of payload , i.e ., the rest of the packet following the IPv6 header , in octets . If zero , indicates that the payload length is carried in a Jumbo Payload hop-by-hop option . 	100	0
1883	Next Header	Next Header 8-bit selector . Identifies the type of header immediately following the IPv6 header . Uses the same values as the IPv4 Protocol field [ RFC-1700 et seq .]. 	231	0
1883	Hop Limit	Hop Limit 8-bit unsigned integer . Decremented by 1 by each node that forwards the packet . The packet is discarded if Hop Limit is decremented to zero . 	100	0
1883	Source Address	Source Address 128-bit address of the originator of the packet . See [ RFC-1884 ]. 	230	0
1883	Destination Address	Destination Address 128-bit address of the intended recipient of the packet ( possibly not the ultimate recipient , if a Routing header is present ). See [ RFC-1884 ] and section 4.4 . 	230	0
1883	Option Type	Option Type 8-bit identifier of the type of option . 	231	0
1883	Opt Data Len	Opt Data Len 8-bit unsigned integer . Length of the Option Data field of this option , in octets . 	100	0
1883	Option Data	Option Data Variable-length field . Option-Type-specific data . 	400	0
1883	1	Individual options may have specific alignment requirements , to ensure that multi-octet values within Option Data fields fall on natural boundaries . The alignment requirement of an option is specified using the notation xn+y , meaning the Option Type must appear at an integer multiple of x octets from the start of the header , plus y octets . For example : 	231	0
1883	Next Header	Next Header 8-bit selector . Identifies the type of header immediately following the Hop-by-Hop Options header . Uses the same values as the IPv4 Protocol field [ RFC-1700 et seq .]. 	231	0
1883	Hdr Ext Len	Hdr Ext Len 8-bit unsigned integer . Length of the Hop-by-Hop Options header in 8-octet units , not including the first 8 octets . 	100	0
1883	Options	Options Variable-length field , of length such that the complete Hop-by-Hop Options header is an integer multiple of 8 octets long . Contains one or more TLV-encoded options , as described in section 4.2 . 	400	0
1883	Next Header	Next Header 8-bit selector . Identifies the type of header immediately following the Routing header . Uses the same values as the IPv4 Protocol field [ RFC-1700 et seq .]. 	231	0
1883	Hdr Ext Len	Hdr Ext Len 8-bit unsigned integer . Length of the Routing header in 8-octet units , not including the first 8 octets . 	100	0
1883	Routing Type	Routing Type 8-bit identifier of a particular Routing header variant . 	231	0
1883	Segments Left	Segments Left 8-bit unsigned integer . Number of route segments remaining , i.e ., number of explicitly listed intermediate nodes still to be visited before reaching the final destination . 	100	0
1883	type-specific data	type-specific data Variable-length field , of format determined by the Routing Type , and of length such that the complete Routing header is an integer multiple of 8 octets long . 	400	0
1883	Next Header	Next Header 8-bit selector . Identifies the type of header immediately following the Routing header . Uses the same values as the IPv4 Protocol field [ RFC-1700 et seq .]. 	231	0
1883	Hdr Ext Len	Hdr Ext Len 8-bit unsigned integer . Length of the Routing header in 8-octet units , not including the first 8 octets . For the Type 0 Routing header , Hdr Ext Len is equal to two times the number of addresses in the header , and must be an even number less than or equal to 46 . 	100	0
1883	Routing Type	Routing Type 0 . 	231	0
1883	Segments Left	Segments Left 8-bit unsigned integer . Number of route segments remaining , i.e ., number of explicitly listed intermediate nodes still to be visited before reaching the final destination . Maximum legal value = 23 . 	100	0
1883	Reserved	Reserved 8-bit reserved field . Initialized to zero for transmission; ignored on reception . 	500	0
1883	Next Header	Next Header 8-bit selector . Identifies the initial header type of the Fragmentable Part of the original packet ( defined below ). Uses the same values as the IPv4 Protocol field [ RFC-1700 et seq .]. 	231	0
1883	Reserved	Reserved 8-bit reserved field . Initialized to zero for transmission; ignored on reception . 	500	0
1883	Fragment Offset	Fragment Offset 13-bit unsigned integer . The offset , in 8-octet units , of the data following this header , relative to the start of the Fragmentable Part of the original packet . 	110	0
1883	Res	Res 2-bit reserved field . Initialized to zero for transmission; ignored on reception . 	500	0
1883	Identification	Identification 32 bits . See description below . 	400	0
1883	Next Header	Next Header 8-bit selector . Identifies the type of header immediately following the Destination Options header . Uses the same values as the IPv4 Protocol field [ RFC-1700 et seq .]. 	231	0
1883	Hdr Ext Len	Hdr Ext Len 8-bit unsigned integer . Length of the Destination Options header in 8-octet units , not including the first 8 octets . 	100	0
1883	Options	Options Variable-length field , of length such that the complete Destination Options header is an integer multiple of 8 octets long . Contains one or more TLV-encoded options , as described in section 4.2 . 	400	0
1885	Type	Type 1 	240	0
1885	Unused	Unused This field is unused for all code values . It must be initialized to zero by the sender and ignored by the receiver . Description 	500	0
1885	Type	Type 2 	240	0
1885	Code	Code 0 	302	0
1885	MTU	MTU The Maximum Transmission Unit of the next-hop link . 	230	0
1885	Type	Type 3 	240	0
1885	Unused	Unused This field is unused for all code values . It must be initialized to zero by the sender and ignored by the receiver . 	500	0
1885	Type	Type 4 	240	0
1885	Pointer	Pointer Identifies the octet offset within the invoking packet where the error was detected . 	230	0
1885	Type	Type 128 	240	0
1885	Code	Code 0 	302	0
1885	Identifier	Identifier An identifier to aid in matching Echo Replies to this Echo Request . May be zero . 	231	0
1885	Sequence Number	A sequence number to aid in matching Echo Replies to this Echo Request . May be zero . 	302	0
1885	Type	Type 129 	240	0
1885	Code	Code 0 	302	0
1885	Identifier	Identifier The identifier from the invoking Echo Request message . 	231	0
1885	Code	Code 0 	302	0
1885	Maximum Response Delay	In Query messages , the maximum time that responding Report messages may be delayed , in milliseconds . 	120	0
1885	Unused	Unused Initialized to zero by the sender; ignored by receivers . 	500	0
1885	Multicast Address	The address of the multicast group about which the message is being sent . In Query messages , the Multicast Address field may be zero , implying a query for all groups . 	230	0
1889	SSRC	Synchronization source ( SSRC ): The source of a stream of RTP packets , identified by a 32-bit numeric SSRC identifier carried in the RTP header so as not to be dependent upon the network address . All packets from a synchronization source form part of the same timing and sequence number space , so a receiver groups packets by synchronization source for playback . Examples of synchronization sources include the sender of a stream of packets derived from a signal source such as a microphone or a camera , or an RTP mixer ( see below ). A synchronization source may change its data format , e.g ., audio encoding , over time . The SSRC identifier is a randomly chosen value meant to be globally unique within a particular RTP session ( see Section 8 ). A participant need not use the same SSRC identifier for all the RTP sessions in a multimedia session; the binding of the SSRC identifiers is provided through RTCP ( see Section 6.4.1 ). If a participant generates multiple streams in one RTP session , for example from separate video cameras , each must be identified as a different SSRC . 	230	0
1889	CSRC	Contributing source ( CSRC ): A source of a stream of RTP packets that has contributed to the combined stream produced by an RTP mixer ( see below ). The mixer inserts a list of the SSRC identifiers of the sources that contributed to the generation of a particular packet into the RTP header of that packet . This list is called the CSRC list . An example application is audio conferencing where a mixer indicates all the talkers whose speech was combined to produce the outgoing packet , allowing the receiver to indicate the current talker , even though all the audio packets contain the same SSRC identifier ( that of the mixer ). 	230	0
1889	V	version ( V ): 2 bits This field identifies the version of RTP . The version defined by this specification is two ( 2 ). ( The value 1 is used by the first draft version of RTP and the value 0 is used by the protocol initially implemented in the " vat " audio tool .) 	220	0
1889	P	padding ( P ): 1 bit If the padding bit is set , the packet contains one or more additional padding octets at the end which are not part of the 	231	0
1889	X	extension ( X ): 1 bit If the extension bit is set , the fixed header is followed by exactly one header extension , with a format defined in Section 5.3.1 . 	210	0
1889	CC	CSRC count ( CC ): 4 bits The CSRC count contains the number of CSRC identifiers that follow the fixed header . 	231	0
1889	M	marker ( M ): 1 bit The interpretation of the marker is defined by a profile . It is intended to allow significant events such as frame boundaries to be marked in the packet stream . A profile may define additional marker bits or specify that there is no marker bit by changing the number of bits in the payload type field ( see Section 5.3 ). 	210	0
1889	PT	payload type ( PT ): 7 bits This field identifies the format of the RTP payload and determines its interpretation by the application . A profile specifies a default static mapping of payload type codes to payload formats . Additional payload type codes may be defined dynamically through non-RTP means ( see Section 3 ). An initial set of default mappings for audio and video is specified in the companion profile Internet-Draft draft-ietf-avt-profile , and may be extended in future editions of the Assigned Numbers RFC [ 6 ]. An RTP sender emits a single RTP payload type at any given time; this field is not intended for multiplexing separate media streams ( see Section 5.2 ). 	231	0
1889	sequence number	sequence number : 16 bits The sequence number increments by one for each RTP data packet sent , and may be used by the receiver to detect packet loss and to restore packet sequence . The initial value of the sequence number is random ( unpredictable ) to make known-plaintext attacks on encryption more difficult , even if the source itself does not encrypt , because the packets may flow through a translator that does . Techniques for choosing unpredictable numbers are discussed in [ 7 ]. 	200	0
1889	timestamp	timestamp : 32 bits The timestamp reflects the sampling instant of the first octet in the RTP data packet . The sampling instant must be derived 	121	0
1889	SSRC	SSRC : 32 bits The SSRC field identifies the synchronization source . This identifier is chosen randomly , with the intent that no two synchronization sources within the same RTP session will have the same SSRC identifier . An example algorithm for generating a random identifier is presented in Appendix A.6 . Although the probability of multiple sources choosing the same identifier is low , all RTP implementations must be prepared to detect and resolve collisions . Section 8 describes the probability of collision along with a mechanism for resolving collisions and detecting RTP-level forwarding loops based on the uniqueness of the SSRC identifier . If a source changes its source transport address , it must also choose a new SSRC identifier to avoid being interpreted as a looped source . 	230	0
1889	V	version ( V ): 2 bits Identifies the version of RTP , which is the same in RTCP packets as in RTP data packets . The version defined by this specification is two ( 2 ). 	220	0
1889	P	padding ( P ): 1 bit If the padding bit is set , this RTCP packet contains some additional padding octets at the end which are not part of the control information . The last octet of the padding is a count of how many padding octets should be ignored . Padding may be needed by some encryption algorithms with fixed block sizes . In a compound RTCP packet , padding should only be required on the last individual packet because the compound packet is encrypted as a whole . 	231	0
1889	RC	reception report count ( RC ): 5 bits The number of reception report blocks contained in this packet . A value of zero is valid . 	302	0
1889	PT	packet type ( PT ): 8 bits Contains the constant 200 to identify this as an RTCP SR packet . 	231	0
1889	length	length : 16 bits The length of this RTCP packet in 32-bit words minus one , including the header and any padding . ( The offset of one makes zero a valid length and avoids a possible infinite loop in scanning a compound RTCP packet , while counting 32-bit words avoids a validity check for a multiple of 4 .) 	100	0
1889	SSRC	SSRC : 32 bits The synchronization source identifier for the originator of this SR packet . 	230	0
1889	RTP timestamp	RTP timestamp : 32 bits Corresponds to the same time as the NTP timestamp ( above ), but in the same units and with the same random offset as the RTP timestamps in data packets . This correspondence may be used for intra - and inter-media synchronization for sources whose NTP timestamps are synchronized , and may be used by media - independent receivers to estimate the nominal RTP clock frequency . Note that in most cases this timestamp will not be equal to the RTP timestamp in any adjacent data packet . Rather , it is calculated from the corresponding NTP timestamp using the relationship between the RTP timestamp counter and real time as maintained by periodically checking the wallclock time at a sampling instant . 	122	0
1889	sender's packet count	sender's packet count : 32 bits The total number of RTP data packets transmitted by the sender since starting transmission up until the time this SR packet was generated . The count is reset if the sender changes its SSRC identifier . 	231	0
1889	sender's octet count	sender's octet count : 32 bits The total number of payload octets ( i.e ., not including header or padding ) transmitted in RTP data packets by the sender since starting transmission up until the time this SR packet was generated . The count is reset if the sender changes its SSRC identifier . This field can be used to estimate the average payload data rate . 	100	0
1889	fraction lost	fraction lost : 8 bits The fraction of RTP data packets from source SSRC_n lost since the previous SR or RR packet was sent , expressed as a fixed 	302	0
1889	cumulative number of packets lost	cumulative number of packets lost : 24 bits The total number of RTP data packets from source SSRC_n that have been lost since the beginning of reception . This number is defined to be the number of packets expected less the number of packets actually received , where the number of packets received includes any which are late or duplicates . Thus packets that arrive late are not counted as lost , and the loss may be negative if there are duplicates . The number of packets expected is defined to be the extended last sequence number received , as defined next , less the initial sequence number received . This may be calculated as shown in Appendix A.3 . 	200	0
1889	extended highest sequence number received	extended highest sequence number received : 32 bits The low 16 bits contain the highest sequence number received in an RTP data packet from source SSRC_n , and the most significant 16 bits extend that sequence number with the corresponding count of sequence number cycles , which may be maintained according to the algorithm in Appendix A.1 . Note that different receivers within the same session will generate different extensions to the sequence number if their start times differ significantly . 	200	0
1889	interarrival jitter	interarrival jitter : 32 bits An estimate of the statistical variance of the RTP data packet interarrival time , measured in timestamp units and expressed as an unsigned integer . The interarrival jitter J is defined to be the mean deviation ( smoothed absolute value ) of the difference D in packet spacing at the receiver compared to the sender for a pair of packets . As shown in the equation below , this is equivalent to the difference in the " relative transit time " for the two packets; the relative transit time is the difference between a packet's RTP timestamp and the receiver's clock at the time of arrival , measured in the same units . 	122	0
1889	V	version ( V ), padding ( P ), length : As described for the SR packet ( see Section 6.3.1 ). 	220	0
1889	P	version ( V ), padding ( P ), length : As described for the SR packet ( see Section 6.3.1 ). 	220	0
1889	length	version ( V ), padding ( P ), length : As described for the SR packet ( see Section 6.3.1 ). 	220	0
1889	PT	packet type ( PT ): 8 bits Contains the constant 202 to identify this as an RTCP SDES packet . 	231	0
1889	SC	source count ( SC ): 5 bits The number of SSRC/CSRC chunks contained in this SDES packet . A value of zero is valid but useless . 	302	0
1889	V	version ( V ), padding ( P ), length : As described for the SR packet ( see Section 6.3.1 ). 	220	0
1889	P	version ( V ), padding ( P ), length : As described for the SR packet ( see Section 6.3.1 ). 	220	0
1889	length	version ( V ), padding ( P ), length : As described for the SR packet ( see Section 6.3.1 ). 	220	0
1889	PT	packet type ( PT ): 8 bits Contains the constant 203 to identify this as an RTCP BYE packet . 	231	0
1889	SC	source count ( SC ): 5 bits The number of SSRC/CSRC identifiers included in this BYE packet . A count value of zero is valid , but useless . 	231	0
1889	V	version ( V ), padding ( P ), length : As described for the SR packet ( see Section 6.3.1 ). 	220	0
1889	P	version ( V ), padding ( P ), length : As described for the SR packet ( see Section 6.3.1 ). 	220	0
1889	length	version ( V ), padding ( P ), length : As described for the SR packet ( see Section 6.3.1 ). 	220	0
1889	subtype	subtype : 5 bits May be used as a subtype to allow a set of APP packets to be defined under one unique name , or for any application-dependent data . 	231	0
1889	PT	packet type ( PT ): 8 bits Contains the constant 204 to identify this as an RTCP APP packet . 	231	0
1889	name	name : 4 octets A name chosen by the person defining the set of APP packets to be unique with respect to other APP packets this application might receive . The application creator might choose to use the application name , and then coordinate the allocation of subtype values to others who want to define new packet types for the application . Alternatively , it is recommended that others choose a name based on the entity they represent , then coordinate the use of the name within that entity . The name is interpreted as a sequence of four ASCII characters , with uppercase and lowercase characters treated as distinct . 	231	0
1934	1	[ 1 ] If set an add lock occured last timeout period so triple the timeout value ( to a max of 81 minutes ). 	302	0
1934	1	[ 2 ] Calculate number of channels to remove ( difference between number in use and number in desired ). 	400	0
1934	1	[ 2 ] Request the number of channels required . If greater than the number available after removing the number of channels indicated in the incoming message reduce the number of channels to remove and set a remove lock . 	400	0
1934	1	[ 2 ] Calculate number of channels to add ( difference between number desired and number in use ). 	400	0
1934	1	[ 2 ] If the number of channels requested will put us over the maximum number of channels allowed for the session reduce the channel count . 	302	0
1934	1	[ 2 ] If the number of channels requested will put us over the maximum number of channels allowed for the session reduce the channel count . 	302	0
1934	1	[ 2 ] If current bandwidth less than suggested band - width and removes are not locked , store the requested bandwidth and initiate a remove trans - action ( Enter Remove Action ). 	303	0
1934	A	A Initial state B Sent version request , waiting for version response . C Waiting for version request . 	220	0
1934	A	A Add request sent to answerer , waiting for add response from the answerer . B Caller waiting for call complete notification for calls placed . C Answerer waiting for add complete message from caller . 	240	0
1934	A	A Remove request sent , waiting for remove response B Remove response sent , waiting for remove complete 	240	0
1934	A	A Waiting for call complete after session down notification B Waiting for call complete after session terminate notification . C Waiting for close response after session close request sent . 	240	0
1940	Hop Count	The Hop Count field carries the maximum number of routers an SDRP data packet may traverse . It is decremented by 1 as an SDRP data packet traverses a router which forwards the packet using SDRP forwarding . Once the Hop Count field reaches the value of 0 , the router should discard the data packet and generate a control packet ( see Section 5.2.6 ). A router that receives a packet with a Hop Count value of 0 should discard the data packet , and generate a control packet ( see Section 5.2.6 ). 	400	0
1940	Source Route Identifier	The BR that originates the SDRP packet should insert a 32 bit value in this field which will serve as an identifier for the source route . This value needs to be unique only in the context of the originating BR . 	230	0
1940	Target Router	Target Router ( 4 octets ) 	301	0
1940	Prefix	The Prefix field contains an IP address prefix . Only the number of bits specified in the Prefix Length are significant . The Prefix field is used to prevent routing loops when using BGP or IDRP to route to the next AS in a loose source route ( see Section 4 ). 	231	0
1940	Source Route Change	Source Route Change ( 3 octets ) 	302	0
1953	Flow Type	Flow Type 0 is used to change the encapsulation of IPv4 packets from the default encapsulation . 	231	0
1953	Flow Type	Flow Type 1 is designed for protocols such as UDP and TCP in which the first four octets after the IPv4 header specify a Source Port number and a Destination Port number . 	231	0
1953	Flow Type	Flow Type 2 	240	0
1962	Code	Code 	231	0
1962	Identifier	On transmission , the Identifier field MUST be changed whenever the content of the Data field changes , and whenever a valid reply has been received for a previous request . For retransmissions , the Identifier MAY remain unchanged . 	301	0
1962	Type	Type 	240	0
1962	Length	Length 	100	0
1962	Subtype	This field is specific to each OUI , and indicates a compression type for that OUI . There is no standardization for this field . Each OUI implements its own values . 	231	0
1962	Type	Type 	240	0
1962	Length	Length 	100	0
1963	PPP Protocol ID	The PPP Protocol ID field is described in the Point-to-Point Protocol Encapsulation [ 1 ]. 	400	0
1963	Length	The optional Length field is present in every SDTP packet upon successful negotiation of the Length-Field-Present Configuration Option . 	100	0
1963	Port	The optional Port field is present in every SDTP packet upon successful negotiation of the Multi-Port Option . 	231	0
1963	H	H ( V.120 Terminal Adaption Header ) 	231	0
1963	Transported Data	Transported Data 	400	0
1963	Type	Type 	240	0
1963	Length	Length 	100	0
1963	Format	Format 	220	0
1963	Header-Type	This option selects the type of the Header field . The Header-Type of H-and-CS means that the CS octet will be present if indicated by the E-bit in the H-octet . The Header-Type of H-and-CS-Always signifies that both the H and CS octets are present in every packet . 	231	0
1963	Type	Type 	240	0
1963	Length	Length 	100	0
1963	Header-Type	Header-Type 	231	0
1963	Type	Type 	240	0
1963	Length	Length 	100	0
1963	Length-Size	0 No Length Field ( default ) 1 Length field of 1 octet 2 Length field of 2 octets 	100	0
1963	Type	Type 	240	0
1963	Length	Length 	100	0
1963	Max-Port-Num	The maximum port number that can be used . The number of ports present is Max-Port-Num + 1 . The value can range from 0 to 254 . 	400	0
1963	Type	Type 	240	0
1963	Length	Length 	100	0
1963	Port	Port 	231	0
1963	Mode	Mode 	302	0
1963	Maximum-Frame-Size	This parameter specifies the maximum number of octets allowed in a transported data frame . 	100	0
1963	Type	Type 	240	0
1963	Length	Length 	100	0
1963	Port	Port 	231	0
1963	Maximum-Frame-Size	The maximum allowed length of a transported data frame in octets . Default is 10,000 . Negotiable range is 1 to 2**31 - 1 . The value 0 is reserved to mean no limit . This field is transmitted most significant octet first . 	100	0
1963	Type	Type 	240	0
1963	Length	Length 	100	0
1963	Port	Port 	302	0
1963	FCS-Type	By default , the transported data frame FCS is transported . This option allows the FCS to be removed by the transmitter and regenerated by the receiver . 	400	0
1963	Type	Type 	240	0
1963	Length	Length 	100	0
1963	Port	Port 	302	0
1963	FCS-Type	0 Transparent-Transport ( Default ) 1 16-bit ITU-T CRC 2 32-bit ITU-T CRC 	240	0
1963	Flow-Expiration-Time	As described in section 2.2 , Flow-Off messages expire after T1 seconds . By default , T1 is 10 seconds . This configuration option allows the value of T1 to be changed . 	201	0
1963	Type	Type 	240	0
1963	Length	Length 	100	0
1963	Flow-Expiration-Time	The Flow-Expiration-Time field contains a 16 bit unsigned integer which is used to specify the value to be assigned to T1 as follows : T1 = Flow-Expiration-Time / 10 seconds . Therefore this value is in units of 1/10 of a second , with allowable values from 1 to 2^16-1 ( 0.1 to 6553.5 seconds ). It is transmitted most significant octet first . The default value is 100 ( 10 seconds ), which all must support . 	110	0
1967	PPP Protocol	The PPP Protocol field is described in the Point-to-Point Protocol Encapsulation [ 1 ]. 	400	0
1967	DCP-Header	The DCP-Header is nominally one octet in length , but may be extended through the use of the extension bit . 	231	0
1967	Type	Type 	240	0
1967	Length	Length 	100	0
1967	History Count	The History Count field is two octets , most significant octet first , and specifies the maximum number of Compression Histories . 	100	0
1967	Check Mode	The Check Mode indicates support of LCB and/or Sequence checking . The use of check mode None ( 0 ) MUST NOT be used for history counts greater than zero . 	302	0
1967	Process Mode	The Process Mode specifies how uncompressed packets are handled . A value of None ( 0 ) indicates that uncompressed packets are not processed by the decompressor . A value of Process-Uncompressed 	210	0
1968	Code	Code 	231	0
1968	Identifier	On transmission , the Identifier field MUST be changed whenever the content of the Data field changes , and whenever a valid reply has been received for a previous request . For retransmissions , the Identifier SHOULD remain unchanged . 	301	0
1968	Type	Type 	240	0
1968	Length	Length 	100	0
1968	Subtype	This field is specific to each OUI , and indicates an encryption type for that OUI . There is no standardisation for this field . Each OUI implements its own values . 	231	0
1968	Type	1 to 254 , indicating the encryption protocol option being negotiated . DESE [ 6 ] is option type 1 . Refer to the latest Assigned Numbers RFC for other encryption protocols . 	231	0
1968	Length	Length 	100	0
1969	Type	Type 	240	0
1969	Length	Length 	100	0
1969	Address	These fields MUST be present unless the PPP Address and Control Field Compression option ( ACFC ) has been negotiated . 	400	0
1969	Control	These fields MUST be present unless the PPP Address and Control Field Compression option ( ACFC ) has been negotiated . 	400	0
1969	Protocol ID	The value of this field is 0x53 or 0x55; the latter indicates that ciphertext includes headers for the Multilink Protocol , and REQUIRES that the Individual Link Encryption Control Protocol has reached the opened state . The leading zero MAY be absent if the PPP Protocol Field Compression option ( PFC ) has been negotiated . 	302	0
1970	MTU	variable MTU - a link that does not have a well-defined MTU ( e.g ., IEEE 802.5 token rings ). Many links ( e.g ., Ethernet ) have a standard MTU defined by the link - layer protocol or by the specific document describing how to run IP over the link layer . 	400	0
1970	MTU	variable MTU - Neighbor Discovery allows routers to specify a MTU for the link , which all nodes then use . All nodes on a link must use the same MTU ( or Maximum Receive Unit ) in order for multicast to work properly . Otherwise when multicasting a sender , which can not know which nodes will receive the packet , could not determine a minimum packet size all receivers can process . 	400	0
1970	Type	Type 133 	240	0
1970	Code	Code 0 	302	0
1970	Checksum	Checksum The ICMP checksum . See [ ICMPv6 ]. 	301	0
1970	Reserved	Reserved This field is unused . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
1970	Type	Type 134 	240	0
1970	Code	Code 0 	302	0
1970	Checksum	Checksum The ICMP checksum . See [ ICMPv6 ]. 	301	0
1970	Cur Hop Limit	Cur Hop Limit 8-bit unsigned integer . The default value that should be placed in the Hop Count field of the IP header for outgoing IP packets . A value of zero means unspecified ( by this router ). 	231	0
1970	M	M 1-bit " Managed address configuration " flag . When set , hosts use the administered ( stateful ) protocol for address autoconfiguration in addition to any addresses autoconfigured using stateless address autoconfiguration . The use of this flag is described in [ ADDRCONF ]. 	231	0
1970	O	O 1-bit " Other stateful configuration " flag . When set , hosts use the administered ( stateful ) protocol for autoconfiguration of other ( non-address ) information . The use of this flag is described in [ ADDRCONF ]. 	231	0
1970	Reserved	Reserved A 6-bit unused field . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
1970	Retrans Timer	Retrans Timer 32-bit unsigned integer . The time , in milliseconds , between retransmitted Neighbor Solicitation messages . Used by address resolution and the Neighbor Unreachability Detection algorithm ( see Sections 7.2 and 7.3 ). A value of zero means unspecified ( by this router ). 	120	0
1970	MTU	MTU SHOULD be sent on links that have a variable MTU ( as specified in the document that describes how to run IP over the particular link type ). MAY be sent on other links . 	301	0
1970	Type	Type 135 	220	0
1970	Code	Code 0 	302	0
1970	Checksum	Checksum The ICMP checksum . See [ ICMPv6 ]. 	301	0
1970	Reserved	Reserved This field is unused . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
1970	Type	Type 136 	220	0
1970	Code	Code 0 	302	0
1970	Checksum	Checksum The ICMP checksum . See [ ICMPv6 ]. 	301	0
1970	R	R Router flag . When set , the R-bit indicates that the sender is a router . The R-bit is used by Neighbor Unreachability Detection to detect a router that changes to a host . 	210	0
1970	S	S Solicited flag . When set , the S-bit indicates that the advertisement was sent in response to a Neighbor Solicitation from the Destination address . The S-bit is used as a reachability confirmation for Neighbor Unreachability Detection . It MUST NOT be set in multicast advertisements or in unsolicited unicast advertisements . 	210	0
1970	O	O Override flag . When set , the O-bit indicates that the advertisement should override an existing cache entry and update the cached link-layer address . When it is not set the advertisement will not update a cached link-layer address though it will update an existing Neighbor Cache entry for which no link-layer address is known . It SHOULD NOT be set in solicited advertisements for anycast addresses and in solicited proxy advertisements . It SHOULD be set in other solicited advertisements and in unsolicited advertisements . 	210	0
1970	Reserved	Reserved 29-bit unused field . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
1970	Type	Type 137 	220	0
1970	Code	Code 0 	302	0
1970	Checksum	Checksum The ICMP checksum . See [ ICMPv6 ]. 	301	0
1970	Reserved	Reserved This field is unused . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
1970	Type	Type 8-bit identifier of the type of option . The options defined in this document are : 	231	0
1970	Length	Length 8-bit unsigned integer . The length of the option in units of 8 octets . The value 0 is invalid . Nodes MUST silently discard an ND packet that contains an option with length zero . 	100	0
1970	Length	Length The length of the option in units of 8 octets . For example , the length for IEEE 802 addresses is 1 [ IPv6-ETHER ]. 	100	0
1970	Type	Type 3 	240	0
1970	Length	Length 4 	100	0
1970	Prefix Length	Prefix Length 8-bit unsigned integer . The number of leading bits in the Prefix that are valid . The value ranges from 0 to 128 . 	100	0
1970	L	L 1-bit on-link flag . When set , indicates that this prefix can be used for on-link determination . When not set the advertisement makes no statement about on-link or off-link properties of the prefix . For instance , the prefix might be used for address configuration with some of the addresses belonging to the prefix being on-link and others being off-link . 	210	0
1970	A	A 1-bit autonomous address-configuration flag . When set indicates that this prefix can be used for autonomous address configuration as specified in [ ADDRCONF ]. 	231	0
1970	Reserved	Reserved1 6-bit unused field . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
1970	Reserved	Reserved2 This field is unused . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
1970	Prefix	Prefix An IP address or a prefix of an IP address . The Prefix Length field contains the number of valid leading bits in the prefix . The bits in the prefix after the prefix length are reserved and MUST be initialized to zero by the sender and ignored by the receiver . A router SHOULD NOT send a prefix option for the link-local prefix and a host SHOULD ignore such a prefix option . 	230	0
1970	Type	Type 4 	240	0
1970	Length	Length The length of the option in units of 8 octets . 	100	0
1970	Reserved	Reserved These fields are unused . They MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
1970	MTU	4.6.4 . MTU 	240	0
1970	Type	Type 5 	240	0
1970	Length	Length 1 	100	0
1970	Reserved	Reserved This field is unused . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
1970	MTU	MTU 32-bit unsigned integer . The recommended MTU for the link . 	100	0
1974	Code	Code 	231	0
1974	Identifier	On transmission , the Identifier field MUST be changed whenever the content of the Data field changes , and whenever a valid reply has 	301	0
1974	Data	The Data field contains the two octet History Number of the compression history that is to be reset , most significant octet first . This History Number value is 1 when no history number is present . 	230	0
1974	PPP Protocol	The PPP Protocol field is a 2 octet field described in the Point - to-Point Protocol Encapsulation [ 1 ]. 	400	0
1974	Type	Type 	240	0
1974	Length	Length 	100	0
1974	History Count	The History Count field is two octets , most significant octet first , and specifies the maximum number of Compression Histories . 	100	0
1974	Check Mode	The Check Mode field indicates support of LCB , CRC or Sequence checking , and other future extensions to this standard . This field comprises 2 sub-fields , and is considered to be bit-mapped . The 3 least significant bits comprise 5 mutually exclusive values . The upper 5 bits are all " Reserved " bit locations must be set to " 0 " to allow for future backward-compatible extensions to this standard . 	231	0
1974	PPP Protocol	The PPP Protocol field is described in the Point-to-Point Protocol Encapsulation [ 1 ]. 	400	0
1974	Coherency Count	The coherency count is used to assure that the packets are sent in proper order and that no packet has been dropped . This count is initialized to the value 0x000 , and is always increased by 1 after each PPP packet is sent . When all bits are 1 , the count returns to 0 . 	201	0
1975	C	When attempting to compress certain types of Packets or Fragments the compressor may not be effective . When this occurs the uncompressed data is added to the compression History Buffer and sent across the link in frame with the Compressed/Uncompressed Flag(C ) set to 0 . 	301	0
1975	CID	Since PPP will transport multiple protocol datagrams it may be advantageous to compress each protocol or each virtual circuit in a different History Buffer or Context . The CID allows the compressor to indicate to the decompressor which History Buffer the compressor decided to use for a given Packet . The basis of this decision is up to the implementor . The number of buffers and size of each buffer is negotiated . 	230	0
1975	PIB	To ensure that Packets are being compressed and decompressed correctly and to ensure History Buffer synchronization is maintained , a Packet Integrity Byte is added to the packet header . 	301	0
1975	Type	Type 	240	0
1975	Length	Length 	100	0
1975	FE	FE - Features 	400	0
1975	History	Defines the size of the compression history buffer . Valid values are defined in the full protocol specification . 	100	0
1975	# Contexts	This is the number of contexts . Each context implies the creation of a History Buffer for that context of the size indicated in the Context History field . Values are 1-63 . This value includes both the Packet by Packet context and the number of contexts for which history is maintained . Therefore , when this value is 1 and the P ( Packet by Packet ) flag is also 1 , then only in packet compression is supported and history context is not retained across packet boundaries . The Context Identifier ( CID ) starts with 1 for contexts where the history is maintained . 	400	0
1975	P	When 1 , packet by packet compression is enabled for the context whose context ID is 0 . When P is 0 , packet by packet compression is not supported . 	210	0
1976	Type	Type 	240	0
1976	Length	Length 	100	0
1976	Mode	1 Mode-1 ( No Additional Negotiation ) 2 Mode-2 ( Full PPP Negotiation and State Machine ) 	240	0
1976	Mode	Mode-1 devices use LZS-DCP Compression Packets as specified in [ 4 ]. These packets include the capabilities of DCP : Reset-Request and Acknowledge , Compressed/Transparent , etc . Since the packets include signalling , these packets can be sent with an empty data field to signal a reset request if no data packets are ready for piggy-backed signalling . 	400	0
1977	PPP Protocol	The PPP Protocol field is described in the Point-to-Point Protocol Encapsulation [ 1 ]. 	400	0
1977	Sequence	The sequence number is sent most significant octet first . It starts at 0 when the dictionary is cleared , and is incremented by 1 after each packet , including uncompressed packets . The sequence number after 65535 is zero . In other words , the sequence number " wraps " in the usual way . 	200	0
1977	Type	Type 	240	0
1977	Length	Length 	100	0
1977	Vers	Vers 	302	0
1977	Dict	The size in bits of the largest code used . It can range from 9 to 16 . A common choice is 12 . The code included below can support code sizes from 9 to 15 . 	100	0
1979	PPP Protocol	The PPP Protocol field is described in the Point-to-Point Protocol Encapsulation [ 1 ]. 	400	0
1979	Sequence	The sequence number is sent most significant octet first . It starts at 0 when the dictionary is cleared , and is incremented by 1 for each packet , including uncompressed packets . The sequence number after 65535 is zero . In other words , the sequence number " wraps " in the usual way . 	200	0
1979	Type	Type 	240	0
1979	Length	Length 	100	0
1979	Window	Represents the maximum window size the decompressor is willing to allocate; expressed as the base-2 logarithm of the LZ77 window size , minus 8 . ' Deflate ' compliant decompressors must be willing to accept the maximum 32KB window size , represented by a value of 7 . A ' deflate ' compliant compressor is at liberty to use a reduced window size , so a PPP Deflate compressor MUST either honor the restriction requested or reject the option . 	100	0
1979	Method	Must be the binary number 1000 . Represents the ' zlib ' Compression Method identifier of ' 8 ' for ' deflate ' compression with up to 32K window size . 	200	0
1979	MBZ	MBZ 	302	0
1979	Chk	Chk 	240	0
1989	Type	Type 	240	0
1989	Length	Length 	100	0
1989	Quality-Protocol	Quality-Protocol 	400	0
1989	Reporting-Period	The Reporting-Period field is four octets and indicates the maximum time in hundredths of seconds between transmission of packets . The peer MAY transmit packets at a faster rate than that which was negotiated . 	120	0
1989	Magic-Number	The Magic-Number field is four octets and aids in detecting links which are in the looped-back condition . Unless modified by a Configuration Option , the Magic-Number MUST be transmitted as zero and MUST be ignored on reception . If Magic-Numbers have been negotiated , incoming LQR packets SHOULD be checked to ensure that the local end is not seeing its own Magic-Number and thus a looped-back link . See the Magic-Number Configuration Option for further explanation . 	302	0
1989	LastOutLQRs	The LastOutLQRs field is four octets , and is copied from the most recently received PeerOutLQRs on transmission . 	231	0
1989	LastOutPackets	The LastOutPackets field is four octets , and is copied from the most recently received PeerOutPackets on transmission . 	231	0
1989	LastOutOctets	The LastOutOctets field is four octets , and is copied from the most recently received PeerOutOctets on transmission . 	231	0
1989	PeerInLQRs	The PeerInLQRs field is four octets , and is copied from the most recently received SaveInLQRs on transmission . 	231	0
1989	PeerInPackets	The PeerInPackets field is four octets , and is copied from the most recently received SaveInPackets on transmission . 	231	0
1989	PeerInDiscards	The PeerInDiscards field is four octets , and is copied from the most recently received SaveInDiscards on transmission . 	231	0
1989	PeerInErrors	The PeerInErrors field is four octets , and is copied from the most recently received SaveInErrors on transmission . 	231	0
1989	PeerInOctets	The PeerInOctets field is four octets , and is copied from the most recently received SaveInOctets on transmission . 	231	0
1989	PeerOutLQRs	The PeerOutLQRs field is four octets , and is copied from OutLQRs on transmission . This number MUST include this LQR . 	231	0
1989	PeerOutPackets	The PeerOutPackets field is four octets , and is copied from the current MIB ifOutUniPackets and ifOutNUniPackets on transmission . This number MUST include this LQR . 	231	0
1989	PeerOutOctets	The PeerOutOctets field is four octets , and is copied from the current MIB ifOutOctets on transmission . This number MUST include this LQR . 	231	0
1989	SaveInLQRs	The SaveInLQRs field is four octets , and is copied from InLQRs on reception . This number MUST include this LQR . 	400	0
1989	SaveInPackets	The SaveInPackets field is four octets , and is copied from the current MIB ifInUniPackets and ifInNUniPackets on reception . This number MUST include this LQR . 	231	0
1989	SaveInDiscards	The SaveInDiscards field is four octets , and is copied from the current MIB ifInDiscards on reception . This number MUST include this LQR . 	231	0
1989	SaveInErrors	The SaveInErrors field is four octets , and is copied from the current MIB ifInErrors on reception . This number MUST include this LQR . 	231	0
1989	SaveInOctets	The SaveInOctets field is four octets , and is copied from the current InGoodOctets on reception . This number MUST include this LQR . 	231	0
1993	PPP Protocol	One or two octets . The PPP Protocol field is described in the Point-to-Point Protocol Encapsulation [ 1 ]. 	400	0
1993	Type	Type 	240	0
1993	Length	Length 	100	0
1993	History	One octet . The History field specifies the maximum size of the compression history in powers of 2 . Valid values range from 12 to 15 . 	100	0
1994	Type	Type 	240	0
1994	Length	Length 	100	0
1994	Authentication-Protocol	Authentication-Protocol 	400	0
1994	Algorithm	The Algorithm field is one octet and indicates the authentication method to be used . Up-to-date values are specified in the most recent " Assigned Numbers " [ 2 ]. One value is required to be implemented : 	301	0
1994	Code	The Code field is one octet and identifies the type of CHAP packet . CHAP Codes are assigned as follows : 	231	0
1994	Identifier	The Identifier field is one octet and aids in matching challenges , responses and replies . 	301	0
1994	Length	The Length field is two octets and indicates the length of the CHAP packet including the Code , Identifier , Length and Data fields . Octets outside the range of the Length field should be treated as Data Link Layer padding and should be ignored on reception . 	100	0
1994	Code	Code 	231	0
1994	Identifier	The Identifier field is one octet . The Identifier field MUST be changed each time a Challenge is sent . 	301	0
1994	Value-Size	Value-Size 	231	0
1994	Code	Code 	231	0
1994	Identifier	The Identifier field is one octet and aids in matching requests and replies . The Identifier field MUST be copied from the Identifier field of the Response which caused this reply . 	301	0
2002	Home Agent	A router on a mobile node's home network which tunnels datagrams for delivery to the mobile node when it is away from home , and maintains current location information for the mobile node . 	230	0
2002	Type	Type Indicates the particular type of Extension . 	231	0
2002	Length	Length Indicates the length ( in bytes ) of the data field within this Extension . The length does NOT include the Type and Length bytes . 	100	0
2002	Type	Type 16 	240	0
2002	Length	Length ( 6 + 4*N ), where N is the number of care-of addresses advertised . 	100	0
2002	R	R Registration required . Registration with this foreign agent ( or another foreign agent on this link ) is required rather than using a co-located care-of address . 	302	0
2002	B	B Busy . The foreign agent will not accept registrations from additional mobile nodes . 	302	0
2002	H	H Home agent . This agent offers service as a home agent on the link on which this Agent Advertisement message is sent . 	230	0
2002	F	F Foreign agent . This agent offers service as a foreign agent on the link on which this Agent Advertisement message is sent . 	230	0
2002	M	M Minimal encapsulation . This agent implements receiving tunneled datagrams that use minimal encapsulation [ 15 ]. 	400	0
2002	G	G GRE encapsulation . This agent implements receiving tunneled datagrams that use GRE encapsulation [ 8 ]. 	400	0
2002	V	V Van Jacobson header compression . This agent supports use of Van Jacobson header compression [ 10 ] over the link with any registered mobile node . 	400	0
2002	Type	Type 19 ( Prefix-Lengths Extension ) 	100	0
2002	Length	Length N , where N is the value of the Num Addrs field in the ICMP Router Advertisement portion of the Agent Advertisement . 	100	0
2002	Type	Type 1 ( Registration Request ) 	240	0
2002	S	S Simultaneous bindings . If the ' S ' bit is set , the mobile node is requesting that the home agent retain its prior mobility bindings , as described in Section 3.6.1.2 . 	210	0
2002	B	B Broadcast datagrams . If the ' B ' bit is set , the mobile node requests that the home agent tunnel to it any broadcast datagrams that it receives on the home network , as described in Section 4.3 . 	210	0
2002	D	D Decapsulation by mobile node . If the ' D ' bit is set , the mobile node will itself decapsulate datagrams which are sent to the care-of address . That is , the mobile node is using a co-located care-of address . 	301	0
2002	M	M Minimal encapsulation . If the ' M ' bit is set , the mobile node requests that its home agent use minimal encapsulation [ 15 ] for datagrams tunneled to the mobile node . 	400	0
2002	G	G GRE encapsulation . If the ' G ' bit is set , the mobile node requests that its home agent use GRE encapsulation [ 8 ] for datagrams tunneled to the mobile node . 	400	0
2002	V	V The mobile node requests that its mobility agent use Van Jacobson header compression [ 10 ] over its link with the mobile node . 	302	0
2002	rsv	rsv Reserved bits; sent as zero 	201	0
2002	Type	Type 3 ( Registration Reply ) 	231	0
2002	Code	Code A value indicating the result of the Registration Request . See below for a list of currently defined Code values . 	231	0
2002	Type	Type 32 	240	0
2002	Length	Length 4 plus the number of bytes in the Authenticator . 	100	0
2002	Type	Type 33 	240	0
2002	Length	Length 4 plus the number of bytes in the Authenticator . 	100	0
2002	Type	Type 34 	240	0
2002	Length	Length 4 plus the number of bytes in the Authenticator . 	100	0
2002	Code	In this case , the Lifetime field in the Registration Reply will contain the maximum Lifetime value which that foreign agent is willing to accept in any Registration Request . The mobile node MAY attempt to register with this same agent , using a Lifetime in the Registration Request that MUST be less than or equal to the value specified in the Reply . 	230	0
2002	Code	In this case , the Identification field in the Registration Reply will contain a value that allows the mobile node to synchronize with the home agent , based upon the style of replay protection in effect ( Section 5.6 ). The mobile node MUST adjust the parameters it uses to compute the Identification field based upon the information in the Registration Reply , before issuing any future Registration Requests . 	230	0
2002	Code	This code is returned by a home agent when the mobile node is performing dynamic home agent address resolution as described in Sections 3.6.1.1 and 3.6.1.2 . In this case , the Home Agent field within the Reply will contain the unicast IP address of the home agent returning the Reply . The mobile node MAY then attempt to register with this home agent in future Registration Requests . In addition , the mobile node SHOULD adjust the parameters it uses to compute the Identification field based upon the corresponding field in the Registration Reply , before issuing any future Registration Requests . 	230	0
2004	Protocol	Protocol 	400	0
2004	S	0 The Original Source Address field is not present . The length of the minimal tunneling header in this case is 8 octets . 	100	0
2004	reserved	reserved 	500	0
2004	Header Checksum	The 16-bit one's complement of the one's complement sum of all 16-bit words in the minimal forwarding header . For purposes of computing the checksum , the value of the checksum field is 0 . The IP header and IP payload ( after the minimal forwarding header ) are not included in this checksum computation . 	301	0
2004	Original Destination Address	Original Destination Address 	230	0
2023	Interface-Token	4.1 . Interface-Token 	240	0
2023	Type	Type 	240	0
2023	Length	Length 	100	0
2023	Interface-Token	The 32-bit Interface-Token which is very likely to be unique on the link or zero if a good source of uniqueness can not be found . 	303	0
2023	IPv6-Compression-Protocol	4.2 . IPv6-Compression-Protocol 	240	0
2023	Type	Type 	240	0
2023	Length	Length 	100	0
2023	IPv6-Compression-Protocol	The IPv6-Compression-Protocol field is two octets and indicates the compression protocol desired . Values for this field are always the same as the PPP Data Link Layer Protocol field values for that same compression protocol . 	231	0
2023	Interface-Token	Interface-Token 	400	0
2023	IPv6-Compression-Protocol	IPv6-Compression-Protocol 	400	0
2030	LI	Leap Indicator ( LI ): This is a two-bit code warning of an impending leap second to be inserted/deleted in the last minute of the current day , with bit 0 and bit 1 , respectively , coded as follows : 	210	0
2030	VN	Version Number ( VN ): This is a three-bit integer indicating the NTP/SNTP version number . The version number is 3 for Version 3 ( IPv4 only ) and 4 for Version 4 ( IPv4 , IPv6 and OSI ). If necessary to distinguish between IPv4 , IPv6 and OSI , the encapsulating context must be inspected . 	220	0
2030	Mode	Mode : This is a three-bit integer indicating the mode , with values defined as follows : 	240	0
2030	Stratum	Stratum : This is a eight-bit unsigned integer indicating the stratum level of the local clock , with values defined as follows : 	121	0
2030	Precision	Precision : This is an eight-bit signed integer indicating the precision of the local clock , in seconds to the nearest power of two . The values that normally appear in this field range from - 6 for mains-frequency clocks to - 20 for microsecond clocks found in some workstations . 	121	0
2030	Root Delay	Root Delay : This is a 32-bit signed fixed-point number indicating the total roundtrip delay to the primary reference source , in seconds with fraction point between bits 15 and 16 . Note that this variable can take on both positive and negative values , depending on the relative time and frequency offsets . The values that normally appear in this field range from negative values of a few milliseconds to positive values of several hundred milliseconds . 	122	0
2030	Root Dispersion	Root Dispersion : This is a 32-bit unsigned fixed-point number indicating the nominal error relative to the primary reference source , in seconds with fraction point between bits 15 and 16 . The values that normally appear in this field range from 0 to several hundred milliseconds . 	110	0
2030	Reference Identifier	Reference Identifier : This is a 32-bit bitstring identifying the particular reference source . In the case of NTP Version 3 or Version 4 stratum-0 ( unspecified ) or stratum-1 ( primary ) servers , this is a four-character ASCII string , left justified and zero padded to 32 bits . In NTP Version 3 secondary servers , this is the 32-bit IPv4 address of the reference source . In NTP Version 4 secondary servers , this is the low order 32 bits of the latest transmit timestamp of the reference source . NTP primary ( stratum 1 ) servers should set this field to a code identifying the external reference source according to the following list . If the external reference is one of those listed , the associated code should be used . Codes for sources not listed can be contrived as appropriate . 	230	0
2032	SBIT	Start bit position ( SBIT ): 3 bits Number of most significant bits that should be ignored in the first data octet . 	231	0
2032	EBIT	End bit position ( EBIT ): 3 bits Number of least significant bits that should be ignored in the last data octet . 	231	0
2032	V	Motion Vector flag ( V ): 1 bit Set to 0 if motion vectors are not used in this stream . Set to 1 if motion vectors may or may not be used in this stream . The sense of this bit may not change during the course of the session . 	210	0
2032	GOBN	GOB number ( GOBN ): 4 bits Encodes the GOB number in effect at the start of the packet . Set to 0 if the packet begins with a GOB header . 	302	0
2032	MBAP	Macroblock address predictor ( MBAP ): 5 bits Encodes the macroblock address predictor ( i.e . the last MBA encoded in the previous packet ). This predictor ranges from 0-32 ( to predict the valid MBAs 1-33 ), but because the bit stream cannot be fragmented between a GOB header and MB 1 , the predictor at the start of the packet can never be 0 . Therefore , the range is 1-32 , which is biased by - 1 to fit in 5 bits . For example , if MBAP is 0 , the value of the MBA predictor is 1 . Set to 0 if the packet begins with a GOB header . 	230	0
2032	QUANT	Quantizer ( QUANT ): 5 bits Quantizer value ( MQUANT or GQUANT ) in effect prior to the start of this packet . Set to 0 if the packet begins with a GOB header . 	302	0
2032	HMVD	Horizontal motion vector data ( HMVD ): 5 bits Reference horizontal motion vector data ( MVD ). Set to 0 if V flag is 0 or if the packet begins with a GOB header , or when the MTYPE of the last MB encoded in the previous packet was not MC . HMVD is encoded as a 2's complement number , and ` 10000 ' corresponding to the value - 16 is forbidden ( motion vector fields range from +/- 15 ). 	210	0
2032	VMVD	Vertical motion vector data ( VMVD ): 5 bits Reference vertical motion vector data ( MVD ). Set to 0 if V flag is 0 or if the packet begins with a GOB header , or when the MTYPE of the last MB encoded in the previous packet was not MC . VMVD is encoded as a 2's complement number , and ` 10000 ' corresponding to the value - 16 is forbidden ( motion vector fields range from +/- 15 ). 	210	0
2032	FSN	First Sequence Number ( FSN ): 16 bits Identifies the first sequence number lost . 	200	0
2032	BLP	Bitmask of following lost packets ( BLP ): 16 bits A bit is set to 1 if the corresponding packet has been lost , and set to 0 otherwise . BLP is set to 0 only if no packet other than that being NACKed ( using the FSN field ) has been lost . BLP is set to 0x00001 if the packet corresponding to the FSN and the following packet have been lost , etc . 	210	0
2035	Type specific	3.1.1 . Type specific : 8 bits 	231	0
2035	Fragment Offset	The Fragment Offset is the data offset in bytes of the current packet in the JPEG scan . 	110	0
2035	Type	The type field specifies the information that would otherwise be present in a JPEG abbreviated table-specification as well as the additional JFIF-style parameters not defined by JPEG . Types 0-127 are reserved as fixed , well-known mappings to be defined by this document and future revisions of this document . Types 128-255 are free to be dynamically defined by a session setup protocol ( which is beyond the scope of this document ). 	231	0
2035	Q	The Q field defines the quantization tables for this frame using an algorithm that determined by the Type field ( see below ). 	200	0
2035	Width	This field encodes the width of the image in 8-pixel multiples ( e.g ., a width of 40 denotes an image 320 pixels wide ). 	100	0
2035	Height	This field encodes the height of the image in 8-pixel multiples ( e.g ., a height of 30 denotes an image 240 pixels tall ). 	100	0
2038	MBZ	MBZ : Unused . Must be set to zero in current specification . This space is reserved for future use . 	500	0
2038	TR	TR : Temporal-Reference ( 10 bits ). The temporal reference of the current picture within the current GOP . This value ranges from 0-1023 and is constant for all RTP packets of a given picture . 	230	0
2038	MBZ	MBZ : Unused . Must be set to zero in current specification . This space is reserved for future use . 	500	0
2038	S	S : Sequence-header-present ( 1 bit ). Normally 0 and set to 1 at the occurrence of each MPEG sequence header . Used to detect presence of sequence header in RTP packet . 	210	0
2038	B	B : Beginning-of-slice ( BS ) ( 1 bit ). Set when the start of the packet payload is a slice start code , or when a slice start code is preceded only by one or more of a Video_Sequence_Header , GOP_header and/or Picture_Header . 	210	0
2038	E	E : End-of-slice ( ES ) ( 1 bit ). Set when the last byte of the payload is the end of an MPEG slice . 	210	0
2038	P	P : Picture-Type ( 3 bits ). I ( 1 ), P ( 2 ), B ( 3 ) or D ( 4 ). This value is constant for each RTP packet of a given picture . Value 000B is forbidden and 101B - 111B are reserved to support future extensions to the MPEG ES specification . 	240	0
2038	Frag_offset	Frag_offset : Byte offset into the audio frame for the data in this packet . 	110	0
2058	Code	The Code field is one octet , and identifies the type of RADIUS packet . When a packet is received with an invalid Code field , it is silently discarded . 	231	0
2058	Identifier	The Identifier field is one octet , and aids in matching requests and replies . 	301	0
2058	Length	The Length field is two octets . It indicates the length of the packet including the Code , Identifier , Length , Authenticator and Attribute fields . Octets outside the range of the Length field should be treated as padding and should be ignored on reception . If the packet is shorter than the Length field indicates , it should be silently discarded . The minimum length is 20 and maximum length is 4096 . 	100	0
2058	Authenticator	The Authenticator field is sixteen ( 16 ) octets . The most significant octet is transmitted first . This value is used to authenticate the reply from the RADIUS server , and is used in the password hiding algorithm . 	301	0
2058	Request Authenticator	In Access-Request Packets , the Authenticator value is a 16 octet random number , called the Request Authenticator . The value SHOULD be unpredictable and unique over the lifetime of a secret ( the password shared between the client and the RADIUS server ), since repetition of a request value in conjunction with the same secret would permit an attacker to reply with a previously intercepted response . Since it is expected that the same secret MAY be used to authenticate with servers in disparate geographic regions , the Request Authenticator field SHOULD exhibit global and temporal uniqueness . 	230	0
2058	Response Authenticator	The value of the Authenticator field in Access-Accept , Access - Reject , and Access-Challenge packets is called the Response Authenticator , and contains a one-way MD5 hash calculated over a stream of octets consisting of : the RADIUS packet , beginning with the Code field , including the Identifier , the Length , the Request Authenticator field from the Access-Request packet , and the response Attributes , followed by the shared secret . That is , ResponseAuth = MD5(Code+ID+Length+RequestAuth+Attributes+Secret ) where + denotes concatenation . 	231	0
2058	Code	Code 	231	0
2058	Identifier	The Identifier field MUST be changed whenever the content of the Attributes field changes , and whenever a valid reply has been received for a previous request . For retransmissions , the Identifier MUST remain unchanged . 	301	0
2058	Request Authenticator	The Request Authenticator value MUST be changed each time a new Identifier is used . 	301	0
2058	Code	Code 	231	0
2058	Identifier	The Identifier field is a copy of the Identifier field of the Access-Request which caused this Access-Accept . 	301	0
2058	Response Authenticator	The Response Authenticator value is calculated from the Access - Request value , as described earlier . 	400	0
2058	Code	Code 	231	0
2058	Identifier	The Identifier field is a copy of the Identifier field of the Access-Request which caused this Access-Reject . 	301	0
2058	Response Authenticator	The Response Authenticator value is calculated from the Access - Request value , as described earlier . 	400	0
2058	Code	Code 	231	0
2058	Identifier	The Identifier field is a copy of the Identifier field of the Access-Request which caused this Access-Challenge . 	301	0
2058	Response Authenticator	The Response Authenticator value is calculated from the Access - Request value , as described earlier . 	400	0
2058	Type	The Type field is one octet . Up-to-date values of the RADIUS Type field are specified in the most recent " Assigned Numbers " RFC [ 3 ]. Values 192-223 are reserved for experimental use , values 224-240 are reserved for implementation-specific use , and values 241-255 are reserved and should not be used . This specification concerns the following values : 	231	0
2058	Length	The Length field is one octet , and indicates the length of this Attribute including the Type , Length and Value fields . If an Attribute is received in an Access-Request but with an invalid Length , an Access-Reject SHOULD be transmitted . If an Attribute is received in an Access-Accept , Access-Reject or Access-Challenge packet with an invalid length , the packet MUST either be treated as an Access-Reject or else silently discarded . 	100	0
2058	Value	The Value field is zero or more octets and contains information specific to the Attribute . The format and length of the Value field is determined by the Type and Length fields . 	400	0
2058	Type	Type 	240	0
2058	Length	Length 	100	0
2058	Type	Type 	240	0
2058	Length	Length 	100	0
2058	Type	Type 	240	0
2058	Length	Length 	100	0
2058	CHAP Ident	This field is one octet , and contains the CHAP Identifier from the user's CHAP Response . 	231	0
2058	Type	Type 	240	0
2058	Length	Length 	100	0
2058	Address	Address 	202	0
2058	Type	Type 	240	0
2058	Length	Length 	100	0
2058	Value	The Value field is four octets . Despite the size of the field , values range from 0 to 65535 . 	100	0
2058	Type	Type 	240	0
2058	Length	Length 	100	0
2058	Value	Value 	400	0
2058	Type	Type 	240	0
2058	Length	Length 	100	0
2058	Value	Value 	400	0
2058	Type	Type 	240	0
2058	Length	Length 	100	0
2058	Address	The Address field is four octets . The value 0xFFFFFFFF indicates that the NAS should allow the user to select an address ( e.g . Negotiated ). The value 0xFFFFFFFE indicates that the NAS should select an address for the user ( e.g . Assigned from a pool of addresses kept by the NAS ). Other valid values indicate that the NAS should use that value as the user's IP address . 	240	0
2058	Type	Type 	240	0
2058	Length	Length 	100	0
2058	Address	The Address field is four octets specifying the IP netmask of the user . 	230	0
2058	Type	Type 	240	0
2058	Length	Length 	100	0
2058	Value	Value 	400	0
2058	Type	Type 	240	0
2058	Length	Length 	100	0
2058	Type	Type 	240	0
2058	Length	Length 	100	0
2058	Value	The Value field is four octets . Despite the size of the field , values range from 64 to 65535 . 	100	0
2058	Type	Type 	240	0
2058	Length	Length 	100	0
2058	Value	Value 	400	0
2058	Type	Type 	240	0
2058	Length	Length 	100	0
2058	Address	The Address field is four octets . The value 0xFFFFFFFF indicates that the NAS SHOULD allow the user to select an address . The value 0 indicates that the NAS SHOULD select a host to connect the user to . Other values indicate the address the NAS SHOULD connect the user to . 	210	0
2058	Type	Type 	240	0
2058	Length	Length 	100	0
2058	Value	Value 	400	0
2058	Type	Type 	240	0
2058	Length	Length 	100	0
2058	Value	The Value field is four octets . Despite the size of the field , values range from 0 to 65535 . 	100	0
2058	Type	Type 	240	0
2058	Length	Length 	100	0
2058	Type	Type 	240	0
2058	Length	Length 	100	0
2058	Type	Type 	240	0
2058	Length	Length 	100	0
2058	Type	Type 	240	0
2058	Length	Length 	100	0
2058	Type	Type 	240	0
2058	Length	Length 	100	0
2058	Value	The Value field is four octets . The value 0xFFFFFFFE indicates that the NAS should select an IPX network for the user ( e.g . assigned from a pool of one or more IPX networks kept by the NAS ). Other values should be used as the IPX network for the link to the user . 	240	0
2058	Type	Type 	240	0
2058	Length	Length 	100	0
2058	Type	Type 	240	0
2058	Length	Length 	100	0
2058	Type	Type 	240	0
2058	Length	Length 	100	0
2058	Vendor-Id	The high-order octet is 0 and the low-order 3 octets are the SMI Network Management Private Enterprise Code of the Vendor in network byte order , as defined in the Assigned Numbers RFC [ 2 ]. 	231	0
2058	Type	Type 	240	0
2058	Length	Length 	100	0
2058	Value	The field is 4 octets , containing a 32-bit unsigned integer with the maximum number of seconds this user should be allowed to remain connected by the NAS . 	100	0
2058	Type	Type 	240	0
2058	Length	Length 	100	0
2058	Value	The field is 4 octets , containing a 32-bit unsigned integer with the maximum number of consecutive seconds of idle time this user should be permitted before being disconnected by the NAS . 	120	0
2058	Type	Type 	240	0
2058	Length	Length 	100	0
2058	Value	Value 	400	0
2058	Type	Type 	240	0
2058	Length	Length 	100	0
2058	Type	Type 	240	0
2058	Length	Length 	100	0
2058	Type	Type 	240	0
2058	Length	Length 	100	0
2058	Type	Type 	240	0
2058	Length	Length 	100	0
2058	Type	Type 	240	0
2058	Length	Length 	100	0
2058	Type	Type 	240	0
2058	Length	Length 	100	0
2058	Type	Type 	240	0
2058	Length	Length 	100	0
2058	Type	Type 	240	0
2058	Length	Length 	100	0
2058	Value	The Value field is four octets . Despite the size of the field , values range from 0 to 65535 . The special value of 0 indicates that this is an unnumbered serial link . A value of 1-65535 means that the serial line between the NAS and the user should be assigned that value as an AppleTalk network number . 	301	0
2058	Type	Type 	240	0
2058	Length	Length 	100	0
2058	Value	The Value field is four octets . Despite the size of the field , values range from 0 to 65535 . The special value 0 indicates that the NAS should assign a network for the user , using its default cable range . A value between 1 and 65535 ( inclusive ) indicates the AppleTalk Network the NAS should probe to find an address for the user . 	110	0
2058	Type	Type 	240	0
2058	Length	Length 	100	0
2058	Type	Type 	240	0
2058	Length	Length 	100	0
2058	Type	Type 	240	0
2058	Length	Length 	100	0
2058	Value	The Value field is four octets . " Virtual " refers to a connection to the NAS via some transport protocol , instead of through a physical port . For example , if a user telnetted into a NAS to 	301	0
2058	Type	Type 	240	0
2058	Length	Length 	100	0
2058	Value	The field is 4 octets , containing a 32-bit unsigned integer with the maximum number of ports this user should be allowed to connect to on the NAS . 	400	0
2058	Type	Type 	240	0
2058	Length	Length 	100	0
2059	Code	The Code field is one octet , and identifies the type of RADIUS packet . When a packet is received with an invalid Code field , it is silently discarded . 	231	0
2059	Identifier	The Identifier field is one octet , and aids in matching requests and replies . 	301	0
2059	Length	The Length field is two octets . It indicates the length of the packet including the Code , Identifier , Length , Authenticator and Attribute fields . Octets outside the range of the Length field should be treated as padding and should be ignored on reception . If the packet is shorter than the Length field indicates , it should be silently discarded . The minimum length is 20 and maximum length is 4096 . 	100	0
2059	Authenticator	The Authenticator field is sixteen ( 16 ) octets . The most significant octet is transmitted first . This value is used to authenticate the messages between the client and RADIUS accounting server . 	301	0
2059	Request Authenticator	In Accounting-Request Packets , the Authenticator value is a 16 octet MD5 [ 3 ] checksum , called the Request Authenticator . 	231	0
2059	Response Authenticator	The Authenticator field in an Accounting-Response packet is called the Response Authenticator , and contains a one-way MD5 hash calculated over a stream of octets consisting of the Accounting - Response Code , Identifier , Length , the Request Authenticator field from the Accounting-Request packet being replied to , and the response attributes if any , followed by the shared secret . The resulting 16 octet MD5 hash value is stored in the Authenticator field of the Accounting-Response packet . 	400	0
2059	Code	Code 	231	0
2059	Identifier	The Identifier field MUST be changed whenever the content of the Attributes field changes , and whenever a valid reply has been 	301	0
2059	Request Authenticator	The Request Authenticator of an Accounting-Request contains a 16 - octet MD5 hash value calculated according to the method described in " Request Authenticator " above . 	400	0
2059	Code	Code 	231	0
2059	Identifier	The Identifier field is a copy of the Identifier field of the Accounting-Request which caused this Accounting-Response . 	231	0
2059	Response Authenticator	The Response Authenticator of an Accounting-Response contains a 16-octet MD5 hash value calculated according to the method described in " Response Authenticator " above . 	400	0
2059	Type	The Type field is one octet . Up-to-date values of the RADIUS Type field are specified in the most recent " Assigned Numbers " RFC [ 2 ]. Values 192-223 are reserved for experimental use , values 224-240 are reserved for implementation-specific use , and values 241-255 are reserved and should not be used . This specification concerns the following values : 	231	0
2059	Length	The Length field is one octet , and indicates the length of this attribute including the Type , Length and Value fields . If an attribute is received in an Accounting-Request with an invalid Length , the entire request should be silently discarded . 	100	0
2059	Value	The Value field is zero or more octets and contains information specific to the attribute . The format and length of the Value field is determined by the Type and Length fields . 	400	0
2059	Type	Type 	240	0
2059	Length	Length 	100	0
2059	Value	Value 	400	0
2059	Type	Type 	240	0
2059	Length	Length 	100	0
2059	Value	Value 	303	0
2059	Type	Type 	240	0
2059	Length	Length 	100	0
2059	Value	Value 	303	0
2059	Type	Type 	240	0
2059	Length	Length 	100	0
2059	Value	Value 	400	0
2059	Type	Type 	240	0
2059	Length	Length 	100	0
2059	Type	Type 	240	0
2059	Length	Length 	100	0
2059	Value	Value 	400	0
2059	Type	Type 	240	0
2059	Length	Length 	100	0
2059	Value	Value 	400	0
2059	Type	Type 	240	0
2059	Length	Length 	100	0
2059	Value	Value 	400	0
2059	Type	Type 	240	0
2059	Length	Length 	100	0
2059	Value	Value 	400	0
2059	Type	Type 	240	0
2059	Length	Length 	100	0
2059	Value	The Value field is four octets , containing an integer specifying the cause of session termination , as follows : 	240	0
2059	Type	Type 	240	0
2059	Length	Length 	100	0
2059	Type	Type 	240	0
2059	Length	Length 	100	0
2059	Value	The Value field is four octets , and contains the number of links seen so far in this Multilink Session . 	100	0
2067	Reserved	Reserved ( 11 bits ) SHALL contain zero . 	500	0
2067	Reserved	Destination_IEEE_Address ( 48 bits ) SHALL contain the 48 bit Universal LAN MAC Address of the Destination if known , otherwise zero . 	230	0
2067	Reserved	Reserved ( bits 30 , 29 ) should be zero . Destinations SHALL accept any value for these bits . 	500	0
2067	Source Address	Destination Address ( bits 11-0 ) SHALL contain the Switch Address of the Destination . 	230	0
2067	L	L = Locally defined ( 1 => entire I-field is locally defined ) W = Width ( 1 => 64 bit connection ) D = Direction ( 1 => swap Source and Destination Address ) PS = Path Selection ( 01 => Logical Address Mode ) C = Camp-on ( 1 => wait until Destination is free ) 	240	0
2067	L	L The " Locally Defined " bit , when set , indicates that the I-field is not in the standard format . The meaning of bits 30-0 are locally defined . 	210	0
2067	W	W The Width bit , when set , requests a 64 bit connection through the switch . It is meaningless if Cable B is not installed at the Source . If W is set and either the Source or the requested Destination has no Cable B to the switch , the switch rejects the connection . Otherwise the switch connects both Cable A and Cable B if W is set , or Cable A only if W is clear . This feature is useful if both Source and Destination implementations can selectively disable or enable Cable B on each new connection . 	210	0
2067	D	D The Direction bit , when set , reverses the sense of the Source Address and Destination Address fields . In other words , D=1 means that the Source Address is in bits 0-11 and the Destination Address is in bits 12-23 . This bit was defined to give devices a simple way to route return messages . It is not useful for LAN operations . 	210	0
2067	C	C The Camp-on bit requests the switch not to reject the connection if the selected Destination is busy ( connected to another Source ) but wait and make the connection when the Destination is free . 	210	0
2097	Type	Type 	240	0
2097	Length	Length 	100	0
2097	Added	This is a one octet field which plays a dual role . The Added field in the Name-Projection Request packet contains the type of NetBIOS name added . A summary of name types is listed below . 	231	0
2097	Type	Type 	240	0
2097	Length	Length 	100	0
2097	Peer-class	The Peer-class field is one octet . It identifies the sender's implementation type . 	231	0
2097	Type	Type 	240	0
2097	Length	Length 	100	0
2097	Multicast-Forward-Period	The Multicast-Forward-Period field is two octets and indicates the maximum period in seconds at which multicast packets can be sent . The maximum value for this field is 60 ( one minute ). A value of zero indicates that there is no maximum period at which multicast packets can be sent . A value of hex type FFFF indicates that the Multicast-Forward-Period is unknown . A value of five indicates that multicast packets will not be sent at a rate more frequent than once every five seconds . This two octet value represents a 16 bit unsigned number sent with the most significant octet first . 	122	0
2097	Priority	The Priority field is one octet long and indicates if multicast packets have priority over other packets when being sent . A value of 0 indicates that directed packets have priority . A value of 1 indicates that multicast packets have priority . 	210	0
2097	Type	Type 	240	0
2097	Length	Length 	100	0
2107	Foreign Agent	A routing entity that resides in a NAS on a remote network that allows a mobile node to utilize a home network address . It tunnels datagrams to , and detunnels datagrams from , the home agent for the given home network . 	230	0
2107	Mobile Node	A host that wishes to use a Home Network address while physically connected by a point-to-point link ( phone line , ISDN , etc .) to a NAS that does not reside on the Home Network . Also referred to as the client . 	230	0
2107	Version	Version The ATMP protocol version . MUST be 1 . 	220	0
2107	Type	Type 1 for Registration Request . 	231	0
2107	Identifier	Identifier A 16 bit number used to match replies with requests . A new value should be provided in each new request . Retransmissions of the same request should use the same identifier . 	231	0
2107	Foreign Agent	Foreign Agent The IP address of the foreign agent issuing the request ( typically the same as the UDP source address ). 	230	0
2107	Mobile Node	Mobile Node The IP address to be used by the mobile node . This is the mobile node's home address . This field can be all 0's if IPX is to be tunneled to the mobile node . 	230	0
2107	Mobile Node Mask	Mobile Node Mask The network bit mask for the mobile node . Currently this value should be set to all 1's . 	230	0
2107	Mobile Node IPX Net	Mobile Node IPX Net The Network portion of the mobile node's IPX address . This value should be set to all 0's if only IP is to be tunneled . 	230	0
2107	Version	Version The ATMP protocol version . MUST be 1 . 	220	0
2107	Type	Type 2 for Challenge Request 	231	0
2107	Identifier	Identifier A 16 bit number used to match replies with requests . A new value should be provided in each new request . Retransmissions of the same request should use the same identifier . 	231	0
2107	Authenticator	Authenticator A series of 16 octet values randomly generated by the Home Agent . The receiving Foreign Agent is to perform an MD5 [ 7 ] hash of these values along with a shared secret . The resultant digest is returned in the Challenge Reply . See Sec . 2.3 Retransmissions of the Challenge Request should use the same Authenticator value . 	301	0
2107	Result Code	Result Code If non-zero , this value indicates the error condition that occurred . See Sec . 2.8 for a list of Result Code values and their meanings . 	231	0
2107	Version	Version The ATMP protocol version . MUST be 1 . 	220	0
2107	Type	Type 3 for Challenge Reply 	231	0
2107	Identifier	Identifier Copied from the corresponding Deregistration Request . 	231	0
2107	Reply Length	Reply Length This field specifies the length of the challenge reply computation based on the received Authenticator and the shared secret . For MD5 this length will always be 16 . This field is provided for future extensibility . 	100	0
2107	Version	Version The ATMP protocol version . MUST be 1 . 	220	0
2107	Type	Type 4 for Registration Reply 	231	0
2107	Identifier	Identifier Copied from the corresponding Registration Request . 	231	0
2107	Result Code	Result Code Specifies the result of the registration and authentication attempt by the Foreign Agent . Sec . 2.8 for a list of Result Code values and their meanings . 	231	0
2107	Tunnel ID	Tunnel ID This is the identifier used to indicate a given mobility binding between a given Mobile Node and Home Agent . This identifier is used to distinguish multiple tunnels between a given Foreign Agent-Home Agent pair . It is carried in the " key " field of the GRE [ 1 ] tunnel packets that ATMP uses as the tunnel protocol . It is also used in Deregistration Requests and Error Notification messages to indicate the particular mobility binding to which they relate . 	231	0
2107	Version	Version The ATMP protocol version . MUST be 1 . 	220	0
2107	Type	Type 5 for Deregistration Request 	231	0
2107	Identifier	Identifier A 16 bit number used to match replies with requests . A new value should be provided in each new request . Retransmissions of the same request should use the same identifier . 	231	0
2107	Tunnel ID	Tunnel ID Tunnel identifier of the mobility binding to be terminated . 	230	0
2107	Version	Version The ATMP protocol version . MUST be 1 . 	220	0
2107	Type	Type 6 for Deregistration Reply 	231	0
2107	Identifier	Identifier Copied from the corresponding Deregistration Request . 	231	0
2107	Result Code	Result Code Specifies the result of the registration and authentication attempt by the Foreign Agent . Sec . 2.8 for a list of Result Code values and their meanings . 	231	0
2107	Tunnel ID	Tunnel ID Tunnel identifier of the mobility binding specified in the Deregistration Request . 	231	0
2107	Version	Version The ATMP protocol version . MUST be 1 . 	220	0
2107	Type	Type 7 for Error Notification 	231	0
2107	Identifier	Identifier If issued in response to a received reply type message , this value should be copied from the identifier field of the reply . Otherwise the identifier should be the value that would be used for the next generated request . 	230	0
2107	Result Code	Result Code This indicates the type of error detected . The possible result codes are defined in Sec . 2.8 . 	231	0
2107	Tunnel ID	Tunnel ID Tunnel identifier of the mobility binding to which this message pertains . If the Error Notification is being sent in response to an unsolicited reply , the Tunnel ID is copied from the reply . 	230	0
2117	S	3 Receipt of a packet that matches on a ( S,G ) entry whose SPT-bit is cleared triggers the following if the packet arrived on the correct incoming interface and there is a (*, G ) or (*,*, RP ) entry with a different incoming interface : a ) the router sets the SPT-bit on the ( S,G ) entry , and b ) the router sends a Join/Prune message towards the RP with S and a set RPT-bit in the prune list . 	240	0
2117	S	The ( S,G ) Entry-timer is restarted by Registers arriving from that source to that group . 	201	0
2117	R	* [ Random-Delay-Join-Timeout ] This is the maximum interval between the time when the RPF neighbor changes , and the time at which a triggered Join/Prune message is sent . { Default : 4.5 seconds .} 	201	0
2117	Type	0 = Hello 1 = Register 2 = Register-Stop 3 = Join/Prune 4 = Bootstrap 5 = Assert 6 = Graft ( used in PIM-DM only ) 7 = Graft-Ack ( used in PIM-DM only ) 8 = Candidate-RP-Advertisement 	240	0
2117	S	Mask Length Mask length is 8 bits . The value is the number of contiguous bits left justified used as a mask which describes the address . The mask length must be less than or equal to Addr Length * 8 . If the message is sent for a single source then the Mask length must equal Addr length * 8 . In version 2 of PIM , it is strongly recommended that this field be set to 32 for IPv4 . 	100	0
2117	W	Mask Length Mask length is 8 bits . The value is the number of contiguous bits left justified used as a mask which describes the address . The mask length must be less than or equal to Addr Length * 8 . If the message is sent for a single source then the Mask length must equal Addr length * 8 . In version 2 of PIM , it is strongly recommended that this field be set to 32 for IPv4 . 	100	0
2117	Type	PIM Version , Type , Addr length , Checksum Described above . 	220	0
2117	Addr length	PIM Version , Type , Addr length , Checksum Described above . 	220	0
2117	Type	PIM Version , Type , Addr length , Checksum Described above . { Note that the checksum for Registers is done only on the PIM header , excluding the data packet portion .} 	400	0
2117	Addr length	PIM Version , Type , Addr length , Checksum Described above . { Note that the checksum for Registers is done only on the PIM header , excluding the data packet portion .} 	400	0
2117	B	B The Border bit . If the router is a DR for a source that it is directly connected to , it sets the B bit to 0 . If the router is a PMBR for a source in a directly connected cloud , it sets the B bit to 1 . 	210	0
2117	N	N The Null-Register bit . Set to 1 by a DR that is probing the RP before expiring its local Register-Suppression timer . Set to 0 otherwise . 	210	0
2117	Type	PIM Version , Type , Addr length , Checksum Described above . 	220	0
2117	Addr length	PIM Version , Type , Addr length , Checksum Described above . 	220	0
2117	Type	PIM Version , Type , Addr length , Checksum Described above . 	220	0
2117	Addr length	PIM Version , Type , Addr length , Checksum Described above . 	220	0
2117	S	S The Sparse bit is a 1 bit value , set to 1 for PIM-SM . It is used for PIM v.1 compatibility . 	210	0
2117	W	W The WC bit is a 1 bit value . If 1 , the join or prune applies to the (*, G ) or (*,*, RP ) entry . If 0 , the join or prune applies to the ( S,G ) entry where S is Source Address . Joins and prunes sent towards the RP must have this bit set . 	210	0
2117	R	R The RPT-bit is a 1 bit value . If 1 , the information about ( S,G ) is sent towards the RP . If 0 , the information must be sent toward S , where S is the Source Address . 	210	0
2117	Type	PIM Version , Type , Addr length , Checksum Described above . 	220	0
2117	Addr length	PIM Version , Type , Addr length , Checksum Described above . 	220	0
2117	Type	PIM Version , Type , Addr length , Checksum Described above . 	220	0
2117	Addr length	PIM Version , Type , Addr length , Checksum Described above . 	220	0
2117	R	R RPT-bit is a 1 bit value . If the IP multicast datagram that triggered the Assert packet is routed down the RP tree , then the RPT-bit is 1; if the IP multicast datagram is routed down the SPT , it is 0 . 	210	0
2117	Type	PIM Version , Type , Addr length , Checksum Described above . 	220	0
2117	Addr length	PIM Version , Type , Addr length , Checksum Described above . 	220	0
2117	A	A The Authoritative bit . This bit indicates that the BSR should not override the group-prefix information indicated in the C-RP Advertisement . In most cases C-RPs set this bit to 0 . 	210	0
2118	Type	Type 	240	0
2118	Length	Length 	100	0
2118	Supported Bits	This field is 4 octets , most significant octet first . The least significant bit in the least significant octet set to 1 indicates desire to negotiate MPPC . 	231	0
2118	PPP Protocol	The PPP Protocol field is described in the Point-to-Point Protocol Encapsulation [ 1 ]. 	400	0
2118	Coherency Count	The coherency count is used to assure that the packets are sent in proper order and that no packet has been dropped . This count starts at 0 and is always increased by 1 and NEVER decreases or goes back . When all bits are 1 , the count returns to 0 . 	201	0
2124	Policy	Policy ID Value Meaning 	240	0
2124	Flow Failure Code	Flow Failure Code - for the Flow ID IE above . 	231	0
2125	Link Discriminator	2.1 . Link Discriminator 	240	0
2125	Type	Type 	240	0
2125	Length	Length 	100	0
2125	Link Discriminator	The Link Discriminator field is 2 octets in Length , and it contains a unique identifier used to indicate a particular link in a multilink bundle . The Link Discriminator for a link MUST be unique among the Link Discriminators assigned by this endpoint for this bundle . The Link Discriminator MAY be assigned in a sequential , monotonically increasing manner . 	231	0
2125	Type	Type 	240	0
2125	Length	Length 	100	0
2125	Magic-Number	The Magic-Number field is four octets , and indicates a number which is very likely to be unique to one end of the link . A Magic-Number of zero is illegal and MUST always be Nak'd . 	301	0
2125	Type	The Type field is one octet and identifies the type of BAP datagram packet . Datagram types are defined as follows . This field is coded in binary coded hexadecimal . 	231	0
2125	Identifier	The Identifier field is one octet and is binary coded . It aids in matching Requests and Indications with Responses . Call-Status - Indication packets MUST use the same Identifier as was used by the original Call-Request or Callback-Request that was used to initiate the call . All other Request or Indication packets MUST use a unique Identifier for each new Request or Indication . All Response packets MUST use the same Identifier as the Identifier in the Request or Indication packet being responded to . When re - transmitting a request or indication , the Identifier MUST be the same as the Identifier used on the previous transmission of the request or indication . 	301	0
2125	Length	The Length field is two octets and indicates the length of the packet including the Type , Identifier , Length and Options fields . It is binary encoded . Octets outside the range of the Length field should be treated as Data Link Layer padding and should be ignored on reception . 	100	0
2125	Response Code	The Response Code is only present in Response datagrams . It is binary coded and can have the following values : 	231	0
2125	Type	The type field is one octet , and indicates the type of the BAP Datagram Option . This field is binary coded Hexadecimal . The following options are currently defined : 	231	0
2125	Length	The Length field is one octet , and indicates the length of this BAP Option including the Type , Length , and Data fields . 	100	0
2125	Type	Type 	240	0
2125	Length	The Length field is one octet , and indicates the length of this BAP Option including the Type , Length and Link Type fields . 	100	0
2125	Link Type	The Link Type field is a bit mask . It is 1 octet in length . Bit 0 of the Link Type field corresponds to bit 39 of the Link-Type BAP Option as described above . If a bit is set , it indicates support of the corresponding link type . If the link indicated is different than the supported link types , no bit will be set . Otherwise , at least one bit MUST be set . If an implementation supports more than one link type , more than one bit MAY be set . 	210	0
2125	Type	Type 	240	0
2125	Length	The Length field is one octet , and indicates the length of this BAP Option including the Type , Length , and Sub-Option fields . 	100	0
2125	Sub-Option Type	Sub-Option Type 	231	0
2125	Type	Type 	240	0
2125	Length	Length 	100	0
2125	Type	Type 	240	0
2125	Length	The Length field is one octet , and indicates the length of this BAP Option including the Type , Length and Reason String fields . 	100	0
2125	Type	Type 	240	0
2125	Length	Length 	100	0
2125	Link Discriminator	The Link Discriminator field is 2 octets in length . It contains the Link Discriminator that was contained in the LCP Link - Discriminator Configuration Option sent by the receiver of the packet containing the Link Discriminator . 	301	0
2125	Type	Type 	240	0
2125	Length	Length 	100	0
2125	Status	The Status field is 1 octet in length . If the call was successful , the value MUST be set to 0 . A non-zero value indicates a call failure . A value of 255 indicates a non-specific failure , and a more specific call status MAY be indicated by using the same number as the Q.931 cause value ( i.e ., 1 is unassigned number , 17 is user busy , etc .) 	210	0
2125	Action	The Action octet indicates what action the calling implementation is taking after a failed call . If the call was sucessful , the Action octet MUST be set to 0 . 	210	0
2129	Source IP address	Source IP address : source IP address of flow Destination IP address : destination IP address of flow 	230	0
2129	VCID Type	VCID Type : Currently , VCID Type = 1 is defined . VCID Length : Length of VCID field VCID : VCID described previous 	100	0
2131	B	B : BROADCAST flag 	240	0
2131	MBZ	MBZ : MUST BE ZERO ( reserved for future use ) 	500	0
2138	Code	The Code field is one octet , and identifies the type of RADIUS packet . When a packet is received with an invalid Code field , it is silently discarded . 	231	0
2138	Identifier	The Identifier field is one octet , and aids in matching requests and replies . 	301	0
2138	Length	The Length field is two octets . It indicates the length of the packet including the Code , Identifier , Length , Authenticator and Attribute fields . Octets outside the range of the Length field should be treated as padding and should be ignored on reception . If the packet is shorter than the Length field indicates , it should be silently discarded . The minimum length is 20 and maximum length is 4096 . 	100	0
2138	Authenticator	The Authenticator field is sixteen ( 16 ) octets . The most significant octet is transmitted first . This value is used to authenticate the reply from the RADIUS server , and is used in the password hiding algorithm . 	301	0
2138	Request Authenticator	In Access-Request Packets , the Authenticator value is a 16 octet random number , called the Request Authenticator . The value SHOULD be unpredictable and unique over the lifetime of a secret ( the password shared between the client and the RADIUS server ), since repetition of a request value in conjunction with the same secret would permit an attacker to reply with a previously intercepted response . Since it is expected that the same secret MAY be used to authenticate with servers in disparate geographic regions , the Request Authenticator field SHOULD exhibit global and temporal uniqueness . 	230	0
2138	Response Authenticator	The value of the Authenticator field in Access-Accept , Access - Reject , and Access-Challenge packets is called the Response Authenticator , and contains a one-way MD5 hash calculated over a stream of octets consisting of : the RADIUS packet , beginning with the Code field , including the Identifier , the Length , the Request Authenticator field from the Access-Request packet , and the response Attributes , followed by the shared secret . That is , ResponseAuth = MD5(Code+ID+Length+RequestAuth+Attributes+Secret ) where + denotes concatenation . 	231	0
2138	Code	Code 	231	0
2138	Identifier	The Identifier field MUST be changed whenever the content of the Attributes field changes , and whenever a valid reply has been received for a previous request . For retransmissions , the Identifier MUST remain unchanged . 	301	0
2138	Request Authenticator	The Request Authenticator value MUST be changed each time a new Identifier is used . 	201	0
2138	Code	Code 	231	0
2138	Identifier	The Identifier field is a copy of the Identifier field of the Access-Request which caused this Access-Accept . 	301	0
2138	Response Authenticator	The Response Authenticator value is calculated from the Access - Request value , as described earlier . 	400	0
2138	Code	Code 	231	0
2138	Identifier	The Identifier field is a copy of the Identifier field of the Access-Request which caused this Access-Reject . 	231	0
2138	Response Authenticator	The Response Authenticator value is calculated from the Access - Request value , as described earlier . 	400	0
2138	Code	Code 	231	0
2138	Identifier	The Identifier field is a copy of the Identifier field of the Access-Request which caused this Access-Challenge . 	301	0
2138	Response Authenticator	The Response Authenticator value is calculated from the Access - Request value , as described earlier . 	400	0
2138	Type	The Type field is one octet . Up-to-date values of the RADIUS Type field are specified in the most recent " Assigned Numbers " RFC [ 3 ]. Values 192-223 are reserved for experimental use , values 224-240 are reserved for implementation-specific use , and values 241-255 are reserved and should not be used . This specification concerns the following values : 	231	0
2138	Length	The Length field is one octet , and indicates the length of this Attribute including the Type , Length and Value fields . If an Attribute is received in an Access-Request but with an invalid Length , an Access-Reject SHOULD be transmitted . If an Attribute is received in an Access-Accept , Access-Reject or Access-Challenge packet with an invalid length , the packet MUST either be treated an Access-Reject or else silently discarded . 	100	0
2138	Value	The Value field is zero or more octets and contains information specific to the Attribute . The format and length of the Value field is determined by the Type and Length fields . 	400	0
2138	Type	Type 	240	0
2138	Length	Length 	100	0
2138	Type	Type 	240	0
2138	Length	Length 	100	0
2138	Type	Type 	240	0
2138	Length	Length 	100	0
2138	CHAP Ident	This field is one octet , and contains the CHAP Identifier from the user's CHAP Response . 	231	0
2138	Type	Type 	240	0
2138	Length	Length 	100	0
2138	Address	Address 	202	0
2138	Type	Type 	240	0
2138	Length	Length 	100	0
2138	Value	The Value field is four octets . Despite the size of the field , values range from 0 to 65535 . 	100	0
2138	Type	Type 	240	0
2138	Length	Length 	100	0
2138	Value	Value 	400	0
2138	Type	Type 	240	0
2138	Length	Length 	100	0
2138	Value	Value 	400	0
2138	Type	Type 	240	0
2138	Length	Length 	100	0
2138	Address	The Address field is four octets . The value 0xFFFFFFFF indicates that the NAS should allow the user to select an address ( e.g . Negotiated ). The value 0xFFFFFFFE indicates that the NAS should select an address for the user ( e.g . Assigned from a pool of addresses kept by the NAS ). Other valid values indicate that the NAS should use that value as the user's IP address . 	240	0
2138	Type	Type 	240	0
2138	Length	Length 	100	0
2138	Address	The Address field is four octets specifying the IP netmask of the user . 	230	0
2138	Type	Type 	240	0
2138	Length	Length 	100	0
2138	Value	Value 	303	0
2138	Type	Type 	240	0
2138	Length	Length 	100	0
2138	Type	Type 	240	0
2138	Length	Length 	100	0
2138	Value	The Value field is four octets . Despite the size of the field , values range from 64 to 65535 . 	100	0
2138	Type	Type 	240	0
2138	Length	Length 	100	0
2138	Value	Value 	400	0
2138	Type	Type 	240	0
2138	Length	Length 	100	0
2138	Address	The Address field is four octets . The value 0xFFFFFFFF indicates that the NAS SHOULD allow the user to select an address . The value 0 indicates that the NAS SHOULD select a host to connect the user to . Other values indicate the address the NAS SHOULD connect the user to . 	210	0
2138	Type	Type 	240	0
2138	Length	Length 	100	0
2138	Value	Value 	400	0
2138	Type	Type 	240	0
2138	Length	Length 	100	0
2138	Value	The Value field is four octets . Despite the size of the field , values range from 0 to 65535 . 	100	0
2138	Type	Type 	240	0
2138	Length	Length 	100	0
2138	Type	Type 	240	0
2138	Length	Length 	100	0
2138	Type	Type 	240	0
2138	Length	Length 	100	0
2138	Type	Type 	240	0
2138	Length	Length 	100	0
2138	Type	Type 	240	0
2138	Length	Length 	100	0
2138	Value	The Value field is four octets . The value 0xFFFFFFFE indicates that the NAS should select an IPX network for the user ( e.g . assigned from a pool of one or more IPX networks kept by the NAS ). Other values should be used as the IPX network for the link to the user . 	240	0
2138	Type	Type 	240	0
2138	Length	Length 	100	0
2138	Type	Type 	240	0
2138	Length	Length 	100	0
2138	Type	Type 	240	0
2138	Length	Length 	100	0
2138	Vendor-Id	The high-order octet is 0 and the low-order 3 octets are the SMI Network Management Private Enterprise Code of the Vendor in network byte order , as defined in the Assigned Numbers RFC [ 3 ]. 	231	0
2138	Type	Type 	240	0
2138	Length	Length 	100	0
2138	Value	The field is 4 octets , containing a 32-bit unsigned integer with the maximum number of seconds this user should be allowed to remain connected by the NAS . 	100	0
2138	Type	Type 	240	0
2138	Length	Length 	100	0
2138	Value	The field is 4 octets , containing a 32-bit unsigned integer with the maximum number of consecutive seconds of idle time this user should be permitted before being disconnected by the NAS . 	120	0
2138	Type	Type 	240	0
2138	Length	Length 	100	0
2138	Value	Value 	400	0
2138	Type	Type 	240	0
2138	Length	Length 	100	0
2138	Type	Type 	240	0
2138	Length	Length 	100	0
2138	Type	Type 	240	0
2138	Length	Length 	100	0
2138	Type	Type 	240	0
2138	Length	Length 	100	0
2138	Type	Type 	240	0
2138	Length	Length 	100	0
2138	Type	Type 	240	0
2138	Length	Length 	100	0
2138	Type	Type 	240	0
2138	Length	Length 	100	0
2138	Type	Type 	240	0
2138	Length	Length 	100	0
2138	Value	The Value field is four octets . Despite the size of the field , values range from 0 to 65535 . The special value of 0 indicates that this is an unnumbered serial link . A value of 1-65535 means that the serial line between the NAS and the user should be assigned that value as an AppleTalk network number . 	301	0
2138	Type	Type 	240	0
2138	Length	Length 	100	0
2138	Value	The Value field is four octets . Despite the size of the field , values range from 0 to 65535 . The special value 0 indicates that the NAS should assign a network for the user , using its default cable range . A value between 1 and 65535 ( inclusive ) indicates the AppleTalk Network the NAS should probe to find an address for the user . 	110	0
2138	Type	Type 	240	0
2138	Length	Length 	100	0
2138	Type	Type 	240	0
2138	Length	Length 	100	0
2138	Type	Type 	240	0
2138	Length	Length 	100	0
2138	Value	The Value field is four octets . " Virtual " refers to a connection to the NAS via some transport protocol , instead of through a physical port . For example , if a user telnetted into a NAS to authenticate himself as an Outbound-User , the Access-Request might include NAS-Port-Type = Virtual as a hint to the RADIUS server that the user was not on a physical port . 	301	0
2138	Type	Type 	240	0
2138	Length	Length 	100	0
2138	Value	The field is 4 octets , containing a 32-bit unsigned integer with the maximum number of ports this user should be allowed to connect to on the NAS . 	400	0
2138	Type	Type 	240	0
2138	Length	Length 	100	0
2139	Code	The Code field is one octet , and identifies the type of RADIUS packet . When a packet is received with an invalid Code field , it is silently discarded . 	231	0
2139	Identifier	The Identifier field is one octet , and aids in matching requests and replies . 	301	0
2139	Length	The Length field is two octets . It indicates the length of the packet including the Code , Identifier , Length , Authenticator and Attribute fields . Octets outside the range of the Length field should be treated as padding and should be ignored on reception . If the packet is shorter than the Length field indicates , it should be silently discarded . The minimum length is 20 and maximum length is 4096 . 	100	0
2139	Authenticator	The Authenticator field is sixteen ( 16 ) octets . The most significant octet is transmitted first . This value is used to authenticate the messages between the client and RADIUS accounting server . 	301	0
2139	Request Authenticator	In Accounting-Request Packets , the Authenticator value is a 16 octet MD5 [ 3 ] checksum , called the Request Authenticator . 	231	0
2139	Response Authenticator	The Authenticator field in an Accounting-Response packet is called the Response Authenticator , and contains a one-way MD5 hash calculated over a stream of octets consisting of the Accounting - Response Code , Identifier , Length , the Request Authenticator field from the Accounting-Request packet being replied to , and the response attributes if any , followed by the shared secret . The resulting 16 octet MD5 hash value is stored in the Authenticator field of the Accounting-Response packet . 	400	0
2139	Code	Code 	231	0
2139	Identifier	The Identifier field MUST be changed whenever the content of the Attributes field changes , and whenever a valid reply has been received for a previous request . For retransmissions where the contents are identical , the Identifier MUST remain unchanged . 	230	0
2139	Request Authenticator	The Request Authenticator of an Accounting-Request contains a 16 - octet MD5 hash value calculated according to the method described in " Request Authenticator " above . 	400	0
2139	Code	Code 	231	0
2139	Identifier	The Identifier field is a copy of the Identifier field of the Accounting-Request which caused this Accounting-Response . 	231	0
2139	Response Authenticator	The Response Authenticator of an Accounting-Response contains a 16-octet MD5 hash value calculated according to the method described in " Response Authenticator " above . 	400	0
2139	Type	The Type field is one octet . Up-to-date values of the RADIUS Type field are specified in the most recent " Assigned Numbers " RFC [ 2 ]. Values 192-223 are reserved for experimental use , values 224-240 are reserved for implementation-specific use , and values 241-255 are reserved and should not be used . This specification concerns the following values : 	231	0
2139	Length	The Length field is one octet , and indicates the length of this attribute including the Type , Length and Value fields . If an attribute is received in an Accounting-Request with an invalid Length , the entire request should be silently discarded . 	100	0
2139	Value	The Value field is zero or more octets and contains information specific to the attribute . The format and length of the Value field is determined by the Type and Length fields . 	400	0
2139	Type	Type 	240	0
2139	Length	Length 	100	0
2139	Value	Value 	400	0
2139	Type	Type 	240	0
2139	Length	Length 	100	0
2139	Value	Value 	400	0
2139	Type	Type 	240	0
2139	Length	Length 	100	0
2139	Value	Value 	400	0
2139	Type	Type 	240	0
2139	Length	Length 	100	0
2139	Value	Value 	400	0
2139	Type	Type 	240	0
2139	Length	Length 	100	0
2139	Type	Type 	240	0
2139	Length	Length 	100	0
2139	Value	Value 	400	0
2139	Type	Type 	240	0
2139	Length	Length 	100	0
2139	Value	Value 	400	0
2139	Type	Type 	240	0
2139	Length	Length 	100	0
2139	Value	Value 	400	0
2139	Type	Type 	240	0
2139	Length	Length 	100	0
2139	Value	Value 	400	0
2139	Type	Type 	240	0
2139	Length	Length 	100	0
2139	Value	The Value field is four octets , containing an integer specifying the cause of session termination , as follows : 	240	0
2139	Type	Type 	240	0
2139	Length	Length 	100	0
2139	Type	Type 	240	0
2139	Length	Length 	100	0
2139	Value	The Value field is four octets , and contains the number of links seen so far in this Multilink Session . 	100	0
2153	Code	Code 	231	0
2153	Identifier	The Identifier field MUST be changed for each Vendor Specific packet sent . 	231	0
2153	Length	Length 	100	0
2153	Magic-Number	The Magic-Number field is four octets and aids in detecting links that are in the looped-back condition . Until the Magic-Number Configuration Option has been successfully negotiated , the Magic - Number MUST be transmitted as zero . See the Magic-Number Configuration Option for further explanation . 	302	0
2153	OUI	three octets . The vendor's Organizationally Unique Identifier . The bits within the octet are in canonical order , and the most significant octet is transmitted first . 	231	0
2153	Kind	one octet . Indicates a sub-type for the OUI . There is no standardization for this field . Each OUI implements its own values . 	231	0
2153	Type	Type 	240	0
2153	Length	Length 	100	0
2153	OUI	three octets . The vendor's Organizationally Unique Identifier . The bits within the octet are in canonical order , and the most significant octet is transmitted first . 	231	0
2153	Kind	one octet . Indicates a sub-type for the OUI . There is no standardization for this field . Each OUI implements its own values . 	231	0
2165	Version	Version This protocol document defines version 1 of the Service Location protocol . 	220	0
2165	Length	Length The number of bytes in the message , including the Service Location Header . 	100	0
2165	O	O The ' Overflow ' bit . See Section 18 for the use of this field . 	231	0
2165	M	M The ' Monolingual ' bit . Requests with this bit set indicate the User Agent will only accept responses in the language ( see section 17 ) that is indicated by the Service or Attribute Request . 	210	0
2165	U	U The ' URL Authentication Present ' bit . See sections 4.2 , 4.3 , 9 , and 11 for the use of this field . 	210	0
2165	A	A The ' Attribute Authentication Present ' bit . See sections 4.2 , 4.3 , and 13 for the use of this field . 	231	0
2165	F	F If the ' F ' bit is set in a Service Acknowledgement , the directory agent has registered the service as a new entry , not as an updated entry . 	210	0
2165	rsvd	rsvd MUST be zero . 	500	0
2165	Dialect	Dialect Dialect tags will be used by future versions of the Service Location Protocol to indicate a variant of vocabulary used . This field is reserved and MUST be set to 0 for compatibility with future versions of the Service Location Protocol . 	500	0
2165	Lifetime	Lifetime The length of time that the registration is valid , in the absence of later registrations or deregistration . 	100	0
2165	Length	Length The length of the Authenticator 	100	0
2165	Lifetime	Lifetime ( seconds ): 16-bit unsigned integer URL ( at least ): service:<srvtype>://<addr-spec > Attributes ( if any ): ( ATTR1=VALUE),KEYWORD,(ATTR2 = VAL1 , VAL2 ) 	120	0
2165	Lifetime	Lifetime : 10800 URL : service:lpr://igore.wco.ftp.com:515/draft Attributes : ( SCOPE=DEVELOPMENT ), ( PAPER COLOR=WHITE ), ( PAPER SIZE=LETTER ), UNRESTRICTED_ACCESS , ( LANGUAGE=POSTSCRIPT , HPGCL ), ( LOCATION=12 FLOOR ) 	240	0
2165	Lifetime	Lifetime : 10800 URL : service:lpr://igore.wco.ftp.com:515/draft Attributes : ( SCOPE=ENTWICKLUNG ), ( PAPIERFARBE=WEISS ), ( PAPIERFORMAT=BRIEF ), UNBEGRENTZTER_ZUGANG , ( DRUECKERSPRACHE=POSTSCRIPT,HPGCL ), ( STANDORT=11 ETAGE ) 	240	0
2165	URL	URL : service:directory-agent://SLP-RESOLVER.CATCH22.COM SCOPE List : ADMIN 	230	0
2178	Type	Type Packet name Protocol function __________________________________________________________ 1 Hello Discover/maintain neighbors 2 Database Description Summarize database contents 3 Link State Request Database download 4 Link State Update Database update 5 Link State Ack Flooding acknowledgment 	240	0
2178	AuType	AuType and Authentication Each OSPF packet exchange is authenticated . Authentication types are assigned by the protocol and are documented in Appendix D . A different authentication procedure can be used for each IP network/subnet . Autype indicates the type of authentication procedure in use . The 64-bit authentication field is then for use by the chosen authentication procedure . This procedure should be the last called when forming the packet to be sent . See Section D.4 for details . 	231	0
2178	Type	Type Packet name detailed section ( transmit ) _________________________________________________________ 1 Hello Section 9.5 2 Database description Section 10.8 3 Link state request Section 10.9 4 Link state update Section 13.3 5 Link state ack Section 13.5 	240	0
2178	Type	Type Packet name detailed section ( receive ) ________________________________________________________ 1 Hello Section 10.5 2 Database description Section 10.6 3 Link state request Section 10.7 4 Link state update Section 13 5 Link state ack Section 13.7 	240	0
2178	Type	Type Dest Area Path Type Cost Next Adv . Hop(s ) Router(s ) ____________________________________________________________ N N1 0 intra-area 10 RT3 * N N2 0 intra-area 10 RT3 * N N3 0 intra-area 7 RT3 * N N4 0 intra-area 8 RT3 * N Ib 0 intra-area 7 * * N Ia 0 intra-area 12 RT10 * N N6 0 intra-area 8 RT10 * N N7 0 intra-area 12 RT10 * N N8 0 intra-area 10 RT10 * N N9 0 intra-area 11 RT10 * N N10 0 intra-area 13 RT10 * N N11 0 intra-area 14 RT10 * N H1 0 intra-area 21 RT10 * R RT5 0 intra-area 6 RT5 * R RT7 0 intra-area 8 RT10 * ____________________________________________________________ N N12 * type 1 ext . 10 RT10 RT7 N N13 * type 1 ext . 14 RT5 RT5 N N14 * type 1 ext . 14 RT5 RT5 N N15 * type 1 ext . 17 RT10 RT7 	240	0
2178	Type	Type Dest Area Path Type Cost Next Adv . Hops(s ) Router(s ) __________________________________________________________________ N N1 1 intra-area 4 RT1 * N N2 1 intra-area 4 RT2 * N N3 1 intra-area 1 * * N N4 1 intra-area 3 RT3 * R RT3 1 intra-area 1 * * __________________________________________________________________ N Ib 0 intra-area 22 RT5 * N Ia 0 intra-area 27 RT5 * R RT3 0 intra-area 21 RT5 * R RT5 0 intra-area 8 * * R RT7 0 intra-area 14 RT5 * R RT10 0 intra-area 22 RT5 * R RT11 0 intra-area 25 RT5 * __________________________________________________________________ N N6 0 inter-area 15 RT5 RT7 N N7 0 inter-area 19 RT5 RT7 N N8 0 inter-area 18 RT5 RT7 N N9-N11,H1 0 inter-area 36 RT5 RT11 __________________________________________________________________ N N12 * type 1 ext . 16 RT5 RT5,RT7 N N13 * type 1 ext . 16 RT5 RT5 N N14 * type 1 ext . 16 RT5 RT5 N N15 * type 1 ext . 23 RT5 RT7 	240	0
2178	Type	Type Dest Area Path Type Cost Next Adv . Hop(s ) Router(s ) ________________________________________________________________ N Ib 0 intra-area 16 RT3 * N Ia 0 intra-area 21 RT3 * R RT3 0 intra-area 1 * * R RT10 0 intra-area 16 RT3 * R RT11 0 intra-area 19 RT3 * ________________________________________________________________ N N9-N11,H1 0 inter-area 30 RT3 RT11 	240	0
2178	LS age	This field is the age of the LSA in seconds . It should be processed as an unsigned 16-bit integer . It is set to 0 when the LSA is originated . It must be incremented by InfTransDelay on every hop of the flooding procedure . LSAs are also aged as they are held in each router's database . 	121	0
2178	Options	The Options field in the LSA header indicates which optional capabilities are associated with the LSA . OSPF's optional capabilities are described in Section 4.5 . One optional capability is defined by this specification , represented by the E-bit found in the Options field . The unrecognized bits in the Options field should be set to zero . The E-bit represents OSPF's ExternalRoutingCapability . This bit should be set in all LSAs associated with the backbone , and all LSAs associated with non-stub areas ( see Section 3.6 ). It should also be set in all AS-external-LSAs . It should be reset in all router-LSAs , network-LSAs and summary-LSAs associated with a stub area . For all LSAs , the setting of the E-bit is for informational purposes only; it does not affect the routing table calculation . 	231	0
2178	LS type	The LS type field dictates the format and function of the LSA . LSAs of different types have different names ( e.g ., router-LSAs or network-LSAs ). All LSA types defined by this memo , except the AS - external-LSAs ( LS type = 5 ), are flooded throughout a single area only . AS-external-LSAs are flooded throughout the entire Autonomous System , excepting stub areas ( see Section 3.6 ). Each separate LSA type is briefly described below in Table 15 . 	231	0
2178	Link State ID	This field identifies the piece of the routing domain that is being described by the LSA . Depending on the LSA's LS type , the Link State ID takes on the values listed in Table 16 . 	230	0
2178	Advertising Router	This field specifies the OSPF Router ID of the LSA's originator . For router-LSAs , this field is identical to the Link State ID field . Network-LSAs are originated by the network's Designated Router . Summary-LSAs originated by area border routers . AS-external-LSAs are originated by AS boundary routers . 	230	0
2178	LS sequence number	The sequence number field is a signed 32-bit integer . It is used to detect old and duplicate LSAs . The space of sequence numbers is linearly ordered . The larger the sequence number ( when compared as signed 32-bit integers ) the more recent the LSA . To describe to sequence number space more precisely , let N refer in the discussion below to the constant 2**31 . 	200	0
2178	LS checksum	This field is the checksum of the complete contents of the LSA , excepting the LS age field . The LS age field is excepted so that an LSA's age can be incremented without updating the checksum . The checksum used is the same that is used for ISO connectionless datagrams; it is commonly referred to as the Fletcher checksum . It is documented in Annex B of [ Ref6 ]. The LSA header also contains the length of the LSA in bytes; subtracting the size of the LS age field ( two bytes ) yields the amount of data to checksum . 	400	0
2178	3	has been configured as a stub area , discard the LSA and get the next one from the Link State Update Packet . AS-external-LSAs are not flooded into/throughout stub areas ( see Section 3.6 ). 	400	0
2178	5	The stub networks are added to the tree in the procedure's second stage . In this stage , all router vertices are again examined . Those that have been determined to be unreachable in the above first phase are discarded . For each reachable router vertex ( call it V ), the associated router-LSA is found in the link state database . Each stub network link appearing in the LSA is then examined , and the following steps are executed : 	400	0
2178	Type	Type Description ________________________________ 1 Hello 2 Database Description 3 Link State Request 4 Link State Update 5 Link State Acknowledgment 	240	0
2178	Type	Type Description __________________________________________________ 1 Point-to-point connection to another router 2 Connection to a transit network 3 Connection to a stub network 4 Virtual link 	240	0
2178	Type	Type Link ID ______________________________________ 1 Neighboring router's Router ID 2 IP address of Designated Router 3 IP network/subnet number 4 Neighboring router's Router ID 	240	0
2178	AuType	AuType Description ___________________________________________ 0 Null authentication 1 Simple password 2 Cryptographic authentication All others Reserved for assignment by the IANA ( iana@ISI.EDU ) 	240	0
2178	1	( 2 ) The checksum field in the standard OSPF header is set to the standard IP checksum of the entire contents of the packet , starting with the OSPF packet header but excluding the 64-bit authentication field . This checksum is calculated as the 16-bit one's complement of the one's complement sum of all the 16-bit words in the packet , excepting the authentication field . If the packet's length is not an integral number of 16-bit words , the packet is padded with a byte of zero before checksumming . 	301	0
2178	1	( 2 ) You lose the bidirectionality test on both interfaces , since bidirectionality is based on Router ID . 	240	0
2189	type	o type 0 : HELLO 	231	0
2189	type	o type 1 : JOIN_REQUEST 	240	0
2189	type	o type 2 : JOIN_ACK 	240	0
2189	type	o type 3 : QUIT_NOTIFICATION 	231	0
2189	type	o type 4 : ECHO_REQUEST 	240	0
2189	type	o type 5 : ECHO_REPLY 	231	0
2189	type	o type 6 : FLUSH_TREE 	301	0
2189	type	o type 7 : Bootstrap Message ( optional ) 	240	0
2189	type	o Addr Length : address length in bytes of unicast or multicast addresses carried in the control packet . 	100	0
2189	group address	o group address : multicast group address of the group being joined . For a " wildcard " join ( see [ 5 ]), this field contains the value of INADDR_ANY . 	230	0
2189	target router	o target router : target ( core ) router for the group . 	230	0
2189	option len	o option type , option len , option value : see HELLO packet format , section 7.2 . 	231	0
2189	option value	o option type , option len , option value : see HELLO packet format , section 7.2 . 	231	0
2189	group address	o target router : router ( DR ) that originated the corresponding JOIN_REQUEST . 	230	0
2189	target router	o target router : router ( DR ) that originated the corresponding JOIN_REQUEST . 	230	0
2189	group address	o originating child router : address of the router that originates the QUIT_NOTIFICATION . 	230	0
2189	group address	this router considers itself a parent router w.r.t . the link over which this message is sent . 	230	0
2189	group address	o group address(es ): multicast group address(es ) of the group(s ) being " flushed ". 	230	0
2190	F	F : 1 bit The flag bit indicates the mode of the payload header . F=0 , mode A; F=1 , mode B or mode C depending on P bit defined below . 	210	0
2190	P	P : 1 bit Optional PB-frames mode as defined by the H.263 [ 4 ]. " 0 " implies normal I or P frame , " 1 " PB-frames . When F=1 , P also indicates modes : mode B if P=0 , mode C if P=1 . 	210	0
2190	SBIT	SBIT : 3 bits Start bit position specifies number of most significant bits that shall be ignored in the first data byte . 	110	0
2190	EBIT	EBIT : 3 bits End bit position specifies number of least significant bits that shall be ignored in the last data byte . 	500	0
2190	SRC	SRC : 3 bits Source format , bit 6,7 and 8 in PTYPE defined by H.263 [ 4 ], specifies the resolution of the current picture . 	200	0
2190	I	I : 1 bit . Picture coding type , bit 9 in PTYPE defined by H.263[4 ], " 0 " is intra-coded , " 1 " is inter-coded . 	210	0
2190	U	U : 1 bit Set to 1 if the Unrestricted Motion Vector option , bit 10 in PTYPE defined by H.263 [ 4 ] was set to 1 in the current picture header , otherwise 0 . 	210	0
2190	S	S : 1 bit Set to 1 if the Syntax-based Arithmetic Coding option , bit 11 in PTYPE defined by the H.263 [ 4 ] was set to 1 for current picture header , otherwise 0 . 	210	0
2190	A	A : 1 bit Set to 1 if the Advanced Prediction option , bit 12 in PTYPE defined by H.263 [ 4 ] was set to 1 for current picutre header , otherwise 0 . 	210	0
2190	R	R : 4 bits Reserved , must be set to zero . 	500	0
2190	DBQ	DBQ : 2 bits Differential quantization parameter used to calculate quantizer for the B frame based on quantizer for the P frame , when PB-frames option is used . The value should be the same as DBQUANT defined by H.263 [ 4 ]. Set to zero if PB-frames option is not used . 	231	0
2190	TRB	TRB : 3 bits Temporal Reference for the B frame as defined by H.263 [ 4 ]. Set to zero if PB-frames option is not used . 	302	0
2190	TR	TR : 8 bits Temporal Reference for the P frame as defined by H.263 [ 4 ]. Set to zero if the PB-frames option is not used . 	302	0
2190	QUANT	QUANT : 5 bits Quantization value for the first MB coded at the starting of the packet . Set to 0 if the packet begins with a GOB header . This is the equivalent of GQUANT defined by the H.263 [ 4 ]. 	231	0
2190	GOBN	GOBN : 5 bits GOB number in effect at the start of the packet . GOB number is specified differently for different resolutions . See H.263 [ 4 ] for details . 	231	0
2190	MBA	MBA : 9 bits The address within the GOB of the first MB in the packet , counting from zero in scan order . For example , the third MB in any GOB is given MBA = 2 . 	230	0
2190	HMV1	HMV1 , VMV1 : 7 bits each . Horizontal and vertical motion vector predictors for the first MB in this packet [ 4 ]. When four motion vectors are used for current MB with advanced prediction option , these would be the motion vector predictors for block number 1 in the MB . Each 7 bits field encodes a motion vector predictor in half pixel resolution as a 2's complement number . 	400	0
2190	HMV2	HMV2 , VMV2 : 7 bits each . Horizontal and vertical motion vector predictors for block number 3 in the first MB in this packet when four motion vectors are used with the advanced prediction option . This is needed because block number 3 in the MB needs different motion vector predictors from other blocks in the MB . These two fields are not used when the MB only has one motion vector . See the H.263 [ 4 ] for block organization in a macroblock . Each 7 bits field encodes a motion vector predictor in half pixel resolution as a 2's complement number . 	231	0
2190	R	R : 2 bits Reserved , must be set to zero . 	500	0
2198	F	F : 1 bit First bit in header indicates whether another header block follows . If 1 further header blocks follow , if 0 this is the last header block . 	210	0
2198	block PT	timestamp offset : 14 bits Unsigned offset of timestamp of this block relative to timestamp given in RTP header . The use of an unsigned offset implies that redundant data must be sent after the primary data , and is hence a time to be subtracted from the current timestamp to determine the timestamp of the data for which this block is the redundancy . 	110	0
2198	timestamp offset	timestamp offset : 14 bits Unsigned offset of timestamp of this block relative to timestamp given in RTP header . The use of an unsigned offset implies that redundant data must be sent after the primary data , and is hence a time to be subtracted from the current timestamp to determine the timestamp of the data for which this block is the redundancy . 	121	0
2198	block length	block length : 10 bits Length in bytes of the corresponding data block excluding header . 	100	0
2204	Version	Version 	220	0
2204	Flags	Flags 	202	0
2204	Length	Length 	100	0
2210	.	In the above fragment , the global break bit ( bit 23 of word 1 , marked with ( x ) in the picture ) is used to indicate the existence of a network element not supporting QoS control services somewhere in the data path . This bit is cleared when the ADSPEC is created , and set to one if a network element which does not support RSVP or integrated 	210	0
2210	V	V - Message format version; currently 0 OVERALL LENGTH - Message length in 32-bit words not including header 	231	0
2210	SVC_NUMBER	SVC_NUMBER - Service ID number ( defined in service specification ). B - Break bit - service unsupported/break in path . SVC_LENGTH - Service-specific data length in 32-bit words , not including header . 	240	0
2210	PARAM_NUM	PARAM_NUM - Parameter number ( defined in service specification ) FLAGS - Per-parameter flags PARAM_LENGTH - Length of per-parameter data in 32-bit words , not including the header word . 	100	0
2236	Type	There are three types of IGMP messages of concern to the host - router interaction : 	400	0
2236	Checksum	The checksum is the 16-bit one's complement of the one's complement sum of the whole IGMP message ( the entire IP payload ). For computing the checksum , the checksum field is set to zero . When transmitting packets , the checksum MUST be computed and inserted into this field . When receiving packets , the checksum MUST be verified before processing a packet . 	301	0
2236	Group Address	In a Membership Query message , the group address field is set to zero when sending a General Query , and set to the group address being queried when sending a Group-Specific Query . 	230	0
2250	C	Copyright ( C ) The Internet Society ( 1998 ). All Rights Reserved . 	302	0
2250	MBZ	MBZ : Unused . Must be set to zero in current specification . This space is reserved for future use . 	500	0
2250	T	T : MPEG-2 ( Two ) specific header extension present ( 1 bit ). Set to 1 when the MPEG-2 video-specific header extension ( see Section 3.4.1 ) follows this header . This extension may be needed for improved error resilience; however , its inclusion in an RTP packet is optional . ( See Appendix 1 .) 	210	0
2250	TR	TR : Temporal-Reference ( 10 bits ). The temporal reference of the current picture within the current GOP . This value ranges from 0-1023 and is constant for all RTP packets of a given picture . 	230	0
2250	N	N : New picture header ( 1 bit ). Used for MPEG-2 payloads when the previous bit ( AN ) is set to 1 . Otherwise , it must be set to zero . Set to 1 when the information contained in the previously transmitted Picture Headers can't be used to reconstruct a header for the current picture . This happens when the current picture is encoded using a different set of parameters than the previous pictures of the same type . The N bit must be constant for all RTP packets that belong to the same picture so that receipt of any packet from a picture allows detecting whether information necessary for reconstruction was contained in that picture ( N = 1 ) or a previous one ( N = 0 ). 	210	0
2250	S	S : Sequence-header-present ( 1 bit ). Normally 0 and set to 1 at the occurrence of each MPEG sequence header . Used to detect presence of sequence header in RTP packet . 	210	0
2250	B	B : Beginning-of-slice ( BS ) ( 1 bit ). Set when the start of the packet payload is a slice start code , or when a slice start code is preceded only by one or more of a Video_Sequence_Header , GOP_header and/or Picture_Header . 	210	0
2250	E	E : End-of-slice ( ES ) ( 1 bit ). Set when the last byte of the payload is the end of an MPEG slice . 	210	0
2250	P	P : Picture-Type ( 3 bits ). I ( 1 ), P ( 2 ), B ( 3 ) or D ( 4 ). This value is constant for each RTP packet of a given picture . Value 000B is forbidden and 101B - 111B are reserved to support future extensions to the MPEG ES specification . 	240	0
2250	X	X : Unused ( 1 bit ). Must be set to zero in current specification . This space is reserved for future use . 	500	0
2250	E	E : Extensions present ( 1 bit ). If set to 1 , this header extension , including the composite display extension when D = 1 , will be followed by one or more of the following extensions : quant matrix extension , picture display extension , picture temporal scalable extension , picture spatial scalable extension and copyright extension . 	210	0
2250	T	T : top_field_first ( 1 bit ) P : frame_predicted_frame_dct ( 1 bit ) C : concealment_motion_vectors ( 1 bit ) Q : q_scale type ( 1 bit ) V : intra_vlc_format ( 1 bit ) A : alternate scan ( 1 bit ) R : repeat_first_field ( 1 bit ) H : chroma_420_type ( 1 bit ) G : progressive frame ( 1 bit ) D : composite_display_flag ( 1 bit ). If set to 1 , next 32 bits following this one contains 12 zeros followed by 20 bits of composite display information . 	210	0
2250	Frag_offset	Frag_offset : Byte offset into the audio frame for the data in this packet . 	110	0
2250	C	This document and translations of it may be copied and furnished to others , and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared , copied , published and distributed , in whole or in part , without restriction of any kind , provided that the above copyright notice and this paragraph are included on all such copies and derivative works . However , this document itself may not be modified in any way , such as by removing the copyright notice or references to the Internet Society or other Internet organizations , except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed , or as required to translate it into languages other than English . 	302	0
2257	n_subid	The number ( 0-128 ) of sub-identifiers in the object identifier . An ordered list of " n_subid " 4-byte sub-identifiers follows the 4-byte header . 	231	0
2257	prefix	An unsigned value used to reduce the length of object identifier encodings . A non-zero value " x " is interpreted as the first sub-identifier after " internet " ( 1.3.6.1 ), and indicates an implicit prefix " internet.x " to the actual sub - identifiers encoded in the Object Identifier . For example , a prefix field value 2 indicates an implicit prefix " 1.3.6.1.2 ". A value of 0 in the prefix field indicates there is no prefix to the sub-identifiers . 	231	0
2257	include	Used only when the Object Identifier is the start of a SearchRange , as described in section 5.2 . 	201	0
2257	v.type	Indicates the variable binding's syntax , and must be one of the following values : 	231	0
2257	h.version	h.version 	220	0
2257	h.type	h.type 	231	0
2257	h.flags	A bitmask , with bit 0 the least significant bit . The bit definitions are as follows : 	231	0
2257	h.sessionID	The session ID uniquely identifies a session over which AgentX PDUs are exchanged between a subagent and the master agent . The session ID has no significance and no defined value in the agentx-Open-PDU sent by a subagent to open a session with the master agent; in this case , the master agent will assign a unique sessionID that it will pass back in the corresponding agentx-Response-PDU . From that point on , that same sessionID will appear in every AgentX PDU exchanged over that session between the master and the subagent . A subagent may establish multiple AgentX sessions by sending multiple agentx-Open-PDUs to the master agent . 	230	0
2257	h.transactionID	The transaction ID uniquely identifies , for a given session , the single SNMP management request ( and single SNMP PDU ) with which an AgentX PDU is associated . If a single SNMP management request results in multiple AgentX PDUs being sent by the master agent with the same sessionID , each of these AgentX PDUs must contain the same transaction ID; conversely , AgentX PDUs sent during a particular session , that result from distinct SNMP management requests , must have distinct transaction IDs within the limits of the 32-bit field ). 	230	0
2257	h.packetID	A packet ID generated by the sender for all AgentX PDUs except the agentx-Response-PDU . In an agentx-Response-PDU , the packet ID must be the same as that in the received AgentX PDU to which it is a response . A master agent might use this field to associate subagent response PDUs with their corresponding request PDUs . A subagent might use this field to correlate responses to multiple ( batched ) registrations . 	230	0
2257	h.payload_length	The size in octets of the PDU contents , excluding the 20-byte header . As a result of the encoding schemes and PDU layouts , this value will always be either 0 , or a multiple of 4 . 	100	0
2257	c.reason	An enumerated value that gives the reason that the master agent or subagent closed the AgentX session . This field may take one of the following values : 	230	0
2257	r.timeout	The length of time , in seconds , that a master agent should allow to elapse after dispatching a message to a subagent before it regards the subagent as not responding . r.timeout applies only to messages that concern MIB objects within r.region . It overrides both the subagent-wide value ( if any ) indicated when the AgentX session with the master agent was established , and the master agent's default timeout . The default value for r.timeout is 0 ( no override ). 	120	0
2257	r.priority	A value between 1 and 255 , used to achieve a desired configuration when different subagents register identical or overlapping regions . Subagents with no particular knowledge of priority should register with the default value of 255 ( lowest priority ). 	201	0
2257	r.range_subid	Permits specifying a range in place of one of r.region's sub - identifiers . If this value is 0 , no range is specified . Otherwise the " r.range_subid"-th sub-identifier in r.region is a range lower bound , and the range upper bound sub-identifier ( r.upper_bound ) immediately follows r.region . 	231	0
2257	u.priority	u.priority 	303	0
2257	h.sessionID	If this is a response to a agentx-Open-PDU , then it contains the new and unique sessionID ( as assigned by the master agent ) for this session . 	400	0
2257	h.transactionID	Must be identical to the h.transactionID value in the PDU to which this PDU is a response . 	231	0
2257	h.packetID	Must be identical to the h.packetID value in the PDU to which this PDU is a response . 	231	0
2257	res.sysUpTime	This field contains the current value of sysUpTime for the indicated context . It is relevant only in agentx response PDUs sent from the master agent to a subagent in response to the following agentx PDUs : 	400	0
2257	res.error	Indicates error status ( including ` noError '). Values are limited to those defined for errors in the SNMPv2 SMI ( RFC 1905 [ 4 ]), and the following AgentX-specific values : 	231	0
2257	res.index	In error cases , this is the index of the failed variable binding within a received request PDU . ( Note : As explained in section 5.4 , Value Representation , the index values of variable bindings within a variable binding list are 1-based .) 	231	0
2257	4	If r.region ( or any of its set of Object Identifiers , if r.range is non-zero ) is exactly the same as any currently registered value of r.region ( or any of its set of Object Identifiers ), this registration is termed a duplicate region . 	231	0
2257	1	Because AgentX supports overlapping registrations , it is possible for the master agent to obtain a value for a requested varbind from within multiple registered MIB regions . 	303	0
2257	2	The master agent may choose to send agentx-Get-PDUs while servicing an SNMP GetNextRequest-PDU . The master agent may choose to send agentx-Get-PDUs or agentx-GetNext-PDUs while servicing an SNMP GetBulkRequest-PDU . One possible reason for this would be if the current iteration has targeted instance-level registrations . 	231	0
2257	3	For Get/GetNext/GetBulk operations , at any stage of the possibly iterative process , the master agent may need to dispatch several SearchRanges to a particular subagent session . The master agent may send one , some , or all of the SearchRanges in a single AgentX PDU . 	303	0
2257	4	The master agent chooses a timeout value for each MIB region being queried , which is 	201	0
2257	5	If the master agent has determined that a specific non-default context is associated with the SNMP request PDU , that context is encoded into the AgentX PDU's context field and the NON_DEFAULT_CONTEXT bit is set in h.flags . 	400	0
2257	1	Within a lexicographically ordered set of OID ranges , valid for the indicated context , locate the authoritative region that contains the binding's name . 	400	0
2257	1	Within a lexicographically ordered set of OID ranges , valid for the indicated context , locate 	400	0
2257	1	Within a lexicographically ordered set of OID ranges , valid for the indicated context , locate the authoritative range that contains the variable binding's name . 	400	0
2257	1	( 2 ) If the starting OID exactly matches the name of a variable instantiated by this subagent within the indicated context and session , v.type and v.data are encoded to represent the variable's syntax and value , as described in section 5.4 , Value Representation . 	210	0
2266	C	Copyright ( C ) The Internet Society ( 1998 ). All Rights Reserved . 	303	0
2266	V	V : Valid : set when at least one error-free training frame has been received . Indicates the 16 training configuration bits in vgRptrPortLastTrainConfig and vgRptrPortTrainingResult contain valid information . This bit is cleared when vgRptrPortStatus transitions to the ' inactive ' or ' training ' state . G : LinkGood : indicates the link hardware is OK . Set if 24 consecutive error-free training packets have been exchanged . Cleared when a training packet with errors is received , or when vgRptrPortStatus transitions to the ' inactive ' or ' training ' state . 	231	0
2266	C	This document and translations of it may be copied and furnished to others , and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared , copied , published and distributed , in whole or in part , without restriction of any kind , provided that the above copyright notice and this paragraph are included on all such copies and derivative works . However , this document itself may not be modified in any way , such as by removing the copyright notice or references to the Internet Society or other Internet organizations , except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed , or as required to translate it into languages other than English . 	302	0
2281	Version	Version : 1 octet 	220	0
2281	Op Code	The Op Code describes the type of message contained in this packet . Possible values are : 	231	0
2281	State	Internally , each router in the standby group implements a state machine . The State field describes the current state of the router sending the message . Details on the individual states are described below . Possible values are : 	240	0
2281	Hellotime	This field is only meaningful in Hello messages . It contains the approximate period between the Hello messages that the router sends . The time is given in seconds . 	121	0
2281	Holdtime	This field is only meaningful in Hello messages . It contains the amount of time that the current Hello message should be considered valid . The time is given in seconds . 	120	0
2281	Priority	This field is used to elect the active and standby routers . When comparing priorities of two different routers , the router with the numerically higher priority wins . In the case of routers with equal priority the router with the higher IP address wins . 	231	0
2281	Group	Group : 1 octet 	400	0
2281	Authentication Data	Authentication Data : 8 octets 	400	0
2281	Virtual IP Address	Virtual IP Address : 4 octets 	230	0
2281	Priority	Priority 	302	0
2281	Authentication Data	Authentication Data 	400	0
2281	Hellotime	Hellotime 	202	0
2281	Holdtime	The following information MUST be known to at least one router in each standby group and MAY be known by any of the other routers in the group . 	400	0
2281	Virtual IP Address	Virtual IP Address 	230	0
2284	Type	Type 	240	0
2284	Length	Length 	100	0
2284	Authentication-Protocol	Authentication-Protocol 	400	0
2284	Code	The Code field is one octet and identifies the type of EAP packet . EAP Codes are assigned as follows : 	231	0
2284	Identifier	The Identifier field is one octet and aids in matching responses with requests . 	301	0
2284	Length	The Length field is two octets and indicates the length of the EAP packet including the Code , Identifier , Length and Data fields . Octets outside the range of the Length field should be treated as Data Link Layer padding and should be ignored on reception . 	100	0
2284	Code	Code 	231	0
2284	Identifier	The Identifier field is one octet . The Identifier field MUST be the same if a Request packet is retransmitted due to a timeout while waiting for a Response . Any new ( non-retransmission ) Requests MUST modify the Identifier field . If a peer recieves a duplicate Request for which it has already sent a Response , it MUST resend it's Response . If a peer receives a duplicate Request before it has sent a Response to the initial Request ( i.e . it's waiting for user input ), it MUST silently discard the duplicate Request . 	301	0
2284	Length	The Length field is two octets and indicates the length of the EAP packet including the Code , Identifier , Length , Type , and Type-Data fields . Octets outside the range of the Length field should be treated as Data Link Layer padding and should be ignored on reception . 	100	0
2284	Type	The Type field is one octet . This field indicates the Type of Request or Response . Only one Type MUST be specified per EAP Request or Response . Normally , the Type field of the Response will be the same as the Type of the Request . However , there is also a Nak Response Type for indicating that a Request type is unacceptable to the peer . When sending a Nak in response to a Request , the peer MAY indicate an alternative desired authentication Type which it supports . An initial specification of Types follows in a later section of this document . 	240	0
2284	Code	Code 	231	0
2284	Identifier	The Identifier field is one octet and aids in matching replies to Responses . The Identifier field MUST match the Indentifier field of the Response packet that it is sent in response to . 	301	0
2284	Length	Length 	100	0
2284	Type	Type 	240	0
2284	Type	Type 	240	0
2284	Type	Type 	240	0
2284	Type	Type 	240	0
2284	Type	Type 	240	0
2284	Type	Type 	240	0
2290	Type	Type 	240	0
2290	Length	Length 	100	0
2297	C	Copyright ( C ) The Internet Society ( 1998 ). All Rights Reserved . 	303	0
2297	Flags	M : Multicast The Multicast flag is used as a hint for point-to - multipoint connections in the Add Branch message . It is not used in any other connection management messages and in these messages it should be set to zero . If set , it indicates that the virtual channel connection or the virtual path connection is very likely to be a point-to - multipoint connection . If zero , it indicates that this connection is very likely to be a point-to-point connection or is unknown . 	210	0
2297	M	M : Multicast The Multicast flag is used as a hint for point-to - multipoint connections in the Add Branch message . It is not used in any other connection management messages and in these messages it should be set to zero . If set , it indicates that the virtual channel connection or the virtual path connection is very likely to be a point-to - multipoint connection . If zero , it indicates that this connection is very likely to be a point-to-point connection or is unknown . 	210	0
2297	Q	Q : QoS Profile The QoS Profile flag , if set , indicates that the Class of Service field contains a QoS Profile Identifier . If this flag is zero , it indicates that the Class of Service field contains a Priority or a Scheduler Identifier . 	210	0
2297	B	B : Bidirectional The Bidirectional flag applies only to the Add Branch message . In all other Connection Management messages it is not used . It may only be used when establishing a point - to-point connection . The Bidirectional flag in an Add Branch message , if set , requests that two unidirectional virtual channels or virtual paths be established , one in the forward direction , and one in the reverse direction . It is equivalent to two Add Branch messages , one specifying the forward direction , and one specifying the reverse direction . The forward direction uses the values of Input Port , Input VPI , Input VCI , Output Port , Output VPI , and Output VCI as specified in the Add Branch message . The reverse direction is derived by exchanging the values specified in the Input Port , Input VPI , and Input VCI fields , with those of the Output Port , Output VPI , and Output VCI fields respectively . Thus , a virtual connection in the reverse direction arrives at the input port specified by the Output Port field , on the VPI/VCI specified by the Output VPI and Output VCI fields . It departs from the output port specified by the Input Port 	231	0
2297	C	C : Congestion Indication The Congestion Indication flag , if set , requests that cells on this connection be marked if congestion is experienced . If this connection passes through a queue that the switch considers to be congested , the Congestion Experienced bit will be set in the Payload Type field of the cell header of all cells on the connection . GSMP does not specify the algorithm or any threshold by which the switch decides when a queue is congested . 	210	0
2297	x	Output VPI Identifies an outgoing virtual path departing from the switch output port indicated in the Output Port field . 	230	0
2297	U	U : Port Up Bit 0 , ( most significant bit ) D : Port Down Bit 1 , I : Invalid VPI/VCI Bit 2 , N : New Port Bit 3 , Z : Dead Port Bit 4 , x : Unused Bits 5--7 . 	240	0
2297	Flags	Q : Query If the Query flag is set in a request message , the switch must respond with the current range of valid VPIs , or the current range of valid VCIs on a specified VPI , according to the VPI/VCI flag . The current label range is not changed by a request message with the Query flag set . If the Query flag is zero , the message is requesting a label change operation . 	210	0
2297	Q	Q : Query If the Query flag is set in a request message , the switch must respond with the current range of valid VPIs , or the current range of valid VCIs on a specified VPI , according to the VPI/VCI flag . The current label range is not changed by a request message with the Query flag set . If the Query flag is zero , the message is requesting a label change operation . 	210	0
2297	V	V : VPI/VCI If the VPI/VCI flag is set , the message refers to a range of VPIs only . The Min VCI and Max VCI fields are unused . If the VPI/VCI flag is zero the message refers to a range of VCIs on either one VPI or on a range of VPIs . 	210	0
2297	x	Min VPI Max VPI Specify a range of VPI values , Min VPI to Max VPI inclusive . A single VPI may be specified with a Min VPI and a Max VPI having the same value . In a request message , if the value of the Max VPI field is less than or equal to the value of the Min VPI field , the requested range is a single VPI with a value equal to the Min VPI field . Zero is a valid value . In a request message , if the Query flag is set , and the VPI/VCI flag is zero , the Max VPI field specifies a single VPI and the Min VPI field is not used . The maximum valid value of these fields for both request and response messages is 0xFFF . 	231	0
2297	Flags	V : Valid Record In the success response message the Valid Record flag is used to indicate an invalid Activity Record . The flag must be zero if any of the fields in this Activity Record are invalid , if the input port specified by the Input Port field does not exist , or if the specified connection does not exist . If the Valid Record flag is zero in a success response message , the Counter flag , the Activity flag , and the VC Traffic Count field are undefined . If the Valid Record flag is set , the Activity Record is valid , and the Counter and Activity flags are valid . The Valid Record flag is not used in the request message . 	210	0
2297	V	V : Valid Record In the success response message the Valid Record flag is used to indicate an invalid Activity Record . The flag must be zero if any of the fields in this Activity Record are invalid , if the input port specified by the Input Port field does not exist , or if the specified connection does not exist . If the Valid Record flag is zero in a success response message , the Counter flag , the Activity flag , and the VC Traffic Count field are undefined . If the Valid Record flag is set , the Activity Record is valid , and the Counter and Activity flags are valid . The Valid Record flag is not used in the request message . 	210	0
2297	C	C : Counter In a success response message , if the Valid Record flag is set , the Counter flag , if zero , indicates that the value in the VC Traffic Count field is valid . If set , it indicates that the value in the Activity flag is valid . The Counter flag is not used in the request message . 	210	0
2297	A	A : Activity In a success response message , if the Valid Record and Counter flags are set , the Activity flag , if set , indicates that there has been some activity on this connection since the last Connection Activity message for this connection . If zero , it indicates that there has been no activity on this connection since the last Connection Activity message for this connection . The Activity flag is not used in the request message . 	210	0
2297	x	Traffic Count Field is not used in the request message . In the success response message , if the switch supports per connection traffic counting , the Traffic Count field must be set to the value of a free running , connection specific , 64-bit traffic counter counting traffic flowing across the specified connection . The value of the traffic counter is not modified by reading it . If per connection traffic counting is supported , the switch must report the Connection Activity result using the traffic count rather than using the Activity flag . 	231	0
2297	Flags	A : All Connections If the All Connections flag is set , the message requests the connection state for all virtual path connections and virtual channel connections that arrive at the input port specified by the Input Port field . In this case the Input VPI and Input VCI fields and the VPI/VCI flag are unused . 	210	0
2297	A	A : All Connections If the All Connections flag is set , the message requests the connection state for all virtual path connections and virtual channel connections that arrive at the input port specified by the Input Port field . In this case the Input VPI and Input VCI fields and the VPI/VCI flag are unused . 	210	0
2297	V	V : VPI/VCI If the All Connections flag is zero and the VPI/VCI flag is set , the message requests the connection state for the virtual path connection that arrives at the input port specified by the Input Port and Input VPI fields . If the specified Input VPI identifies a virtual path connection ( i.e . a single switched virtual path ) the state for that connection is requested . If the specified Input VPI identifies a virtual path containing virtual channel connections , the message requests the connection state for all virtual channel connections that belong to the specified virtual path . The Input VCI field is not used . 	210	0
2297	x	Input VPI Input VCI Fields identify the specific virtual path connection , the specific virtual path , or the specific virtual channel connection for which connection state is being requested . For a virtual path connection ( switched as a single virtual path connection ) or a virtual path ( switched as one or more virtual channel connections within the virtual path ) the Input VCI field is not used . For requests that do not require a virtual path connection or virtual channel connection to be specified , the Input VPI and Input VCI fields are not used . 	400	0
2297	Flags	A : All Connections V : VPI/VCI For the first Connection Record in each success response message the All Connections and the VPI/VCI flags must be the same as those of the request message . For successive Connection Records in the same success response message these flags are not used . 	240	0
2297	A	A : All Connections V : VPI/VCI For the first Connection Record in each success response message the All Connections and the VPI/VCI flags must be the same as those of the request message . For successive Connection Records in the same success response message these flags are not used . 	240	0
2297	P	P : VPC The VPC flag , if set , indicates that the Connection Record refers to a virtual path connection . If zero , it indicates 	210	0
2297	M	M : More If the More flag is set , it indicates that another Connection Record , in response to the same request message , will follow either in the same success response message or in a successive success response message . If the More flag is zero it indicates that this is the last Connection record in this success response message and that no further success response messages will be sent in response to the current request message . It indicates that the response to the request message is now complete . 	210	0
2297	Flags	L : Last Branch The Last Branch flag , if set , indicates that this is the last Output Branch Record of this Connection Record . If zero , it indicates that one or more further Output Branch Records are to follow . If this is the last Output Branch Record in the message and the Last Branch flag is zero , further output branches belonging to the same connection will be given in another Connection Record . This Connection Record will be the first Connection Record in the next success response message . This Connection Record must have the same Input VPI and Input VCI values as the current Connection Record . 	210	0
2297	L	L : Last Branch The Last Branch flag , if set , indicates that this is the last Output Branch Record of this Connection Record . If zero , it indicates that one or more further Output Branch Records are to follow . If this is the last Output Branch Record in the message and the Last Branch flag is zero , further output branches belonging to the same connection will be given in another Connection Record . This Connection Record will be the first Connection Record in the next success response message . This Connection Record must have the same Input VPI and Input VCI values as the current Connection Record . 	210	0
2297	x	Output VPI Output VCI The output VPI and VCI of the output branch specified in this Output Branch Record . If this Output Branch Record is part of a Connection Record that specifies a virtual path connection ( the VPC flag is set ) the Output VCI field is unused . 	400	0
2297	Flags	V : VP Switching The VP Switching flag , if set , indicates that this input port is capable of supporting virtual path switching . Else , if zero , it indicates that this input port is only capable of virtual channel switching . 	210	0
2297	V	V : VP Switching The VP Switching flag , if set , indicates that this input port is capable of supporting virtual path switching . Else , if zero , it indicates that this input port is only capable of virtual channel switching . 	210	0
2297	M	M : Multicast Labels The Multicast Labels flag , if set , indicates that this output port is capable of labelling each output branch of a point-to-multipoint tree with a different label . If zero , it indicates that this output port is not able to label 	210	0
2297	L	L : Logical Multicast The Logical Multicast flag , if set , indicates that this output port is capable of supporting more than a single branch from any point-to-multipoint connection . This capability is often referred to as logical multicast . If zero , it indicates that this output port can only support a single output branch from each point-to-multipoint connection . 	210	0
2297	R	R : Label Range The Label Range flag , if set , indicates that this switch port is capable of reallocating its VPI label range or its VCI label range and therefore accepts the Label Range message . Else , if zero , it indicates that this port does not accept Label Range messages . 	210	0
2297	Q	Q : QoS The QoS flag , if set , indicates that this switch port is capable of handling the Quality of Service messages defined in section 9 of this specification . Else , if zero , it indicates that this port does not accept the Quality of Service messages . 	210	0
2297	x	Min VPI The default minimum value of dynamically assigned incoming VPI that the connection table on the input port supports and that may be controlled by GSMP . This value is not changed as a result of the Label Range message . 	231	0
2297	Scheduler Flags	W : Weighted Connections Bit 0 of the Scheduler Flags field , if set , indicates that a weighted service algorithm ( such as weighted round-robin ) is available for allocation of service to individual connections within at least some waiting rooms . It means that a Connection Weight parameter can be attached to a QoS Connection Management message . Not all waiting rooms at all priority levels may be able to support this function . Whether a particular waiting room can support this function will be discovered when a QoS Connection Management message is issued . 	301	0
2297	W	W : Weighted Connections Bit 0 of the Scheduler Flags field , if set , indicates that a weighted service algorithm ( such as weighted round-robin ) is available for allocation of service to individual connections within at least some waiting rooms . It means that a Connection Weight parameter can be attached to a QoS Connection Management message . Not all waiting rooms at all priority levels may be able to support this function . Whether a particular waiting room can support this function will be discovered when a QoS Connection Management message is issued . 	301	0
2297	Q	Q : Weighted QoS Classes Bit 1 of the Scheduler Flags field , if set , indicates that a weighted service algorithm ( such as weighted round-robin ) is available for allocation of service to QoS classes within at least some waiting rooms . It means that a QoS Class Weight parameter can be attached to a QoS Class Establishment message . Not all waiting rooms at all priority levels may be able to support this function . Whether a particular waiting room can support this function will be discovered when a QoS Class Establishment message is issued . 	231	0
2297	S	S : Shared Waiting Room Bit 2 of the Scheduler Flags field , if set , indicates that multiple QoS classes and multiple connections may be scheduled within a single waiting room . This is expected to be the normal case . If Bit 2 of the Scheduler Flags field is zero , it indicates that only a single QoS class or a single connection may be directed to any single waiting room . 	240	0
2297	G	G : Global Max Classes Bit 3 of the Scheduler Flags field , if set , indicates that the Max Classes field gives the maximum number of QoS classes that may be supported by the entire switch . If zero , it indicates that the Max Classes field gives the maximum number of QoS classes that may be supported by this switch port . 	210	0
2297	D	D : Packet Discard Bit 4 of the Scheduler Flags field , if set , indicates that the scheduler on this output port is capable of packet discard . Packet discard indicates a discard algorithm that is aware of AAL-5 packet boundaries and attempts to discard whole packets . No specific algorithm is indicated though Early Packet Discard ( EPD ) is likely to be the most common . Other algorithms such as " push from front " schemes , dynamic threshold , or Random Early Detection ( RED ) are also examples of possible packet discard algorithms . The only parameters available to the packet discard algorithm , via GSMP , are the Size and Discard Threshold of the waiting room . 	210	0
2297	F	F : Frame-Based Scheduling Bit 5 of the Scheduler Flags field , if set , indicates that the scheduler on this output port is capable of frame-based scheduling . In frame-based scheduling , a connection is only scheduled for transmission when a complete AAL-5 packet is available . When a connection is scheduled for transmission , all cells belonging to one or more complete packets from that connection will be transmitted without being interleaved with any other cells on that output port ( regardless of their priority ). Frame-based scheduling is a property of the waiting room and is requested in the Scheduler Establishment message . A QoS class may be routed through a waiting room configured with frame-based scheduling . In this case each component connection of the QoS class will receive frame based scheduling . For correct distribution of bandwidth , each QoS class that requires frame-based scheduling should have its own waiting room . 	210	0
2297	M	M : VC Merging Bit 6 of the Scheduler Flags field , if set , indicates that the scheduler on this output port is capable of VC merging by a mechanism other than frame-based scheduling . VC merging indicates that the switch is capable of the multipoint-to-point merging of two or more incoming virtual connections onto a single outgoing virtual connection without interleaving cells from different AAL-5 packets that bear the same VPI/VCI . VC merging differs from frame - based scheduling in that cells with a different VPI/VCI may be interleaved with those of a multipoint-to-point VC merging connection . Thus , higher priority cells may be interleaved during the transmission of a packet on a lower priority VC merging connection . Most switches achieve VC merging by using frame-based scheduling . VC merging is a property of the waiting room and is requested in the 	210	0
2297	B	B : Shared Buffer Bit 7 of the Scheduler Flags field , if set , indicates that at least some of the buffer space specified by the Max Buffer field is shared with other ports . If zero , it indicates that the buffer space specified by the Max Buffer field is not shared with other ports . 	210	0
2297	I	I : Identical Ports Bit 8 of the Scheduler Flags field , if set , indicates that all ports of the switch have identical QoS capabilities . If this bit is set the controller does not have to request the QoS configuration of each port individually as all ports have the same capability . 	231	0
2297	x	x : Bits 9--15 of the Scheduler Flags field are not used . 	500	0
2297	Regulator Flags	C : Connection Policing Bit 0 of the Regulator Flags field indicates that this input port supports the policing of individual incoming connections . The parameters for the policer are specified in the QoS Connection Management message when the connection is established . 	301	0
2297	C	C : Connection Policing Bit 0 of the Regulator Flags field indicates that this input port supports the policing of individual incoming connections . The parameters for the policer are specified in the QoS Connection Management message when the connection is established . 	301	0
2297	Q	Q : QoS Class Policing If bit 1 of the Regulator Flags field is set , a policer function is available to police each QoS class on output from the classifier . The parameters for this policer are specified in the QoS Class Establishment message . If this bit is zero , no policer function is available to police a QoS class . 	301	0
2297	P	P : If bit 4 of the Regulator Flags field is set , the regulator is able to support the policing function . 	210	0
2297	S	S : If bit 5 of the Regulator Flags field is set , the regulator is able to support the shaping function on all priority levels of the scheduler . 	301	0
2297	H	H : If bit 5 of the Regulator Flags field is zero and bit 6 is set , the regulator is able to support the shaping function but only on the highest priority level of the scheduler . All connections and QoS classes using this regulator must be routed to a waiting room at the highest priority level of the scheduler . 	210	0
2297	M	M : QoS Multicast If bit 7 of the Regulator Flags field is set , any point - to-multipoint connection arriving on this input port , with QoS parameters established by the GSMP Quality of Service messages , must use the same QoS parameters for all output branches . 	400	0
2297	x	x : Bits 8--15 of the Regulator Flags field are not used . 	500	0
2297	Excess Capabilities	Excess Capabilities 	301	0
2297	D	D : If bit 0 of the Excess Capabilities field is set , the policer function of the regulator is able to support discard . 	210	0
2297	T	T : If bit 1 of the Excess Capabilities field is set , the policer function of the regulator is able to support tagging . 	210	0
2297	S	S : If bit 2 of the Excess Capabilities field is set , the policer function of the regulator is able to support differentiated scheduling . 	210	0
2297	A	A : If bit 3 of the Excess Capabilities field is set , the shaper function of the regulator is able to support tagging . 	210	0
2297	B	B : If bit 4 of the Excess Capabilities field is set , the shaper function of the regulator is able to support differentiated scheduling . 	210	0
2297	x	Hi Sharing Lo Sharing Defines a range of priority levels that support weighted sharing . Each priority level in the range Lo Sharing to Hi Sharing inclusive , supports weighted sharing . A priority level that supports weighted sharing offers a weighted sharing algorithm ( for example , weighted round-robin ) between waiting rooms within that priority level . This permits the output link bandwidth available at that priority level , to be shared between the waiting rooms allocated to that priority level , according to the Net Weight parameter of each waiting room . The value 0xFF for both parameters indicates that this output port does not support weighted sharing in any priority level . 	231	0
2297	B	A Net Weight of zero indicates equal sharing between all waiting rooms sharing this priority level that request a Net Weight of zero . While a 16-bit field is used to specify the Net Weight it is understood that the accuracy of the bandwidth sharing is hardware dependent and is not specified . 	231	0
2297	Flags	D : Packet Discard Bit 0 of the Flags field , if set , indicates that packet discard is required on all connections and QoS classes routed through this waiting room . 	210	0
2297	D	D : Packet Discard Bit 0 of the Flags field , if set , indicates that packet discard is required on all connections and QoS classes routed through this waiting room . 	210	0
2297	F	F : Frame-Based Scheduling Bit 1 of the Flags field , if set , indicates that frame - based scheduling is required on all connections and QoS classes routed through this waiting room . In frame-based scheduling , a connection is only scheduled for transmission when a complete AAL-5 packet is available . When a connection is scheduled for transmission , all cells belonging to one or more complete packets from that connection will be transmitted without being interleaved with any other cells on that output port . A QoS class may be routed through a waiting room configured with frame - based scheduling . In this case each component connection of the QoS class will receive frame based scheduling . For correct distribution of bandwidth , each QoS class that requires frame-based scheduling should have its own waiting room . 	210	0
2297	M	M : VC Merging Bit 2 of the Scheduler Flags field , if set , indicates that VC merging is required on all connections and QoS classes routed through this waiting room . VC merging enables the multipoint-to-point merging of two or more incoming virtual connections onto a single outgoing virtual connection , without interleaving cells from different AAL-5 packets that bear the same VPI/VCI . VC merging differs from frame - based scheduling in that cells with a different VPI/VCI may be interleaved with those of a multipoint-to-point VC merging connection . Most switches achieve VC merging by 	301	0
2297	W	W : Weighted Scheduling Bit 3 of the Flags field , if set , indicates that weighted scheduling is required on all connections and QoS classes routed through this waiting room . All connections and QoS classes routed through this waiting room will require a Connection Weight or a QoS Class Weight respectively . The Connection Weight is specified in the QoS Connection Management message . The QoS Class Weight is specified in the QoS Class Establishment message . If weighted scheduling within this waiting room is unavailable , a failure response message must be returned indicating , " Weighted scheduling within this waiting room is unavailable ." 	301	0
2297	x	Priority Specifies the priority level in the scheduler to which the waiting room should be attached . Priorities are numbered from zero , with priority level zero being the highest priority . 	231	0
2297	Excess Action	T : Tagging If bit 0 of the Excess Action field is set , all cells transferred to the waiting room specified by the Excess Scheduler Id will have their CLP bit set . If bit 0 of the Excess Action field is zero , the CLP bit of cells transferred to the waiting room specified by the Excess Scheduler Id will remain unchanged . 	210	0
2297	T	T : Tagging If bit 0 of the Excess Action field is set , all cells transferred to the waiting room specified by the Excess Scheduler Id will have their CLP bit set . If bit 0 of the Excess Action field is zero , the CLP bit of cells transferred to the waiting room specified by the Excess Scheduler Id will remain unchanged . 	210	0
2297	D	D : Discard This function is only available if policing is selected as the regulator function . If the Regulator field specifies Policing , and bit 1 of the Excess Action field is set , all cells determined by the policer to be in excess of the traffic parameters must be discarded . In this case the Excess Scheduler Id is not used and bit 0 of the Excess Action field should be ignored . 	210	0
2297	S	S : Differentiated Scheduling This function operates differently according to whether policing or shaping is selected as the regulator function . 	231	0
2297	x	QoS Class Weight If bit 1 of the Scheduler Flags field of the QoS Configuration message indicates that weighted service may be applied to a QoS class , the QoS Class Weight parameter specifies the share of the bandwidth available to the waiting room that should be given to this QoS class . 	231	0
2297	B	A QoS Class Weight of zero indicates equal sharing between all QoS classes sharing this waiting room that request a QoS Class Weight of zero . While a 16-bit field is used to specify the QoS Class Weight it is understood that the accuracy of the bandwidth sharing is hardware dependent and is not specified . 	231	0
2297	Q	Q : QoS Profile Flag The QoS Profile flag is not used in the QoS Connection Management message . 	231	0
2297	B	A Connection Weight of zero indicates equal sharing between all connections in this waiting room that request a Connection Weight of zero . While a 16-bit field is used to specify the Connection Weight it is understood that the accuracy of the bandwidth sharing is hardware dependent and is not specified . 	231	0
2297	S	S : Selective Discard If the Selective Discard flag is set , only cells with the Cell Loss Priority ( CLP ) bit set will be subject to the discard mechanism when the number of cells in the waiting room exceeds the Discard Threshold . If the Selective Discard flag is zero , all cells ( CLP=0 and CLP=1 ) will be subject to the discard mechanism when the number of cells in the waiting room exceeds the Discard Threshold . Selective discard can be combined with packet discard . In this case only packets in which at least one cell has the CLP bit set will be subject to the discard mechanism . 	210	0
2297	A	A : All Branches For a QoS Connection Management message that specifies a point-to-multipoint connection , if the All Branches flag is set , all branches of the point-to-multipoint connection must be set to the QoS parameters specified in the message . If the All Branches flag is zero , only the single output branch specified in the message should be set to the QoS parameters specified in the message . For a QoS Connection Management message that specifies a point-to-point connection , the All Branches flag is not used . 	400	0
2297	x	Excess Scheduler Id For connections of style " QoS Connection " and " QoS Class Connection ," the Excess Scheduler Id points to the waiting room , on the output port specified by the Output Port field , to which all excess traffic should be routed . The values 0 -- 255 specify the default settings for the scheduler . Each of the default values maps directly to one of the scheduler priority levels . An Excess Scheduler Id in the range 0 -- 255 may be used without first being established by a Scheduler Establishment message . All 	230	0
2297	Flags	C : Configuration If the Configuration flag is set , the policer should be set to the All Cells configuration . If the Configuration flag is zero , the policer should be set to the CLP Selective configuration . 	210	0
2297	C	C : Configuration If the Configuration flag is set , the policer should be set to the All Cells configuration . If the Configuration flag is zero , the policer should be set to the CLP Selective configuration . 	210	0
2297	A	A : Action If the Action flag is zero , discard is required as the policing action . If the Action flag is set , tagging is required as the policing action . 	210	0
2297	x	Regulator Parameters Only connections of style " QoS Connection " require the Regulator Parameters to be specified in the QoS Connection Management message . For connections of style " QoS Class Connection " and " QoS Class Member " the Regulator Parameters are specified in the QoS Class Establishment message . 	231	0
2297	A	A The Sender Instance in the incoming message matches the value stored from a previous message by the " Update Peer Verifier " operation . 	301	0
2297	B	B The Sender Instance , Sender Port , and Sender Name fields in the incoming message match the values stored from a previous message by the " Update Peer Verifier " operation . 	240	0
2297	C	C The Receiver Instance , Receiver Port , and Receiver Name fields in the incoming message match the values of the Sender Instance , Sender Port , and Sender Name currently sent in outgoing SYN , SYNACK , and ACK messages . 	240	0
2297	C	This document and translations of it may be copied and furnished to others , and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared , copied , published and distributed , in whole or in part , without restriction of any kind , provided that the above copyright notice and this paragraph are included on all such copies and derivative works . However , this document itself may not be modified in any way , such as by removing the copyright notice or references to the Internet Society or other Internet organizations , except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed , or as required to translate it into languages other than English . 	302	0
2328	Type	Type Packet name Protocol function __________________________________________________________ 1 Hello Discover/maintain neighbors 2 Database Description Summarize database contents 3 Link State Request Database download 4 Link State Update Database update 5 Link State Ack Flooding acknowledgment 	240	0
2328	AuType	AuType and Authentication Each OSPF packet exchange is authenticated . Authentication types are assigned by the protocol and are documented in Appendix D . A different authentication procedure can be used for each IP network/subnet . Autype indicates the type of authentication procedure in use . The 64-bit authentication field is then for use by the chosen authentication procedure . This procedure should be the last called when forming the packet to be sent . See Section D.4 for details . 	231	0
2328	Type	Type Packet name detailed section ( transmit ) _________________________________________________________ 1 Hello Section 9.5 2 Database description Section 10.8 3 Link state request Section 10.9 4 Link state update Section 13.3 5 Link state ack Section 13.5 	240	0
2328	Type	Type Packet name detailed section ( receive ) ________________________________________________________ 1 Hello Section 10.5 2 Database description Section 10.6 3 Link state request Section 10.7 4 Link state update Section 13 5 Link state ack Section 13.7 	240	0
2328	Type	Type Dest Area Path Type Cost Next Adv . Hop(s ) Router(s ) ____________________________________________________________ N N1 0 intra-area 10 RT3 * N N2 0 intra-area 10 RT3 * N N3 0 intra-area 7 RT3 * N N4 0 intra-area 8 RT3 * N Ib 0 intra-area 7 * * N Ia 0 intra-area 12 RT10 * N N6 0 intra-area 8 RT10 * N N7 0 intra-area 12 RT10 * N N8 0 intra-area 10 RT10 * N N9 0 intra-area 11 RT10 * N N10 0 intra-area 13 RT10 * N N11 0 intra-area 14 RT10 * N H1 0 intra-area 21 RT10 * R RT5 0 intra-area 6 RT5 * R RT7 0 intra-area 8 RT10 * ____________________________________________________________ N N12 * type 1 ext . 10 RT10 RT7 N N13 * type 1 ext . 14 RT5 RT5 N N14 * type 1 ext . 14 RT5 RT5 N N15 * type 1 ext . 17 RT10 RT7 	240	0
2328	Type	Type Dest Area Path Type Cost Next Adv . Hops(s ) Router(s ) __________________________________________________________________ N N1 1 intra-area 4 RT1 * N N2 1 intra-area 4 RT2 * N N3 1 intra-area 1 * * N N4 1 intra-area 3 RT3 * R RT3 1 intra-area 1 * * __________________________________________________________________ N Ib 0 intra-area 22 RT5 * N Ia 0 intra-area 27 RT5 * R RT3 0 intra-area 21 RT5 * R RT5 0 intra-area 8 * * R RT7 0 intra-area 14 RT5 * R RT10 0 intra-area 22 RT5 * R RT11 0 intra-area 25 RT5 * __________________________________________________________________ N N6 0 inter-area 15 RT5 RT7 N N7 0 inter-area 19 RT5 RT7 N N8 0 inter-area 18 RT5 RT7 N N9-N11,H1 0 inter-area 36 RT5 RT11 __________________________________________________________________ N N12 * type 1 ext . 16 RT5 RT5,RT7 N N13 * type 1 ext . 16 RT5 RT5 N N14 * type 1 ext . 16 RT5 RT5 N N15 * type 1 ext . 23 RT5 RT7 	240	0
2328	Type	Type Dest Area Path Type Cost Next Adv . Hop(s ) Router(s ) ________________________________________________________________ N Ib 0 intra-area 16 RT3 * N Ia 0 intra-area 21 RT3 * R RT3 0 intra-area 1 * * R RT10 0 intra-area 16 RT3 * R RT11 0 intra-area 19 RT3 * ________________________________________________________________ N N9-N11,H1 0 inter-area 30 RT3 RT11 	240	0
2328	LS age	This field is the age of the LSA in seconds . It should be processed as an unsigned 16-bit integer . It is set to 0 when the LSA is originated . It must be incremented by InfTransDelay on every hop of the flooding procedure . LSAs are also aged as they are held in each router's database . 	121	0
2328	Options	The Options field in the LSA header indicates which optional capabilities are associated with the LSA . OSPF's optional capabilities are described in Section 4.5 . One optional capability is defined by this specification , represented by the E-bit found in the Options field . The unrecognized bits in the Options field should be set to zero . 	231	0
2328	LS type	The LS type field dictates the format and function of the LSA . LSAs of different types have different names ( e.g ., router-LSAs or network-LSAs ). All LSA types defined by this memo , except the AS-external-LSAs ( LS type = 5 ), are flooded throughout a single area only . AS-external-LSAs are flooded throughout the entire Autonomous System , excepting stub areas ( see Section 3.6 ). Each separate LSA type is briefly described below in Table 15 . 	231	0
2328	Link State ID	This field identifies the piece of the routing domain that is being described by the LSA . Depending on the LSA's LS type , the Link State ID takes on the values listed in Table 	230	0
2328	Advertising Router	This field specifies the OSPF Router ID of the LSA's originator . For router-LSAs , this field is identical to the Link State ID field . Network-LSAs are originated by the 	230	0
2328	LS sequence number	The sequence number field is a signed 32-bit integer . It is used to detect old and duplicate LSAs . The space of sequence numbers is linearly ordered . The larger the sequence number ( when compared as signed 32-bit integers ) the more recent the LSA . To describe to sequence number space more precisely , let N refer in the discussion below to the constant 2**31 . 	200	0
2328	LS checksum	This field is the checksum of the complete contents of the LSA , excepting the LS age field . The LS age field is excepted so that an LSA's age can be incremented without updating the checksum . The checksum used is the same that is used for ISO connectionless datagrams; it is commonly referred to as the Fletcher checksum . It is documented in Annex B of [ Ref6 ]. The LSA header also contains the length of the LSA in bytes; subtracting the size of the LS age field ( two bytes ) yields the amount of data to checksum . 	400	0
2328	5	The stub networks are added to the tree in the procedure's second stage . In this stage , all router vertices are again examined . Those that have been determined to be unreachable in the above first phase are discarded . For each reachable router vertex ( call it V ), the associated router-LSA is found in the link state database . Each stub network link appearing in the LSA is then examined , and the following steps are executed : 	400	0
2328	Type	Type Description ________________________________ 1 Hello 2 Database Description 3 Link State Request 4 Link State Update 5 Link State Acknowledgment 	240	0
2328	Type	Type Description __________________________________________________ 1 Point-to-point connection to another router 2 Connection to a transit network 3 Connection to a stub network 4 Virtual link 	240	0
2328	Type	Type Link ID ______________________________________ 1 Neighboring router's Router ID 2 IP address of Designated Router 3 IP network/subnet number 4 Neighboring router's Router ID 	240	0
2328	AuType	AuType Description ___________________________________________ 0 Null authentication 1 Simple password 2 Cryptographic authentication All others Reserved for assignment by the IANA ( iana@ISI.EDU ) 	240	0
2328	1	( 2 ) You lose the bidirectionality test on both interfaces , since bidirectionality is based on Router ID . 	240	0
2332	C	Copyright ( C ) The Internet Society ( 1998 ). All Rights Reserved . 	303	0
2332	Flags	Q Set if the station sending the NHRP Resolution Request is a router; clear if the it is a host . 	302	0
2332	Flags	Q Copied from the NHRP Resolution Request . Set if the NHRP Resolution Requester is a router; clear if it is a host . 	400	0
2332	Flags	U This is the Uniqueness bit . When set in an NHRP Registration Request , this bit indicates that the registration of the protocol address is unique within the confines of the set of synchronized NHSs . This " uniqueness " qualifier MUST be stored in the NHS/NHC cache . Any attempt to register a binding between the protocol address and an NBMA address when this bit is set MUST be rejected with a Code of " 14 - Unique Internetworking Layer Address Already Registered " if the replying NHS already has a cache entry for the protocol address and the cache entry has the " uniqueness " bit set . A registration of a CIE's information is rejected when the CIE is returned with the Code field set to anything other than 0x00 . See the description of the uniqueness bit in NHRP Resolution Request section above for further details . When this bit is set only , only one CIE MAY be included in the NHRP Registration Request . 	231	0
2332	Prefix Length	This field may be used in a NHRP Registration Request to register equivalence information for the Client Protocol Address specified in the CIE of an NHRP Registration Request In the case of NHRP Registration Request , the Prefix Length specifies the equivalence class of addresses which match the first " Prefix Length " bit positions of the Client Protocol Address . If the " U " bit is set in the common header then this field MUST be set to 0xFF . 	400	0
2332	Flags	N When set , this bit tells the receiver of the NHRP Purge Request that the requester does not expect to receive an NHRP Purge Reply . If an unsolicited NHRP Purge Reply is received by a station where that station is identified in the Source Protocol Address of the packet then that packet must be ignored . 	301	0
2332	Prefix Length	In the case of NHRP Purge Requests , the Prefix Length specifies the equivalence class of addresses which match the first " Prefix Length " bit positions of the Client Protocol Address specified in the CIE . All next hop information which contains a protocol address which matches an element of this equivalence class is to be purged from the receivers cache . 	100	0
2332	C	This document and translations of it may be copied and furnished to others , and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared , copied , published and distributed , in whole or in part , without restriction of any kind , provided that the above copyright notice and this paragraph are included on all such copies and derivative works . However , this document itself may not be modified in any way , such as by removing the copyright notice or references to the Internet Society or other Internet organizations , except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed , or as required to translate it into languages other than English . 	303	0
2334	CSA Record	CSA Record - Cache State Advertisement Record A CSA is a record within a CSU message which identifies an update to the status of a " particular " cache entry . 	230	0
2334	CSAS Record	CSAS Record - Cache State Advertisement Summary Record A CSAS contains a summary of the information in a CSA . A server will send CSAS records describing its cache entries to another server during the cache alignment process . CSAS records are also included in a CSUS messages when an LS wants to request the entire CSA from the DCS . The LS is requesting the CSA from the DCS because the LS believes that the DCS has a more recent view of the state of the cache entry in question . 	400	0
2338	Adver Int	The Advertisement interval indicates the time interval ( in seconds ) between ADVERTISEMENTS . The default is 1 second . This field is used for troubleshooting misconfigured routers . 	122	0
2338	Priority	Priority Priority value to be used by this VRRP router in Master election for this virtual router . The value of 255 ( decimal ) is reserved for the router that owns the IP addresses associated with the virtual router . The value of 0 ( zero ) is reserved for Master router to indicate it is releasing responsibility for the virtual router . The range 1-254 ( decimal ) is available for VRRP routers backing up the virtual router . The default value is 100 ( decimal ). 	230	0
2341	Protocol	Cisco Layer Two Forwarding ( Protocol ) " L2F " 	400	0
2341	C	Copyright ( C ) The Internet Society ( 1998 ). All Rights Reserved . 	303	0
2341	Length	1 . NAS->GW Proto=L2F , Seq=2 , MID=1 , CLID=73 , Key=C(Rnd2 ) L2F_OPEN Type : CHAP Name : CHAP-name Challenge : Rnd3 Response : < Value received , presumably C(Rnd3 )> ID : < ID used in challenge > 	240	0
2341	C	This document and translations of it may be copied and furnished to others , and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared , copied , published and distributed , in whole or in part , without restriction of any kind , provided that the above copyright notice and this paragraph are included on all such copies and derivative works . However , this document itself may not be modified in any way , such as by removing the copyright notice or references to the Internet Society or other Internet organizations , except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed , or as required to translate it into languages other than English . 	302	0
2343	P	N : Header data changed ( 1 bit ). Set if any part of the video sequence , extension , GOP and picture header data is different than that of the previously sent headers . It gets reset when all the header data gets repeated ( see Appendix 1 ). 	210	0
2343	N	N : Header data changed ( 1 bit ). Set if any part of the video sequence , extension , GOP and picture header data is different than that of the previously sent headers . It gets reset when all the header data gets repeated ( see Appendix 1 ). 	210	0
2343	MBZ	Audio Length : ( 10 bits ) Length of the audio data in this packet in bytes . Start of the audio data is found by subtracting " Audio Length " from the total length of the received packet . 	100	0
2343	Audio Length	Audio Length : ( 10 bits ) Length of the audio data in this packet in bytes . Start of the audio data is found by subtracting " Audio Length " from the total length of the received packet . 	100	0
2343	Audio Offset	Audio Offset : ( 16 bits ) The offset between the start of the audio frame and the RTP timestamp for this packet in number of audio samples ( for multi-channel sources , a set of samples covering all channels is counted as one sample for this purpose .) 	110	0
2344	T	T Agent offers reverse tunneling service . 	231	0
2344	T	T If the ' T ' bit is set , the mobile node asks its home agent to accept a reverse tunnel from the care-of address . Mobile nodes using a foreign agent care-of address ask the foreign agent to reverse-tunnel its packets . 	210	0
2344	Type	Type 	240	0
2344	Length	Length 	100	0
2351	C	Copyright ( C ) The Internet Society ( 1998 ). All Rights Reserved . 	303	0
2351	BFLAG	X X 0 0 means that the fields ` Sender HLD , Recipient HLD ' do not exist in this packet . In this case , the exact length of the packet is 6 Bytes . 	302	0
2351	C	This document and translations of it may be copied and furnished to others , and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared , copied , published and distributed , in whole or in part , without restriction of any kind , provided that the above copyright notice and this paragraph are included on all such copies and derivative works . However , this document itself may not be modified in any way , such as by removing the copyright notice or references to the Internet Society or other Internet organizations , except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed , or as required to translate it into languages other than English . 	302	0
2356	Type	Type 	240	0
2356	Length	Length 	100	0
2356	Reserved	Reserved 	500	0
2356	MN to HA Traversal Address	The IP address of the an intermediate system or firewall encountered by datagrams sent by the mobile node towards the home agent . Typically , this is the external address of a firewall or firewall complex . 	230	0
2356	HA to MN Traversal Address	The IP address of an intermediate system or firewall encountered by datagrams sent by the home agent towards the mobile node . Typically , this is the internal address of a firewall or firewall complex . 	230	0
2362	S	2 There exists an active ( S,G ) entry with the RPT-bit flag cleared , and 	240	0
2362	S	3 A particular source address , S , is included in the prune list with the RPT and WC bits cleared under the following conditions : 	240	0
2362	S	2 There exists an active ( S,G ) entry with the RPT-bit flag cleared , and 	240	0
2362	S	4 A particular source address , S , is included in the prune list with the RPT-bit set and the WC bit cleared under the following conditions : 	240	0
2362	S	3 Receipt of a packet that matches on a ( S,G ) entry whose SPT-bit is cleared triggers the following if the packet arrived on the correct incoming interface and there is a (*, G ) or (*,*, RP ) entry with a different incoming interface : a ) the router sets the SPT-bit on the ( S,G ) entry , and b ) the router sends a Join/Prune message towards the RP with S in the prune list and the RPT-bit set . 	240	0
2362	R	* [ Random-Delay-Join-Timeout ] This is the maximum interval between the time when the RPF neighbor changes , and the time at which a triggered Join/Prune message is sent . Default : 4.5 seconds . 	201	0
2362	Type	0 = Hello 1 = Register 2 = Register-Stop 3 = Join/Prune 4 = Bootstrap 5 = Assert 6 = Graft ( used in PIM-DM only ) 7 = Graft-Ack ( used in PIM-DM only ) 8 = Candidate-RP-Advertisement 	240	0
2362	S	Mask Length Mask length is 8 bits . The value is the number of contiguous bits left justified used as a mask which describes the address . The mask length must be less than or equal to the address length in bits for the given Address Family and Encoding Type . If the message is sent for a single group then the Mask length must equal the address length in bits for the given Address Family and Encoding Type . In version 2 of PIM , it is strongly recommended that this field be set to 32 for IPv4 native encoding . 	100	0
2362	W	Mask Length Mask length is 8 bits . The value is the number of contiguous bits left justified used as a mask which describes the address . The mask length must be less than or equal to the address length in bits for the given Address Family and Encoding Type . If the message is sent for a single group then the Mask length must equal the address length in bits for the given Address Family and Encoding Type . In version 2 of PIM , it is strongly recommended that this field be set to 32 for IPv4 native encoding . 	100	0
2362	Type	PIM Version , Type , Reserved , Checksum Described above . 	220	0
2362	Reserved	PIM Version , Type , Reserved , Checksum Described above . 	220	0
2362	B	B The Border bit . If the router is a DR for a source that it is directly connected to , it sets the B bit to 0 . If the router is a PMBR for a source in a directly connected cloud , it sets the B bit to 1 . 	210	0
2362	N	N The Null-Register bit . Set to 1 by a DR that is probing the RP before expiring its local Register-Suppression timer . Set to 0 otherwise . 	210	0
2362	Type	PIM Version , Type , Reserved , Checksum Described above . 	220	0
2362	Reserved	PIM Version , Type , Reserved , Checksum Described above . 	220	0
2362	Type	PIM Version , Type , Reserved , Checksum Described above . 	220	0
2362	Reserved	PIM Version , Type , Reserved , Checksum Described above . 	220	0
2362	S	S The Sparse bit is a 1 bit value , set to 1 for PIM-SM . It is used for PIM v.1 compatibility . 	210	0
2362	W	W The WC bit is a 1 bit value . If 1 , the join or prune applies to the (*, G ) or (*,*, RP ) entry . If 0 , the join or prune applies to the ( S,G ) entry where S is Source Address . Joins and prunes sent towards the RP must have this bit set . 	210	0
2362	R	R The RPT-bit is a 1 bit value . If 1 , the information about ( S,G ) is sent towards the RP . If 0 , the information must be sent toward S , where S is the Source Address . 	210	0
2362	Type	PIM Version , Type , Reserved , Checksum Described above . 	220	0
2362	Reserved	PIM Version , Type , Reserved , Checksum Described above . 	220	0
2362	Type	PIM Version , Type , Reserved , Checksum Described above . 	220	0
2362	Reserved	PIM Version , Type , Reserved , Checksum Described above . 	220	0
2362	Type	PIM Version , Type , Reserved , Checksum Described above . 	220	0
2362	Reserved	PIM Version , Type , Reserved , Checksum Described above . 	220	0
2362	S	* { ( S,G ) route entry }. ( S,G ) is a source-specific route entry . It may be created in response to data packets , Join/Prune messages , or Asserts . The ( S,G ) state in routers creates a source-rooted , shortest path ( or reverse shortest path ) distribution tree . ( S,G)RPT bit entries are source - specific entries on the shared RP-Tree; these entries are used to prune particular sources off of the shared tree . 	301	0
2393	Next Header	Next Header 	231	0
2393	Next Header	8-bit selector . Stores the IPv4 Protocol field or the IPv6 Next Header field of the original IP header . 	400	0
2393	Flags	8-bit field . Reserved for future use . MUST be set to zero . MUST be ignored by the receiving node . 	500	0
2393	Compression Parameter Index	16-bit index . The CPI is stored in network order . The values 0-63 define well-known compression algorithms , which require no additional information , and are used for manual setup . The values themselves are identical to IPCOMP Transform identifiers as defined in [ SECDOI ]. Consult [ SECDOI ] for an initial set of defined values and for instructions on how to assign new values . The values 64-255 are reserved for future use . The values 256-61439 are negotiated between the two nodes in definition of an IPComp Association , as defined in section 4 . Note : When negotiating one of the well-known algorithms , the nodes MAY select a CPI in the pre-defined range 0-63 . The values 61440-65535 are for private use among mutually consenting parties . Both nodes participating can select a CPI value independently of each other and there is no relationships between the two separately chosen CPIs . The outbound IPComp header MUST use the CPI value chosen by the decompressing node . The CPI in combination with the destination IP address uniquely identifies the compression algorithm characteristics for the datagram . 	231	0
2407	Secrecy Level	o Secrecy Level ( variable length ) - Specifies the mandatory secrecy level required . The secrecy level MUST be padded with zero ( 0 ) to align on the next 32-bit boundary . 	231	0
2407	Secrecy Category Bitmap	o Secrecy Category Bitmap ( variable length ) - A bitmap used to designate secrecy categories ( compartments ) that are required . The bitmap MUST be padded with zero ( 0 ) to align on the next 32-bit boundary . 	301	0
2407	Integrity Level	o Integrity Level ( variable length ) - Specifies the mandatory integrity level required . The integrity level MUST be padded with zero ( 0 ) to align on the next 32-bit boundary . 	301	0
2407	Integrity Category Bitmap	o Integrity Category Bitmap ( variable length ) - A bitmap used to designate integrity categories ( compartments ) that are required . The bitmap MUST be padded with zero ( 0 ) to align on the next 32-bit boundary . 	301	0
2407	Identification Data	o Identification Data ( variable length ) - Value , as indicated by the Identification Type . 	400	0
2408	Certificate Data	o Certificate Data ( variable length ) - Actual encoding of certificate data . The type of certificate is indicated by the Certificate Encoding field . 	231	0
2408	Certificate Authority	o Certificate Authority ( variable length ) - Contains an encoding of an acceptable certificate authority for the type of certificate requested . As an example , for an X.509 certificate this field would contain the Distinguished Name encoding of the Issuer Name of an X.509 certificate authority acceptable to the sender of this payload . This would be included to assist the responder in determining how much of the certificate chain would need to be sent in response to this request . If there is no specific certificate authority requested , this field SHOULD not be included . 	230	0
2419	Length	Length 	100	0
2419	Address	These fields MUST be present unless the PPP Address and Control Field Compression option ( ACFC ) has been negotiated . 	400	0
2419	Control	These fields MUST be present unless the PPP Address and Control Field Compression option ( ACFC ) has been negotiated . 	400	0
2419	Protocol ID	The value of this field is 0x53 or 0x55; the latter indicates that ciphertext includes headers for the Multilink Protocol , and REQUIRES that the Individual Link Encryption Control Protocol has reached the opened state . The leading zero MAY be absent if the PPP Protocol Field Compression option ( PFC ) has been negotiated . 	302	0
2420	Type	Type 	240	0
2420	Length	Length 	100	0
2420	Address	These fields MUST be present unless the PPP Address and Control Field Compression option ( ACFC ) has been 	400	0
2420	Control	These fields MUST be present unless the PPP Address and Control Field Compression option ( ACFC ) has been 	400	0
2420	Protocol ID	The value of this field is 0x53 or 0x55; the latter indicates the use of the Individual Link Encryption Control Protocol and that the ciphertext contains a Multilink fragment . Protocol Field Compression MAY be applied to the leading zero if negotiated . 	231	0
2429	RR	RR : 5 bits Reserved bits . Shall be zero . 	500	0
2429	P	P : 1 bit Indicates the picture start or a picture segment ( GOB/Slice ) start or a video sequence end ( EOS or EOSBS ). Two bytes of zero bits then have to be prefixed to the payload of such a packet to compose a complete picture/GOB/slice/EOS/EOSBS start code . This bit allows the omission of the two first bytes of the start codes , thus improving the compression ratio . 	210	0
2429	V	V : 1 bit Indicates the presence of an 8 bit field containing information for Video Redundancy Coding ( VRC ), which follows immediately after the initial 16 bits of the payload header if present . For syntax and semantics of that 8 bit VRC field see section 4.2 . 	210	0
2429	PLEN	PLEN : 6 bits Length in bytes of the extra picture header . If no extra picture header is attached , PLEN is 0 . If PLEN>0 , the extra picture header is attached immediately following the rest of the payload header . Note the length reflects the omission of the first two bytes of the picture start code ( PSC ). See section 5.1 . 	100	0
2429	PEBIT	PEBIT : 3 bits Indicates the number of bits that shall be ignored in the last byte of the picture header . If PLEN is not zero , the ignored bits shall be the least significant bits of the byte . If PLEN is zero , then PEBIT shall also be zero . 	303	0
2429	TID	TID : 3 bits Thread ID . Up to 7 threads are allowed . Each frame of H.263 + VRC data will use as reference information only sync frames or frames within the same thread . By convention , thread 0 is expected to be the " canonical " thread , which is the thread from which the sync frame should ideally be used . In the case of corruption or loss of the thread 0 representation , a representation of the sync frame with a higher thread number can be used by the decoder . Lower thread numbers are expected to contain equal or better representations of the sync frames than higher thread numbers in the absence of data corruption or loss . See [ 7 ] for a detailed discussion of VRC . 	201	0
2429	Trun	Trun : 4 bits Monotonically increasing ( modulo 16 ) 4 bit number counting the packet number within each thread . 	100	0
2429	S	S : 1 bit A bit that indicates that the packet content is for a sync frame . An encoder using VRC may send several representations of the same " sync " picture , in order to ensure that regardless of which thread of pictures is corrupted by errors or packet losses , the reception of at least one representation of a particular picture is ensured ( within at least one thread ). The sync picture can then be used for the prediction of any thread . If packet losses have not occurred , then the sync frame contents of thread 0 can be used and those of other threads can be discarded ( and similarly for other threads ). Thread 0 is considered the " canonical " thread , the use of which is preferable to all others . The contents of packets having lower thread numbers shall be considered as having a higher processing and delivery priority than those with higher thread numbers . Thus packets having lower thread numbers for a given sync frame shall be delivered first to the decoder under loss-free and 	210	0
2431	F	F : 1 bit When 0 , indicates the first field of a frame ( line 4 through 265 inclusive for Type=0 or 2 , and line 1 through 312 inclusive for Type=1 or 3 ). Any other scan line is considered a component of the second field , and the F bit will be set to 1 . This bit is copied directly from the BT.656-compliant stream by the transmitter , and inserted into the stream by the receiver . 	210	0
2431	V	V : 1 bit When 1 , indicates that the scan line is part of the vertical interval . Should always be 0 unless frame blanking data is sent . In which case , the V bit SHOULD be set to 1 for scan lines which do not form an integral part of the image . This bit is copied directly from the BT.656-compliant stream by the transmitter , and inserted into the stream by the receiver . For receivers which do not receive scan lines during the vertical interval , BT.656 vertical interval data MUST be generated by repeating the quad-sample sequence 0x80 , 0x10 , 0x80 , 0x10 , representing a true black level . 	210	0
2431	Type	Type : 4 bits This field indicates the type of frame encoding within the payload . It MUST remain unchanged for all scan lines within the same frame . Currently only four types of encoding are defined . These are as follows; 	231	0
2431	P	P : 1 bit Indicates the required sample quantization size . When 0 , the payload is comprised of 8-bit samples . Otherwise , it carries 10-bit samples . This bit MUST remain unchanged for all scan lines within the same frame . 	302	0
2431	Z	Z : 2 bits Reserved for future use . Must be set to zero by the transmitter and ignored by the receiver . 	500	0
2431	.	This document and translations of it may be copied and furnished to others , and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared , copied , published and distributed , in whole or in part , without restriction of any kind , provided that the above copyright notice and this paragraph are included on all such copies and derivative works . However , this document itself may not be modified in any way , such as by removing the copyright notice or references to the Internet Society or other Internet organizations , except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed , or as required to translate it into languages other than English . 	303	0
2435	Type	Interpretation depends on the value of the type field . If no interpretation is specified , this field MUST be zeroed on transmission and ignored on reception . 	500	0
2435	Fragment Offset	The Fragment Offset is the offset in bytes of the current packet in the JPEG frame data . This value is encoded in network byte order ( most significant byte first ). The Fragment Offset plus the length of the payload data in the packet MUST NOT exceed 2^24 bytes . 	110	0
2435	Type	The type field specifies the information that would otherwise be present in a JPEG abbreviated table-specification as well as the additional JFIF-style parameters not defined by JPEG . Types 0-63 are reserved as fixed , well-known mappings to be defined by this document and future revisions of this document . Types 64-127 are the same as types 0-63 , except that restart markers are present in the JPEG data and a Restart Marker header appears immediately following the main JPEG header . Types 128-255 are free to be dynamically defined by a session setup protocol ( which is beyond the scope of this document ). 	231	0
2435	Q	The Q field defines the quantization tables for this frame . Q values 0-127 indicate the quantization tables are computed using an algorithm determined by the Type field ( see below ). Q values 128-255 indicate that a Quantization Table header appears after the main JPEG header ( and the Restart Marker header , if present ) in the first packet of the frame ( fragment offset 0 ). This header can be used to explicitly specify the quantization tables in-band . 	210	0
2435	Width	This field encodes the width of the image in 8-pixel multiples ( e.g ., a width of 40 denotes an image 320 pixels wide ). The maximum width is 2040 pixels . 	100	0
2435	Height	This field encodes the height of the image in 8-pixel multiples ( e.g ., a height of 30 denotes an image 240 pixels tall ). When encoding interlaced video , this is the height of a video field , since fields are individually JPEG encoded . The maximum height is 2040 pixels . 	100	0
2460	Options	Changes in the way IP header options are encoded allows for more efficient forwarding , less stringent limits on the length of options , and greater flexibility for introducing new options in the future . 	231	0
2460	Version	Version 4-bit Internet Protocol version number = 6 . 	220	0
2460	Traffic Class	Traffic Class 8-bit traffic class field . See section 7 . 	231	0
2460	Flow Label	Flow Label 20-bit flow label . See section 6 . 	400	0
2460	Payload Length	Payload Length 16-bit unsigned integer . Length of the IPv6 payload , i.e ., the rest of the packet following this IPv6 header , in octets . ( Note that any 	100	0
2460	Next Header	Next Header 8-bit selector . Identifies the type of header immediately following the IPv6 header . Uses the same values as the IPv4 Protocol field [ RFC-1700 et seq .]. 	231	0
2460	Hop Limit	Hop Limit 8-bit unsigned integer . Decremented by 1 by each node that forwards the packet . The packet is discarded if Hop Limit is decremented to zero . 	100	0
2460	Source Address	Source Address 128-bit address of the originator of the packet . See [ ADDRARCH ]. 	230	0
2460	Destination Address	Destination Address 128-bit address of the intended recipient of the packet ( possibly not the ultimate recipient , if a Routing header is present ). See [ ADDRARCH ] and section 4.4 . 	230	0
2460	Option Type	Option Type 8-bit identifier of the type of option . 	231	0
2460	Opt Data Len	Opt Data Len 8-bit unsigned integer . Length of the Option Data field of this option , in octets . 	100	0
2460	Option Data	Option Data Variable-length field . Option-Type-specific data . 	400	0
2460	1	The three high-order bits described above are to be treated as part of the Option Type , not independent of the Option Type . That is , a particular option is identified by a full 8-bit Option Type , not just the low-order 5 bits of an Option Type . 	231	0
2460	Next Header	Next Header 8-bit selector . Identifies the type of header immediately following the Hop-by-Hop Options header . Uses the same values as the IPv4 Protocol field [ RFC-1700 et seq .]. 	231	0
2460	Hdr Ext Len	Hdr Ext Len 8-bit unsigned integer . Length of the Hop-by - Hop Options header in 8-octet units , not including the first 8 octets . 	100	0
2460	Options	Options Variable-length field , of length such that the complete Hop-by-Hop Options header is an integer multiple of 8 octets long . Contains one or more TLV-encoded options , as described in section 4.2 . 	400	0
2460	Next Header	Next Header 8-bit selector . Identifies the type of header immediately following the Routing header . Uses the same values as the IPv4 Protocol field [ RFC-1700 et seq .]. 	231	0
2460	Hdr Ext Len	Hdr Ext Len 8-bit unsigned integer . Length of the Routing header in 8-octet units , not including the first 8 octets . 	100	0
2460	Routing Type	Routing Type 8-bit identifier of a particular Routing header variant . 	231	0
2460	Segments Left	Segments Left 8-bit unsigned integer . Number of route segments remaining , i.e ., number of explicitly listed intermediate nodes still to be visited before reaching the final destination . 	100	0
2460	type-specific data	type-specific data Variable-length field , of format determined by the Routing Type , and of length such that the complete Routing header is an integer multiple of 8 octets long . 	400	0
2460	Next Header	Next Header 8-bit selector . Identifies the type of header immediately following the Routing header . Uses the same values as the IPv4 Protocol field [ RFC-1700 et seq .]. 	231	0
2460	Hdr Ext Len	Hdr Ext Len 8-bit unsigned integer . Length of the Routing header in 8-octet units , not including the first 8 octets . For the Type 0 Routing header , Hdr Ext Len is equal to two times the number of addresses in the header . 	100	0
2460	Routing Type	Routing Type 0 . 	231	0
2460	Segments Left	Segments Left 8-bit unsigned integer . Number of route segments remaining , i.e ., number of explicitly listed intermediate nodes still to be visited before reaching the final destination . 	100	0
2460	Reserved	Reserved 32-bit reserved field . Initialized to zero for transmission; ignored on reception . 	500	0
2460	Next Header	Next Header 8-bit selector . Identifies the initial header type of the Fragmentable Part of the original packet ( defined below ). Uses the same values as the IPv4 Protocol field [ RFC-1700 et seq .]. 	231	0
2460	Reserved	Reserved 8-bit reserved field . Initialized to zero for transmission; ignored on reception . 	500	0
2460	Fragment Offset	Fragment Offset 13-bit unsigned integer . The offset , in 8-octet units , of the data following this header , relative to the start of the Fragmentable Part of the original packet . 	110	0
2460	Res	Res 2-bit reserved field . Initialized to zero for transmission; ignored on reception . 	500	0
2460	Identification	Identification 32 bits . See description below . 	400	0
2460	Next Header	Next Header 8-bit selector . Identifies the type of header immediately following the Destination Options header . Uses the same values as the IPv4 Protocol field [ RFC-1700 et seq .]. 	231	0
2460	Hdr Ext Len	Hdr Ext Len 8-bit unsigned integer . Length of the Destination Options header in 8-octet units , not including the first 8 octets . 	100	0
2460	Options	Options Variable-length field , of length such that the complete Destination Options header is an integer multiple of 8 octets long . Contains one or more TLV-encoded options , as described in section 4.2 . 	400	0
2461	MTU	variable MTU - a link that does not have a well-defined MTU ( e.g ., IEEE 802.5 token rings ). Many links ( e.g ., Ethernet ) have a standard MTU defined by the link - layer protocol or by the specific document describing how to run IP over the link layer . 	400	0
2461	MTU	variable MTU - Neighbor Discovery allows routers to specify a MTU for the link , which all nodes then use . All nodes on a link must use the same MTU ( or Maximum Receive Unit ) in order for multicast to work properly . Otherwise when multicasting a sender , which can not know which nodes will receive the packet , could not determine a minimum packet size all receivers can process . 	400	0
2461	Type	Type 133 	240	0
2461	Code	Code 0 	302	0
2461	Checksum	Checksum The ICMP checksum . See [ ICMPv6 ]. 	301	0
2461	Reserved	Reserved This field is unused . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
2461	Type	Type 134 	240	0
2461	Code	Code 0 	302	0
2461	Checksum	Checksum The ICMP checksum . See [ ICMPv6 ]. 	301	0
2461	Cur Hop Limit	Cur Hop Limit 8-bit unsigned integer . The default value that should be placed in the Hop Count field of the IP header for outgoing IP packets . A value of zero means unspecified ( by this router ). 	231	0
2461	M	M 1-bit " Managed address configuration " flag . When set , hosts use the administered ( stateful ) protocol for address autoconfiguration in addition to any addresses autoconfigured using stateless address autoconfiguration . The use of this flag is described in [ ADDRCONF ]. 	231	0
2461	O	O 1-bit " Other stateful configuration " flag . When set , hosts use the administered ( stateful ) protocol for autoconfiguration of other ( non-address ) information . The use of this flag is described in [ ADDRCONF ]. 	231	0
2461	Reserved	Reserved A 6-bit unused field . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
2461	Retrans Timer	Retrans Timer 32-bit unsigned integer . The time , in milliseconds , between retransmitted Neighbor Solicitation messages . Used by address resolution and the Neighbor Unreachability Detection algorithm ( see Sections 7.2 and 7.3 ). A value of zero means unspecified ( by this router ). 	120	0
2461	MTU	MTU SHOULD be sent on links that have a variable MTU ( as specified in the document that describes how to run IP over the particular link type ). MAY be sent on other links . 	303	0
2461	Type	Type 135 	220	0
2461	Code	Code 0 	302	0
2461	Checksum	Checksum The ICMP checksum . See [ ICMPv6 ]. 	301	0
2461	Reserved	Reserved This field is unused . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
2461	Type	Type 136 	220	0
2461	Code	Code 0 	302	0
2461	Checksum	Checksum The ICMP checksum . See [ ICMPv6 ]. 	301	0
2461	R	R Router flag . When set , the R-bit indicates that the sender is a router . The R-bit is used by Neighbor Unreachability Detection to detect a router that changes to a host . 	210	0
2461	S	S Solicited flag . When set , the S-bit indicates that the advertisement was sent in response to a Neighbor Solicitation from the Destination address . The S-bit is used as a reachability confirmation for Neighbor Unreachability Detection . It MUST NOT be set in multicast advertisements or in unsolicited unicast advertisements . 	210	0
2461	O	O Override flag . When set , the O-bit indicates that the advertisement should override an existing cache entry and update the cached link-layer address . When it is not set the advertisement will not update a cached link-layer address though it will update an existing Neighbor Cache entry for which no link-layer address is known . It SHOULD NOT be set in solicited advertisements for anycast addresses and in solicited proxy advertisements . It SHOULD be set in other solicited advertisements and in unsolicited advertisements . 	210	0
2461	Reserved	Reserved 29-bit unused field . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
2461	Type	Type 137 	220	0
2461	Code	Code 0 	302	0
2461	Checksum	Checksum The ICMP checksum . See [ ICMPv6 ]. 	301	0
2461	Reserved	Reserved This field is unused . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
2461	Type	Type 8-bit identifier of the type of option . The options defined in this document are : 	231	0
2461	Length	Length 8-bit unsigned integer . The length of the option ( including the type and length fields ) in units of 8 octets . The value 0 is invalid . Nodes MUST silently discard an ND packet that contains an option with length zero . 	100	0
2461	Length	Length The length of the option ( including the type and length fields ) in units of 8 octets . For example , the length for IEEE 802 addresses is 1 [ IPv6 - ETHER ]. 	100	0
2461	Type	Type 3 	240	0
2461	Length	Length 4 	100	0
2461	Prefix Length	Prefix Length 8-bit unsigned integer . The number of leading bits in the Prefix that are valid . The value ranges from 0 to 128 . 	100	0
2461	L	L 1-bit on-link flag . When set , indicates that this prefix can be used for on-link determination . When not set the advertisement makes no statement about on-link or off-link properties of the prefix . For instance , the prefix might be used for address configuration with some of the addresses belonging to the prefix being on-link and others being off - link . 	210	0
2461	A	A 1-bit autonomous address-configuration flag . When set indicates that this prefix can be used for autonomous address configuration as specified in [ ADDRCONF ]. 	231	0
2461	Reserved	Reserved1 6-bit unused field . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
2461	Reserved	Reserved2 This field is unused . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
2461	Prefix	Prefix An IP address or a prefix of an IP address . The Prefix Length field contains the number of valid leading bits in the prefix . The bits in the prefix after the prefix length are reserved and MUST be initialized to zero by the sender and ignored by the receiver . A router SHOULD NOT send a prefix option for the link-local prefix and a host SHOULD ignore such a prefix option . 	230	0
2461	Type	Type 4 	240	0
2461	Length	Length The length of the option in units of 8 octets . 	100	0
2461	Reserved	Reserved These fields are unused . They MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
2461	MTU	4.6.4 . MTU 	240	0
2461	Type	Type 5 	240	0
2461	Length	Length 1 	100	0
2461	Reserved	Reserved This field is unused . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
2461	MTU	MTU 32-bit unsigned integer . The recommended MTU for the link . 	100	0
2463	Type	Type 1 	240	0
2463	Unused	Unused This field is unused for all code values . It must be initialized to zero by the sender and ignored by the receiver . 	500	0
2463	Type	Type 2 	240	0
2463	Code	Code Set to 0 ( zero ) by the sender and ignored by the receiver 	500	0
2463	MTU	MTU The Maximum Transmission Unit of the next-hop link . 	230	0
2463	Type	Type 3 	240	0
2463	Unused	Unused This field is unused for all code values . It must be initialized to zero by the sender and ignored by the receiver . 	500	0
2463	Type	Type 4 	240	0
2463	Pointer	Pointer Identifies the octet offset within the invoking packet where the error was detected . 	231	0
2463	Type	Type 128 	240	0
2463	Code	Code 0 	302	0
2463	Identifier	Identifier An identifier to aid in matching Echo Replies to this Echo Request . May be zero . 	231	0
2463	Sequence Number	A sequence number to aid in matching Echo Replies to this Echo Request . May be zero . 	302	0
2463	Type	Type 129 	240	0
2463	Code	Code 0 	302	0
2463	Identifier	Identifier The identifier from the invoking Echo Request message . 	230	0
2464	Type	Type 1 for Source Link-layer address . 2 for Target Link-layer address . 	240	0
2464	Length	Length 1 ( in units of 8 octets ). 	100	0
2467	FC	FC The Frame Code must be in the range 50 to 57 hexadecimal , inclusive , with the three low order bits indicating the frame priority . 	231	0
2467	DSAP	DSAP , SSAP Both the DSAP and SSAP fields shall contain the value AA hexadecimal , indicating SNAP encapsulation . 	231	0
2467	SSAP	DSAP , SSAP Both the DSAP and SSAP fields shall contain the value AA hexadecimal , indicating SNAP encapsulation . 	231	0
2467	CTL	CTL The Control field shall be set to 03 hexadecimal , indicating Unnumbered Information . 	231	0
2467	Ethertype	Ethertype The Ethernet protocol type (" ethertype ") shall be set to the value 86DD hexadecimal . 	231	0
2467	Type	Type 1 for Source Link-layer address . 2 for Target Link-layer address . 	240	0
2467	Length	Length 1 ( in units of 8 octets ). 	100	0
2470	LF	LF ( base ) LF ( extension ) MAC MTU IP MTU 001 000 1470 1462 010 000 2052 2044 011 000 4399 4391 100 000 8130 8122 101 000 11407 11399 110 000 17749 17741 111 000 41600 41592 	240	0
2470	Bcast	Bcast : Broadcast Indicator , Defined values : 	231	0
2470	Length	D : Direction of source route . A value of 0 means that the left-to-right sequence of Route Designators provides the path from the sender to recipient . A value of 0 indicates the sequence goes from recipient to sender . 	210	0
2470	D	D : Direction of source route . A value of 0 means that the left-to-right sequence of Route Designators provides the path from the sender to recipient . A value of 0 indicates the sequence goes from recipient to sender . 	210	0
2470	LF	LF : Largest Frame 	100	0
2470	rsvd	On transmission , the Route Designator fields give the sequence of ( bridge , LAN segment ) numbers the packet is to traverse . It is the responsibility of the sender to provide this sequence for Specifically Routed Frames , i.e ., unicast IP datagrams . 	200	0
2470	Type	Type : 1 for Source Link-layer address . 2 for Target Link-layer address . 	240	0
2470	Length	Token Ring Address : The 48 bit Token Ring IEEE 802 address , in canonical bit order . This is the address the interface currently responds to , and may be different from the built-in address used to derive the Interface Identifier . 	230	0
2472	1	2 ) A Link Control Protocol ( LCP ) for establishing , configuring , and testing the data-link connection . 	400	0
2472	Type	Type 	240	0
2472	Length	Length 	100	0
2472	IPv6-Compression-Protocol	4.2 . IPv6-Compression-Protocol 	240	0
2472	Type	Type 	240	0
2472	Length	Length 	100	0
2472	IPv6-Compression-Protocol	The IPv6-Compression-Protocol field is two octets and indicates the compression protocol desired . Values for this field are always the same as the PPP Data Link Layer Protocol field values for that same compression protocol . 	231	0
2484	Type	Type 	240	0
2484	Length	Length 	100	0
2484	MIBenum	The MIBenum field is four octets in length . It contains a unique integer value identifying a charset [ 5,11 ]. 	200	0
2485	Code	Code 98 	231	0
2485	Length	Length The length of the data field ( i.e ., URL list ) in bytes . 	100	0
2485	URL list	URL list A list of one or more URLs separated by the ASCII space character ( 0x20 ). 	230	0
2491	Type	[ Type][Length][NTL][STL][..NBMA Number..][..NBMA Subaddress ..] | Fixed || Link layer address | 	240	0
2491	Length	[ Type][Length][NTL][STL][..NBMA Number..][..NBMA Subaddress ..] | Fixed || Link layer address | 	100	0
2491	Type	[ Type ] is a one octet field . 	301	0
2491	Length	The total length of the option in multiples of 8 octets . Zeroed bytes are added to the end of the option to ensure its length is a multiple of 8 octets . 	100	0
2491	Type	Type 6 	240	0
2491	Length	Length 1 	100	0
2491	Shortcut Limit	Shortcut Limit 8-bit unsigned integer . Hop limit for shortcut attempt . 	100	0
2507	CID	A small unique number identifying the context that should be used to decompress a compressed header . Carried in full headers and compressed headers . 	400	0
2507	Generation	For non-TCP packet streams , each new version of the context for a given CID is associated with a generation : a small number that is incremented whenever the context associated with that CID changes . Carried by full and compressed non-TCP headers . 	302	0
2507	Version	Version NOCHANGE ( DEF ) Traffic Class NOCHANGE ( might be DEF , see sect 4.1 ) ( see also sect 6 a ) Flow Label NOCHANGE ( DEF ) Payload Length INFERRED Next Header NOCHANGE Hop Limit NOCHANGE ( might be DEF , see sect 4.1 ) Source Address NOCHANGE ( DEF ) Destination Address NOCHANGE ( DEF ) 	100	0
2507	Options	The contents of Hop-by-hop Options and Destination Options extension headers are encoded with TLV " options " ( see [ IPv6 ]): 	231	0
2507	Padding	Padding 	302	0
2507	Next Header	Next Header NOCHANGE Hdr Ext Len NOCHANGE 	301	0
2507	Options	Options TLV coded values and padding . Classified according to 7.3 above , unless being a Jumbo Payload option ( see below ). 	231	0
2507	Next Header	Next Header NOCHANGE Reserved NOCHANGE Res RANDOM M flag RANDOM Fragment Offset RANDOM Identification RANDOM 	240	0
2507	Next Header	Next Header NOCHANGE Hdr Ext Len NOCHANGE 	301	0
2507	Options	Options TLV coded values and padding . Compressed according to 7.3 above . 	231	0
2507	Next Header	Next Header NOCHANGE Length NOCHANGE Reserved NOCHANGE SPI NOCHANGE ( DEF ) Authentication Data RANDOM 	240	0
2507	Source Port	Source Port NOCHANGE ( DEF ) Destination Port NOCHANGE ( DEF ) Length INFERRED Checksum RANDOM , unless it is zero , in which case it is NOCHANGE . 	100	0
2507	U	U , A , P , R , S , and F stands for Urg , Ack , Psh , Rst , Syn , and Fin . 	210	0
2507	A	U , A , P , R , S , and F stands for Urg , Ack , Psh , Rst , Syn , and Fin . 	210	0
2507	P	U , A , P , R , S , and F stands for Urg , Ack , Psh , Rst , Syn , and Fin . 	210	0
2507	R	U , A , P , R , S , and F stands for Urg , Ack , Psh , Rst , Syn , and Fin . 	210	0
2507	S	U , A , P , R , S , and F stands for Urg , Ack , Psh , Rst , Syn , and Fin . 	210	0
2507	Source Port	Source Port NOCHANGE ( DEF ) Destination Port NOCHANGE ( DEF ) Sequence Number DELTA Acknowledgment Number DELTA Offset NOCHANGE Reserved DELTA ( if differs from context , set R-flag in flag octet and send absolute value as described in 6 a .) Urg,Psh RANDOM ( placed in flag octet ) Ack INFERRED to be 1 Rst,Syn,Fin INFERRED to be 0 Window DELTA ( if change in Window , set W-flag in flag octet and send difference ) Checksum RANDOM Urgent Pointer DELTA ( if Urg is set , send absolute value ) Options , Padding DELTA ( if change in Options , set O-flag and send whole Options , Padding ) 	240	0
2507	Source Port	Source Port NOCHANGE ( DEF ) Destination Port NOCHANGE ( DEF ) 	230	0
2507	Version	Version NOCHANGE ( DEF ) IHL NOCHANGE ( DEF , must be 5 ) Type of Service NOCHANGE ( might be DEF , see sect 4.1 ) ( see also 6 a ) Total Length INFERRED ( from link-layer implementation or encapsulating IP header ) 	100	0
2507	Identification	Identification DELTA/ ( If the Protocol field has the ( value corresponding to TCP ) RANDOM ( otherwise ) 	400	0
2507	Flags	Flags NOCHANGE ( MF flag must not be set ) Fragment Offset NOCHANGE ( must be zero ) Time to Live NOCHANGE ( might be DEF , see sect 4.1 ) Protocol NOCHANGE Header Checksum INFERRED ( calculated from other fields ) Source Address NOCHANGE ( DEF ) Destination Address NOCHANGE ( DEF ) Options , Padding ( not present ) 	240	0
2507	Protocol	Protocol NOCHANGE Original Source Address Present ( S ) NOCHANGE reserved NOCHANGE Header Checksum INFERRED ( calculated from other values ) Original Destination Address NOCHANGE Original Source Address NOCHANGE ( present only if S=1 ) 	240	0
2507	Version	Version Meaning ------- ------- 	240	0
2521	Type	Type 40 	220	0
2521	Code	Code Indicates the kind of failure : 	231	0
2521	Checksum	Checksum Two octets . The ICMP Checksum . 	301	0
2521	Reserved	Reserved Two octets . For future use; MUST be set to zero 	500	0
2521	Pointer	Pointer Two octets . An offset into the Original Internet Headers that locates the most significant octet of the offending SPI . Will be zero when no SPI is present . 	301	0
2522	Initiator-Cookie	Initiator-Cookie 16 bytes . 	400	0
2522	Responder-Cookie	Message 1 byte . Each message type has a unique value . Initial values are assigned as follows : 	400	0
2522	Size	Size 2 , 4 , or 8 bytes . The number of significant bits used in the Value field . Always transmitted most significant byte first . 	400	0
2522	Scheme	Scheme 2 bytes . A unique value indicating the Exchange - Scheme . See the " Basic Exchange-Schemes " for details . 	400	0
2522	Size	Size 2 bytes , ranging from 0 to 65,279 . See " Variable Precision Integer ". 	400	0
2522	Attribute	Attribute 1 byte . A unique value indicating the kind of attribute . See the " Basic Attributes " for details . 	301	0
2522	Length	Length 1 byte . The size of the Value(s ) field in bytes . 	100	0
2522	Initiator-Cookie	Initiator-Cookie 16 bytes . A randomized value that identifies the exchange . The value MUST NOT be zero . See " Cookie Generation " for details . 	400	0
2522	Responder-Cookie	Responder-Cookie 16 bytes . Identifies a specific previous exchange . Copied from a previous Cookie_Response . 	400	0
2522	Message	Message 0 	240	0
2522	Counter	Counter 1 byte . Indicates the number of previous exchanges . 	302	0
2522	Initiator-Cookie	Responder-Cookie 16 bytes . A randomized value that identifies the exchange . The value MUST NOT be zero . See " Cookie Generation " for details . 	400	0
2522	Responder-Cookie	Responder-Cookie 16 bytes . A randomized value that identifies the exchange . The value MUST NOT be zero . See " Cookie Generation " for details . 	400	0
2522	Message	Message 1 	240	0
2522	Counter	Counter 1 byte . Indicates the number of the current exchange . Must be greater than zero . 	302	0
2522	Initiator-Cookie	Initiator-Cookie 16 bytes . Copied from the Cookie_Response . 	400	0
2522	Responder-Cookie	Responder-Cookie 16 bytes . Copied from the Cookie_Response . 	400	0
2522	Message	Message 2 	240	0
2522	Counter	Counter 1 byte . Copied from the Cookie_Response . 	302	0
2522	Scheme-Choice	Scheme-Choice 2 bytes . A value selected by the Initiator from the list of Offered-Schemes in the Cookie_Response . 	400	0
2522	Initiator-Cookie	Initiator-Cookie 16 bytes . Copied from the Value_Request . 	400	0
2522	Responder-Cookie	Responder-Cookie 16 bytes . Copied from the Value_Request . 	400	0
2522	Message	Message 3 	240	0
2522	Reserved	Reserved 3 bytes . For future use; MUST be set to zero when transmitted , and MUST be ignored when received . 	500	0
2522	Initiator-Cookie	Initiator-Cookie 16 bytes . Copied from the Value_Request . 	400	0
2522	Responder-Cookie	Responder-Cookie 16 bytes . Copied from the Value_Request . 	400	0
2522	Message	Message 4 ( Request ) or 7 ( Response ) 	240	0
2522	LifeTime	LifeTime 3 bytes . The number of seconds remaining before the indicated SPI expires . 	120	0
2522	Security-Parameters-Index	Security-Parameters-Index ( SPI ) 4 bytes . The SPI to be used for incoming communications . 	400	0
2522	Verification	Verification Variable Precision Integer , or alternative format indicated by the Identity-Choice . The calculation of the value is described in " Identity Verification ". 	400	0
2522	Initiator-Cookie	Initiator-Cookie 16 bytes . Copied from the Value_Request . 	400	0
2522	Responder-Cookie	Responder-Cookie 16 bytes . Copied from the Value_Request . 	400	0
2522	Message	Message 8 	240	0
2522	Reserved-LT	Reserved-LT 3 bytes . For future use; MUST be filled with a random non-zero value when transmitted , and MUST be ignored when received . 	500	0
2522	Reserved-SPI	Reserved-SPI 4 bytes . For future use; MUST be set to zero when transmitted , and MUST be ignored when received . 	500	0
2522	Verification	Verification Variable Precision Integer , or other format indicated by the current Scheme-Choice . The calculation of the value is described in " Validity Verification ". 	231	0
2522	Initiator-Cookie	Initiator-Cookie 16 bytes . Copied from the Value_Request . 	400	0
2522	Responder-Cookie	Responder-Cookie 16 bytes . Copied from the Value_Request . 	400	0
2522	Message	Message 9 	240	0
2522	LifeTime	LifeTime 3 bytes . The number of seconds remaining before the indicated SPI expires . The value zero indicates deletion of the indicated SPI . 	120	0
2522	Security-Parameters-Index	Security-Parameters-Index ( SPI ) 4 bytes . The SPI to be used for incoming communications . 	400	0
2522	Verification	Verification Variable Precision Integer , or other format indicated by the current Scheme-Choice . The calculation of the value is described in " Validity Verification ". 	231	0
2522	Initiator-Cookie	Initiator-Cookie 16 bytes . Copied from the offending message . 	400	0
2522	Responder-Cookie	Responder-Cookie 16 bytes . Copied from the offending message . 	400	0
2522	Message	Message 10 	240	0
2522	Initiator-Cookie	Initiator-Cookie 16 bytes . Copied from the offending message . 	400	0
2522	Responder-Cookie	Special processing is applied to a Cookie_Request . When the offending message Responder-Cookie and Counter were both zero , and an existing exchange has not yet been purged , this field is replaced with the 	301	0
2522	Message	Message 11 	240	0
2522	Counter	Counter 1 byte . Copied from the offending message . 	302	0
2522	Initiator-Cookie	Initiator-Cookie 16 bytes . Copied from the offending message . 	400	0
2522	Responder-Cookie	Responder-Cookie 16 bytes . Copied from the offending message . 	400	0
2522	Message	Message 12 	240	0
2522	Initiator-Cookie	Initiator-Cookie 16 bytes . Copied from the offending message . 	400	0
2522	Responder-Cookie	Responder-Cookie 16 bytes . Copied from the offending message . 	400	0
2522	Message	Message 13 	240	0
2522	Bad-Message	Bad-Message 1 byte . Indicates the Message number of the offending message . 	240	0
2522	Offset	Offset 2 bytes . The number of bytes from the beginning of the offending message where the unrecognized field starts . The minimum value is 32 . 	110	0
2522	Attribute	Attribute 0 	302	0
2522	Attribute	Attribute 1 	302	0
2522	Length	Length 0 	100	0
2522	Attribute	Attribute 2 	240	0
2522	Length	Length 1 	100	0
2522	PayloadType	PayloadType 1 byte . Indicates the contents of the ESP Transform Data field , using the IP Next Header ( Protocol ) value . Up-to-date values of the IP Next Header ( Protocol ) are specified in the most recent " Assigned Numbers " [ RFC-1700 ]. 	400	0
2522	Attribute	Attribute 5 	240	0
2522	Length	Length 0 	100	0
2522	Attribute	Attribute 255 	302	0
2522	Length	Length >= 4 	100	0
2522	OUI	OUI 3 bytes . The vendor's Organizationally Unique Identifier , assigned by IEEE 802 or IANA ( see [ RFC - 1700 ] for contact details ). The bits within the byte are in canonical order , and the most significant byte is transmitted first . 	231	0
2522	Kind	Kind 1 byte . Indicates a sub-type for the OUI . There is no standardization for this field . Each OUI implements its own values . 	231	0
2523	Attribute	Attribute 6 	302	0
2523	Length	Length 0 	100	0
2523	Attribute	Attribute 7 	302	0
2523	Length	Length 0 	100	0
2523	Attribute	Attribute 8 	302	0
2523	Length	Length 0 	100	0
2523	Attribute	Attribute 9 	302	0
2523	Length	Length 0 	100	0
2523	Attribute	Attribute 10 	302	0
2523	Length	Length 0 	100	0
2548	NT-Response	The NT-Response field is 24 octets in length and holds an encoded function of the password and the received challenge . If this field is empty , it SHOULD be zero-filled . 	301	0
2548	Vendor-Length	Value The Value field is four octets in length and represents the percentage of available bandwidth utilization below which the link must fall before the link is eligible for termination . Permissible values are in the range 1-100 , inclusive . 	400	0
2608	Version	Service Location Protocol , Version 2 	220	0
2608	URL	URL = service:printer:lpr://igore.wco.ftp.com/draft scope-list = Development 	230	0
2608	URL	URL = service:printer:http://not.wco.ftp.com/cgi-bin/pub-prn scope-list = Development Lang . Tag = en Attributes = ( Name=Not),(Description=Experimental IPP printer ), ( Protocol=http),(location-description=QA bench ), ( media-size=na-letter),(resolution=other),x-BUSY 	240	0
2608	URL	URL = service:printer:lpr://igore.wco.ftp.com/draft scope-list = Development Lang . Tag = de tag-list = resolution,loc* 	240	0
2608	URL	URL = service:printer scope-list = Development Lang . Tag = en tag-list = x-*,resolution,protocol 	400	0
2637	C	Copyright ( C ) The Internet Society ( 1999 ). All Rights Reserved . 	303	0
2637	Length	Length Total length in octets of this PPTP message , including the entire PPTP header . 	100	0
2637	PPTP Message Type	PPTP Message Type 1 for Control Message . 	231	0
2637	Magic Cookie	Magic Cookie 0x1A2B3C4D . This constant value is used as a sanity check on received messages ( see section 1.4 ). 	240	0
2637	Control Message Type	Control Message Type 1 for Start-Control-Connection-Request . 	231	0
2637	Protocol Version	Protocol Version The version of the PPTP protocol that the sender wishes to use . 	220	0
2637	Maximum Channels	Maximum Channels The total number of individual PPP sessions this PAC can support . In Start-Control - Connection-Requests issued by the PNS , this value SHOULD be set to 0 . It MUST be ignored by the PAC . 	500	0
2637	Firmware Revision	Firmware Revision This field contains the firmware revision number of the issuing PAC , when issued by the PAC , or the version of the PNS PPTP driver if issued by the PNS . 	231	0
2637	Length	Length Total length in octets of this PPTP message , including the entire PPTP header . 	100	0
2637	PPTP Message Type	PPTP Message Type 1 for Control Message . 	231	0
2637	Magic Cookie	Magic Cookie 0x1A2B3C4D . 	240	0
2637	Control Message Type	Control Message Type 2 for Start-Control-Connection-Reply . 	231	0
2637	Protocol Version	Protocol Version The version of the PPTP protocol that the sender wishes to use . 	220	0
2637	Error Code	Error Code This field is set to 0 unless a " General Error " exists , in which case Result Code is set to 2 and this field is set to the value corresponding to the general error condition as specified in section 2.2 . 	210	0
2637	Maximum Channels	Maximum Channels The total number of individual PPP sessions this PAC can support . In a Start-Control - Connection-Reply issued by the PNS , this value SHOULD be set to 0 and it must be ignored by the PAC . The PNS MUST NOT use this value to try to track the remaining number of PPP sessions that the PAC will allow . 	500	0
2637	Firmware Revision	Firmware Revision This field contains the firmware revision number of the issuing PAC , or the version of the PNS PPTP driver if issued by the PNS . 	231	0
2637	Length	Length Total length in octets of this PPTP message , including the entire PPTP header . 	100	0
2637	PPTP Message Type	PPTP Message Type 1 for Control Message . 	231	0
2637	Magic Cookie	Magic Cookie 0x1A2B3C4D . 	240	0
2637	Control Message Type	Control Message Type 3 for Stop-Control-Connection-Request . 	231	0
2637	Reserved1	Reserved1 , Reserved2 These fields MUST be 0 . 	240	0
2637	Length	Length Total length in octets of this PPTP message , including the entire PPTP header . 	100	0
2637	PPTP Message Type	PPTP Message Type 1 for Control Message . 	231	0
2637	Magic Cookie	Magic Cookie 0x1A2B3C4D . 	240	0
2637	Control Message Type	Control Message Type 4 for Stop-Control-Connection-Reply . 	231	0
2637	Error Code	Error Code This field is set to 0 unless a " General Error " exists , in which case Result Code is set to 2 and this field is set to the value corresponding to the general error condition as specified in section 2.2 . 	210	0
2637	Length	Length Total length in octets of this PPTP message , including the entire PPTP header . 	100	0
2637	PPTP Message Type	PPTP Message Type 1 for Control Message . 	231	0
2637	Magic Cookie	Magic Cookie 0x1A2B3C4D . 	240	0
2637	Control Message Type	Control Message Type 5 for Echo-Request . 	231	0
2637	Identifier	Identifier A value set by the sender of the Echo - Request that is used to match the reply with the corresponding request . 	230	0
2637	Length	Length Total length in octets of this PPTP message , including the entire PPTP header . 	100	0
2637	PPTP Message Type	PPTP Message Type 1 for Control Message . 	231	0
2637	Magic Cookie	Magic Cookie 0x1A2B3C4D . 	240	0
2637	Control Message Type	Control Message Type 6 for Echo-Reply . 	231	0
2637	Identifier	Identifier The contents of the identify field from the received Echo-Request is copied to this field . 	230	0
2637	Error Code	Error Code This field is set to 0 unless a " General Error " condition exists , in which case Result Code is set to 2 and this field is set to the value corresponding to the general error condition as specified in section 2.2 . 	210	0
2637	Length	Length Total length in octets of this PPTP message , including the entire PPTP header . 	100	0
2637	PPTP Message Type	PPTP Message Type 1 for Control Message . 	231	0
2637	Magic Cookie	Magic Cookie 0x1A2B3C4D . 	240	0
2637	Control Message Type	Control Message Type 7 for Outgoing-Call-Request . 	231	0
2637	Call ID	Call ID A unique identifier , unique to a particular PAC-PNS pair assigned by the PNS to this session . It is used to multiplex and demultiplex data sent over the tunnel between the PNS and PAC involved in this session . 	230	0
2637	Call Serial Number	Call Serial Number An identifier assigned by the PNS to this session for the purpose of identifying this particular session in logged session information . Unlike the Call ID , both the PNS and PAC associate the same Call Serial Number with a given session . The combination of IP address and call serial number SHOULD be unique . 	230	0
2637	Minimum BPS	Minimum BPS The lowest acceptable line speed ( in bits/second ) for this session . 	110	0
2637	Maximum BPS	Maximum BPS The highest acceptable line speed ( in bits/second ) for this session . 	110	0
2637	Framing Type	Framing Type A value indicating the type of PPP framing to be used for this outgoing call . 	231	0
2637	Packet Processing Delay	Packet Processing Delay A measure of the packet processing delay that might be imposed on data sent to the PNS from the PAC . This value is specified in units of 1/10 seconds . For the PNS this number should be very small . See section 4.4 for a description of how this value is determined and used . 	122	0
2637	Phone Number Length	Phone Number Length The actual number of valid digits in the Phone Number field . 	100	0
2637	Length	Length Total length in octets of this PPTP message , including the entire PPTP header . 	100	0
2637	PPTP Message Type	PPTP Message Type 1 for Control Message . 	231	0
2637	Magic Cookie	Magic Cookie 0x1A2B3C4D . 	240	0
2637	Control Message Type	Control Message Type 8 for Outgoing-Call-Reply . 	231	0
2637	Call ID	Call ID A unique identifier for the tunnel , assigned by the PAC to this session . It is used to multiplex and demultiplex data sent over the tunnel between the PNS and PAC involved in this session . 	230	0
2637	Peer's Call ID	Peer's Call ID This field is set to the value received in the Call ID field of the corresponding Outgoing-Call-Request message . It is used by the PNS to match the Outgoing-Call-Reply with the Outgoing-Call-Request it issued . It also is used as the value sent in the GRE header for mux/demuxing . 	230	0
2637	Error Code	Error Code This field is set to 0 unless a " General Error " condition exists , in which case Result Code is set to 2 and this field is set to the value corresponding to the general error condition as specified in section 2.2 . 	210	0
2637	Cause Code	Cause Code This field gives additional failure information . Its value can vary depending upon the type of call attempted . For ISDN call attempts it is the Q.931 cause code . 	231	0
2637	Connect Speed	Connect Speed The actual connection speed used , in bits/second . 	301	0
2637	Packet Processing Delay	Packet Processing Delay A measure of the packet processing delay that might be imposed on data sent to the PAC from the PNS . This value is specified in units of 1/10 seconds . For the PAC , this number is related to the size of the buffer used to hold packets to be sent to the client and to the speed of the link to the client . This value should be set to the maximum delay that can normally occur between the time a packet arrives at the PAC and is delivered to the client . See section 4.4 for an example of how this value is determined and used . 	122	0
2637	Physical Channel ID	Physical Channel ID This field is set by the PAC in a vendor - specific manner to the physical channel number used to place this call . It is used for logging purposes only . 	231	0
2637	Length	Length Total length in octets of this PPTP message , including the entire PPTP header . 	100	0
2637	PPTP Message Type	PPTP Message Type 1 for Control Message . 	231	0
2637	Magic Cookie	Magic Cookie 0x1A2B3C4D . 	240	0
2637	Control Message Type	Control Message Type 9 for Incoming-Call-Request . 	231	0
2637	Call ID	Call ID A unique identifier for this tunnel , assigned by the PAC to this session . It is used to multiplex and demultiplex data sent over the tunnel between the PNS and PAC involved in this session . 	230	0
2637	Call Serial Number	Call Serial Number An identifier assigned by the PAC to this session for the purpose of identifying this particular session in logged session information . Unlike the Call ID , both the PNS and PAC associate the same Call Serial Number to a given session . The combination of IP address and call serial number should be unique . 	230	0
2637	Physical Channel ID	Physical Channel ID This field is set by the PAC in a vendor - specific manner to the number of the physical channel this call arrived on . 	231	0
2637	Dialed Number Length	Dialed Number Length The actual number of valid digits in the Dialed Number field . 	100	0
2637	Dialing Number Length	Dialing Number Length The actual number of valid digits in the Dialing Number field . 	100	0
2637	Length	Length Total length in octets of this PPTP message , including the entire PPTP header . 	100	0
2637	PPTP Message Type	PPTP Message Type 1 for Control Message . 	231	0
2637	Magic Cookie	Magic Cookie 0x1A2B3C4D . 	240	0
2637	Control Message Type	Control Message Type 10 for Incoming-Call-Reply . 	231	0
2637	Call ID	Call ID A unique identifier for this tunnel assigned by the PNS to this session . It is used to multiplex and demultiplex data sent over the tunnel between the PNS and PAC involved in this session . 	230	0
2637	Peer's Call ID	Peer's Call ID This field is set to the value received in the Call ID field of the corresponding Incoming-Call-Request message . It is used by 	230	0
2637	Error Code	Error Code This field is set to 0 unless a " General Error " condition exists , in which case Result Code is set to 2 and this field is set to the value corresponding to the general error condition as specified in section 2.2 . 	210	0
2637	Packet Transmit Delay	Packet Transmit Delay A measure of the packet processing delay that might be imposed on data sent to the PAC from the PNS . This value is specified in units of 1/10 seconds . 	122	0
2637	Length	Length Total length in octets of this PPTP message , including the entire PPTP header . 	100	0
2637	PPTP Message Type	PPTP Message Type 1 for Control Message . 	231	0
2637	Magic Cookie	Magic Cookie 0x1A2B3C4D . 	240	0
2637	Control Message Type	Control Message Type 11 for Incoming-Call-Connected . 	231	0
2637	Peer's Call ID	Peer's Call ID This field is set to the value received in the Call ID field of the corresponding Incoming-Call-Reply message . It is used by the PNS to match the Incoming-Call-Connected with the Incoming-Call-Reply it issued . 	230	0
2637	Connect Speed	Connect Speed The actual connection speed used , in bits/second . 	231	0
2637	Packet Transmit Delay	Packet Transmit Delay A measure of the packet processing delay that might be imposed on data sent to the PAC from the PNS . This value is specified in units of 1/10 seconds . 	122	0
2637	Framing Type	Framing Type A value indicating the type of PPP framing being used by this incoming call . 	231	0
2637	Length	Length Total length in octets of this PPTP message , including the entire PPTP header . 	100	0
2637	PPTP Message Type	PPTP Message Type 1 for Control Message . 	231	0
2637	Magic Cookie	Magic Cookie 0x1A2B3C4D . 	240	0
2637	Control Message Type	Control Message Type 12 for Call-Clear-Request . 	231	0
2637	Call ID	Call ID The Call ID assigned by the PNS to this call . This value is used instead of the Peer's Call ID because the latter may not be known to the PNS if the call must be aborted during call establishment . 	230	0
2637	Length	Length Total length in octets of this PPTP message , including the entire PPTP header . 	100	0
2637	PPTP Message Type	PPTP Message Type 1 for Control Message . 	231	0
2637	Magic Cookie	Magic Cookie 0x1A2B3C4D . 	240	0
2637	Control Message Type	Control Message Type 13 for Call-Disconnect-Notify . 	230	0
2637	Call ID	Call ID The value of the Call ID assigned by the PAC to this call . This value is used instead of the Peer's Call ID because the latter may not be known to the PNS if the call must be aborted during call establishment . 	230	0
2637	Error Code	Error Code This field is set to 0 unless a " General Error " condition exists , in which case the Result Code is set to 2 and this field is set to the value corresponding to the general error condition as specified in section 2.2 . 	210	0
2637	Cause Code	Cause Code This field gives additional disconnect information . Its value varies depending on the type of call being disconnected . For ISDN calls it is the Q.931 cause code . 	231	0
2637	Length	Length Total length in octets of this PPTP message , including the entire PPTP header . 	100	0
2637	PPTP Message Type	PPTP Message Type 1 for Control Message . 	231	0
2637	Magic Cookie	Magic Cookie 0x1A2B3C4D . 	240	0
2637	Control Message Type	Control Message Type 14 for WAN-Error-Notify . 	231	0
2637	Peer's Call ID	Peer's Call ID Th Call ID assigned by the PNS to this call . 	230	0
2637	CRC Errors	CRC Errors Number of PPP frames received with CRC errors since session was established . 	302	0
2637	Framing Errors	Framing Errors Number of improperly framed PPP packets received . 	302	0
2637	Hardware Overruns	Hardware Overruns Number of receive buffer over-runs since session was established . 	201	0
2637	Buffer Overruns	Buffer Overruns Number of buffer over-runs detected since session was established . 	201	0
2637	Time-out Errors	Time-out Errors Number of time-outs since call was established . 	202	0
2637	Alignment Errors	Alignment Errors Number of alignment errors since call was established . 	302	0
2637	Length	Length Total length in octets of this PPTP message , including the entire PPTP header . 	100	0
2637	PPTP Message Type	PPTP Message Type 1 for Control Message . 	231	0
2637	Magic Cookie	Magic Cookie 0x1A2B3C4D . 	240	0
2637	Control Message Type	Control Message Type 15 for Set-Link-Info . 	231	0
2637	Peer's Call ID	Peer's Call ID The value of the Call ID assigned by the PAC to this call . 	230	0
2637	Send ACCM	Send ACCM The send ACCM value the client should use to process outgoing PPP packets . The default value used by the client until this message is received is 0XFFFFFFFF . See [ 7 ]. 	303	0
2637	Receive ACCM	Receive ACCM The receive ACCM value the client should use to process incoming PPP packets . The default value used by the client until this message is received is 0XFFFFFFFF . See [ 7 ]. 	303	0
2637	Call ID	A session is defined by the triple ( PAC , PNS , Call ID ). 	201	0
2637	C	C ( Bit 0 ) Checksum Present . Set to zero ( 0 ). 	210	0
2637	R	R ( Bit 1 ) Routing Present . Set to zero ( 0 ). 	302	0
2637	K	K ( Bit 2 ) Key Present . Set to one ( 1 ). S ( Bit 3 ) Sequence Number Present . Set to one ( 1 ) if a payload ( data ) packet is present . Set to zero ( 0 ) if payload is not present ( GRE packet is an Acknowledgment only ). 	240	0
2637	s	s ( Bit 4 ) Strict source route present . Set to zero ( 0 ). 	500	0
2637	Recur	Recur ( Bits 5-7 ) Recursion control . Set to zero ( 0 ). 	302	0
2637	A	A ( Bit 8 ) Acknowledgment sequence number present . Set to one ( 1 ) if packet contains Acknowledgment Number to be used for acknowledging previously transmitted data . 	200	0
2637	Flags	Flags ( Bits 9-12 ) Must be set to zero ( 0 ). 	500	0
2637	Ver	Ver ( Bits 13-15 ) Must contain 1 ( enhanced GRE ). 	400	0
2637	C	This document and translations of it may be copied and furnished to others , and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared , copied , published and distributed , in whole or in part , without restriction of any kind , provided that the above copyright notice and this paragraph are included on all such copies and derivative works . However , this document itself may not be modified in any way , such as by removing the copyright notice or references to the Internet Society or other Internet organizations , except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed , or as required to translate it into languages other than English . 	302	0
2641	Event	This 4-octet field contains the number of the event . Valid values are as follows : 	100	0
2641	Delta options mask	This 4-octet field contains a bit map specifying the feature(s ) gained or lost by the neighbor switch ( events 2 and 3 only ). Valid values are as specified for the next field , Current options mask . 	301	0
2641	Current options mask	This 4-octet field contains a bit map specifying the features of the neighbor switch . Bit assignments are as follows : 	400	0
2641	Port number	This 4-octet field contains the logical number of the local port for which the event was generated . 	230	0
2641	Neighbor chassis IP address	This 4-octet field contains the Internet Protocol ( IP ) address of the chassis of the neighbor switch . 	230	0
2641	Neighbor functional level	This 4-octet field contains the functional level of the neighbor switch , as determined by the version level of the SecureFast VLAN software under which this switch is operating . Valid values are as follows : 	231	0
2641	Topology agent	This 4-octet field contains a pointer to the topology agent that generated the event . The pointer here can reference any of the topology agents that send Interswitch Keepalive messages -- that is , any agent running the VlanHello protocol . 	230	0
2641	Next event	This 4-octet field contains a pointer to the next event relay structure in the list . 	231	0
2641	Type	This 2-octet field identifies the type of data carried within the frame . The type field of ISMP packets contains the value 0x81FD . 	240	0
2641	ISMP Version	This 2-octet field contains the version number of the InterSwitch Message Protocol to which this ISMP packet adheres . The VlanHello protocol uses ISMP Version 3.0 . 	220	0
2641	ISMP message type	This 2-octet field contains a value indicating which type of ISMP message is contained within the message body . VlanHello Interswitch Keepalive messages have a message type of 2 . 	240	0
2641	Sequence number	This 2-octet field contains an internally generated sequence number used by the various protocol handlers for internal synchronization of messages . 	231	0
2641	Code length	This 1-octet field contains the number of octets in the Authentication code field of the message . 	100	0
2641	Authentication code	This variable-length field contains an encoded value used for authentication of the ISMP message . 	301	0
2641	Version	This 2-octet field contains the version number of the VlanHello protocol to which this message adheres . This document describes VlanHello Version 4 . 	220	0
2641	Switch type	This 2-octet field contains the type of the switch . Currently , the only value recognized here is as follows : 	231	0
2641	Functional level	This 4-octet field contains the functional level of the sending switch , as determined by the version level of the SecureFast VLAN software under which this switch is operating . Valid values are as follows : 	231	0
2641	Options	This 4-octet field contains a bit map specifying the features of the switch . Bit assignments are as follows : 	400	0
2641	Base MAC count	This 2-octet field contains the number of entries in the list of Base MAC entries . 	230	0
2642	Type	Type Packet Name Protocol Function 	231	0
2642	Type	The type of network to which the interface is attached -- point - to-point or broadcast ( multi-access ). This data item is initialized to point-to-point when the interface becomes operational . If a second neighbor is detected on the link after the first neighbor has been discovered , the link interface type is changed to broadcast . The type remains as broadcast until the interface is declared down , at which time the type reverts to point-to-point . 	231	0
2642	Sequence number	A 4-octet number identifying individual Database Description packets . When the neighbor state ExStart is entered and the database exchange process is started , the sequence number is set to a value not previously seen by the neighboring switch . ( One possible scheme is to use the switch's time of day counter .) The sequence number is then incremented by the master with each new Database Description packet sent . See Section 7.2 for more information on the database exchange process . 	200	0
2642	Type	Type Description Link ID 	231	0
2642	Type	Type Packet Name Function Description 	240	0
2642	Type	This 2-octet field identifies the type of data carried within the frame . The type field of ISMP packets contains the value 0x81FD . 	240	0
2642	Version	This 2-octet field contains the version number of the InterSwitch Message Protocol to which this ISMP packet adheres . This document describes ISMP Version 2.0 . ISMP message type 	220	0
2642	Sequence number	This 2-octet field contains an internally generated sequence number used by the various protocol handlers for internal synchronization of messages . 	231	0
2642	Type	This 1-octet field contains the packet type . Possible values are as follows : 	231	0
2642	Packet length	This 2-octet field contains the length of the protocol packet , in bytes , calculated from the start of the VLSP header , at offset 20 of the ISMP message body . If the packet length is not an integral number of 16-bit words , the packet is padded with an octet of zero ( see the description of the checksum field , below ). 	100	0
2642	Checksum	This 2-octet field contains the packet checksum value . The checksum is calculated as the 16-bit one's complement of the one's complement sum of all the 16-bit words in the packet , beginning with the VLSP header , excluding the authentication field . If the packet length is not an integral number of 16-bit words , the packet is padded with an octet of zero before calculating the checksum . 	301	0
2642	HelloInt	This 2-octet field contains the interval , in seconds , at which this switch sends Hello packets . 	121	0
2642	Options	This 1-octet field contains the optional capabilities supported by the switch , as described in Section 10.5 . 	400	0
2642	Priority	This 1-octet field contains the switch priority used in selecting the designated switch and backup designated switch ( see Section 6.3.1 ). If the value here is zero , the switch is ineligible to become the designated switch or the backup designated switch . 	230	0
2642	DeadInt	This 4-octet field contains the length of time , in seconds , that neighboring switches will wait before declaring the interface down once they stop receiving Hello packets over the interface . The value here is equal to the value of SwitchDeadInterval , as found in the interface data structure . 	120	0
2642	Options	This 1-octet field contains the optional capabilities supported by the switch , as described in Section 10.5 . 	400	0
2642	Flags	This 1-octet field contains a set of bit flags that are used to coordinate the database exchange process . The format of this octet is as follows : 	400	0
2642	Sequence number	This 4-octet field is used to sequence the Database Description packets during the database exchange process . The two switches involved in the exchange process agree on the initial value of the sequence number during the master/slave negotiation . The number is then incremented for each Database Description packet in the exchange . 	200	0
2642	Link state type	This 4-octet field contains the link state type of the requested link state advertisement , as stored in the advertisement header . 	231	0
2642	# advertisements	This 4-octet field contains the number of link state advertisements included in the packet . 	100	0
2642	Type	Type Name Function Description 	240	0
2642	Age	This 2-octet field contains the time , in seconds , since this instance of the link state advertisement was originated . 	121	0
2642	Options	This 1-octet field contains the optional capabilities supported by the advertising switch , as described in Section 10.5 . 	400	0
2642	Sequence number	This 4-octet field is used to sequence the instances of a particular link state advertisement . The number is incremented for each new instance . 	201	0
2642	Checksum	This 2-octet field contains the checksum of the complete contents of the link state advertisement , excluding the age field . The checksum used is commonly referred to as the Fletcher checksum and is documented in [ RFC905 ]. Note that since this checksum is calculated for each separate advertisement , a protocol packet containing lists of advertisements or advertisement headers will contain multiple checksum values . 	301	0
2642	Length	This 2-octet field contains the total length , in octets , of the link state advertisement , including the header . 	100	0
2642	# links	This 2-octet field contains the number of links described by this advertisement . This value must be equal to the total number of functioning network links attached to the switch . 	400	0
2642	Link type	This 1-octet field contains the type of link being described . Possible values are as follows : 	400	0
2642	# TOS	This 1-octet field contains the number of nonzero type of service metrics specified for the link . Since the current version of VLSP does not support routing based on nonzero types of service , this field contains a value of zero . 	231	0
2642	TOS 0 metric	This 2-octet field contains the cost of using this link for the zero TOS . This value is expressed in the link state metric and must be greater than zero . 	302	0
2643	Tag	This 4-octet field specifies the type of address contained in the structure . The following address types are currently supported : 	230	0
2643	Value length	This 1-octet field contains the length of the value of the address . The value here depends on the address type and actual value . 	230	0
2643	Address value	This variable-length field contains the value of the address . The length of this field is stored in the Value length field . 	230	0
2643	Type	This 2-octet field identifies the type of data carried within the frame . Except where otherwise noted , the type field of ISMP packets contains the value 0x81FD . 	240	0
2643	Version	This 2-octet field contains the version number of the InterSwitch Message Protocol to which this ISMP packet adheres . This document describes ISMP Version 2.0 . 	220	0
2643	ISMP message type	This 2-octet field contains a value indicating which type of ISMP message is contained within the message body . The following table lists each ISMP message , along with its message type and the section within this document that describes the message in detail : 	240	0
2643	Sequence number	This 2-octet field contains an internally generated sequence number used by the various protocol handlers for internal synchronization of messages . 	231	0
2643	Version	This 2-octet field contains the version number of the message type . This document describes ISMP message type 4 , version 1 . 	220	0
2643	Opcode	This 2-octet field contains the operation type of the message . For an Interswitch BPDU message , the value should be 1 . 	240	0
2643	Message flags	This 2-octet field is currently unused . It is reserved for future use . 	500	0
2643	Version	This 2-octet field contains the version number of the message type . This document describes ISMP message type 4 , version 1 . 	220	0
2643	Opcode	This 2-octet field contains the operation type of the message . Valid values are as follows : 	231	0
2643	Message flags	This 2-octet field is currently unused . It is reserved for future use . 	500	0
2643	Version	This 2-octet field contains the version number of the message type . This document describes ISMP message type 5 , version 1 . 	220	0
2643	Opcode	This 2-octet field contains the operation code of the message . Valid values are as follows : 	240	0
2643	Status	This 2-octet field contains the status of a Resolve response message . Valid values are as follows : 	240	0
2643	Call tag	This 2-octet field contains the call tag of the endstation packet for which this Resolve request is issued . The call tag is a 16 - bit value ( generated by the originating switch ) that uniquely identifies the packet . 	230	0
2643	Count	This 1-octet field contains the number of address attributes requested or returned . This is the number of items in the resolve list . 	230	0
2643	Version	This 2-octet field contains the version number of the message type . This section describes version 3 of the Interswitch Resolve message . 	220	0
2643	Opcode	This 2-octet field contains the operation code of the message . Valid values are as follows : 	240	0
2643	Status	This 2-octet field contains the status of a Resolve response message . Valid values are as follows : 	240	0
2643	Call tag	This 2-octet field contains the call tag of the endstation packet for which this Resolve request is issued . The call tag is a 16 - bit value ( generated by the originating switch ) that uniquely identifies the packet . 	230	0
2643	Count	This 1-octet field contains the number of address attributes requested or returned . This is the number of items in the resolve list . 	230	0
2643	Version	This 2-octet field contains the version number of the message type . This document describes ISMP message type 5 , version 1 . 	220	0
2643	Opcode	This 2-octet field contains the operation code of the message . Valid values are as follows : 	240	0
2643	Status	This 2-octet field contains the status of a New User response message . Valid values are as follows : 	240	0
2643	Call tag	This 2-octet field contains the call tag of the endstation packet for which this New User request is issued . The call tag is a 16 - bit value ( generated by the originating switch ) that uniquely identifies the packet that caused the switch to identify the endstation as a new user . 	230	0
2643	Count	This 1-octet field contains the number of VLAN identifiers returned . This is the number of items in the resolve list . This field is written by the previous owner switch . 	231	0
2643	Version	This 2-octet field contains the version number of the message type . This document describes ISMP message type 7 , version 1 . 	220	0
2643	Opcode	This 2-octet field contains the operation code of the message . The value here should be 1 , indicating the message is a flood request . 	231	0
2643	Status	This 2-octet field is currently unused . It is reserved for future use . 	500	0
2643	Call tag	This 2-octet field contains the call tag of the endstation packet encapsulated within this tag-based flood message . The call tag is a 16-bit value ( generated by the originating switch ) that uniquely identifies the packet . 	230	0
2643	Count	This 1-octet field contains the number of VLAN identifiers included in the VLAN list . 	231	0
2643	VLAN identifier	VLAN identifier 	231	0
2643	Version	This 2-octet field contains the version number of the message type . This section describes version 2 of the Interswitch Tag - Based Flood message . 	220	0
2643	Opcode	This 2-octet field contains the operation code of the message . Valid values here are as follows : 	240	0
2643	Status	This 2-octet field is currently unused . It is reserved for future use . 	500	0
2643	Call tag	This 2-octet field contains the call tag of the endstation packet encapsulated within this tag-based flood message . The call tag is a 16-bit value ( generated by the originating switch ) that uniquely identifies the packet . 	230	0
2643	Count	This 1-octet field contains the number of VLAN identifiers included in the VLAN list . 	231	0
2643	Version	This 2-octet field contains the version number of the message type . This document describes ISMP message type 8 , version 1 . 	220	0
2643	Opcode	tet field contains the operation type of the message . ues are as follows : 	231	0
2643	Status	This 2-octet field contains the current status of the tap request . Valid values are as follows : 	240	0
2643	Error code	This 2-octet field contains the response message error code of the requested operation . Valid values are as follows : 	240	0
2643	Header type	This 2-octet field contains the type of information contained in the header field . Currently , valid values are as follows : 	231	0
2643	Header length	This 2-octet field contains the length of the header field . Currently , this field always contains a value of 12 . 	100	0
2643	Direction	This 2-octet field contains a value indicating the type of tap . Valid values are as follows : 	240	0
2643	Probe port	This 4-octet field contains the logical port number ( on the probe switch ) to which the probe is attached . 	400	0
2658	RR	Reserved ( RR ): 2 bits MUST be set to zero by sender , SHOULD be ignored by receiver . 	500	0
2658	LLL	Interleave ( LLL ): 3 bits MUST have a value between 0 and 5 inclusive . The remaining two values ( 6 and 7 ) MUST not be used by senders . If this field is non-zero , interleaving is enabled . All receivers MUST support interleaving . Senders MAY support interleaving . Senders that do not support interleaving MUST set field LLL and NNN to zero . 	500	0
2658	NNN	Interleave Index ( NNN ): 3 bits MUST have a value less than or equal to the value of LLL . Values of NNN greater than the value of LLL are invalid . 	302	0
2661	M	Mandatory ( M ) bit : Controls the behavior required of an implementation which receives an AVP which it does not recognize . If the M bit is set on an unrecognized AVP within a message associated with a particular session , the session associated with this message MUST be terminated . If the M bit is set on an unrecognized AVP within a message associated with the overall tunnel , the entire tunnel ( and all sessions within ) MUST be terminated . If the M bit is not set , an unrecognized AVP MUST be ignored . The control message must then continue to be processed as if the AVP had not been present . 	210	0
2661	M	Mandatory ( M ) bit : Controls the behavior required of an implementation which receives an AVP which it does not recognize . If the M bit is set on an unrecognized AVP within a message associated with a particular session , the session associated with this message MUST be terminated . If the M bit is set on an unrecognized AVP within a message associated with the overall tunnel , the entire tunnel ( and all sessions within ) MUST be terminated . If the M bit is not set , an unrecognized AVP MUST be ignored . The control message must then continue to be processed as if the AVP had not been present . 	210	0
2661	H	Hidden ( H ) bit : Identifies the hiding of data in the Attribute Value field of an AVP . This capability can be used to avoid the passing of sensitive data , such as user passwords , as cleartext in an AVP . Section 4.3 describes the procedure for performing AVP hiding . 	230	0
2661	Length	Length : Encodes the number of octets ( including the Overall Length and bitmask fields ) contained in this AVP . The Length may be calculated as 6 + the length of the Attribute Value field in octets . The field itself is 10 bits , permitting a maximum of 1023 octets of data in a single AVP . The minimum Length of an AVP is 6 . If the length is 6 , then the Attribute Value field is absent . 	100	0
2661	Vendor ID	Vendor ID : The IANA assigned " SMI Network Management Private Enterprise Codes " [ RFC1700 ] value . The value 0 , corresponding to IETF adopted attribute values , is used for all AVPs defined within this document . Any vendor wishing to implement their own L2TP extensions can use their own Vendor ID along with private Attribute 	231	0
2661	Attribute Type	Attribute Type : A 2 octet value with a unique interpretation across all AVPs defined under a given Vendor ID . 	231	0
2661	Message Type	The Message Type AVP , Attribute Type 0 , identifies the control message herein and defines the context in which the exact meaning of the following AVPs will be determined . 	240	0
2661	Result Code	The Result Code AVP , Attribute Type 1 , indicates the reason for terminating the control channel or session . 	302	0
2661	Firmware Revision	The Firmware Revision AVP , Attribute Type 6 , indicates the firmware revision of the issuing device . 	220	0
2661	Assigned Tunnel ID	The Assigned Tunnel ID AVP , Attribute Type 9 , encodes the ID being assigned to this tunnel by the sender . 	231	0
2661	Assigned Session ID	The Assigned Session ID AVP , Attribute Type 14 , encodes the ID being assigned to this session by the sender . 	230	0
2661	Call Serial Number	The Call Serial Number AVP , Attribute Type 15 , encodes an identifier assigned by the LAC or LNS to this call . 	230	0
2661	Minimum BPS	The Minimum BPS AVP , Attribute Type 16 , encodes the lowest acceptable line speed for this call . 	200	0
2661	Maximum BPS	The Maximum BPS AVP , Attribute Type 17 , encodes the highest acceptable line speed for this call . 	200	0
2661	Physical Channel ID	The Physical Channel ID AVP , Attribute Type 25 , encodes the vendor specific physical channel number used for a call . 	230	0
2661	Reserved	Reserved - Not used , MUST be 0 CRC Errors - Number of PPP frames received with CRC errors since call was established Framing Errors - Number of improperly framed PPP packets received Hardware Overruns - Number of receive buffer over-runs since call was established Buffer Overruns - Number of buffer over-runs detected since call was established Time-out Errors - Number of time-outs since call was established Alignment Errors - Number of alignment errors since call was established 	500	0
2661	Message Type	Message Type 	240	0
2661	Message Type	Message Type 	240	0
2661	Message Type	Message Type ( Tx ) Connect Speed Framing Type 	240	0
2661	Physical Channel ID	Physical Channel ID 	230	0
2661	Message Type	Message Type ( Tx ) Connect Speed Framing Type 	240	0
2673	ELT	ELT 000001 binary , the six-bit extended label type [ EDNS0 ] assigned to the Bit-String Label . 	231	0
2673	Count	Count The number of significant bits in the Label field . A Count value of zero indicates that 256 bits are significant . ( Thus the null label representing the DNS root cannot be represented as a Bit String Label .) 	301	0
2675	Option Type	Option Type 8-bit value C2 ( hexadecimal ). 	231	0
2675	Opt Data Len	Opt Data Len 8-bit value 4 . 	240	0
2675	Jumbo Payload Length	Jumbo Payload Length 32-bit unsigned integer . Length of the IPv6 packet in octets , excluding the IPv6 header but including the Hop-by-Hop Options header and any other extension headers present . Must be greater than 65,535 . 	100	0
2710	Type	3.1 . Type 	240	0
2710	Code	3.2 . Code 	240	0
2710	Checksum	The standard ICMPv6 checksum , covering the entire MLD message plus a " pseudo-header " of IPv6 header fields [ ICMPv6,IPv6 ]. 	301	0
2710	Maximum Response Delay	The Maximum Response Delay field is meaningful only in Query messages , and specifies the maximum allowed delay before sending a responding Report , in units of milliseconds . In all other messages , it is set to zero by the sender and ignored by receivers . 	500	0
2710	Reserved	3.5 . Reserved 	240	0
2710	Multicast Address	In a Query message , the Multicast Address field is set to zero when sending a General Query , and set to a specific IPv6 multicast address when sending a Multicast-Address-Specific Query . 	201	0
2716	Code	Code 	231	0
2716	Identifier	The identifier field is one octet and aids in matching responses with requests . 	301	0
2716	Length	The Length field is two octets and indicates the length of the EAP packet including the Code , Identifier , Length , Type , and Data fields . Octets outside the range of the Length field should be treated as Data Link Layer padding and should be ignored on reception . 	100	0
2716	Type	Type 	240	0
2716	Code	Code 	231	0
2716	Identifier	The Identifier field is one octet and aids in matching responses with requests . The Identifier field MUST be changed on each Request packet . 	301	0
2716	Length	The Length field is two octets and indicates the length of the EAP packet including the Code , Identifier , Length , Type , and TLS Response fields . 	100	0
2716	Type	Type 	240	0
2716	Flags	Flags 	202	0
2716	TLS Message Length	The TLS Message Length field is four octets , and is present only if the L bit is set . This field provides the total length of the TLS message or set of messages that is being fragmented . 	100	0
2716	Code	Code 	231	0
2716	Identifier	The Identifier field is one octet and MUST match the Identifier field from the corresponding request . 	231	0
2716	Length	The Length field is two octets and indicates the length of the EAP packet including the Code , Identifir , Length , Type , and TLS data fields . 	100	0
2716	Type	Type 	240	0
2716	Flags	Flags 	202	0
2716	TLS Message Length	The TLS Message Length field is four octets , and is present only if the L bit is set . This field provides the total length of the TLS message or set of messages that is being fragmented . 	100	0
2733	FEC Header	FEC Header : The FEC header is the header information contained in an FEC packet . 	400	0
2733	FEC Payload	Associated : An FEC packet is said to be " associated " with one or more media packets when those media packets are used to generate the FEC packet ( by use of the exclusive or operation ). 	231	0
2733	SN base	SN base : 8 [ min(8,9 )] len . rec .: 1 [ 8 xor 9 ] E : 0 PTI rec .: 25 [ 11 xor 18 ] mask : 3 TS rec .: 6 [ 3 xor 5 ] 	240	0
2734	datagram_size	datagram_size : The encoded size of the entire IP datagram . The value of datagram_size SHALL be the same for all link fragments of an IP datagram and SHALL be one less than the value of Total Length in the datagram's IP header ( see STD 5 , RFC 791 ). 	100	0
2734	ether_type	ether_type : This field is present only in the first link fragment and SHALL have a value of 0x0800 , which indicates an IPv4 datagram . 	301	0
2734	fragment_offset	fragment_offset : This field is present only in the second and subsequent link fragments and SHALL specify the offset , in octets , of the fragment from the beginning of the IP datagram . The first octet of the datagram ( the start of the IP header ) has an offset of zero; the implicit value of fragment_offset in the first link fragment is zero . 	110	0
2734	dgl	dgl : The value of dgl ( datagram label ) SHALL be the same for all link fragments of an IP datagram . The sender SHALL increment dgl for successive , fragmented datagrams; the incremented value of dgl SHALL wrap from 65,535 back to zero . 	301	0
2734	hw_addr_len	hw_addr_len : This field indicates the size , in octets , of the 1394-dependent hardware address associated with an IP address and SHALL have a value of 16 . 	100	0
2734	IP_addr_len	IP_addr_len : This field indicates the size , in octets , of an IP version 4 ( IPv4 ) address and SHALL have a value of 4 . 	100	0
2734	sender_max_rec	sender_max_rec : This field SHALL be equal to the value of max_rec in the sender's configuration ROM bus information block . 	400	0
2734	sspd	sspd : This field SHALL be set to the lesser of the sender's link speed and PHY speed . The link speed is the maximum speed at which the link may send or receive packets; the PHY speed is the maximum speed at which the PHY may send , receive or repeat packets . The table below specifies the encoding used for sspd; all values not specified are RESERVED for future standardization . 	231	0
2734	sender_unicast_FIFO_hi	sender_unicast_FIFO_hi and sender_unicast_FIFO_lo : These fields together SHALL specify the 48-bit offset of the sender's FIFO available for the receipt of IP datagrams in the format specified by section 6 . The offset of a sender's unicast FIFO SHALL NOT change , except as the result of a power reset . 	200	0
2734	sender_unicast_FIFO_lo	sender_unicast_FIFO_hi and sender_unicast_FIFO_lo : These fields together SHALL specify the 48-bit offset of the sender's FIFO available for the receipt of IP datagrams in the format specified by section 6 . The offset of a sender's unicast FIFO SHALL NOT change , except as the result of a power reset . 	200	0
2734	sender_IP_address	sender_IP_address : This field SHALL specify the IP address of the sender . 	230	0
2734	target_IP_address	target_IP_address : In a 1394 ARP request , this field SHALL specify the IP address from which the sender desires a response . In a 1394 ARP response , it SHALL be IGNORED . 	230	0
2734	length	length : This field SHALL contain the size , in octets , of the entire MCAP message . 	100	0
2734	message data	message data : The remainder of the MCAP message is variable in length and SHALL consist of zero or more group address descriptors with the format illustrated below . 	400	0
2734	length	length : This field SHALL contain the size , in octets , of the MCAP group address descriptor . 	100	0
2734	type	type : This field SHALL have a value of one , which indicates a group address descriptor . 	210	0
2734	expiration	expiration : The usage of this field varies according to opcode . For solicit messages the expiration field SHALL be IGNORED . Otherwise , for advertisements , this field SHALL contain a time - stamp , in seconds , that specifies a future time after which the channel number specified by channel may no longer be used . 	110	0
2734	channel	channel : This field is valid only for advertise messages , in which case it SHALL specify an allocated channel number , in the range zero to 63 inclusive . All other values are RESERVED . 	231	0
2734	speed	speed : This field is valid only for advertise messages , in which case it SHALL specify the speed at which stream packets for the indicated channel are transmitted . Table 2 specifies the encoding used for speed . 	301	0
2734	group_address	group_address : This variable length field SHALL specify the IP address of a particular IP multicast group . The length of group_address , in octets , is derived from the length of the group address descriptor by subtracting 12 from the length field . 	230	0
2735	C	Copyright ( C ) The Internet Society ( 1999 ). All Rights Reserved . 	303	0
2735	C	C : Compulsory = 0 ( not a compulsory extension ) u : Unused and MUST be set to zero . Type = 0x0009 Length = 0x0008 	240	0
2735	C	This document and translations of it may be copied and furnished to others , and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared , copied , published and distributed , in whole or in part , without restriction of any kind , provided that the above copyright notice and this paragraph are included on all such copies and derivative works . However , this document itself may not be modified in any way , such as by removing the copyright notice or references to the Internet Society or other Internet organizations , except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed , or as required to translate it into languages other than English . 	302	0
2741	1	Mechanisms for describing and naming objects and events for the purpose of management . The first version of this Structure of Management Information ( SMI ) is called SMIv1 and described in STD 16 , RFC 1155 [ 2 ], STD 16 , RFC 1212 [ 3 ] and RFC 1215 [ 4 ]. The second version , called SMIv2 , is described in STD 58 , RFC 2578 [ 5 ], STD 58 , RFC 2579 [ 6 ] and STD 58 , RFC 2580 [ 7 ]. 	231	0
2741	n_subid	The number ( 0-128 ) of sub-identifiers in the object identifier . An ordered list of " n_subid " 4-byte sub-identifiers follows the 4-byte header . 	231	0
2741	prefix	An unsigned value used to reduce the length of object identifier encodings . A non-zero value " x " is interpreted as the first sub-identifier after " internet " ( 1.3.6.1 ), and indicates an implicit prefix " internet.x " to the actual sub - identifiers encoded in the Object Identifier . For example , a prefix field value 2 indicates an implicit prefix " 1.3.6.1.2 ". A value of 0 in the prefix field indicates there is no prefix to the sub-identifiers . 	231	0
2741	include	Used only when the Object Identifier is the start of a SearchRange , as described in section 5.2 , " SearchRange ". 	210	0
2741	2	A 4-byte unsigned integer , encoded according to the header's NETWORK_BYTE_ORDER bit . 	400	0
2741	v.type	Indicates the variable binding's syntax , and must be one of the following values : 	231	0
2741	h.version	h.version 	220	0
2741	h.type	h.type 	240	0
2741	h.flags	A bitmask , with bit 0 the least significant bit . The bit definitions are as follows : 	231	0
2741	h.sessionID	The session ID uniquely identifies a session over which AgentX PDUs are exchanged between a subagent and the master agent . The session ID has no significance and no defined value in the agentx-Open-PDU sent by a subagent to open a session with the master agent; in this case , the master agent will assign a unique session ID that it will pass back in the corresponding agentx-Response-PDU . From that point on , that same session ID will appear in every AgentX PDU exchanged over that session between the master and the subagent . A subagent may establish multiple AgentX sessions by sending multiple agentx-Open-PDUs to the master agent . 	230	0
2741	h.transactionID	The transaction ID uniquely identifies , for a given session , the single SNMP management request ( and single SNMP PDU ) with which an AgentX PDU is associated . If a single SNMP management request results in multiple AgentX PDUs being sent by the master agent with the same session ID , each of these AgentX PDUs must contain the same transaction ID; conversely , AgentX PDUs sent during a particular session , that result from distinct SNMP management requests , must have distinct transaction IDs within the limits of the 32 - bit field ). 	230	0
2741	h.packetID	A packet ID generated by the sender for all AgentX PDUs except the agentx-Response-PDU . In an agentx-Response-PDU , the packet ID must be the same as that in the received AgentX PDU to which it is a response . A master agent might 	230	0
2741	h.payload_length	The size in octets of the PDU contents , excluding the 20 - byte header . As a result of the encoding schemes and PDU layouts , this value will always be either 0 , or a multiple of 4 . 	100	0
2741	c.reason	An enumerated value that gives the reason that the master agent or subagent closed the AgentX session . This field may take one of the following values : 	230	0
2741	r.timeout	The length of time , in seconds , that a master agent should allow to elapse after dispatching a message on a session before it regards the subagent as not responding . r.timeout applies only to messages that concern MIB objects within r.subtree . It overrides both the session's default value ( if any ) indicated when the AgentX session with the master agent was established , and the master agent's default timeout . The default value for r.timeout is 0 ( no override ). 	120	0
2741	r.priority	A value between 1 and 255 , used to achieve a desired configuration when different sessions register identical or overlapping regions . Subagents with no particular knowledge of priority should register with the default value of 127 . 	201	0
2741	r.range_subid	Permits specifying a range in place of one of r.subtree's sub-identifiers . If this value is 0 , no range is being specified and there is no r.upper_bound field present in the PDU . In this case the MIB region being registered is the single subtree named by r.subtree . 	400	0
2741	u.priority	u.priority 	240	0
2741	u.range_subid	u.range_subid 	400	0
2741	g.non_repeaters	g.non_repeaters 	400	0
2741	g.max_repetitions	g.max_repetitions 	400	0
2741	h.sessionID	If this is a response to an agentx-Open-PDU , then it contains the new and unique sessionID ( as assigned by the master agent ) for this session . 	400	0
2741	h.transactionID	Must be identical to the h.transactionID value in the PDU to which this PDU is a response . 	231	0
2741	h.packetID	Must be identical to the h.packetID value in the PDU to which this PDU is a response . 	231	0
2741	res.sysUpTime	This field contains the current value of sysUpTime for the context indicated within the PDU to which this PDU is a response . It is relevant only in agentx response PDUs sent from the master agent to a subagent in response to the set of administrative PDUs listed in section 6.1 , " AgentX PDU Header ". 	400	0
2741	res.error	Indicates error status . Within responses to the set of " administrative " PDU types listed in section 6.1 , " AgentX PDU Header ", values are limited to the following : 	240	0
2741	res.index	In error cases , this is the index of the failed variable binding within a received request PDU . ( Note : As explained in section 5.4 , " Value Representation ", the index values of variable bindings within a variable binding list are 1 - based .) 	231	0
2741	v.type	- An unrecognized value is encountered for h.type , v.type , etc . 	301	0
2741	1	2 ) Use that value to fully qualify the MIB region(s ), and attempt to register using the default priority . 	231	0
2741	1	( a ) if the second VarBind is not snmpTrapOID.0 , res.error is set to ` processingError ' and res.index to 2 	240	0
2741	2	( a ) if the first VarBind is not snmpTrapOID.0 , res.error is set to ` processingError ' and res.index to 1 	210	0
2741	1	If a subagent does not receive a response to its pings , or if it is able to detect ( from the underlying transport ) that the master agent is not able to receive AgentX messages , then it eventually must initiate a new AgentX session , re-register its MIB regions , etc . 	201	0
2741	1	Because AgentX supports registration of duplicate and overlapping regions , it is possible for the master agent to obtain a value for a requested varbind from within multiple registered MIB regions . 	400	0
2741	2	The master agent may choose to send agentx-Get-PDUs while servicing an SNMP GetNextRequest-PDU . The master agent may choose to send agentx-Get-PDUs or agentx-GetNext-PDUs while servicing an SNMP GetBulkRequest-PDU . One possible reason for this would be if the current iteration has targeted instance-level registrations . 	231	0
2741	3	For Get/GetNext/GetBulk operations , at any stage of the possibly iterative process , the master agent may need to dispatch several SearchRanges to a particular subagent session . The master agent may send one , some , or all of the SearchRanges in a single AgentX PDU . 	303	0
2741	4	The master agent chooses a timeout value for each MIB region being queried , which is 	110	0
2741	1	Within a lexicographically ordered set of registered MIB regions , valid for the indicated context , locate the authoritative region ( according to section 7.1.4.1 , " Handling Duplicate and Overlapping Subtrees ") that contains the binding's name . 	400	0
2741	1	Within a lexicographically ordered set of registered MIB regions , valid for the indicated context , locate the authoritative region ( according to section 7.1.4.1 , " Handling Duplicate and Overlapping Subtrees ") that 	400	0
2741	1	( 2 ) If the starting OID exactly matches the name of a variable instantiated by this subagent within the indicated context and session , v.type and v.data are encoded to represent the variable's syntax and value , as described in section 5.4 , " Value Representation ". 	210	0
2745	Max-RSVP-hops	An octet specifying the maximum number of RSVP hops over which information will be collected . If an error condition in the middle of the path prevents the DREQ packet from reaching the specified ending node , the Max-RSVP-hops field may be used to perform an expanding-length search to reach the point just before 	400	0
2745	RSVP-hop-count	Records the number of RSVP hops that have been traversed so far . If the starting and ending nodes are the same , this value will be 1 in the resulting DREP message . 	120	0
2745	SENDER_TEMPLATE object	This IPv4/IPv6 SENDER_TEMPLATE object contains the IP address and the port of a sender for the session being diagnosed . The DREQ packet is forwarded hop-by-hop towards this address . 	230	0
2745	RSVP Node List	A list of RSVP node IPv4 addresses . The number of addresses in this list can be computed from the object size . 	230	0
2745	R-pointer	Used in DREP messages only ( see Section 4.2 for details ), but it is incremented as each hop adds its incoming interface address in the ROUTE object . 	201	0
2745	DREQ Arrival Time	A 32-bit NTP timestamp specifying the time the DREQ message arrived at this node . The 32-bit form of an NTP timestamp consists of the middle 32 bits of the full 64-bit form , that is , the low 16 bits of the integer part and the high 16 bits of the fractional part . 	121	0
2745	Incoming Interface Address	Specifies the IP address of the interface on which messages from the sender are expected to arrive , or 0 if unknown . 	230	0
2745	Outgoing Interface Address	Specifies the IP address of the interface through which the DREQ message arrived and to which messages from the given sender and for the specified session address flow , or 0 if unknown . 	230	0
2745	Previous-RSVP-Hop Router Address	Specifies the IP address from which this node receives RSVP PATH messages for this source , or 0 if unknown . This is also the interface to which the DREQ will be forwarded . 	230	0
2745	D-TTL	The number of IP hops this DREQ message traveled from the down - stream RSVP node to the current node . 	100	0
2745	K	K 	210	0
2745	Timer value	Timer value 	302	0
2776	B	A,B,C - routers * - boundary interface + - interface 	400	0
2776	Version	Version : The version defined in this document is version 0 . 	220	0
2776	B	" Big " scope bit ( B ): If clear , indicates that the addresses in the scoped range are not subdividable , and that address allocators may utilize the entire range . If set , address allocators should not use the entire range , but should learn an appropriate sub-range via another mechanism ( e.g ., AAP [ 7 ]). 	210	0
2776	PTYPE	Packet Type ( PTYPE ): The packet types defined in this document are : 0 : Zone Announcement Message ( ZAM ) 1 : Zone Limit Exceeded ( ZLE ) 2 : Zone Convexity Message ( ZCM ) 3 : Not-Inside Message ( NIM ) 	240	0
2776	Address Family	Address Family : The IANA-assigned address family number [ 10,11 ] identifying the address family for all addresses in the packet . The families defined for IP are : 1 : IPv4 2 : IPv6 	240	0
2776	Zone Start Address	Zone Start Address : 32 bits ( IPv4 ) or 128 bits ( IPv6 ) This gives the start address for the scope zone boundary . For example , if the zone is a boundary for 239.1.0.0 to 239.1.0.255 , then Zone Start Address is 239.1.0.0 . 	230	0
2776	Zone End Address	Zone End Address : 32 bits ( IPv4 ) or 128 bits ( IPv6 ) This gives the ending address for the scope zone boundary . For example , if the zone is a boundary for 239.1.0.0 to 239.1.0.255 , then Zone End Address is 239.1.0.255 . 	230	0
2776	Message Origin	Message Origin : 32 bits ( IPv4 ) or 128 bits ( IPv6 ) This gives the IP address of the interface that originated the message . 	230	0
2776	Zone ID Address	Zone ID Address : 32 bits ( IPv4 ) or 128 bits ( IPv6 ) This gives the lowest IP address of a boundary router that has been observed in the zone originating the message . Together with Zone Start Address and Zone End Address , it forms a unique ID for the zone . Note that this ID is usually different from the ID of the Local Scope zone in which the origin resides . 	230	0
2776	ZT	Zones Traveled ( ZT ): 8 bits This gives the number of Local Zone IDs contained in this message path . 	231	0
2776	ZTL	Zones Traveled Limit ( ZTL ): 8 bits This gives the limit on number of local zones that the packet can traverse before it MUST be dropped . A value of 0 indicates that no limit exists . 	302	0
2776	Hold Time	Hold Time : The time , in seconds , after which the receiver should assume the scope no longer exists , if no subsequent ZAM is received . This should be set to [ ZAM-HOLDTIME ]. 	120	0
2776	ZNUM	Number of ZBR addresses ( ZNUM ): 8 bits This field gives the number of ZBR Addresses contained in this message . 	230	0
2776	Hold Time	Hold Time : The time , in seconds , after which the receiver should assume the sender is no longer reachable , if no subsequent ZCM is received . This should be set to [ ZCM-HOLDTIME ]. 	122	0
2776	MZAP Header	MZAP Header : Header fields identifying the scope X . The Name Count may be 0 . 	400	0
2776	ZTL	The ZAM packet also contains a Zones Traveled Limit ( ZTL ). If the number of Local Zone IDs in the ZAM path becomes equal to the Zones Traveled Limit , the packet will be dropped . The ZTL field is set when the packet is first sent , and defaults to 32 , but can be set to a lower value if a network administrator knows the expected size of the zone . 	400	0
2784	C	Copyright ( C ) The Internet Society ( 2000 ). All Rights Reserved . 	303	0
2784	C	This document and translations of it may be copied and furnished to others , and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared , copied , published and distributed , in whole or in part , without restriction of any kind , provided that the above copyright notice and this paragraph are included on all such copies and derivative works . However , this document itself may not be modified in any way , such as by removing the copyright notice or references to the Internet Society or other Internet organizations , except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed , or as required to translate it into languages other than English . 	302	0
2794	Type	Type 131 ( skippable ) [ 7 ] 	302	0
2794	Length	Length The length in bytes of the MN-NAI field 	100	0
2795	Version	Version = the version of KEEPER being used ( in this document , the version is 1 ) 	220	0
2795	Type	Version = the version of KEEPER being used ( in this document , the version is 1 ) 	220	0
2795	Message ID	Version = the version of KEEPER being used ( in this document , the version is 1 ) 	220	0
2823	Type	Type 	240	0
2823	Length	Length 	100	0
2833	volume	volume : For DTMF digits and other events representable as tones , this field describes the power level of the tone , expressed in dBm0 after dropping the sign . Power levels range from 0 to - 63 dBm0 . The range of valid DTMF is from 0 to - 36 dBm0 ( must accept); lower than - 55 dBm0 must be rejected ( TR-TSY-000181 , ITU-T Q.24A ). Thus , larger values denote lower volume . This value is defined only for DTMF digits . For other events , it is set to zero by the sender and is ignored by the receiver . 	231	0
2833	duration	duration : Duration of this digit , in timestamp units . Thus , the event began at the instant identified by the RTP timestamp and has so far lasted as long as indicated by this parameter . The event may or may not have ended . 	121	0
2833	E	E : If set to a value of one , the " end " bit indicates that this packet contains the end of the event . Thus , the duration parameter above measures the complete duration of the event . 	210	0
2833	R	R : This field is reserved for future use . The sender MUST set it to zero , the receiver MUST ignore it . 	500	0
2833	modulation	modulation : The modulation frequency , in Hz . The field is a 9-bit unsigned integer , allowing modulation frequencies up to 511 Hz . If there is no modulation , this field has a value of zero . 	231	0
2833	T	T : If the " T " bit is set ( one ), the modulation frequency is to be divided by three . Otherwise , the modulation frequency is taken as is . 	210	0
2833	volume	volume : The power level of the tone , expressed in dBm0 after dropping the sign , with range from 0 to - 63 dBm0 . ( Note : A preferred level range for digital tone generators is - 8 dBm0 to - 3 dBm0 .) 	231	0
2833	duration	duration : The duration of the tone , measured in timestamp units . The tone begins at the instant identified by the RTP timestamp and lasts for the duration value . 	100	0
2833	frequency	frequency : The frequencies of the tones to be added , measured in Hz and represented as a 12-bit unsigned integer . The field size is sufficient to represent frequencies up to 4095 Hz , 	231	0
2833	R	R : This field is reserved for future use . The sender MUST set it to zero , the receiver MUST ignore it . 	500	0
2862	PT	Payload Type ( PT ): The assignment of an RTP payload type for this new packet format is outside the scope of this document , and will not be specified here . It is expected that the RTP profile for a particular class of applications will assign a payload type for this encoding , or if that is not done then a payload type in the dynamic range shall be chosen . 	231	0
2862	M	Marker ( M ) bit : Set to one if the pointer icon is changed in this packet . 	210	0
2862	X	Extension ( X ) bit : Defined by the RTP profile used . 	400	0
2862	CC	CC and CSRC fields are used as described in RFC 1889 [ 1 ]. 	400	0
2862	PIN	PIN : Pointer Icon Number ( 3 bits ) selects a pointer icon . The association between the PIN numbers and the icon pictures MUST be established out-of-band . PIN = 0 represents a default pointer icon . Applications which only support a single pointer icon SHOULD set the PIN field to zero . Applications MAY ignore non-zero PIN values on reception , and display a default icon . 	231	0
2865	Code	The Code field is one octet , and identifies the type of RADIUS packet . When a packet is received with an invalid Code field , it is silently discarded . 	231	0
2865	Identifier	The Identifier field is one octet , and aids in matching requests and replies . The RADIUS server can detect a duplicate request if it has the same client source IP address and source UDP port and Identifier within a short span of time . 	301	0
2865	Length	The Length field is two octets . It indicates the length of the packet including the Code , Identifier , Length , Authenticator and Attribute fields . Octets outside the range of the Length field MUST be treated as padding and ignored on reception . If the packet is shorter than the Length field indicates , it MUST be silently discarded . The minimum length is 20 and maximum length is 4096 . 	100	0
2865	Authenticator	The Authenticator field is sixteen ( 16 ) octets . The most significant octet is transmitted first . This value is used to authenticate the reply from the RADIUS server , and is used in the password hiding algorithm . 	301	0
2865	Request Authenticator	In Access-Request Packets , the Authenticator value is a 16 octet random number , called the Request Authenticator . The value SHOULD be unpredictable and unique over the lifetime of a secret ( the password shared between the client and the RADIUS server ), since repetition of a request value in conjunction with the same secret would permit an attacker to reply with a previously intercepted response . Since it is expected that the same secret MAY be used to authenticate with servers in disparate geographic regions , the Request Authenticator field SHOULD exhibit global and temporal uniqueness . 	230	0
2865	Response Authenticator	The value of the Authenticator field in Access-Accept , Access - Reject , and Access-Challenge packets is called the Response Authenticator , and contains a one-way MD5 hash calculated over a stream of octets consisting of : the RADIUS packet , beginning with the Code field , including the Identifier , the Length , the Request Authenticator field from the Access-Request packet , and the response Attributes , followed by the shared secret . That is , ResponseAuth = MD5(Code+ID+Length+RequestAuth+Attributes+Secret ) where + denotes concatenation . 	231	0
2865	Code	Code 	231	0
2865	Identifier	The Identifier field MUST be changed whenever the content of the Attributes field changes , and whenever a valid reply has been received for a previous request . For retransmissions , the Identifier MUST remain unchanged . 	301	0
2865	Request Authenticator	The Request Authenticator value MUST be changed each time a new Identifier is used . 	201	0
2865	Code	Code 	231	0
2865	Identifier	The Identifier field is a copy of the Identifier field of the Access-Request which caused this Access-Accept . 	301	0
2865	Response Authenticator	The Response Authenticator value is calculated from the Access - Request value , as described earlier . 	400	0
2865	Code	Code 	231	0
2865	Identifier	The Identifier field is a copy of the Identifier field of the Access-Request which caused this Access-Reject . 	301	0
2865	Response Authenticator	The Response Authenticator value is calculated from the Access - Request value , as described earlier . 	400	0
2865	Code	Code 	231	0
2865	Identifier	The Identifier field is a copy of the Identifier field of the Access-Request which caused this Access-Challenge . 	301	0
2865	Response Authenticator	The Response Authenticator value is calculated from the Access - Request value , as described earlier . 	400	0
2865	Type	The Type field is one octet . Up-to-date values of the RADIUS Type field are specified in the most recent " Assigned Numbers " RFC [ 6 ]. Values 192-223 are reserved for experimental use , values 224-240 are reserved for implementation-specific use , and values 241-255 are reserved and should not be used . 	231	0
2865	Length	The Length field is one octet , and indicates the length of this Attribute including the Type , Length and Value fields . If an Attribute is received in an Access-Request but with an invalid Length , an Access-Reject SHOULD be transmitted . If an Attribute is received in an Access-Accept , Access-Reject or Access-Challenge packet with an invalid length , the packet MUST either be treated as an Access-Reject or else silently discarded . 	100	0
2865	Value	The Value field is zero or more octets and contains information specific to the Attribute . The format and length of the Value field is determined by the Type and Length fields . 	400	0
2865	Type	Type 	240	0
2865	Length	Length 	100	0
2865	Type	Type 	240	0
2865	Length	Length 	100	0
2865	Type	Type 	240	0
2865	Length	Length 	100	0
2865	CHAP Ident	This field is one octet , and contains the CHAP Identifier from the user's CHAP Response . 	231	0
2865	Type	Type 	240	0
2865	Length	Length 	100	0
2865	Address	Address 	202	0
2865	Type	Type 	240	0
2865	Length	Length 	100	0
2865	Value	Value 	400	0
2865	Type	Type 	240	0
2865	Length	Length 	100	0
2865	Value	Value 	400	0
2865	Type	Type 	240	0
2865	Length	Length 	100	0
2865	Value	Value 	400	0
2865	Type	Type 	240	0
2865	Length	Length 	100	0
2865	Address	The Address field is four octets . The value 0xFFFFFFFF indicates that the NAS Should allow the user to select an address ( e.g . Negotiated ). The value 0xFFFFFFFE indicates that the NAS should select an address for the user ( e.g . Assigned from a pool of addresses kept by the NAS ). Other valid values indicate that the NAS should use that value as the user's IP address . 	240	0
2865	Type	Type 	240	0
2865	Length	Length 	100	0
2865	Address	The Address field is four octets specifying the IP netmask of the user . 	230	0
2865	Type	Type 	240	0
2865	Length	Length 	100	0
2865	Value	Value 	400	0
2865	Type	Type 	240	0
2865	Length	Length 	100	0
2865	Type	Type 	240	0
2865	Length	Length 	100	0
2865	Value	The Value field is four octets . Despite the size of the field , values range from 64 to 65535 . 	100	0
2865	Type	Type 	240	0
2865	Length	Length 	100	0
2865	Value	Value 	400	0
2865	Type	Type 	240	0
2865	Length	Length 	100	0
2865	Address	The Address field is four octets . The value 0xFFFFFFFF indicates that the NAS SHOULD allow the user to select an address . The value 0 indicates that the NAS SHOULD select a host to connect the user to . Other values indicate the address the NAS SHOULD connect the user to . 	210	0
2865	Type	Type 	240	0
2865	Length	Length 	100	0
2865	Value	Value 	400	0
2865	Type	Type 	240	0
2865	Length	Length 	100	0
2865	Value	The Value field is four octets . Despite the size of the field , values range from 0 to 65535 . 	100	0
2865	Type	Type 	240	0
2865	Length	Length 	100	0
2865	Type	Type 	240	0
2865	Length	Length 	100	0
2865	Type	Type 	240	0
2865	Length	Length 	100	0
2865	Type	Type 	240	0
2865	Length	Length 	100	0
2865	Type	Type 	240	0
2865	Length	Length 	100	0
2865	Value	The Value field is four octets . The value 0xFFFFFFFE indicates that the NAS should select an IPX network for the user ( e.g . assigned from a pool of one or more IPX networks kept by the NAS ). Other values should be used as the IPX network for the link to the user . 	240	0
2865	Type	Type 	240	0
2865	Length	Length 	100	0
2865	Type	Type 	240	0
2865	Length	Length 	100	0
2865	Type	Type 	240	0
2865	Length	Length 	100	0
2865	Vendor-Id	The high-order octet is 0 and the low-order 3 octets are the SMI Network Management Private Enterprise Code of the Vendor in network byte order , as defined in the " Assigned Numbers " RFC [ 6 ]. 	231	0
2865	Type	Type 	240	0
2865	Length	Length 	100	0
2865	Value	The field is 4 octets , containing a 32-bit unsigned integer with the maximum number of seconds this user should be allowed to remain connected by the NAS . 	100	0
2865	Type	Type 	240	0
2865	Length	Length 	100	0
2865	Value	The field is 4 octets , containing a 32-bit unsigned integer with the maximum number of consecutive seconds of idle time this user should be permitted before being disconnected by the NAS . 	120	0
2865	Type	Type 	240	0
2865	Length	Length 	100	0
2865	Value	Value 	400	0
2865	Type	Type 	240	0
2865	Length	Length 	100	0
2865	Type	Type 	240	0
2865	Length	Length 	100	0
2865	Type	Type 	240	0
2865	Length	Length 	100	0
2865	Type	Type 	240	0
2865	Length	Length 	100	0
2865	Type	Type 	240	0
2865	Length	Length 	100	0
2865	Type	Type 	240	0
2865	Length	Length 	100	0
2865	Type	Type 	240	0
2865	Length	Length 	100	0
2865	Type	Type 	240	0
2865	Length	Length 	100	0
2865	Value	The Value field is four octets . Despite the size of the field , values range from 0 to 65535 . The special value of 0 indicates that this is an unnumbered serial link . A value of 1-65535 means that the serial line between the NAS and the user should be assigned that value as an AppleTalk network number . 	301	0
2865	Type	Type 	240	0
2865	Length	Length 	100	0
2865	Value	The Value field is four octets . Despite the size of the field , values range from 0 to 65535 . The special value 0 indicates that the NAS should assign a network for the user , using its default cable range . A value between 1 and 65535 ( inclusive ) indicates the AppleTalk Network the NAS should probe to find an address for the user . 	110	0
2865	Type	Type 	240	0
2865	Length	Length 	100	0
2865	Type	Type 	240	0
2865	Length	Length 	100	0
2865	Type	Type 	240	0
2865	Length	Length 	100	0
2865	Value	The Value field is four octets . " Virtual " refers to a connection to the NAS via some transport protocol , instead of through a physical port . For example , if a user telnetted into a NAS to 	301	0
2865	Type	Type 	240	0
2865	Length	Length 	100	0
2865	Value	The field is 4 octets , containing a 32-bit unsigned integer with the maximum number of ports this user should be allowed to connect to on the NAS . 	400	0
2865	Type	Type 	240	0
2865	Length	Length 	100	0
2866	Code	The Code field is one octet , and identifies the type of RADIUS packet . When a packet is received with an invalid Code field , it is silently discarded . 	231	0
2866	Identifier	The Identifier field is one octet , and aids in matching requests and replies . The RADIUS server can detect a duplicate request if it has the same client source IP address and source UDP port and Identifier within a short span of time . 	301	0
2866	Length	The Length field is two octets . It indicates the length of the packet including the Code , Identifier , Length , Authenticator and Attribute fields . Octets outside the range of the Length field MUST be treated as padding and ignored on reception . If the packet is shorter than the Length field indicates , it MUST be silently discarded . The minimum length is 20 and maximum length is 4095 . 	100	0
2866	Authenticator	The Authenticator field is sixteen ( 16 ) octets . The most significant octet is transmitted first . This value is used to authenticate the messages between the client and RADIUS accounting server . 	301	0
2866	Request Authenticator	In Accounting-Request Packets , the Authenticator value is a 16 octet MD5 [ 5 ] checksum , called the Request Authenticator . 	231	0
2866	Response Authenticator	The Authenticator field in an Accounting-Response packet is called the Response Authenticator , and contains a one-way MD5 hash calculated over a stream of octets consisting of the Accounting - Response Code , Identifier , Length , the Request Authenticator field from the Accounting-Request packet being replied to , and the response attributes if any , followed by the shared secret . The resulting 16 octet MD5 hash value is stored in the Authenticator field of the Accounting-Response packet . 	400	0
2866	Code	Code 	231	0
2866	Identifier	The Identifier field MUST be changed whenever the content of the Attributes field changes , and whenever a valid reply has been received for a previous request . For retransmissions where the contents are identical , the Identifier MUST remain unchanged . 	230	0
2866	Request Authenticator	The Request Authenticator of an Accounting-Request contains a 16-octet MD5 hash value calculated according to the method described in " Request Authenticator " above . 	400	0
2866	Code	Code 	231	0
2866	Identifier	The Identifier field is a copy of the Identifier field of the Accounting-Request which caused this Accounting-Response . 	231	0
2866	Response Authenticator	The Response Authenticator of an Accounting-Response contains a 16-octet MD5 hash value calculated according to the method described in " Response Authenticator " above . 	400	0
2866	Type	The Type field is one octet . Up-to-date values of the RADIUS Type field are specified in the most recent " Assigned Numbers " RFC [ 6 ]. Values 192-223 are reserved for experimental use , values 224-240 are reserved for implementation-specific use , and values 241-255 are reserved and should not be used . This specification concerns the following values : 	231	0
2866	Length	The Length field is one octet , and indicates the length of this attribute including the Type , Length and Value fields . If an attribute is received in an Accounting-Request with an invalid Length , the entire request MUST be silently discarded . 	100	0
2866	Value	The Value field is zero or more octets and contains information specific to the attribute . The format and length of the Value field is determined by the Type and Length fields . 	400	0
2866	Type	Type 	240	0
2866	Length	Length 	100	0
2866	Value	Value 	400	0
2866	Type	Type 	240	0
2866	Length	Length 	100	0
2866	Value	Value 	303	0
2866	Type	Type 	240	0
2866	Length	Length 	100	0
2866	Value	Value 	400	0
2866	Type	Type 	240	0
2866	Length	Length 	100	0
2866	Value	Value 	400	0
2866	Type	Type 	240	0
2866	Length	Length 	100	0
2866	Type	Type 	240	0
2866	Length	Length 	100	0
2866	Value	Value 	400	0
2866	Type	Type 	240	0
2866	Length	Length 	100	0
2866	Value	Value 	400	0
2866	Type	Type 	240	0
2866	Length	Length 	100	0
2866	Value	Value 	400	0
2866	Type	Type 	240	0
2866	Length	Length 	100	0
2866	Value	Value 	303	0
2866	Type	Type 	240	0
2866	Length	Length 	100	0
2866	Value	The Value field is four octets , containing an integer specifying the cause of session termination , as follows : 	240	0
2866	Type	Type 	240	0
2866	Length	Length 	100	0
2866	Type	Type 	240	0
2866	Length	Length 	100	0
2866	Value	The Value field is four octets , and contains the number of links seen so far in this Multilink Session . 	100	0
2867	Type	Type 	240	0
2867	Length	Length 	100	0
2867	Type	Type 	240	0
2867	Length	Length 	100	0
2867	Lost	The Lost field is 4 octets in length and represents the number of packets lost on the link . 	100	0
2869	Type	The Type field is one octet . Up-to-date values of the RADIUS Type field are specified in the most recent " Assigned Numbers " RFC [ 5 ]. Values 192-223 are reserved for experimental use , values 224-240 are reserved for implementation-specific use , and values 241-255 are reserved and should not be used . This specification concerns the following values : 	231	0
2869	Length	The Length field is one octet , and indicates the length of this attribute including the Type , Length and Value fields . If an attribute is received in a packet with an invalid Length , the entire request should be silently discarded . 	100	0
2869	Value	The Value field is zero or more octets and contains information specific to the attribute . The format and length of the Value field is determined by the Type and Length fields . 	400	0
2869	Type	Type 	240	0
2869	Length	Length 	100	0
2869	Value	Value 	303	0
2869	Type	Type 	240	0
2869	Length	Length 	100	0
2869	Value	Value 	400	0
2869	Type	Type 	240	0
2869	Length	Length 	100	0
2869	Value	The Value field is four octets encoding an unsigned integer with the number of seconds since January 1 , 1970 00:00 UTC . 	121	0
2869	Type	Type 	240	0
2869	Length	Length 	100	0
2869	Value	This attribute contains a 16 octet string , used to carry the dial-in user's response to the NAS challenge and the client's own challenge to the NAS . The high-order octets ( Value1 and Value2 ) contain the dial-in user's challenge to the NAS ( 2 32-bit numbers , 8 octets ) and the low-order octets ( Value3 and Value4 ) contain the dial-in user's response to the NAS challenge ( 2 32-bit numbers , 8 octets ). 	400	0
2869	Type	Type 	240	0
2869	Length	Length 	100	0
2869	Value	The Value field is a compound string containing information the NAS should send to the user in the ARAP " feature flags " packet . 	231	0
2869	Value	Value1 : If zero , user cannot change their password . If non-zero user can . ( RADIUS does not handle the password changing , just the attribute which indicates whether ARAP indicates they can .) 	210	0
2869	Value	Value3 : Password creation date in Macintosh format , defined as 32 unsigned bits representing seconds since Midnight GMT January 1 , 1904 . 	121	0
2869	Value	Value3 : Password creation date in Macintosh format , defined as 32 unsigned bits representing seconds since Midnight GMT January 1 , 1904 . 	121	0
2869	Value	Value4 : Password Expiration Delta from create date in seconds . 	240	0
2869	Value	Value5 : Current RADIUS time in Macintosh format . 	121	0
2869	Type	Type 	240	0
2869	Length	Length 	100	0
2869	Value	The Value field is four octets encoding an integer with one of the following values : 	301	0
2869	Type	Type 	240	0
2869	Length	Length 	100	0
2869	Value	The Value field is four octets , containing an integer specifying the security module signature , which is a Macintosh OSType . ( Macintosh OSTypes are 4 ascii characters cast as a 32-bit integer ) 	301	0
2869	Type	Type 	240	0
2869	Length	Length 	100	0
2869	Type	Type 	240	0
2869	Length	Length 	100	0
2869	Value	The Value field is four octets , containing an integer specifying the number of password retry attempts to permit the user . 	301	0
2869	Type	Type 	240	0
2869	Length	Length 	100	0
2869	Value	Value 	400	0
2869	Type	Type 	240	0
2869	Length	Length 	100	0
2869	Type	Type 	240	0
2869	Length	Length 	100	0
2869	Type	Type 	240	0
2869	Length	Length 	100	0
2869	Type	Type 	240	0
2869	Length	Length 	100	0
2869	Type	Type 	240	0
2869	Length	Length 	100	0
2869	Value	The Value field contains an 8 octet response to the dial-in client's challenge . The RADIUS server calculates this value by taking the dial-in client's challenge from the high order 8 octets of the ARAP-Password attribute and performing DES encryption on this value with the authenticating user's password as the key . If the user's password is less than 8 octets in length , the password is padded at the end with NULL octets to a length of 8 before using it as a key . 	301	0
2869	Type	Type 	240	0
2869	Length	Length 	100	0
2869	Value	The Value field contains the number of seconds between each interim update to be sent from the NAS for this session . The value MUST NOT be smaller than 60 . The value SHOULD NOT be smaller than 600 , and careful consideration should be given to its impact on network traffic . 	120	0
2869	Type	Type 	240	0
2869	Length	Length 	100	0
2869	Type	Type 	240	0
2869	Length	Length 	100	0
2878	C	Copyright ( C ) The Internet Society ( 2000 ). All Rights Reserved . 	303	0
2878	Pads	Any PPP frame may have padding inserted in the " Optional Data Link Layer Padding " field . This number tells the receiving system how many pad octets to strip off . 	200	0
2878	MAC Type	Up-to-date values of the MAC Type field are specified in the most recent " Assigned Numbers " RFC [ 4 ]. Current values are assigned as follows : 	231	0
2878	Frame Control	On 802.4 , 802.5 , and FDDI LANs , there are a few octets preceding the Destination MAC Address , one of which is protected by the FCS . 	400	0
2878	Destination MAC Address	Destination MAC Address 	230	0
2878	Source MAC Address	Source MAC Address 	230	0
2878	Frame FCS	Mentioned primarily for clarity . The FCS used on the PPP link is separate from and unrelated to the LAN FCS . 	231	0
2878	Pads	Any PPP frame may have padding inserted in the " Optional Data Link Layer Padding " field . This number tells the receiving system how many pad octets to strip off . 	200	0
2878	MAC Type	Up-to-date values of the MAC Type field are specified in the most recent " Assigned Numbers " RFC [ 4 ]. Current values are assigned as follows : 	231	0
2878	Frame Control	On 802.4 , 802.5 , and FDDI LANs , there are a few octets preceding the Destination MAC Address , one of which is protected by the FCS . 	400	0
2878	Destination MAC Address	Destination MAC Address 	230	0
2878	Source MAC Address	Source MAC Address 	230	0
2878	Frame FCS	Mentioned primarily for clarity . The FCS used on the PPP link is separate from and unrelated to the LAN FCS . 	231	0
2878	Type	Type 	240	0
2878	Length	Length 	100	0
2878	LAN Segment Number	A 12-bit number identifying the LAN segment , as defined in the IEEE 802.1D Source Routing Specification . 	231	0
2878	Type	Type 	240	0
2878	Length	Length 	100	0
2878	LAN Segment Number	A 12-bit number identifying the LAN segment , as defined in the IEEE 802.1D Source Routing Specification . 	231	0
2878	Type	Type 	240	0
2878	Length	Length 	100	0
2878	MAC Type	One of the values of the PDU MAC Type field ( previously described in the " Bridged LAN Traffic " section ) that this system is prepared to receive and service . 	231	0
2878	Type	Type 	240	0
2878	Length	Length 	100	0
2878	Type	Type 	240	0
2878	Length	Length 	100	0
2878	Type	Type 	240	0
2878	Length	2 octets plus 1 additional octet for each protocol that will be actively supported . Most systems will only support a single spanning tree protocol , resulting in a length of 3 . 	100	0
2878	Type	Type 	240	0
2878	Length	Length 	100	0
2878	Type	Type 	240	0
2878	Length	Length 	100	0
2878	Spanning Tree Protocol	Up-to-date values of the Spanning-Tree-Protocol field are specified in the most recent " Assigned Numbers " RFC [ 4 ]. Current values are assigned as follows : 	231	0
2878	C	This document and translations of it may be copied and furnished to others , and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared , copied , published and distributed , in whole or in part , without restriction of any kind , provided that the above copyright notice and this paragraph are included on all such copies and derivative works . However , this document itself may not be modified in any way , such as by removing the copyright notice or references to the Internet Society or other Internet organizations , except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed , or as required to translate it into languages other than English . 	303	0
2890	C	Copyright ( C ) The Internet Society ( 2000 ). All Rights Reserved . 	303	0
2890	C	This document and translations of it may be copied and furnished to others , and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared , copied , published and distributed , in whole or in part , without restriction of any kind , provided that the above copyright notice and this paragraph are included on all such copies and derivative works . However , this document itself may not be modified in any way , such as by removing the copyright notice or references to the Internet Society or other Internet organizations , except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed , or as required to translate it into languages other than English . 	302	0
2892	C	Copyright ( C ) The Internet Society ( 2000 ). All Rights Reserved . 	303	0
2892	R	This single bit field is used to identify which ring this packet is designated for . The designation is as follows : 	231	0
2892	PRI	This three bit field indicates the priority level of the SRP packet ( 0 through 7 ). The higher the value the higher the priority . Since there are only two queues in the transit buffer ( HPTB and LPTB ) a packet is treated as either low or high priority once it is on the ring . Each node determines the threshold value for determining what is considered a high priority packet and what is considered a low priority packet . However , the full 8 levels of priority in the SRP header can be used prior to transmission onto the ring ( transmit queues ) as well as after reception from the ring ( receive queues ). 	231	0
2892	Protocol Type	The protocol type is a two octet field like that used in EtherType representation . Current defined values relevant to SRP are defined in Table 3 below . 	231	0
2892	Control Ver	This one octet field is the version number associated with the control type field . Initially , all control types will be version 0 . 	220	0
2892	Control Type	This one octet field represents the control message type . Table 4 contains the currently defined control types . 	231	0
2892	Control Type	Control Type Description 	231	0
2892	Control TTL	The Control TTL is a control layer hop-count that must be decremented every time a node forwards a control packet . If a node receives a control packet with a control TTL <= 1 , then it should accept the packet but not forward it . 	120	0
2892	Control Checksum	The checksum field is the 16 bit one's complement of the one's complement sum of all 16 bit words starting with the control version . If there are an odd number of octets to be checksummed , the last octet is padded on the right with zeros to form a 16 bit word for checksum purposes . The pad is not transmitted as part of the segment . While computing the checksum , the checksum field itself is replaced with zeros . This is the same checksum algorithm as that used for TCP . The checksum does not cover the 32 bit SRP FCS . 	301	0
2892	Payload	4.5.5 . Payload 	240	0
2892	Topology Length	This two octet field represents the length of the topology message in octets starting with the first MAC Type/MAC Address binding . 	100	0
2892	Originator MAC Address	This is the MAC address of the originator of the IPS message . It is not necessarily the same as the SRP Header Source Address as a node may be simply propagating an IPS message ( see the section " SRP IPS Protocol Rules " Rule P.8 as an example ). 	230	0
2892	C	This document and translations of it may be copied and furnished to others , and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared , copied , published and distributed , in whole or in part , without restriction of any kind , provided that the above copyright notice and this paragraph are included on all such copies and derivative works . However , this document itself may not be modified in any way , such as by removing the copyright notice or references to the Internet Society or other Internet organizations , except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed , or as required to translate it into languages other than English . 	303	0
2894	Type	Type 138 ( decimal ), the ICMPv6 type value assigned to Router Renumbering 	231	0
2894	Code	Code 0 for a Router Renumbering Command 1 for a Router Renumbering Result 255 for a Sequence Number Reset . The Sequence Number Reset is described in section 5 . 	210	0
2894	Checksum	Checksum The ICMPv6 checksum , as specified in [ ICMPV6 ]. The checksum covers the IPv6 pseudo-header and all fields of the RR message from the Type field onward . 	301	0
2894	Flags	Flags A combination of one-bit flags . Five are defined and three bits are reserved . 	231	0
2894	R	The flags T , R , A and S have defined meanings in an RR Command message . In a Result message they MUST be copied from the corresponding Command . The P flag is meaningful only in a Result message and MUST be zero in a transmitted Command and ignored in a received Command . 	210	0
2894	A	The flags T , R , A and S have defined meanings in an RR Command message . In a Result message they MUST be copied from the corresponding Command . The P flag is meaningful only in a Result message and MUST be zero in a transmitted Command and ignored in a received Command . 	210	0
2894	R	R Result requested -- 0 indicates that a Result message MUST NOT be sent ( but other forms of logging are not precluded); 1 indicates that the router MUST send a Result message upon completion of processing the Command message; 	210	0
2894	A	A All interfaces -- 0 indicates that the Command MUST NOT be applied to interfaces which are administratively shut down; 1 indicates that the Command MUST be applied to all interfaces regardless of administrative shutdown status . 	210	0
2894	S	S Site-specific -- This flag MUST be ignored unless the router treats interfaces as belonging to different " sites ". 0 indicates that the Command MUST be applied to interfaces regardless of which site they belong to; 1 indicates that the Command MUST be applied only to interfaces which belong to the same site as the interface to which the Command is addressed . If the destination address is appropriate for interfaces belonging to more than one site , then the Command MUST be applied only to interfaces belonging to the same site as the interface on which the Command was received . 	210	0
2894	P	P Processed previously -- 0 indicates that the Result message contains the complete report of processing the Command; 	302	0
2894	MaxDelay	MaxDelay An unsigned 16-bit field specifying the maximum time , in milliseconds , by which a router MUST delay sending any reply to this Command . Implementations MAY generate the random delay between 0 and MaxDelay milliseconds with a finer granularity than 1ms . 	120	0
2894	OpLength	OpLength The total length of this Prefix Control Operation , in units of 8 octets . A valid OpLength will always be of the form 4N+3 , with N equal to the number of UsePrefix parts ( possibly zero ). 	100	0
2894	Ordinal	Ordinal An 8-bit field which MUST have a different value in each Prefix Control Operation contained in a given RR Command message . The value is otherwise unconstrained . 	230	0
2894	MatchLen	MatchLen An 8-bit unsigned integer between 0 and 128 inclusive specifying the number of initial bits of MatchPrefix which are significant in matching . 	231	0
2894	MinLen	MinLen An 8-bit unsigned integer specifying the minimum length which any configured prefix must have in order to be eligible for testing against the MatchPrefix . 	100	0
2894	MaxLen	MaxLen An 8-bit unsigned integer specifying the maximum length which any configured prefix may have in order to be eligible for testing against the MatchPrefix . 	100	0
2894	UseLen	UseLen An 8-bit unsigned integer less than or equal to 128 specifying the number of initial bits of UsePrefix to use in creating a new prefix for an interface . 	231	0
2894	KeepLen	KeepLen An 8-bit unsigned integer less than or equal to ( 128 - UseLen ) specifying the number of bits of the prefix or address which matched the associated Match-Prefix which should be retained in the new prefix . The retained bits are those at positions UseLen through ( UseLen+KeepLen-1 ) in the matched address or prefix , and they are copied to the same positions in the New Prefix . 	230	0
2894	FlagMask	FlagMask An 8-bit mask . A 1 bit in any position means that the corresponding flag bit in a Router Advertisement ( RA ) Prefix Information Option for the New Prefix should be set from the RAFlags field in this Use-Prefix Part . A 0 bit in the FlagMask means that the RA flag bit for the New Prefix should be copied from the corresponding RA flag bit of the Matched Prefix . 	231	0
2894	RAFlags	RAFlags An 8 bit field which , under control of the FlagMask field , may be used to initialize the flags in Router Advertisement Prefix Information Options [ ND ] which advertise the New Prefix . Note that only two flags have 	231	0
2894	V	V A 1-bit flag indicating that the valid lifetime of the New Prefix MUST be effectively decremented in real time . 	302	0
2894	P	P A 1-bit flag indicating that the preferred lifetime of the New Prefix MUST be effectively decremented in real time . 	302	0
2894	B	B A one-bit flag which , when set , indicates that one or more fields in the associated PCO were out of bounds . The bounds check is described in section 4.2 . 	210	0
2894	F	F A one-bit flag which , when set , indicates that one or more Use-Prefix parts from the associated PCO were not honored by the router because of attempted formation of a forbidden prefix format , such as a multicast or loopback address . 	210	0
2894	Ordinal	Ordinal Copied from the Prefix Control Operation whose MatchPrefix matched the MatchedPrefix on the interface indicated by InterfaceIndex . 	400	0
2894	MatchedLen	InterfaceIndex The router's numeric designation of the interface on which the MatchedPrefix was configured . This MUST be the same as the value of ipv6IfIndex which designates that index in the SNMP IPv6 MIB General Group [ IPV6MIB ]. 	230	0
2894	OpCode	OpCode must be a defined value . 	303	0
2894	OpLength	OpLength must be of the form 4N+3 and consistent the the length of the Command packet and the PCO's offset within the packet . 	100	0
2894	MatchLen	MatchLen must be between 0 and 128 inclusive 	302	0
2894	T	T(N ) The time between Command transmissions N and N+1 is V*T(N ) + MaxDelay , where V is random and roughly uniform in the range [ 0.75 , 1.0 ]. T(1 ) = Ti and for N > 1 , T(N ) = min(2*T(N-1 ), Tu ). 	210	0
2894	R	R(N,F ) The total number of RR Result messages , including duplicates , received by the end of the Nth interval from those routers which were NOT heard from in any of the first F intervals . 	500	0
2894	F	R(N,F ) The total number of RR Result messages , including duplicates , received by the end of the Nth interval from those routers which were NOT heard from in any of the first F intervals . 	202	0
2894	F	p(N ) = R(N,F)/((N-F)*(M(N ) - M(F ))). 	210	0
2909	Length	Length : This 2-octet unsigned integer indicates the total length of the message , including the header , in octets . Thus , e.g ., it allows one to locate in the transport-level stream the start of the next message . The value of the Length field must always be at least 4 and no greater than 4096 , and may be further constrained , depending on the message type . No " padding " of extra data after the message is allowed , so the Length field must have the smallest value required given the rest of the message . 	100	0
2909	Type	Type : This 1-octet unsigned integer indicates the type code of the message . The following type codes are defined : 	231	0
2909	Reserved	Reserved : This 1-octet field is reserved . MUST be set to zero by the sender , and MUST be ignored by the receiver . 	500	0
2909	Version	Version : This 1-octet unsigned integer indicates the protocol version number of the message . The current MASC version number is 1 . 	220	0
2909	AddrFam	AddrFam : This 5-bit field is the IANA-assigned address family number of the encoded prefix [ IANA ]. These include ( among others ): 	230	0
2909	Rol	My Role ( Rol ): This 2-bit field indicates the proposed relationship of the sending system to the receiving system : 00 = INTERNAL_PEER ( sent from one internal peer to another ) 01 = CHILD ( sent from a child to its parent ) 10 = SIBLING ( sent from one sibling to another ) 11 = PARENT ( sent from a parent to its child ) 	240	0
2909	Hold Time	Hold Time : This 2-octet unsigned integer indicates the number of seconds that the sender proposes for the value of the Hold Timer . Upon receipt of an OPEN message , a MASC speaker MUST calculate the value of the Hold Timer by using the smaller of its configured Hold Time for that peer and the Hold Time received in the OPEN message . The Hold Time MUST be either zero or at least three seconds . An implementation may reject connections on the basis of the Hold Time . The calculated value indicates the maximum number of seconds that may elapse between the receipt of successive KEEPALIVE and/or UPDATE messages by the sender . RECOMMENDED value is [ HOLDTIME ] seconds . 	121	0
2909	Length	Length : The Length is the length of the entire attribute , including the length , type , and data fields . If other attributes are nested within the data field , the length includes the size of all such nested attributes . 	100	0
2909	Type	Type : This 1-octet unsigned integer indicates the type code of the attribute . The following type codes are defined : 	231	0
2909	Reserved	Reserved : This 1-octet field is reserved . MUST be set to zero by the sender , and MUST be ignored by the receiver . 	500	0
2909	Reserved	Reserved1 : This 1-octet field is reserved . MUST be set to zero by the sender , and MUST be ignored by the receiver . 	500	0
2909	D	D-bit : DEPRECATED_PREFIX bit . If set , indicates that the advertised address prefix is Deprecated , otherwise the prefix is Active ( see Section 4.3 ). 	210	0
2909	AddrFam	AddrFam : This 5-bit field is the IANA-assigned address family number of the encoded prefix [ IANA ]. 	230	0
2909	Rol	Rol : This 2-bit field indicates the relationship/role of the Origin of the message to the node sending that message : 00 = INTERNAL ( originated by the sender's domain ) 01 = CHILD ( originated by a child of the sender's domain ) 10 = SIBLING ( originated by a sibling of the sender's domain ) 11 = PARENT ( originated by a parent of the sender's domain ) 	240	0
2909	Reserved	Reserved2 : This 2-octet field is reserved . MUST be set to zero by the sender , and MUST be ignored by the receiver . 	500	0
2909	Claim Timestamp	Claim Timestamp : The timestamp of the claim when it was originated . The timestamp is expressed in number of seconds since midnight ( 0 hour ), January 1 , 1970 , Greenwich . 	121	0
2909	Claim Lifetime	Claim Lifetime : The time in seconds between the Claim Timestamp , and the time at which the prefix will become free . 	120	0
2909	Claim Holdtime	Claim Holdtime : The time in seconds between the Claim Timestamp , and the time at which the claim should be deleted from the local cache . For PREFIX_IN_USE and PREFIX_MANAGED claims it should be equal to Claim Lifetime; for CLAIM_TO_EXPAND , NEW_CLAIM , and CLAIM_DENIED it should be equal to [ WAITING_PERIOD ]. 	121	0
2909	O	O-bit : Open-bit . If zero , it indicates that the sender will close the connection . If ' 1 ', it indicates that the sender has chosen to keep the connection open . 	210	0
2909	Error subcode	Error subcode : This 1-octet unsigned integer provides more specific information about the nature of the reported error . Each Error Code may have one or more Error Subcodes associated with it . If no appropriate Error Subcode is defined , then a zero ( Unspecific ) value is used for the Error Subcode field , and the O-bit must be zero ( i.e . the connection will be closed ). The notation used in the error description below is : MC = Must Close connection = O-bit is zero; CC = Can Close connection = O-bit might be zero . 	231	0
2909	Data	Data : This variable-length field is used to diagnose the reason for the NOTIFICATION . The contents of the Data field depend upon the Error Code and Error Subcode . See Section 8 for more details . 	400	0
2909	Type	o Role , D-bit , Type 	240	0
2909	AddrFam	o AddrFam 	240	0
2909	Claim Timestamp	o Claim Timestamp 	302	0
2909	Claim Lifetime	o Claim Lifetime 	301	0
2909	Claim Holdtime	o Claim Holdtime 	301	0
2960	TSN	o Transmission Sequence Number ( TSN ): A 32-bit sequence number used internally by SCTP . One TSN is attached to each chunk containing user data to permit the receiving SCTP endpoint to acknowledge its receipt and detect duplicate deliveries . 	200	0
2960	Verification Tag	o Verification Tag : A 32 bit unsigned integer that is randomly generated . The Verification Tag provides a key that allows a receiver to verify that the SCTP packet belongs to the current association and is not an old or stale packet from a previous association . 	400	0
2960	TSN	TSN - Transmission Sequence Number 	200	0
2960	Source Port Number	This is the SCTP sender's port number . It can be used by the receiver in combination with the source IP address , the SCTP destination port and possibly the destination IP address to identify the association to which this packet belongs . 	231	0
2960	Destination Port Number	This is the SCTP port number to which this packet is destined . The receiving host will use this port number to de-multiplex the SCTP packet to the correct receiving endpoint/application . 	231	0
2960	Verification Tag	The receiver of this packet uses the Verification Tag to validate the sender of this SCTP packet . On transmit , the value of this Verification Tag MUST be set to the value of the Initiate Tag received from the peer endpoint during the association initialization , with the following exceptions : 	231	0
2960	Checksum	This field contains the checksum of this SCTP packet . Its calculation is discussed in Section 6.8 . SCTP uses the Adler - 32 algorithm as described in Appendix B for calculating the checksum 	301	0
2960	Chunk Type	This field identifies the type of information contained in the Chunk Value field . It takes a value from 0 to 254 . The value of 255 is reserved for future use as an extension field . 	231	0
2960	Chunk Flags	The usage of these bits depends on the chunk type as given by the Chunk Type . Unless otherwise specified , they are set to zero on transmit and are ignored on receipt . 	500	0
2960	Chunk Length	This value represents the size of the chunk in bytes including the Chunk Type , Chunk Flags , Chunk Length , and Chunk Value fields . Therefore , if the Chunk Value field is zero-length , the Length field will be set to 4 . The Chunk Length field does not count any padding . 	100	0
2960	Chunk Value	The Chunk Value field contains the actual information to be transferred in the chunk . The usage and format of this field is dependent on the Chunk Type . 	400	0
2960	Reserved	Reserved : 5 bits 	500	0
2960	Length	This field indicates the length of the DATA chunk in bytes from the beginning of the type field to the end of the user data field excluding any padding . A DATA chunk with no user data field will have Length set to 16 ( indicating 16 bytes ). 	100	0
2960	TSN	This value represents the TSN for this DATA chunk . The valid range of TSN is from 0 to 4294967295 ( 2**32 - 1 ). TSN wraps back to 0 after reaching 4294967295 . 	110	0
2960	Stream Identifier S	Stream Identifier S : 16 bits ( unsigned integer ) 	231	0
2960	Stream Sequence Number n	This value represents the stream sequence number of the following user data within the stream S . Valid range is 0 to 65535 . 	200	0
2960	Payload Protocol Identifier	This value represents an application ( or upper layer ) specified protocol identifier . This value is passed to SCTP by its upper layer and sent to its peer . This identifier is not used by SCTP but can be used by certain network entities as well as the peer application to identify the type of information being carried in this DATA chunk . This field must be sent even in fragmented DATA chunks ( to make sure it is available for agents in the middle of the network ). 	230	0
2960	Initiate Tag	The receiver of the INIT ( the responding end ) records the value of the Initiate Tag parameter . This value MUST be placed into the Verification Tag field of every SCTP packet that the receiver of the INIT transmits within this association . 	230	0
2960	Advertised Receiver Window Credit	Advertised Receiver Window Credit ( a_rwnd ): 32 bits ( unsigned integer ) 	231	0
2960	Number of Outbound Streams	Defines the number of outbound streams the sender of this INIT chunk wishes to create in this association . The value of 0 MUST NOT be used . 	303	0
2960	Number of Inbound Streams	Defines the maximum number of streams the sender of this INIT chunk allows the peer end to create in this association . The value 0 MUST NOT be used . 	400	0
2960	Initial TSN	Defines the initial TSN that the sender will use . The valid range is from 0 to 4294967295 . This field MAY be set to the value of the Initiate Tag field . 	400	0
2960	IPv4 Address	Contains an IPv4 address of the sending endpoint . It is binary encoded . 	230	0
2960	IPv6 Address	Contains an IPv6 address of the sending endpoint . It is binary encoded . 	230	0
2960	Host Name	This field contains a host name in " host name syntax " per RFC1123 Section 2.1 [ RFC1123 ]. The method for resolving the host name is out of scope of SCTP . 	231	0
2960	Initiate Tag	The receiver of the INIT ACK records the value of the Initiate Tag parameter . This value MUST be placed into the Verification Tag field of every SCTP packet that the INIT ACK receiver transmits within this association . 	230	0
2960	Advertised Receiver Window Credit	Advertised Receiver Window Credit ( a_rwnd ): 32 bits ( unsigned integer ) 	231	0
2960	Number of Outbound Streams	Defines the number of outbound streams the sender of this INIT ACK chunk wishes to create in this association . The value of 0 MUST NOT be used . 	303	0
2960	Number of Inbound Streams	Defines the maximum number of streams the sender of this INIT ACK chunk allows the peer end to create in this association . The value 0 MUST NOT be used . 	200	0
2960	Initial TSN	Defines the initial TSN that the INIT-ACK sender will use . The valid range is from 0 to 4294967295 . This field MAY be set to the value of the Initiate Tag field . 	400	0
2960	Parameter Length	Parameter Length : variable size , depending on Size of Cookie 	100	0
2960	Parameter Length	Parameter Length : Variable Size . 	100	0
2960	Chunk Flags	Chunk Flags : 8 bits 	231	0
2960	Cumulative TSN Ack	This parameter contains the TSN of the last DATA chunk received in sequence before a gap . 	400	0
2960	Advertised Receiver Window Credit	Advertised Receiver Window Credit ( a_rwnd ): 32 bits ( unsigned integer ) 	231	0
2960	Chunk Flags	Chunk Flags : 8 bits 	231	0
2960	Heartbeat Length	Set to the size of the chunk in bytes , including the chunk header and the Heartbeat Information field . 	100	0
2960	Chunk Flags	Chunk Flags : 8 bits 	231	0
2960	Heartbeat Ack Length	Set to the size of the chunk in bytes , including the chunk header and the Heartbeat Information field . 	100	0
2960	Chunk Flags	Chunk Flags : 8 bits 	231	0
2960	Reserved	Reserved : 7 bits 	500	0
2960	Length	Set to the size of the chunk in bytes , including the chunk header and all the Error Cause fields present . 	100	0
2960	Chunk Flags	Chunk Flags : 8 bits 	231	0
2960	Length	Length : 16 bits ( unsigned integer ) 	100	0
2960	Cumulative TSN Ack	This parameter contains the TSN of the last chunk received in sequence before any gaps . 	201	0
2960	Chunk Flags	Chunk Flags : 8 bits 	231	0
2960	Chunk Flags	Chunk Flags : 8 bits 	231	0
2960	Length	Set to the size of the chunk in bytes , including the chunk header and all the Error Cause fields present . 	100	0
2960	Cause Code	Cause Code : 16 bits ( unsigned integer ) 	231	0
2960	Cause Length	Set to the size of the parameter in bytes , including the Cause Code , Cause Length , and Cause-Specific Information fields 	100	0
2960	Stream Identifier	Stream Identifier : 16 bits ( unsigned integer ) 	231	0
2960	Reserved	This field is reserved . It is set to all 0's on transmit and Ignored on receipt . 	500	0
2960	Unresolvable Address	The unresolvable address field contains the complete Type , Length and Value of the address parameter ( or Host Name parameter ) that contains the unresolvable address or host name . 	230	0
2960	Unrecognized Chunk	The Unrecognized Chunk field contains the unrecognized Chunk from the SCTP packet complete with Chunk Type , Chunk Flags and Chunk Length . 	231	0
2960	Unrecognized Parameters	The Unrecognized Parameters field contains the unrecognized parameters copied from the INIT ACK chunk complete with TLV . This error cause is normally contained in an ERROR chunk bundled with the COOKIE ECHO chunk when responding to the INIT ACK , when the sender of the COOKIE ECHO chunk wishes to report unrecognized parameters . 	400	0
2960	TSN value	The TSN value field contains the TSN of the DATA chunk received with no user data field . 	400	0
2960	Chunk Flags	Chunk Flags : 8 bit 	231	0
2960	Length	Set to the size of the chunk in bytes , including the 4 bytes of the chunk header and the size of the Cookie . 	100	0
2960	Cookie	This field must contain the exact cookie received in the State Cookie parameter from the previous INIT ACK . 	400	0
2960	Chunk Flags	Chunk Flags : 8 bits 	231	0
2960	Chunk Flags	Chunk Flags : 8 bits 	231	0
2960	Reserved	Reserved : 7 bits 	303	0
2960	B	B ) " Z " shall respond immediately with an INIT ACK chunk . The destination IP address of the INIT ACK MUST be set to the source IP address of the INIT to which this INIT ACK is responding . In the response , besides filling in other parameters , " Z " must set the Verification Tag field to Tag_A , and also provide its own Verification Tag ( Tag_Z ) in the Initiate Tag field . 	210	0
2960	B	C ) An old State Cookie is received from someone that the receiver is not interested in having an association with and the ABORT chunk was lost . 	500	0
2960	B	C ) Re-enable heartbeat on a specific destination transport address of a given association , and , 	400	0
2960	B	- The endpoint shall always fill in the Verification Tag field of the outbound packet with the destination endpoint's tag value if it is known . 	230	0
2960	E	- If the receiver is in COOKIE-ECHOED or COOKIE-WAIT state the procedures in section 8.4 SHOULD be followed , in other words it should be treated as an Out Of The Blue packet . 	302	0
2960	B	Format : ASSOCIATE(local SCTP instance name , destination transport addr , outbound stream count ) -> association id [, destination transport addr list ] [, outbound stream count ] 	231	0
2960	E	Format : SEND(association id , buffer address , byte count [, context ] [, stream id ] [, life time ] [, destination transport address ] [, unorder flag ] [, no-bundle flag ] [, payload protocol-id ] ) -> result 	301	0
2960	B	If a message can not be delivered SCTP shall invoke this notification on the ULP . 	500	0
2960	E	When SCTP loses communication to an endpoint completely ( e.g ., via Heartbeats ) or detects that the endpoint has performed an abort operation , it shall invoke this notification on the ULP . 	303	0
2961	Flags	Flags : 4 bits 	231	0
2961	Vers	Vers : 4 bits 	400	0
2961	Flags	Flags : 4 bits 	231	0
2961	Msg type	Msg type : 8 bits 	231	0
2961	RSVP checksum	The one's complement of the one's complement sum of the entire message , with the checksum field replaced by zero for the purpose of computing the checksum . An all-zero value means that no checksum was transmitted . Because individual sub - messages may carry their own checksum as well as the INTEGRITY object for authentication , this field MAY be set to zero . Note that when the checksum is not computed , the header of the bundle message will not be covered by any checksum . If the checksum is computed , individual sub-messages MAY set their own checksum to zero . 	301	0
2961	Send_TTL	The IP TTL value with which the message was sent . This is used by RSVP to detect a non-RSVP hop by comparing the Send_TTL with the IP TTL in a received message . 	230	0
2961	RSVP length	The total length of this RSVP Bundle message in bytes , including the bundle header and the sub-messages that follow . 	100	0
2961	Flags	Flags : 8 bits 	231	0
2961	Epoch	A value that indicates when the Message_Identifier sequence has reset . SHOULD be randomly generated each time a node reboots or the RSVP agent is restarted . The value SHOULD NOT be the same as was used when the node was last operational . This value MUST NOT be changed during normal operation . 	201	0
2961	Message_Identifier	When combined with the message generator's IP address , the Message_Identifier field uniquely identifies a message . The values placed in this field change incrementally and only decrease when the Epoch changes or when the value wraps . 	230	0
2961	Flags	No flags are currently defined . This field MUST be zero on transmission and ignored on receipt . 	500	0
2961	Epoch	Epoch : 24 bits 	100	0
2961	Message_Identifier	The Message_Identifier field copied from the message being acknowledged . 	230	0
2961	Flags	No flags are currently defined . This field MUST be zero on transmission and ignored on receipt . 	500	0
2961	Epoch	The Epoch field from the MESSAGE_ID object corresponding to the trigger message that advertised the state being refreshed . 	231	0
2961	Message_Identifier	The Message_Identifier field from the MESSAGE_ID object corresponding to the trigger message that advertised the state being refreshed . One or more Message_Identifiers may be included . 	231	0
2961	Flags	No flags are currently defined . This field MUST be zero on transmission and ignored on receipt . 	500	0
2961	Epoch	The Epoch field from the MESSAGE_ID object corresponding to the trigger message that advertised the state being refreshed . 	231	0
2961	Message_Identifier	The Message_Identifier field from the MESSAGE_ID object corresponding to the trigger message that advertised the Path state being refreshed . One or more Message_Identifiers may be included . Each Message_Identifier MUST be followed by the source IP address corresponding to the sender described in the Path state being refreshed . 	230	0
2961	Flags	No flags are currently defined . This field MUST be zero on transmission and ignored on receipt . 	500	0
2961	Epoch	The Epoch field from the MESSAGE_ID object corresponding to the trigger message that advertised the state being refreshed . 	231	0
2961	Message_Identifier	The Message_Identifier field from the MESSAGE_ID object corresponding to the trigger message that advertised the Path state being refreshed . One or more Message_Identifiers may be included . Each Message_Identifier MUST be followed by the source IP address corresponding to the sender of the Path state being refreshed , and the destination IP address of the session . 	230	0
2974	C	Copyright ( C ) The Internet Society ( 2000 ). All Rights Reserved . 	303	0
2974	V	V : Version Number . The version number field MUST be set to 1 ( SAPv2 announcements which use only SAPv1 features are backwards compatible , those which use new features can be detected by other means , so the SAP version number doesn't need to change ). 	220	0
2974	A	A : Address type . If the A bit is 0 , the originating source field contains a 32-bit IPv4 address . If the A bit is 1 , the originating source contains a 128-bit IPv6 address . 	210	0
2974	R	R : Reserved . SAP announcers MUST set this to 0 , SAP listeners MUST ignore the contents of this field . 	500	0
2974	T	T : Message Type . If the T field is set to 0 this is a session announcement packet , if 1 this is a session deletion packet . 	210	0
2974	E	E : Encryption Bit . If the encryption bit is set to 1 , the payload of the SAP packet is encrypted . If this bit is 0 the packet is not encrypted . See section 7 for details of the encryption process . 	210	0
2974	C	C : Compressed bit . If the compressed bit is set to 1 , the payload is compressed using the zlib compression algorithm [ 3 ]. If the payload is to be compressed and encrypted , the compression MUST be performed first . 	210	0
2974	V	Version Number , V : The version number of the authentication format specified by this memo is 1 . 	220	0
2974	P	Padding Bit , P : If necessary the authentication data is padded to be a multiple of 32 bits and the padding bit is set . In this case the last byte of the authentication data contains the number of padding bytes ( including the last byte ) that must be discarded . 	400	0
2974	Auth	Authentication Type , Auth : The authentication type is a 4 bit encoded field that denotes the authentication infrastructure the sender expects the recipients to use to check the authenticity and integrity of the information . This defines the format of the authentication subheader and can take the values : 0 = PGP format , 1 = CMS format . All other values are undefined and SHOULD be ignored . 	400	0
2974	C	This document and translations of it may be copied and furnished to others , and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared , copied , published and distributed , in whole or in part , without restriction of any kind , provided that the above copyright notice and this paragraph are included on all such copies and derivative works . However , this document itself may not be modified in any way , such as by removing the copyright notice or references to the Internet Society or other Internet organizations , except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed , or as required to translate it into languages other than English . 	302	0
2975	Intra-domain	Much of the initial work on accounting management has focused on intra-domain accounting applications . However , with the increasing deployment of services such as dial-up roaming , Internet fax , Voice and Video over IP and QoS , applications requiring inter-domain accounting are becoming increasingly common . 	400	0
2975	Packet loss	As packet loss is a fact of life on the Internet , accounting protocols dealing with session data need to be resilient against packet loss . This is particularly important in inter-domain accounting , where packets often pass through Network Access Points 	400	0
2975	Device reboots	In the event of a device reboot , it is desirable to minimize the loss of data on sessions in progress . Such losses may be significant even if the devices themselves are very reliable , due to long-lived sessions , which can comprise a significant fraction of total resource consumption . To guard against loss of these high-value sessions , interim accounting data is typically transmitted over the wire . When interim accounting in-place is combined with non-volatile storage it becomes possible to guard against data loss in much shorter sessions . This is possible since interim accounting data need only be stored in non-volatile memory until the session completes , at which time the interim data may be replaced by the session record . As a result , interim accounting data need never be sent over the wire , and it is possible to decrease the interim interval so as to provide a very high degree of protection against data loss . 	302	0
2975	Memory	In accounting systems without non-volatile storage , accounting data must be stored in volatile memory during the period between when it is generated and when it is transferred . The resulting memory consumption will depend on retry and retransmission algorithms . Since systems designed for high reliability will typically wish to retry for long periods , or may store interim accounting data , the resulting memory consumption can be considerable . As a result , if non-volatile storage is unavailable , it may be desirable to compress accounting data awaiting transmission . 	120	0
2975	CPU requirements	CPU consumption of the managed and managing nodes will be proportional to the complexity of the required accounting processing . Operations such as ASN.1 encoding and decoding , compression/decompression , and encryption/decryption can consume considerable resources , both on accounting clients and servers . 	400	0
2975	Efficiency measures	2.2.6 . Efficiency measures 	240	0
3012	Type	Type 24 	240	0
3012	Length	Length The length of the Challenge value in bytes; SHOULD be at least 4 	100	0
3012	Type	Type 132 ( skippable ) ( see [ 8 ]) 	231	0
3012	Length	Length Length of the Challenge value 	100	0
3012	Type	Type 36 ( not skippable ) ( see [ 8 ]) 	302	0
3012	Subtype	Subtype a number assigned to identify the kind of endpoints or characteristics of the particular authentication strategy 	231	0
3012	Length	Length 4 plus the number of bytes in the Authenticator; MUST be at least 20 . 	100	0
3012	SPI	SPI Security Parameters Index 	231	0
3012	Subtype	where the Type , Length , Subtype , and SPI are as shown in section 5 . The resulting function call , as described in [ 5 ], would be : 	400	0
3012	Length	where the Type , Length , Subtype , and SPI are as shown in section 5 . The resulting function call , as described in [ 5 ], would be : 	100	0
3012	SPI	where the Type , Length , Subtype , and SPI are as shown in section 5 . The resulting function call , as described in [ 5 ], would be : 	100	0
3016	PT	Payload Type ( PT ): The assignment of an RTP payload type for this new packet format is outside the scope of this document , and will not be specified here . It is expected that the RTP profile for a particular class of applications will assign a payload type for this encoding , or if that is not done then a payload type in the dynamic range SHALL be chosen by means of an out of band signaling protocol ( e.g ., H.245 , SIP , etc ). 	231	0
3016	X	Sequence Number : Incremented by one for each RTP data packet sent , starting , for security reasons , with a random initial value . 	100	0
3016	M	Marker ( M ) bit : The marker bit is set to one to indicate the last RTP packet ( or only RTP packet ) of a VOP . When multiple VOPs are carried in the same RTP packet , the marker bit is set to one . 	210	0
3016	PT	Payload Type ( PT ): The assignment of an RTP payload type for this new packet format is outside the scope of this document , and will not be specified here . It is expected that the RTP profile for a particular class of applications will assign a payload type for this encoding , 	231	0
3016	M	Marker ( M ) bit : The marker bit indicates audioMuxElement boundaries . It is set to one to indicate that the RTP packet contains a complete audioMuxElement or the last fragment of an audioMuxElement . 	210	0
3018	Free	Free 	302	0
3018	IP address	IP address 	230	0
3018	Local memory address	Local memory address 	230	0
3024	T	T Agent offers reverse tunneling service . 	231	0
3024	T	T If the ' T ' bit is set , the mobile node asks its home agent to accept a reverse tunnel from the care-of address . Mobile nodes using a foreign agent care-of address ask the foreign agent to reverse-tunnel its packets . 	210	0
3024	Type	Type 	240	0
3024	Length	Length 	100	0
3024	-	- modify its forwarding function to encapsulate them before forwarding . 	301	0
3024	-	If a foreign agent receives an un-encapsulated packet from a mobile node which had explicitly requested the Encapsulated Delivery Style , then the foreign agent MUST NOT reverse tunnel such a packet and rather MUST forward it using standard , IP routing mechanisms . 	303	0
3024	-	This is mobile node MN's home address ( Mc in the above example ). At first glance , it seems like this is unique among all mobile nodes , but as mentioned above , with private addresses another mobile may have an address Md numerically equivalent to Mc . 	230	0
3024	-	Notice that the Routing , Sequence Number , Strict Source Route and Key fields have been deprecated from GRE [ 10 ]. However , a separate document specifies their use [ 13 ]. 	231	0
3024	-	This may be in the form of a MAC address , a PPP session ( or incoming interface ) or channel coding for a digital cellular service . Device ID's can also be used in this context . 	231	0
3025	Type	Type CVSE-TYPE-NUMBER 37 	231	0
3025	Reserved	Reserved Reserved for future use . MUST be set to 0 on sending , MUST be ignored on reception . 	500	0
3025	Length	Length Length in bytes of this extension , not including the Type and Length bytes . 	100	0
3025	Type	Type NVSE-TYPE-NUMBER 133 	400	0
3025	Length	Length Length in bytes of this extension , not including the Type and Length bytes . 	100	0
3025	Reserved	Reserved Reserved for future use . To be set to 0 . 	500	0
3032	Label	Label : Label Value , 20 bits Exp : Experimental Use , 3 bits S : Bottom of Stack , 1 bit TTL : Time to Live , 8 bits 	240	0
3032	S	This bit is set to one for the last entry in the label stack ( i.e ., for the bottom of the stack ), and zero for all other label stack entries . 	210	0
3032	TTL	This eight-bit field is used to encode a time-to-live value . The processing of this field is described in section 2.4 . 	201	0
3034	Len	Len DLCI bits 	302	0
3034	Len	Len DLCI bits 	302	0
3036	Address Family	Address Family Address Encoding 	202	0
3036	Status Code	Status Code 32-bit unsigned integer encoding the event being signaled . The structure of a Status Code is : 	231	0
3036	M	Mandatory Parameters Variable length set of required message parameters . Some messages have no required parameters . 	400	0
3036	Hold Time	Hold Time , Hello hold time in seconds . An LSR maintains a record of Hellos received from potential peers ( see Section " Hello Message Procedures "). Hello Hold Time specifies the time the sending LSR will maintain its record of Hellos from the receiving LSR without receipt of another Hello . 	120	0
3036	PVLim	PVLim , Path Vector Limit The configured maximum path vector length . Must be 0 if loop detection is disabled ( D = 0 ). If the loop detection procedures would require the LSR to send a path vector that exceeds this limit , the LSR will behave as if a loop had been detected for the FEC in question . 	400	0
3036	Value	Value Meaning 	240	0
3036	Value	Value Meaning 	301	0
3036	Len	Len DLCI bits 	302	0
3036	Label TLV	Label TLV variable See below 	231	0
3036	Label TLV	Label TLV variable See below 	231	0
3036	Status Code	Status Code E Status Data Section Title 	231	0
3057	Message Class	0 Management ( MGMT ) Message [ IUA/M2UA/M3UA/SUA ] 1 Transfer Messages [ M3UA ] 2 SS7 Signalling Network Management ( SSNM ) Messages [ M3UA/SUA ] 3 ASP State Maintenance ( ASPSM ) Messages [ IUA/M2UA/M3UA/SUA ] 4 ASP Traffic Maintenance ( ASPTM ) Messages [ IUA/M2UA/M3UA/SUA ] 5 Q.921/Q.931 Boundary Primitives Transport ( QPTM ) Messages [ IUA ] 6 MTP2 User Adaptation ( MAUP ) Messages [ M2UA ] 7 Connectionless Messages [ SUA ] 	240	0
3057	Parameter Tag	The Tag field is a 16 bit identifier of the type of parameter . It takes a value of 0 to 65534 . 	231	0
3057	Parameter Length	The Parameter Length field contains the size of the parameter in bytes , including the Parameter Tag , Parameter Length , and Parameter Value fields . The Parameter Length does not include any padding bytes . 	100	0
3057	Parameter Value	The Parameter Value field contains the actual information to be transferred in the parameter . 	230	0
3057	Traffic Mode Type	Traffic Mode Type ( Mandatory ) Interface Identifier ( Optional ) - Combination of integer and integer ranges , OR - string ( text formatted ) INFO String ( Optional ) 	240	0
3057	Traffic Mode Type	Traffic Mode Type ( Mandatory ) Interface Identifier ( Optional ) - Combination of integer and integer ranges , OR - string ( text formatted ) INFO String ( Optional ) 	240	0
3057	Traffic Mode Type	Traffic Mode Type ( Mandatory ) Interface Identifiers ( Optional ) - Combination of integer and integer ranges , OR - string ( text formatted ) 	231	0
3057	Traffic Mode Type	Traffic Mode Type ( Mandatory ) Interface Identifiers ( Optional ) - Combination of integer and integer ranges , OR - string ( text formatted ) INFO String ( Optional ) 	240	0
3063	TTL	The request from R1 and R6 contains ( re,1,255 ) and ( bl,1,255 ), respectively . 	302	0
3063	Hop Count	By combining the color mechanism and the hop count mechanism , we can prevent loops without requiring any node to remember more than one color and one hop count per link for each LSP . 	231	0
3077	Vers	Vers ( 4 bit unsigned integer ): DTCP version number . MUST be DTCP_VERSION . 	220	0
3077	Com	Com ( 4 bit unsigned integer ): Command field , possible values are 1 - JOIN A message announcing that the feed sending this message is up and running . 2 - LEAVE A message announcing that the feed sending this message is being shut down . 	240	0
3077	Interval	Interval ( 8 bit unsigned integer ): Interval in seconds between HELLO messages for the IP protocol in " IP Vers ". Must be > 0 . The recommended value is HELLO_INTERVAL . If this value is increased , the feed MUST continue to send HELLO messages at the old rate for at least the old HELLO_LEAVE period . 	302	0
3077	Sequence	Sequence ( 16 bit unsigned integer ): Random value initialized at boot time and incremented by 1 every time a value of the HELLO message is modified . 	201	0
3077	res	F ( 1 bit ): bit indicating the type of feed : 0 = Send-only feed 1 = Receive-capable feed 	210	0
3077	F	F ( 1 bit ): bit indicating the type of feed : 0 = Send-only feed 1 = Receive-capable feed 	210	0
3077	IP Vers	IP Vers ( 4 bit unsigned integer ): IP protocol version of the feed bidirectional IP addresses ( FBIP ): 4 = IP version 4 6 = IP version 6 	220	0
3077	Tunnel Type	Tunnel Type ( 8 bit unsigned integer ): tunneling protocol supported by the feed . This value is the IP protocol number defined in [ RFC1700 ] [ iana/protocol-numbers ] and their legitimate descendents . Receivers MUST use this form of tunnel encapsulation when tunneling to the feed . 47 = GRE [ RFC2784 ] ( recommended ) Other protocol types allowing link-layer encapsulation are permitted . Obtaining new values is documented in [ RFC2780 ]. 	231	0
3077	Nb of FBIP	Nb of FBIP ( 8 bit unsigned integer ): Number of bidirectional IP feed addresses which are enumerated in the HELLO message 	231	0
3077	reserved	Feed BDL IP addr ( 32 or 128 bits ). The bidirectional IP address feed is the IP address of a feed bidirectional interface ( tunnel end - point ) reachable via the Internet . A feed has ' Nb of FBIP ' IP addresses which are operational tunnel end-points . They are enumerated in preferred order . FBIP1 being the most suitable tunnel end-point . 	230	0
3078	C	Copyright ( C ) The Internet Society ( 2001 ). All Rights Reserved . 	303	0
3078	Type	Type 	240	0
3078	Length	Length 	100	0
3078	Supported Bits	Supported Bits 	202	0
3078	PPP Protocol	The PPP Protocol field is described in the Point-to-Point Protocol Encapsulation [ 1 ]. 	400	0
3078	Coherency Count	The coherency count is used to assure that the packets are sent in proper order and that no packet has been dropped . It is a monotonically increasing counter which incremented by 1 for each packet sent . When the counter reaches 4095 ( 0x0FFF ), it is reset to 0 . 	201	0
3078	C	This document and translations of it may be copied and furnished to others , and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared , copied , published and distributed , in whole or in part , without restriction of any kind , provided that the above copyright notice and this paragraph are included on all such copies and derivative works . However , this document itself may not be modified in any way , such as by removing the copyright notice or references to the Internet Society or other Internet organizations , except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed , or as required to translate it into languages other than English . 	302	0
3095	Sequence Number	Sequence Number : Not sent when the offset from the sequence number of the compressed header is constant . When the offset is not constant , the sequence number may be compressed by sending LSBs . See 5.8.4 . 	231	0
3095	Pad Length	Pad Length : Dynamic . Always sent . 14th octet from end of packet . 	100	0
3095	Next Header	Authentication Data : Can have variable length , but when compression of NULL-encryption ESP header is attempted , it is assumed to have length 12 octets . 	400	0
3095	Next Header	This field will usually have the same value in all packets of a packet stream . It encodes the type of the subsequent header . Only when extension headers are sometimes present and sometimes not , will the field change its value during the lifetime of the stream . The field is therefore classified as STATIC . 	231	0
3103	Client ID	The client ID parameter specifies an RSIP client ID . Client ID's by an RSIP gateway to differentiate RSIP hosts . 	231	0
3103	Bind ID	The bind ID parameter specifies an RSIP bind ID . Bind ID's are used by RSIP hosts and gateways to differentiate an RSIP host's bindings . 	231	0
3103	Error	The error parameter specifies an error . The currently defined error values are presented in Appendix A . 	231	0
3115	Type	Type CVSE-TYPE-NUMBER 38 	231	0
3115	Reserved	Reserved Reserved for future use . MUST be set to 0 on sending , MUST be ignored on reception . 	500	0
3115	Length	Length Length in bytes of this extension , not including the Type and Length bytes . 	100	0
3115	Type	Type NVSE-TYPE-NUMBER 134 	231	0
3115	Length	Length Length in bytes of this extension , not including the Type and Length bytes . 	100	0
3115	Reserved	Reserved Reserved for future use . To be set to 0 . 	500	0
3119	C	Copyright ( C ) The Internet Society ( 2001 ). All Rights Reserved . 	303	0
3119	C	This document and translations of it may be copied and furnished to others , and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared , copied , published and distributed , in whole or in part , without restriction of any kind , provided that the above copyright notice and this paragraph are included on all such copies and derivative works . However , this document itself may not be modified in any way , such as by removing the copyright notice or references to the Internet Society or other Internet organizations , except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed , or as required to translate it into languages other than English . 	303	0
3122	Type	Type 141 	220	0
3122	Code	Code 0 	302	0
3122	Checksum	Checksum The ICMP checksum . See [ ICMPv6 ]. 	301	0
3122	Reserved	Reserved This field is unused . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
3122	Type	Type 142 	220	0
3122	Code	Code 0 	302	0
3122	Checksum	Checksum The ICMP checksum . See [ ICMPv6 ]. 	301	0
3122	Reserved	Reserved 32-bit unused field . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
3122	Type	Type 9 for Source Address List 10 for Target Address List 	240	0
3122	Length	Length The length of the option ( including the Type , Length , and the Reserved fields ) in units of 8 octets . The minimum value for Length is 3 , for one IPv6 address . 	100	0
3122	Reserved	Reserved This field is unused . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
3122	Length	The Source Address List MUST fit in one IND Solicitation message . Therefore in case all IPv6 addresses of an interface do not fit in one messages , the option does not contain a complete list . For a complete list of IPv6 addresses , a node should rely on the IND Advertisement message . 	230	0
3145	M	Mandatory ( M ) bit : MUST be 0 . 	500	0
3145	M	Mandatory ( M ) bit : MUST be 0 . 	500	0
3145	H	Length : The length of the entire attribute in octets , expressed as a single octet . The length MUST be at least 11 . 	100	0
3145	Length	Length : The length of the entire attribute in octets , expressed as a single octet . The length MUST be at least 11 . 	100	0
3145	Vendor ID	Vendor ID : A two octet value in network byte order; set to 0 to indicate that this is an IETF-assigned attribute . 	201	0
3145	Attribute Type	Attribute Type : A two octet value in network byte order; set to 46 ( PPP Disconnect Cause Code ). 	110	0
3145	Disconnect Code	Disconnect Code : A two octet value in network byte order . ( Described in section 3 of this document .) 	231	0
3145	Control Protocol Number	Control Protocol Number : The PPP Control Protocol number of the primary protocol known to have caused the error , if any . This field may be 0 unless mentioned otherwise in the description of the Disconnect Codes in section 3 . 	231	0
3145	Direction	Direction : A single octet value; specifies the direction in which the Disconnect Code applies . 	231	0
3146	Type	Type 1 for Source Link-layer address . 2 for Target Link-layer address . Length 3 ( in units of 8 octets ). 	240	0
3146	max_rec	max_rec This field MUST be equal to the value of max_rec in the node's configuration ROM . 	231	0
3146	spd	spd This field MUST be set to the lesser of the node's link speed and PHY speed . The link speed is the maximum speed at which the link may send or receive packets; the PHY speed is the maximum speed at which the PHY may send , receive or repeat packets . The encoding used for spd is specified in the Table 2 of [ IP1394 ]. 	231	0
3146	unicast_FIFO	unicast_FIFO This field MUST specify the 48-bit offset of the node's FIFO available for the receipt of IPv6 datagrams . The offset of a node's unicast FIFO MUST NOT change , except as the result of a power reset . 	110	0
3146	reserved	reserved This field MUST be set to all zeros by the sender and ignored by the receiver . 	500	0
3162	Type	Type 	240	0
3162	Length	Length 	100	0
3162	Address	Address 	202	0
3162	Type	Type 	240	0
3162	Length	Length 	100	0
3162	Interface-Id	Interface-Id 	400	0
3162	Type	Type 	240	0
3162	Length	Length 	100	0
3162	Reserved	This field , which is reserved and MUST be present , is always set to zero . 	500	0
3162	Prefix-Length	Prefix-Length 	100	0
3162	Prefix	The Prefix field is up to 16 octets in length . Bits outside of the Prefix-Length , if included , must be zero . 	100	0
3162	Type	Type 	240	0
3162	Length	Length 	100	0
3162	Address	The Address field is 16 octets in length . The value 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF indicates that the NAS SHOULD allow the user to select an address or name to be connected to . The value 0 indicates that the NAS SHOULD select a host to connect the user to . Other values indicate the address the NAS SHOULD connect the user to . 	240	0
3162	Type	Type 	240	0
3162	Length	Length 	100	0
3162	Type	Type 	240	0
3162	Length	Length 	100	0
3173	Next Header	Next Header 	231	0
3173	Next Header	8-bit selector . Stores the IPv4 Protocol field or the IPv6 Next Header field of the original IP header . 	400	0
3173	Flags	8-bit field . Reserved for future use . MUST be set to zero . MUST be ignored by the receiving node . 	500	0
3173	Compression Parameter Index	16-bit index . The CPI is stored in network order . The values 0-63 designate well-known compression algorithms , which require no additional information , and are used for manual setup . The values themselves are identical to IPCOMP Transform identifiers as defined in [ SECDOI ]. Consult [ SECDOI ] for an initial set of defined values and for instructions on how to assign new values . The values 64-255 are reserved for future use . The values 256-61439 are negotiated between the two nodes in definition of an IPComp Association , as defined in section 4 . Note : When negotiating one of the well-known algorithms , the nodes MAY select a CPI in the pre-defined range 0-63 . The values 61440-65535 are for private use among mutually consenting parties . Both nodes participating can select a CPI value independently of each other and there is no relationship between the two separately chosen CPIs . The outbound IPComp header MUST use the CPI value chosen by the decompressing node . The CPI in combination with the destination IP address uniquely identifies the compression algorithm characteristics for the datagram . 	231	0
3208	Options	In addition to the basic data transfer operation described above , PGM specifies several end-to-end options to address specific application requirements . PGM specifies options to support fragmentation , late joining , redirection , Forward Error Correction ( FEC ), reachability , and session synchronization/termination/reset . Options MAY be appended to PGM data packet headers only by their original transmitters . While they MAY be interpreted by network elements , options are neither added nor removed by network elements . 	400	0
3208	SPM's Sequence Number	SPM's Sequence Number 	200	0
3208	N	Note that in NAKs and N-NAKs , unlike the other packets , the field SPORT contains the Data-Destination port and the field DPORT contains the Data-Source port . As a general rule , the content of SPORT/DPORT is determined by the direction of the flow : in packets which travel down-stream SPORT is the port number chosen in the data source ( Data-Source Port ) and DPORT is the data destination port number ( Data-Destination Port ). The opposite holds for packets which travel upstream . This makes DPORT the protocol endpoint in the recipient host , regardless of the direction of the packet . 	400	0
3208	Options	PGM specifies several end-to-end options to address specific application requirements . PGM specifies options to support fragmentation , late joining , and redirection . 	400	0
3208	Length	Options are all in the TLV style , or Type , Length , Value . The Type field is contained in the first byte , where bit 0 is the OPT_END bit , followed by 7 bits of type . The OPT_END bit MUST be set in the last option in the option list , whichever that might be . The Length field is the total length of the option in bytes , and directly follows the Type field . Following the Length field are 5 reserved bits , the OP_ENCODED flag , the 2 Option Extensibility bits OPX and the OP_ENCODED_NULL flag . Last are 7 bits designated for option specific information which may be defined on a per-option basis . If not defined for a particular option , they MUST be set to 0 . 	210	0
3208	Total length of all options	The total length in octets of all option extensions including OPT_LENGTH . 	100	0
3208	First Sequence Number	Sequence Number of the PGM DATA/RDATA packet containing the first fragment of the APDU . 	200	0
3208	Offset	The byte offset of the fragment from the beginning of the APDU ( OPT_FRAG_OFF ). 	110	0
3208	Length	Length 	100	0
3208	Requested Sequence Number	A list of up to 62 additional sequence numbers to which the NAK applies . 	200	0
3208	Minimum Sequence Number	The minimum sequence number defining the initial trailing edge of the receive window for a late joining receiver . 	200	0
3208	Error Code	The 6 bit error code field is used to forward an error code down to the receivers from the source . 	231	0
3208	Transmission Group Size	The transmission group size advertised in the OPT_PARITY_PRM option on SPMs MUST be a power of 2 and constant for the duration of the session . However , the actual transmission group size used MAY not be constant for the duration of the session , and MAY not be a power of 2 . When a TG size different from the one advertised in OPT_PARITY_PRM is used , the TG size advertised in OPT_PARITY_PRM MUST be interpreted as specifying the maximum effective size of the TG . 	100	0
3208	Transmission Group Size	The number of data packets in the transmission group over which the parity packets are calculated . If a variable transmission group size is being used , then this becomes the maximum effective transmission group size across the session . 	400	0
3208	Parity Group Number	The number of the group of k parity packets amongst the h parity packets within the transmission group to which the parity packet belongs , where the first k parity packets are in group zero . PRM_GROUP MUST NOT be zero . 	231	0
3208	Actual Transmission Group Size	The actual number of data packets in this transmission group . This MUST be less than or equal to the maximum transmission group size PARITY_PRM_TGS in OPT_PARITY_PRM . 	100	0
3208	Congestion Report Reference SQN	A SQN in the ODATA space that serves as a temporal reference point for the load report values . 	400	0
3208	NE Worst Link	Reports the load in the worst link as detected though NE internal measurements 	231	0
3208	NE Worst Path	Reports the load in the worst end-to-end path as detected though NE internal measurements 	200	0
3208	Rcvr Worst Path	Rcvr Worst Path ( OPT_CR_RX_WP ). 	301	0
3208	POLL's Sequence Number	POLL's Sequence Number 	200	0
3208	POLL's Round	POLL's Round 	202	0
3208	POLL's Sub-type	POLL's Sub-type 	231	0
3208	POLL's Back-off Interval	POLL's Back-off Interval 	301	0
3208	Matching Bit-Mask	Matching Bit-Mask 	231	0
3208	POLR's Sequence Number	POLR's Sequence Number 	200	0
3208	POLR's Round	POLR's Round 	231	0
3208	NAK Back-Off Interval	NAK Back-Off Interval 	301	0
3208	Maximum NAK Back-Off Interval	Maximum NAK Back-Off Interval 	301	0
3208	Minimum NAK Back-Off Interval	Minimum NAK Back-Off Interval 	400	0
3208	Path NLA	The NLA of the interface on the originating PGM network element that it uses to send multicast SPMs to the recipient of the packet containing this option . 	230	0
3209	Reserved	This field is reserved . It MUST be set to zero on transmission and MUST be ignored on receipt . 	500	0
3209	L3PID	an identifier of the layer 3 protocol using this path . Standard Ethertype values are used . 	231	0
3209	Reserved	This field is reserved . It MUST be set to zero on transmission and MUST be ignored on receipt . 	500	0
3209	Res	This field is reserved . It MUST be set to zero on transmission and MUST be ignored on receipt . 	500	0
3209	L3PID	an identifier of the layer 3 protocol using this path . Standard Ethertype values are used . 	231	0
3209	M	Setting this bit to one indicates that the node is capable of merging in the data plane 	302	0
3209	Minimum VPI	This 12 bit field specifies the lower bound of a block of Virtual Path Identifiers that is supported on the originating switch . If the VPI is less than 12-bits it MUST be right justified in this field and preceding bits MUST be set to zero . 	230	0
3209	Minimum VCI	This 16 bit field specifies the lower bound of a block of Virtual Connection Identifiers that is supported on the originating switch . If the VCI is less than 16-bits it MUST be right justified in this field and preceding bits MUST be set to zero . 	230	0
3209	Maximum VPI	This 12 bit field specifies the upper bound of a block of Virtual Path Identifiers that is supported on the originating switch . If the VPI is less than 12-bits it MUST be right justified in this field and preceding bits MUST be set to zero . 	230	0
3209	Maximum VCI	This 16 bit field specifies the upper bound of a block of Virtual Connection Identifiers that is supported on the originating switch . If the VCI is less than 16-bits it MUST be right justified in this field and preceding bits MUST be set to zero . 	230	0
3209	Reserved	This field is reserved . It MUST be set to zero on transmission and ignored on receipt . 	500	0
3209	L3PID	an identifier of the layer 3 protocol using this path . Standard Ethertype values are used . 	231	0
3209	DLI	DLCI Length Indicator . The number of bits in the DLCI . The following values are supported : 	100	0
3209	Minimum DLCI	This 23-bit field specifies the lower bound of a block of Data Link Connection Identifiers ( DLCIs ) that is supported on the originating switch . The DLCI MUST be right justified in this field and unused bits MUST be set to 0 . 	230	0
3209	Maximum DLCI	This 23-bit field specifies the upper bound of a block of Data Link Connection Identifiers ( DLCIs ) that is supported on the originating switch . The DLCI MUST be right justified in this field and unused bits MUST be set to 0 . 	230	0
3209	L	The L bit is an attribute of the subobject . The L bit is set if the subobject represents a loose hop in the explicit route . If the bit is not set , the subobject represents a strict hop in the explicit route . 	210	0
3209	Type	The Type indicates the type of contents of the subobject . Currently defined values are : 	231	0
3209	Length	The Length contains the total length of the subobject in bytes , including the L , Type and Length fields . The Length MUST be at least 4 , and MUST be a multiple of 4 . 	100	0
3209	L	The L bit is an attribute of the subobject . The L bit is set if the subobject represents a loose hop in the explicit route . If the bit is not set , the subobject represents a strict hop in the explicit route . 	210	0
3209	Type	Type 	240	0
3209	Length	The Length contains the total length of the subobject in bytes , including the Type and Length fields . The Length is always 8 . 	100	0
3209	L	The L bit is an attribute of the subobject . The L bit is set if the subobject represents a loose hop in the explicit route . If the bit is not set , the subobject represents a strict hop in the explicit route . 	210	0
3209	Type	Type 	240	0
3209	Length	The Length contains the total length of the subobject in bytes , including the Type and Length fields . The Length is always 20 . 	100	0
3209	Prefix Length	Prefix Length 	100	0
3209	Type	Type 	240	0
3209	Length	The Length contains the total length of the subobject in bytes , including the Type and Length fields . The Length is always 8 . 	100	0
3209	Flags	Flags 	202	0
3209	Type	Type 	240	0
3209	Length	The Length contains the total length of the subobject in bytes , including the Type and Length fields . The Length is always 20 . 	100	0
3209	Flags	Flags 	302	0
3209	Type	Type 	240	0
3209	Length	The Length contains the total length of the subobject in bytes , including the Type and Length fields . 	100	0
3209	Flags	0x01 = Global label This flag indicates that the label will be understood if received on any interface . 	240	0
3209	C-Type	The C-Type of the included Label Object . Copied from the Label Object . 	231	0
3209	Contents of Label Object	Contents of Label Object 	400	0
3209	IPv4 tunnel end point address	IPv4 tunnel end point address 	230	0
3209	Tunnel ID	A 16-bit identifier used in the SESSION that remains constant over the life of the tunnel . 	231	0
3209	Extended Tunnel ID	A 32-bit identifier used in the SESSION that remains constant over the life of the tunnel . Normally set to all zeros . Ingress nodes that wish to narrow the scope of a SESSION to the ingress-egress pair may place their IPv4 address here as a globally unique identifier . 	230	0
3209	Tunnel ID	A 16-bit identifier used in the SESSION that remains constant over the life of the tunnel . 	231	0
3209	Extended Tunnel ID	A 16-byte identifier used in the SESSION that remains constant over the life of the tunnel . Normally set to all zeros . Ingress nodes that wish to narrow the scope of a SESSION to the ingress-egress pair may place their IPv6 address here as a globally unique identifier . 	230	0
3209	IPv4 tunnel sender address	IPv4 tunnel sender address 	230	0
3209	LSP ID	A 16-bit identifier used in the SENDER_TEMPLATE and the FILTER_SPEC that can be changed to allow a sender to share resources with itself . 	231	0
3209	LSP ID	A 16-bit identifier used in the SENDER_TEMPLATE and the FILTER_SPEC that can be changed to allow a sender to share resources with itself . 	231	0
3209	Flags	Flags 	202	0
3209	Name Length	Name Length 	100	0
3209	Exclude-any	A 32-bit vector representing a set of attribute filters associated with a tunnel any of which renders a link unacceptable . 	303	0
3209	Include-any	A 32-bit vector representing a set of attribute filters associated with a tunnel any of which renders a link acceptable ( with respect to this test ). A null set ( all bits set to zero ) automatically passes . 	302	0
3209	Include-all	A 32-bit vector representing a set of attribute filters associated with a tunnel all of which must be present for a link to be acceptable ( with respect to this test ). A null set ( all bits set to zero ) automatically passes . 	302	0
3209	Flags	Flags 	202	0
3209	Name Length	Name Length 	100	0
3209	Src_Instance	a 32 bit value that represents the sender's instance . The advertiser maintains a per neighbor representation/value . This value MUST change when the sender is reset , when the node reboots , or when communication is lost to the neighboring node and otherwise remains the same . This field MUST NOT be set to zero ( 0 ). 	201	0
3209	Dst_Instance	The most recently received Src_Instance value received from the neighbor . This field MUST be set to zero ( 0 ) when no value has ever been seen from the neighbor . 	302	0
3220	Home Agent	A router on a mobile node's home network which tunnels datagrams for delivery to the mobile node when it is away from home , and maintains current location information for the mobile node . 	230	0
3220	Care-of Address	The termination point of a tunnel toward a mobile node , for datagrams forwarded to the mobile node while it is away from home . The protocol can use two different types of care-of address : a " foreign agent care-of address " is an address of a foreign agent with which the mobile node is registered , and a " co-located care-of address " is an externally obtained local address which the mobile node has associated with one of its own network interfaces . 	230	0
3220	Home Address	An IP address that is assigned for an extended period of time to a mobile node . It remains unchanged regardless of where the node is attached to the Internet . 	230	0
3220	SPI	An index identifying a security context between a pair of nodes among the contexts available in the Mobility Security Association . SPI values 0 through 255 are reserved and MUST NOT be used in any Mobility Security Association . 	303	0
3220	Type	Type Indicates the particular type of Extension . 	231	0
3220	Length	Length Indicates the length ( in bytes ) of the data field within this Extension . The length does NOT include the Type and Length bytes . 	100	0
3220	Type	Type is the type , which describes a collection of extensions having a common data type . 	231	0
3220	Length	Length indicates the length ( in bytes ) of the data field within this Extension . It does NOT include the Type , Length and Sub-Type bytes . 	100	0
3220	Type	Type is the type , which describes a collection of extensions having a common data type . 	231	0
3220	Length	Length 8-bit unsigned integer . Length of the extension , in bytes , excluding the extension Type and the extension Length fields . This field MUST be set to 1 plus the total length of the data field . 	100	0
3220	Lifetime	The maximum length of time that the Advertisement is considered valid in the absence of further Advertisements . 	100	0
3220	Num Addrs	The number of Router Addresses advertised in this message . Note that in an Agent Advertisement message , the number of router addresses specified in the ICMP Router Advertisement portion of the message MAY be set to 0 . See Section 2.3.1 for details . 	202	0
3220	Type	Type 16 	240	0
3220	Length	Length ( 6 + 4*N ), where 6 accounts for the number of bytes in the Sequence Number , Registration Lifetime , flags , and reserved fields , and N is the number of care-of addresses advertised . 	100	0
3220	Sequence Number	The count of Agent Advertisement messages sent since the agent was initialized ( Section 2.3.2 ). 	201	0
3220	Registration Lifetime	The longest lifetime ( measured in seconds ) that this agent is willing to accept in any Registration Request . A value of 0xffff indicates infinity . This field has no relation to the " Lifetime " field within the ICMP Router Advertisement portion of the Agent Advertisement . 	100	0
3220	R	R Registration required . Registration with this foreign agent ( or another foreign agent on this link ) is required even when using a co-located care-of address . 	302	0
3220	B	B Busy . The foreign agent will not accept registrations from additional mobile nodes . 	302	0
3220	H	H Home agent . This agent offers service as a home agent on the link on which this Agent Advertisement message is sent . 	230	0
3220	F	F Foreign agent . This agent offers service as a foreign agent on the link on which this Agent Advertisement message is sent . 	230	0
3220	M	M Minimal encapsulation . This agent implements receiving tunneled datagrams that use minimal encapsulation [ 34 ]. 	400	0
3220	G	G GRE encapsulation . This agent implements receiving tunneled datagrams that use GRE encapsulation [ 16 ]. 	400	0
3220	r	r Sent as zero; ignored on reception . SHOULD NOT be allocated for any other uses . 	500	0
3220	T	T Foreign agent supports reverse tunneling [ 27 ]. 	231	0
3220	Care-of Address	The advertised foreign agent care-of address(es ) provided by this foreign agent . An Agent Advertisement MUST include at least one care-of address if the ' F ' bit is set . The number of care-of addresses present is determined by the Length field in the Extension . 	230	0
3220	Type	Type 19 ( Prefix-Lengths Extension ) 	100	0
3220	Length	Length N , where N is the value ( possibly zero ) of the Num Addrs field in the ICMP Router Advertisement portion of the Agent Advertisement . 	100	0
3220	Prefix Length	The number of leading bits that define the network number of the corresponding Router Address listed in the ICMP Router Advertisement portion of the message . The prefix length for each Router Address is encoded as a separate byte , in the order that the Router Addresses are listed in the ICMP Router Advertisement portion of the message . 	100	0
3220	Type	Type 1 ( Registration Request ) 	231	0
3220	S	S Simultaneous bindings . If the ' S ' bit is set , the mobile node is requesting that the home agent retain its prior mobility bindings , as described in Section 3.6.1.2 . 	210	0
3220	B	B Broadcast datagrams . If the ' B ' bit is set , the mobile node requests that the home agent tunnel to it any broadcast datagrams that it receives on the home network , as described in Section 4.3 . 	210	0
3220	D	D Decapsulation by mobile node . If the ' D ' bit is set , the mobile node will itself decapsulate datagrams which are sent to the care-of address . That is , the mobile node is using a co-located care-of address . 	301	0
3220	M	M Minimal encapsulation . If the ' M ' bit is set , the mobile node requests that its home agent use minimal encapsulation [ 34 ] for datagrams tunneled to the mobile node . 	400	0
3220	G	G GRE encapsulation . If the ' G ' bit is set , the mobile node requests that its home agent use GRE encapsulation [ 16 ] for datagrams tunneled to the mobile node . 	400	0
3220	r	r Sent as zero; ignored on reception . SHOULD NOT be allocated for any other uses . 	500	0
3220	T	T Reverse Tunneling requested; see [ 27 ]. 	302	0
3220	x	x Sent as zero; ignored on reception . 	500	0
3220	Lifetime	The number of seconds remaining before the registration is considered expired . A value of zero indicates a request for deregistration . A value of 0xffff indicates infinity . 	120	0
3220	Home Address	Home Address 	230	0
3220	Home Agent	Home Agent 	230	0
3220	Care-of Address	Care-of Address 	230	0
3220	Identification	A 64-bit number , constructed by the mobile node , used for matching Registration Requests with Registration Replies , and for protecting against replay attacks of registration messages . See Sections 5.4 and 5.7 . 	400	0
3220	Type	Type 3 ( Registration Reply ) 	231	0
3220	Code	Code A value indicating the result of the Registration Request . See below for a list of currently defined Code values . 	231	0
3220	Lifetime	If the Code field indicates that the registration was accepted , the Lifetime field is set to the number of seconds remaining before the registration is considered expired . A value of zero indicates that the mobile node has been deregistered . A value of 0xffff indicates infinity . If the Code field indicates that the registration was denied , the contents of the Lifetime field are unspecified and MUST be ignored on reception . 	210	0
3220	Home Address	Home Address 	230	0
3220	Home Agent	Home Agent 	230	0
3220	Identification	A 64-bit number used for matching Registration Requests with Registration Replies , and for protecting against replay attacks of registration messages . The value is 	231	0
3220	Type	Type 32 	240	0
3220	Length	Length 4 plus the number of bytes in the Authenticator . 	100	0
3220	SPI	SPI Security Parameter Index ( 4 bytes ). An opaque identifier ( see Section 1.6 ). 	230	0
3220	Type	Type 33 	240	0
3220	Length	Length 4 plus the number of bytes in the Authenticator . 	100	0
3220	SPI	SPI Security Parameter Index ( 4 bytes ). An opaque identifier ( see Section 1.6 ). 	230	0
3220	Type	Type 34 	240	0
3220	Length	Length 4 plus the number of bytes in the Authenticator . 	100	0
3220	SPI	SPI Security Parameter Index ( 4 bytes ). An opaque identifier ( see Section 1.6 ). 	230	0
3220	Code	In this case , the Lifetime field in the Registration Reply will contain the maximum Lifetime value which that foreign agent is willing to accept in any Registration Request . The mobile node MAY attempt to register with this same agent , using a Lifetime in the Registration Request that MUST be less than or equal to the value specified in the Reply . 	230	0
3220	Code	In this case , the Identification field in the Registration Reply will contain a value that allows the mobile node to synchronize with the home agent , based upon the style of replay protection in effect ( Section 5.7 ). The mobile node MUST adjust the parameters it uses to compute the Identification field based upon the information in the Registration Reply , before issuing any future Registration Requests . 	230	0
3220	Code	This code is returned by a home agent when the mobile node is performing dynamic home agent address resolution as described in Sections 3.6.1.1 and 3.6.1.2 . In this case , the Home Agent field within the Reply will contain the unicast IP address of 	230	0
3224	Client ID Length	Client ID Length : This declares how many bytes of Client ID data follow . 	100	0
3224	Timestamp	Authenticator : a 16 byte MD5 digest [ 6 ] calculated on the following data fields , concatenated together 	400	0
3244	protocol version number	protocol version number : contains the hex constant 0xff80 ( big-endian integer ). 	220	0
3244	protocol version number	protocol version number : contains the hex constant 0x0001 ( big-endian integer ). ( The reply message has the same format as the original change password protocol .) 	220	0
3244	result code	result code ( 16 bits ) ( result codes 0-4 are from the original change password protocol ): 	231	0
3267	CMR	CMR ( 4 bits ): Indicates a codec mode request sent to the speech encoder at the site of the receiver of this payload . The value of the CMR field is set to the frame type index of the corresponding speech mode being requested . The frame type index may be 0-7 for AMR , as defined in Table 1a in [ 2 ], or 0-8 for AMR-WB , as defined in Table 1a in [ 4 ]. CMR value 15 indicates that no mode request is present , and other values are for future use . 	231	0
3267	F	F ( 1 bit ): If set to 1 , indicates that this frame is followed by another speech frame in this payload; if set to 0 , indicates that this frame is the last frame in this payload . 	210	0
3267	FT	FT ( 4 bits ): Frame type index , indicating either the AMR or AMR-WB speech coding mode or comfort noise ( SID ) mode of the corresponding frame carried in this payload . 	231	0
3267	Q	Q ( 1 bit ): Frame quality indicator . If set to 0 , indicates the corresponding frame is severely damaged and the receiver should set the RX_TYPE ( see [ 6 ]) to either SPEECH_BAD or SID_BAD depending on the frame type ( FT ). 	210	0
3267	CMR	R : is a reserved bit that MUST be set to zero . All R bits MUST be ignored by the receiver . 	500	0
3267	R	R : is a reserved bit that MUST be set to zero . All R bits MUST be ignored by the receiver . 	500	0
3267	ILL	ILL ( 4 bits , unsigned integer ): This is an OPTIONAL field that is present only if interleaving is signalled out-of-band for the session . ILL=L indicates to the receiver that the interleaving length is L+1 , in number of frame-blocks . 	400	0
3267	ILP	ILP ( 4 bits , unsigned integer ): This is an OPTIONAL field that is present only if interleaving is signalled . ILP MUST take a value between 0 and ILL , inclusive , indicating the interleaving index for frame-blocks in this payload in the interleave group . If the value of ILP is found greater than ILL , the payload SHOULD be discarded . 	210	0
3267	F	F ( 1 bit ): see definition in Section 4.3.2 . 	210	0
3267	FT	FT ( 4 bits unsigned integer ): see definition in Section 4.3.2 . 	231	0
3267	Q	Q ( 1 bit ): see definition in Section 4.3.2 . 	302	0
3267	Reserved bits	Reserved bits : MUST be set to 0 when written , and a reader MUST ignore them . 	500	0
3267	CHAN	CHAN ( 4 bit unsigned integer ): Indicates the number of audio channels contained in this storage file . The valid values and the order of the channels within a frame block are specified in Section 4.1 in [ 24 ]. 	200	0
3270	PSC	PSC PHB Scheduling Class . The set of one or more PHB(s ) that are applied to the Behavior Aggregate(s ) belonging to a given OA . For example , AF1x is a PSC comprising the AF11 , AF12 and AF13 PHBs . EF is an example of PSC comprising a single PHB , the EF PHB . 	231	0
3270	Reserved	Reserved : 28 bits This field is reserved . It must be set to zero on transmission and must be ignored on receipt . 	500	0
3270	MAPnb	MAPnb : 4 bits Indicates the number of MAP entries included in the DIFFSERV Object . This can be set to any value from 0 to 8 . 	302	0
3270	Reserved	Reserved : 13 bits This field is reserved . It must be set to zero on transmission and must be ignored on receipt . 	500	0
3270	EXP	EXP : 3 bits This field contains the value of the EXP field for the ` EXP<-->PHB mapping ' defined in this MAP entry . 	400	0
3270	PHBID	PHBID : 16 bits This field contains the PHBID of the PHB for the ` EXP<-->PHB mapping ' defined in this MAP entry . The PHBID is encoded as specified in [ PHBID ]. 	400	0
3270	Reserved	Reserved : 16 bits This field is reserved . It must be set to zero on transmission and must be ignored on receipt . 	500	0
3270	PSC	PSC : 16 bits The PSC indicates a PHB Scheduling Class to be supported by the LSP . The PSC is encoded as specified in [ PHBID ]. 	231	0
3270	Reserved	Reserved : 27 bits This field is reserved . It must be set to zero on transmission and must be ignored on receipt . 	500	0
3270	MAPnb	MAPnb : 4 bits Indicates the number of MAP entries included in the DIFFSERV Object . This can be set to any value from 1 to 8 . 	301	0
3270	Reserved	Reserved : 13 bits This field is reserved . It must be set to zero on transmission and must be ignored on receipt . 	500	0
3270	EXP	EXP : 3 bits This field contains the value of the EXP field for the ` EXP<-->PHB mapping ' defined in this MAP entry . 	400	0
3270	PHBID	PHBID : 16 bits This field contains the PHBID of the PHB for the ` EXP<-->PHB mapping ' defined in this MAP entry . The PHBID is encoded as specified in [ PHBID ]. 	400	0
3270	Reserved	Reserved : 15 bits This field is reserved . It must be set to zero on transmission and must be ignored on receipt . 	500	0
3270	PSC	PSC : 16 bits The PSC indicates a PHB Scheduling Class to be supported by the LSP . The PSC is encoded as specified in [ PHBID ]. 	231	0
3292	V	General Switch Management Protocol ( GSMP ) V3 	400	0
3292	C	Copyright ( C ) The Internet Society ( 2002 ). All Rights Reserved . 	303	0
3292	x	x : Reserved Flags . These are generally used by specific messages and will be defined in those messages . 	240	0
3292	S	S : Stacked Label Indicator Label Stacking is discussed below in section 3.1.3.5 	231	0
3292	Len	Len DLCI bits 0 10 2 23 	302	0
3292	IQS	IQS , OQS Input and Output QoS Model Selector : The QoS Model Selector is used to specify a QoS Model for the connection . The values of IQS and OQS determine respectively the interpretation of the Input Service Selector and the Output Service Selector , and SHOULD be interpreted as a priority , a QoS profile , a service specification , or an ARM specification as shown : 	231	0
3292	x	0x100 PPP 0x200 FRF.5 0x201 FRF.8 	240	0
3292	M	M : Multicast Multicast flags are used as a hint for point-to-multipoint or multipoint-to-point connections in the Add Branch message . They are not used in any other connection management messages and in these messages they SHOULD be set to zero . There are two instances of the M-bit in the Add Branch message; one for input branch specified by the Input Port and Input Label fields and one for the output branch specified by the Output Port and Output Label fields . If set for the input branch ( in front of Input Label field ), it indicates that the connection is very likely to be a point-to-multipoint connection . If zero , it indicates that this connection is very likely to be a point - to-point connection or is unknown . If set for the output branch ( in front of the Output Label field ), it indicates that the connection is very likely to be a multipoint-to-point connection . If zero , it indicates that this connection is very likely to be a point-to-point connection or is unknown . 	231	0
3292	B	B : Bi-directional The Bi-directional flag applies only to the Add Branch message . In all other Connection Management messages it is not used . It may only be used when establishing a point-to-point connection . The Bi-directional flag in an Add Branch message , if set , requests that two unidirectional connections be established , one in the forward direction , and one in the reverse direction . It is equivalent to two Add Branch messages , one specifying the forward direction , and one specifying the reverse direction . The forward direction uses the values of Input Port , Input Label , Output Port and Output Label as specified in the Add Branch message . The reverse direction is derived by exchanging the values specified in the Input Port and Input Label fields , with those of the Output Port and Output Label fields respectively . Thus , a connection in the reverse direction originates at the input port specified by the Output Port field , on the label specified by the Output Label field . It departs from the output port specified by the Input Port field , on the label specified by the Input Label field . 	231	0
3292	R	R : Connection Replace The Connection Replace flag applies only to the Add Branch message and is not used in any other Connection Management messages . The R flag is used in cases when creation of multipoint-to-point connections is undesirable ( e.g ., POTS applications where fan-in is meaningless ). If the R flag is set , the new connection replaces any existing connection if the label is already in use at the same Output Port . 	231	0
3292	R	R : Connection Replace The R flag shall only be checked when the Function field = 1 ( Bring Up ). If the R flag is set in the Port Management request message , it indicates that a switch controller requests the switch port to support the Connection Replace mechanism . 	210	0
3292	U	U : Port Up Bit 0 , ( most significant bit ) D : Port Down Bit 1 , I : Invalid Label Bit 2 , N : New Port Bit 3 , Z : Dead Port Bit 4 , A : Adjacency Event Bit 5 , x : Unused Bits 6-15 . 	240	0
3292	Q	Q : Query If the Query flag is set in a request message , the switch MUST respond with the current range of valid labels . The current label range is not changed by a request message with the Query flag set . If the Query flag is zero , the message is requesting a label change operation . 	210	0
3292	M	M : Multipoint Query If the Multipoint Query flag is set the switch MUST respond with the current range of valid specialized multipoint labels . The current label range is not changed by a request message with the Multipoint Query flag set . 	210	0
3292	D	D : Non-contiguous Label Range Indicator This flag will be set in a Query response if the labels available for assignment belong to a non-contiguous set . 	231	0
3292	V	V : Label The Label flag use is port type specific . 	231	0
3292	C	C : Multipoint Capable Indicates label range that can be used for multipoint connections . 	400	0
3292	V	V : Label If the Label flag is set , the message refers to a range of VPI's only . The Min VCI and Max VCI fields are unused . If the Label flag is zero the message refers to a range of VCI's on either one VPI or on a range of VPI's . 	210	0
3292	V	V : Label The Label flag is not used . 	210	0
3292	Len	Len DLCI bits 0 10 2 23 	302	0
3292	V	V : Label The Label flag is not used . 	210	0
3292	V	V : Valid Record In the success response message the Valid Record flag is used to indicate an invalid Activity Record . The flag MUST be zero if any of the fields in this Activity Record are invalid , if the input port specified by the Input Port field does not exist , or if the specified connection does not exist . If the Valid Record flag is zero in a success response message , the Counter flag , the Activity flag , and the Traffic Count field are undefined . If the Valid Record flag is set , the Activity Record is valid , and the Counter and Activity flags are valid . The Valid Record flag is not used in the request message . 	210	0
3292	C	C : Counter In a success response message , if the Valid Record flag is set , the Counter flag , if zero , indicates that the value in the Traffic Count field is valid . If set , it indicates that the value in the Activity flag is valid . The Counter flag is not used in the request message . 	210	0
3292	A	A : Activity In a success response message , if the Valid Record and Counter flags are set , the Activity flag , if set , indicates that there has been some activity on this connection since the last Connection Activity message for this connection . If zero , it indicates that there has been no activity on this connection since the last Connection Activity message for this connection . The Activity flag is not used in the request message . 	210	0
3292	A	A : All Connections If the All Connections flag is set , the message requests the connection state for all connections that originate at the input port specified by the Input Port field . In this case the Input Label field and the Label flag are unused . 	210	0
3292	V	V : ATM VPI The ATM VPI flag may only be set for ports with PortType=ATM . If the switch receives a Report Connection State message in which the ATM VPI flag set and in which the input port specified by the Input Port field does not have PortType=ATM , the switch MUST return a Failure response " 28 : ATM Virtual Path switching is not supported on non-ATM ports ". 	210	0
3292	A	V : ATM VPI For the first Connection Record in each success response message , the All Connections and the ATM VPI flags MUST be the same as those of the request message . For successive Connection Records in the same success response message , these flags are not used . 	240	0
3292	V	V : ATM VPI For the first Connection Record in each success response message , the All Connections and the ATM VPI flags MUST be the same as those of the request message . For successive Connection Records in the same success response message , these flags are not used . 	301	0
3292	P	P : ATM VPC The ATM VPC flag may only be set for ports with PortType=ATM . The ATM VPC flag , if set and only if set , indicates that the Connection Record refers to an ATM virtual path connection . 	210	0
3292	R	R : Connection Replace flag If set , indicates that connections being established by an Add Branch message with a corresponding R-bit set will replace any previously established connection if a clash between the established output branch and the requested output branch occurs [ see chapter 4.2 ]. 	210	0
3292	x	x : Unused . 	210	0
3292	PortType	PortType 	302	0
3292	S	S : Service Model If set , indicates that Service Model data follows the PortSpecific port configuration data . 	400	0
3292	P	P : VP Switching The ATM VPC flag may only be set for ports with PortType=ATM . The VP Switching flag , if set , indicates that this input port is capable of supporting virtual path switching . Else , if zero , it indicates that this input port is only capable of virtual channel switching . 	210	0
3292	M	M : Multicast Labels The Multicast Labels flag , if set , indicates that this output port is capable of labelling each output branch of a point-to-multipoint tree with a different label . If zero , it indicates that this output port is not able to label each output branch of a point-to-multipoint tree with a different label . 	210	0
3292	L	L : Logical Multicast The Logical Multicast flag , if set , indicates that this output port is capable of supporting more than a single branch from any point-to-multipoint connection . This capability is often referred to as logical multicast . If zero , it indicates that this output port can only support a single output branch from each point-to-multipoint connection . 	210	0
3292	R	R : Label Range The Label Range flag , if set , indicates that this switch port is capable of reallocating its label range and therefore accepts the Label Range message . Else , if zero , it indicates that this port does not accept Label Range messages . 	210	0
3292	Q	Q : QoS The QoS flag , if set , indicates that this switch port is capable of handling the Quality of Service messages defined in section 9 of this specification . Else , if zero , it indicates that this port does not accept the Quality of Service messages . 	210	0
3292	V	V : Label The Label flag is port type specific . 	231	0
3292	C	C : Multipoint Capable This flag indicates that the label range may be used for multipoint connections . 	210	0
3292	Receive Data Rate	Receive Data Rate 	400	0
3292	Transmit Data Rate	Transmit Data Rate 	400	0
3292	V	V : Label If the Label flag is set , the message refers to a range of VPI's only . The Min VCI and Max VCI fields are unused . If the Label flag is zero the message refers to a range of VCI's on either one VPI or on a range of VPI's . 	210	0
3292	Len	Len DLCI bits 0 10 2 23 	302	0
3292	U	U : Usage Parameter Control The Usage Parameter Control sub-field indicates the availability of Usage Parameter Control for the specified Service and Capability Set . 	231	0
3292	D	D : Packet Discard The Packet Discard sub-field indicates the availability of Packet Discard for the specified Service and Capability Set . 	240	0
3292	I	I : Ingress Shaping The Ingress Shaping sub-field indicates the availability of Ingress Traffic Shaping to the Peak Cell Rate and Cell Delay Variation Tolerance for the specified Service and Capability Set . 	231	0
3292	E	E : Egress Shaping , Peak Rate The Egress Shaping , Peak Rate sub-field indicates the availability of Egress Shaping to the Peak Cell Rate and Cell Delay Variation Tolerance for the specified Service and Capability Set . 	231	0
3292	S	S : Egress Traffic Shaping , Sustainable Rate The Egress Shaping , Sustainable Rate sub-field , if set , indicates that Egress Traffic Shaping to the Sustainable Cell Rate and Maximum Burst Size is available for the specified Service and Capability Set . 	231	0
3292	V	V : VC Merge The VC Merge sub-field indicates the availability of ATM Virtual Channel Merge ( i.e ., multipoint to point ATM switching with a traffic control to avoid AAL5 PDU interleaving ) capability for the specified Service and Capability Set . 	231	0
3292	CLR	CLR : Cell Loss Ratio The Cell Loss Ratio parameter indicates the CLR guaranteed by the switch for the specified Service . A cell loss ratio is expressed as an order of magnitude n , where the CLR takes the value of ten raised to the power of - n , i.e ., log(CLR)=-n . The value n is coded as a binary integer , having a range of 1 <= n <= 15 . In addition , the value 0b1111 1111 indicates that no CLR guarantees are given . 	231	0
3292	CTD	CTD : Cell Transfer Delay The CTD value is expressed in units of microseconds . It is coded as a 24-bit integer . 	110	0
3292	CDV	CDV : Peak-to-peak Cell Delay Variation The CDV value is expressed in units of microseconds . It is coded as a 24-bit integer . 	110	0
3292	Traffic Controls	Traffic Controls : - ( U ) Usage Parameter Control - ( I ) Ingress Traffic Shaping to the Peak Cell Rate - ( E ) Egress Traffic Shaping to the Peak Cell Rate and Cell Delay Variation Tolerance - ( D ) Packet Discard 	240	0
3292	Traffic Controls	Traffic Controls : - ( U ) Usage Parameter Control - ( I ) Ingress Traffic Shaping to the Peak Cell Rate - ( E ) Egress Traffic Shaping to the Peak Cell Rate and Cell Delay Variation Tolerance - ( S ) Egress Traffic Shaping to the Sustainable Cell Rate and Maximum Burst Size - ( P ) Packet Discard - ( V ) VC Merge 	240	0
3292	Traffic Controls	Traffic Controls : - ( U ) Usage Parameter Control - ( I ) Ingress Traffic Shaping to the Peak Cell Rate - ( E ) Egress Traffic Shaping to the Peak Cell Rate and Cell Delay Variation Tolerance - ( S ) Egress Traffic Shaping to the Sustainable Cell Rate and Maximum Burst Size - ( P ) Packet Discard - ( V ) VC Merge 	240	0
3292	Traffic Controls	Traffic Controls : - ( U ) Usage Parameter Control - ( I ) Ingress Traffic Shaping to the Peak Cell Rate 	400	0
3292	Traffic Controls	Traffic Controls : - ( U ) Usage Parameter Control - ( I ) Ingress Traffic Shaping to the Peak Cell Rate - ( E ) Egress Traffic Shaping to the Peak Cell Rate and Cell Delay Variation Tolerance - ( V ) VC Merge 	240	0
3292	Traffic Controls	Traffic Controls : None . 	400	0
3292	Traffic Controls	Traffic Controls : None currently defined . 	400	0
3292	Traffic Controls	Traffic Controls : - Usage Parameter Control - Egress Traffic Shaping to the Committed Information Rate and Committed Burst Size 	231	0
3292	Mag	Committed Information Rate = 10^(Mag ) * ( CIR Multiplier ) 	231	0
3292	CIR Multiplier	Committed Information Rate = 10^(Mag ) * ( CIR Multiplier ) 	400	0
3292	Mag	Committed Burst Size = 10^(Mag ) * ( CBS Multiplier ) 	100	0
3292	CBS Multiplier	Committed Burst Size = 10^(Mag ) * ( CBS Multiplier ) 	100	0
3292	Mag	Excess Burst Size = 10^(Mag ) * ( EBS Multiplier ) 	100	0
3292	EBS Multiplier	Excess Burst Size = 10^(Mag ) * ( EBS Multiplier ) 	301	0
3292	U	U : Usage Parameter Control When set , this flag indicates that Usage Parameter Control is requested . 	302	0
3292	D	D : Packet Discard When set , this flag indicates that Packet Discard is requested . 	210	0
3292	I	I : Ingress Shaping When set , this flag indicates the availability of Ingress Traffic Shaping to the Peak Rate and Delay Variation Tolerance is requested . 	301	0
3292	E	E : Egress Shaping , Peak Rate When set , this flag indicates that Egress Shaping to the Peak Rate and Delay Variation Tolerance is requested . 	302	0
3292	S	S : Egress Traffic Shaping , Sustainable Rate When set , this flag indicates that Egress Traffic Shaping to the Sustainable Rate and Maximum Burst Size is requested . 	302	0
3292	V	V : VC Merge When set , this flag indicates that ATM Virtual Channel Merge ( i.e ., multipoint to point ATM switching with a traffic control to avoid AAL5 PDU interleaving ) is requested . 	210	0
3292	P	P : Port When set indicates that traffic block pertains to Ingress Port . 	210	0
3292	x	The controller may set ( to one ) the flag corresponding to the requested Traffic Control if the corresponding Traffic Control has been indicated in the Service Configuration response message ( Section 8.4 ) as available for application to connections that use the requested Capability Set on a per connection basis . ( The requested Capability Set is indicated by the Capability Set ID the least significant byte of the Service Selector field of the Add Branch message .) If the Traffic Control has been indicated in the Service Configuration response message as either not available in the Capability Set or applied to all connections that use the Capability Set then the controller sets the flag to zero and the switch ignores the flag . 	231	0
3292	A	A The Sender Instance in the incoming message matches the value stored from a previous message by the " Update Peer Verifier " operation . 	301	0
3292	B	B The Sender Instance , Sender Port , Sender Name and Partition ID fields in the incoming message match the values stored from a previous message by the " Update Peer Verifier " operation . 	240	0
3292	C	C The Receiver Instance , Receiver Port , Receiver Name and Partition ID fields in the incoming message match the values of the Sender Instance , Sender Port , Sender Name and Partition ID currently sent in outgoing SYN , SYNACK , and ACK messages . 	240	0
3292	C	This document and translations of it may be copied and furnished to others , and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared , copied , published and distributed , in whole or in part , without restriction of any kind , provided that the above copyright notice and this paragraph are included on all such copies and derivative works . However , this document itself may not be modified in any way , such as by removing the copyright notice or references to the Internet Society or other Internet organizations , except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed , or as required to translate it into languages other than English . 	302	0
3301	Rx Minimum BPS	The Rx Minimum BPS , Attribute Type 40 , encodes the lowest acceptable line speed for this call in the receive direction , for these cases where asymmetric transmission is required . 	231	0
3301	Rx Maximum BPS	The Rx Maximum BPS , Attribute Type 41 , encodes the highest acceptable line speed for this call in the receive direction , for these cases where asymmetric transmission is required . 	231	0
3315	T1	All time values for lifetimes , T1 and T2 are unsigned integers . The value 0xffffffff is taken to mean " infinity " when used as a lifetime ( as in RFC2461 [ 17 ]) or a value for T1 or T2 . 	120	0
3315	msg-type	msg-type Identifies the DHCP message type; the available message types are listed in section 5.3 . 	231	0
3315	transaction-id	transaction-id The transaction ID for this message exchange . 	230	0
3315	msg-type	msg-type RELAY-FORW 	301	0
3315	hop-count	hop-count Number of relay agents that have relayed this message . 	230	0
3315	link-address	link-address A global or site-local address that will be used by the server to identify the link on which the client is located . 	230	0
3315	peer-address	peer-address The address of the client or relay agent from which the message to be relayed was received . 	230	0
3315	msg-type	msg-type RELAY-REPL 	400	0
3315	hop-count	hop-count Copied from the Relay-forward message 	202	0
3315	link-address	link-address Copied from the Relay-forward message 	230	0
3315	peer-address	peer-address Copied from the Relay-forward message 	230	0
3315	key ID	key ID The key identifier that identified the key used to generate the HMAC-MD5 value . 	230	0
3315	protocol	protocol 3 	240	0
3315	algorithm	algorithm 1 	302	0
3315	RDM	RDM 0 	210	0
3315	Type	Type Type of data in Value field carried in this option : 	400	0
3315	IA_NA-options	IA_NA-options Options associated with this IA_NA . 	400	0
3315	IA_TA-options	IA_TA-options Options associated with this IA_TA . 	400	0
3315	IPv6 address	preferred-lifetime The preferred lifetime for the IPv6 address in the option , expressed in units of seconds . 	230	0
3315	pref-value	pref-value The preference value for the server in this message . 	230	0
3315	elapsed-time	elapsed-time The amount of time since the client began its current DHCP transaction . This time is expressed in hundredths of a second ( 10^-2 seconds ). 	120	0
3315	protocol	protocol The authentication protocol used in this authentication option 	231	0
3315	algorithm	algorithm The algorithm used in the authentication protocol 	231	0
3315	RDM	RDM The replay detection method used in this authentication option 	400	0
3315	server-address	server-address The IP address to which the client should send messages delivered using unicast . 	230	0
3315	status-code	status-code The numeric code for the status encoded in this option . The status codes are defined in section 24.4 . 	231	0
3315	enterprise-number	enterprise-number The vendor's registered Enterprise Number as registered with IANA [ 6 ]. 	231	0
3315	enterprise-number	enterprise-number The vendor's registered Enterprise Number as registered with IANA [ 6 ]. 	231	0
3315	msg-type	msg-type 5 for Renew message , 11 for Information-request message . 	240	0
3315	OPTION_CLIENTID	OPTION_CLIENTID 1 	302	0
3315	OPTION_SERVERID	OPTION_SERVERID 2 	240	0
3315	OPTION_IA_NA	OPTION_IA_NA 3 	240	0
3315	OPTION_IA_TA	OPTION_IA_TA 4 	240	0
3315	OPTION_IAADDR	OPTION_IAADDR 5 	302	0
3315	OPTION_ORO	OPTION_ORO 6 	240	0
3315	OPTION_PREFERENCE	OPTION_PREFERENCE 7 	240	0
3315	OPTION_ELAPSED_TIME	OPTION_ELAPSED_TIME 8 	240	0
3315	OPTION_RELAY_MSG	OPTION_RELAY_MSG 9 	240	0
3315	OPTION_AUTH	OPTION_AUTH 11 	302	0
3315	OPTION_UNICAST	OPTION_UNICAST 12 	302	0
3315	OPTION_STATUS_CODE	OPTION_STATUS_CODE 13 	302	0
3315	OPTION_RAPID_COMMIT	OPTION_RAPID_COMMIT 14 	302	0
3315	OPTION_USER_CLASS	OPTION_USER_CLASS 15 	302	0
3315	OPTION_VENDOR_CLASS	OPTION_VENDOR_CLASS 16 	240	0
3315	OPTION_VENDOR_OPTS	OPTION_VENDOR_OPTS 17 	240	0
3315	OPTION_INTERFACE_ID	OPTION_INTERFACE_ID 18 	202	0
3315	OPTION_RECONF_MSG	OPTION_RECONF_MSG 19 	240	0
3315	OPTION_RECONF_ACCEPT	OPTION_RECONF_ACCEPT 20 	240	0
3331	Interface Identifier	Interface Identifier - The Interface Identifier identifies the physical interface at the SG for which the signalling messages are sent/received . The format of the Interface Identifier parameter can be text or integer , the values of which are assigned according to network operator policy . The values used are of local significance only , coordinated between the SG and ASP . 	230	0
3331	Message Class	0 Management ( MGMT ) Message [ IUA/M2UA/M3UA/SUA ] 1 Transfer Messages [ M3UA ] 2 SS7 Signalling Network Management ( SSNM ) Messages [ M3UA/SUA ] 3 ASP State Maintenance ( ASPSM ) Messages [ IUA/M2UA/M3UA/SUA ] 4 ASP Traffic Maintenance ( ASPTM ) Messages [ IUA/M2UA/M3UA/SUA ] 5 Q.921/Q.931 Boundary Primitives Transport ( QPTM ) Messages [ IUA ] 6 MTP2 User Adaptation ( MAUP ) Messages [ M2UA ] 7 Connectionless Messages [ SUA ] 8 Connection-Oriented Messages [ SUA ] 9 Routing Key Management ( RKM ) Messages ( M3UA ) 10 Interface Identifier Management ( IIM ) Messages ( M2UA ) 11 to 127 Reserved by the IETF 128 to 255 Reserved for IETF-Defined Message Class extensions 	240	0
3331	Parameter Tag	The Type field is a 16 bit identifier of the type of parameter . It takes a value of 0 to 65534 . The common parameters used by the adaptation layers are in the range of 0x00 to 0xff . The M2UA specific parameters have Tags in the range 0x300 to 0x3ff . 	231	0
3331	Parameter Length	The Parameter Length field contains the size of the parameter in bytes , including the Parameter Tag , Parameter Length , and Parameter Value fields . Thus , a parameter with a zero-length Parameter Value field would have a Length field of 4 . The Parameter Length does not include any padding bytes . 	100	0
3331	Parameter Value	The Parameter Value field contains the actual information to be transferred in the parameter . 	230	0
3331	Protocol Data	Protocol Data ( mandatory ) Correlation Id ( optional ) 	400	0
3331	Correlation Id	Protocol Data ( mandatory ) Correlation Id ( optional ) 	400	0
3331	Correlation Id	Correlation Id Mandatory 	231	0
3331	State	State ( mandatory ) 	302	0
3331	State	The valid values for State are shown in the following table . The value of the State field SHOULD reflect the value received in the State Request message . 	231	0
3331	Event	Event ( mandatory ) 	302	0
3331	Congestion Status	Congestion Status ( mandatory ) Discard Status ( optional ) 	302	0
3331	Discard Status	Congestion Status ( mandatory ) Discard Status ( optional ) 	302	0
3331	Action	Action ( mandatory ) Sequence Number ( optional ) 	302	0
3331	Sequence Number	Action ( mandatory ) Sequence Number ( optional ) 	200	0
3331	Action	Action ( mandatory ) Result ( mandatory ) Sequence Number ( optional ) 	302	0
3331	Result	Action ( mandatory ) Result ( mandatory ) Sequence Number ( optional ) 	302	0
3331	Sequence Number	Action ( mandatory ) Result ( mandatory ) Sequence Number ( optional ) 	302	0
3331	Heartbeat Data	Heartbeat Data Optional 	400	0
3331	Heartbeat Data	Heartbeat Data Optional 	400	0
3331	Traffic Mode Type	Traffic Mode Type ( optional ) Interface Identifier ( optional ) - Combination of integer and integer ranges , OR - string ( text formatted ) INFO String ( optional ) 	231	0
3331	Interface Identifier	Traffic Mode Type ( optional ) Interface Identifier ( optional ) - Combination of integer and integer ranges , OR - string ( text formatted ) INFO String ( optional ) 	231	0
3331	Traffic Mode Type	Traffic Mode Type ( optional ) Interface Identifier ( optional ) - Combination of integer and integer ranges , OR - string ( text formatted ) INFO String ( optional ) 	231	0
3331	Interface Identifier	Traffic Mode Type ( optional ) Interface Identifier ( optional ) - Combination of integer and integer ranges , OR - string ( text formatted ) INFO String ( optional ) 	231	0
3331	Signalling Data Terminal Identifier	The Signalling Data Terminal Identifier parameter is mandatory . It identifies the Signalling Data Terminal associated with the SS7 link for which the ASP is registering . The format is as follows : 	400	0
3331	Signalling Data Link Identifier	The Signalling Data Link Identifier parameter is mandatory . It identifies the Signalling Data Link Identifier associated with the SS7 link for which the ASP is registering . The format is as follows : 	400	0
3331	Registration Status	The Registration Result Status field indicates the success or the reason for failure of a registration request . 	302	0
3331	Interface Identifier	The Interface Identifier field contains the Interface Identifier for the associated Link Key if the registration is successful . It is set to " 0 " if the registration was not successful . The format of integer-based and text-based Interface Identifier parameters are shown in Section 3.2 . 	210	0
3331	Interface Identifier	Interface Identifier ( mandatory ) 	231	0
3331	Interface Identifier	The Interface Identifier parameter contains a Interface Identifier indexing the Application Server traffic that the sending ASP is currently registered to receive from the SGP but now wishes to de-register . The format of integer-based and text-based Interface Identifier parameters are shown in Section 3.2 . 	400	0
3331	Interface Identifier	The Interface Identifier field contains the Interface Identifier value of the matching Link Key to de-register , as found in the DEREG REQ . The format of integer-based and text-based Interface Identifier parameters are shown in Section 3.2 . 	230	0
3332	Network Appearance	Network Appearance - The Network Appearance is a M3UA local reference shared by SG and AS ( typically an integer ) that together with an Signaling Point Code uniquely identifies an SS7 node by indicating the specific SS7 network it belongs to . It can be used to distinguish between signalling traffic associated with different networks being sent between the SG and the ASP over a common SCTP association . An example scenario is where an SG appears as an element in multiple separate national SS7 networks and the same Signaling Point Code value may be reused in different networks . 	230	0
3332	Routing Context	Routing Context - A value that uniquely identifies a Routing Key . Routing Context values are either configured using a configuration management interface , or by using the routing key management procedures defined in this document . 	230	0
3332	Message Class	Message Class : 8 bits ( unsigned integer ) 	231	0
3332	Message Type	The following list contains the message types for the defined messages . 	231	0
3332	Parameter Tag	The Tag field is a 16-bit identifier of the type of parameter . It takes a value of 0 to 65534 . Common parameters used by adaptation layers are in the range of 0x00 to 0x3f . M3UA-specific parameters have Tags in the range 0x0200 to 0x02ff . The parameter Tags defined are as follows : 	231	0
3332	Network Appearance	Network Appearance 0x0200 Reserved 0x0201 Reserved 0x0202 Reserved 0x0203 User/Cause 0x0204 Congestion Indications 0x0205 Concerned Destination 0x0206 Routing Key 0x0207 Registration Result 0x0208 Deregistration Result 0x0209 Local_Routing Key Identifier 0x020a Destination Point Code 0x020b Service Indicators 0x020c Reserved 0x020d Originating Point Code List 0x020e Circuit Range 0x020f Protocol Data 0x0210 Reserved 0x0211 Registration Status 0x0212 Deregistration Status 0x0213 	240	0
3332	Parameter Length	The Parameter Length field contains the size of the parameter in bytes , including the Parameter Tag , Parameter Length , and Parameter Value fields . Thus , a parameter with a zero-length Parameter Value field would have a Length field of 4 . The Parameter Length does not include any padding bytes . 	100	0
3332	Parameter Value	The Parameter Value field contains the actual information to be transferred in the parameter . 	230	0
3332	Network Appearance	Network Appearance Optional Routing Context Optional Protocol Data Mandatory Correlation Id Optional 	400	0
3332	Network Appearance	The Network Appearance parameter identifies the SS7 network context for the message and implicitly identifies the SS7 Point Code format used , the SS7 Network Indicator value , and the MTP3 and possibly the MTP3-User protocol type/variant/version used within the specific SS7 network . Where an SG operates in the context of a single SS7 network , or individual SCTP associations are dedicated to each SS7 network context , the Network Appearance parameter is not required . In other cases the parameter may be configured to be present for the use of the receiver . 	231	0
3332	Routing Context	The Routing Context parameter contains the Routing Context value associated with the DATA message . Where a Routing Key has not been coordinated between the SGP and ASP , sending of Routing Context is not required . Where multiple Routing Keys and Routing Contexts are used across a common association , the Routing Context MUST be sent to identify the traffic flow , assisting in the internal distribution of Data messages . 	400	0
3332	Protocol Data	The Protocol Data parameter contains the original SS7 MTP3 message , including the Service Information Octet and Routing Label . 	231	0
3332	Destination Point Code	Destination Point Code , Originating Point Code , 	231	0
3332	Originating Point Code	Destination Point Code , Originating Point Code , 	231	0
3332	SLS	Signalling Link Selection Code ( SLS ). 	231	0
3332	Originating Point Code	Originating Point Code : 32 bits ( unsigned integer ) Destination Point Code : 32 bits ( unsigned integer ) 	231	0
3332	User Protocol Data	The User Protocol Data field contains a byte string of MTP-User information from the original SS7 message starting with the first byte of the original SS7 message following the Routing Label . 	400	0
3332	Correlation Id	The Correlation Id parameter uniquely identifies the MSU carried in the Protocol Data within an AS . This Correlation Id parameter is assigned by the sending M3UA . 	231	0
3332	Network Appearance	Network Appearance Optional Routing Context Optional Affected Point Code Mandatory INFO String Optional 	240	0
3332	Network Appearance	Network Appearance : 32-bit unsigned integer 	100	0
3332	Routing Context	The optional Routing Context parameter contains the Routing Context values associated with the DUNA message . Where a Routing Key has not been coordinated between the SGP and ASP , sending of 	400	0
3332	Mask	The Mask field can be used to identify a contiguous range of Affected Destination Point Codes . Identifying a contiguous range of Affected DPCs may be useful when reception of an MTP3 management message or a linkset event simultaneously affects the availability status of a series of destinations at an SG . 	400	0
3332	INFO String	The optional INFO String parameter can carry any meaningful UTF-8 [ 10 ] character string along with the message . Length of the INFO String parameter is from 0 to 255 octets . No procedures are presently identified for its use but the INFO String MAY be used for debugging purposes . 	231	0
3332	Network Appearance	Network Appearance Optional Routing Context Optional Affected Point Code Mandatory INFO String Optional 	240	0
3332	Network Appearance	Network Appearance Optional Routing Context Optional Affected Point Code Mandatory INFO String Optional 	240	0
3332	Network Appearance	Network Appearance Optional Routing Context Optional Affected Point Code Mandatory Concerned Destination Optional Congestion Indications Optional INFO String Optional 	240	0
3332	Network Appearance	Network Appearance Optional Routing Context Optional Affected Point Code Mandatory User/Cause Mandatory INFO String Optional 	400	0
3332	Network Appearance	Network Appearance Optional Routing Context Optional Affected Point Code Mandatory INFO String Optional 	240	0
3332	ASP Identifier	ASP Identifier Optional INFO String Optional 	231	0
3332	ASP Identifier	The optional ASP Identifier parameter contains a unique value that is locally significant among the ASPs that support an AS . The SGP should save the ASP Identifier to be used , if necessary , with the Notify message ( see Section 3.8.2 ). 	303	0
3332	INFO String	INFO String ( optional ) 	231	0
3332	INFO String	INFO String Optional 	400	0
3332	INFO String	INFO String Optional 	400	0
3332	Heartbeat Data	Heartbeat Data Optional 	400	0
3332	Traffic Mode Type	The optional Traffic Mode Type parameter identifies the traffic mode of operation of the ASP(s ) within an Application Server . The format of the Traffic Mode Type Identifier is as follows : 	240	0
3332	SI	The optional SI [ 7,8 ] field contains one or more Service Indicators from the values as described in the MTP3-User Identity field of the DUPU message . The absence of the SI parameter in the Routing Key indicates the use of any SI value , excluding of course MTP management . Where an SI parameter does not contain a multiple of four SIs , the parameter is padded out to 32-byte alignment . 	231	0
3332	Registration Status	The Registration Result Status field indicates the success or the reason for failure of a registration request . 	302	0
3332	Routing Context	The Routing Context field contains the Routing Context value for the associated Routing Key if the registration was successful . It is set to " 0 " if the registration was not successful . 	210	0
3332	Routing Context	Routing Context Mandatory 	202	0
3332	Routing Context	The Routing Context parameter contains ( a list of ) integers indexing the Application Server traffic that the sending ASP is currently registered to receive from the SGP but now wishes to deregister . 	400	0
3332	Routing Context	The Routing Context field contains the Routing Context value of the matching Routing Key to deregister , as found in the DEREG REQ message . 	230	0
3332	Deregistration Status	The Deregistration Result Status field indicates the success or the reason for failure of the deregistration . 	302	0
3332	Traffic Mode Type	Traffic Mode Type Optional Routing Context Optional INFO String Optional 	240	0
3332	Traffic Mode Type	The Traffic Mode Type parameter identifies the traffic mode of operation of the ASP within an AS . The valid values for Traffic Mode Type are shown in the following table : 	231	0
3332	Routing Context	The optional Routing Context parameter contains ( a list of ) integers indexing the Application Server traffic that the sending ASP is configured/registered to receive . 	400	0
3332	Traffic Mode Type	Traffic Mode Type Optional Routing Context Optional INFO String Optional 	240	0
3332	Routing Context	Routing Context Optional INFO String Optional 	400	0
3332	Routing Context	Routing Context Optional INFO String Optional 	400	0
3332	Error Code	Error Code Mandatory Routing Context Mandatory* Network Appearance Mandatory* Affected Point Code Mandatory* Diagnostic Information Optional 	240	0
3332	Error Code	The Error Code parameter indicates the reason for the Error Message . The Error parameter value can be one of the following values : 	231	0
3332	Diagnostic Information	When included , the optional Diagnostic information can be any information germane to the error condition , to assist in identification of the error condition . The Diagnostic information SHOULD contain the offending message . 	400	0
3332	Status Type	The Status Type parameter identifies the type of the Notify message . The following are the valid Status Type values : 	231	0
3332	Status Information	The Status Information parameter contains more detailed information for the notification , based on the value of the Status Type . If the Status Type is AS-State_Change the following Status Information values are used : 	400	0
3332	Routing Context	Routing Context(s ). The ASP SHOULD NOT send Data or SSNM messages for the related Routing Context(s ) before receiving an ASP Active Ack message , or it will risk message loss . 	303	0
3344	Home Agent	A router on a mobile node's home network which tunnels datagrams for delivery to the mobile node when it is away from home , and maintains current location information for the mobile node . 	230	0
3344	Care-of Address	The termination point of a tunnel toward a mobile node , for datagrams forwarded to the mobile node while it is away from home . The protocol can use two different types of care-of address : a " foreign agent care-of address " is an address of a foreign agent with which the mobile node is registered , and a " co-located care-of address " is an externally obtained local address which the mobile node has associated with one of its own network interfaces . 	230	0
3344	Home Address	An IP address that is assigned for an extended period of time to a mobile node . It remains unchanged regardless of where the node is attached to the Internet . 	230	0
3344	SPI	An index identifying a security context between a pair of nodes among the contexts available in the Mobility Security Association . SPI values 0 through 255 are reserved and MUST NOT be used in any Mobility Security Association . 	303	0
3344	Type	Type Indicates the particular type of Extension . 	231	0
3344	Length	Length Indicates the length ( in bytes ) of the data field within this Extension . The length does NOT include the Type and Length bytes . 	100	0
3344	Type	Type is the type , which describes a collection of extensions having a common data type . 	231	0
3344	Length	Length indicates the length ( in bytes ) of the data field within this Extension . It does NOT include the Type , Length and Sub-Type bytes . 	100	0
3344	Type	Type is the type , which describes a collection of extensions having a common data type . 	231	0
3344	Length	Length 8-bit unsigned integer . Length of the extension , in bytes , excluding the extension Type and the extension Length fields . This field MUST be set to 1 plus the total length of the data field . 	100	0
3344	Lifetime	The maximum length of time that the Advertisement is considered valid in the absence of further Advertisements . 	100	0
3344	Num Addrs	The number of Router Addresses advertised in this message . Note that in an Agent Advertisement message , the number of router addresses specified in the ICMP Router Advertisement portion of the message MAY be set to 0 . See Section 2.3.1 for details . 	202	0
3344	Type	Type 16 	240	0
3344	Length	Length ( 6 + 4*N ), where 6 accounts for the number of bytes in the Sequence Number , Registration Lifetime , flags , and reserved fields , and N is the number of care-of addresses advertised . 	100	0
3344	Sequence Number	The count of Agent Advertisement messages sent since the agent was initialized ( Section 2.3.2 ). 	201	0
3344	Registration Lifetime	The longest lifetime ( measured in seconds ) that this agent is willing to accept in any Registration Request . A value of 0xffff indicates infinity . This field has no relation to the " Lifetime " field within the ICMP Router Advertisement portion of the Agent Advertisement . 	100	0
3344	R	R Registration required . Registration with this foreign agent ( or another foreign agent on this link ) is required even when using a co-located care-of address . 	302	0
3344	B	B Busy . The foreign agent will not accept registrations from additional mobile nodes . 	302	0
3344	H	H Home agent . This agent offers service as a home agent on the link on which this Agent Advertisement message is sent . 	230	0
3344	F	F Foreign agent . This agent offers service as a foreign agent on the link on which this Agent Advertisement message is sent . 	230	0
3344	M	M Minimal encapsulation . This agent implements receiving tunneled datagrams that use minimal encapsulation [ 34 ]. 	400	0
3344	G	G GRE encapsulation . This agent implements receiving tunneled datagrams that use GRE encapsulation [ 16 ]. 	400	0
3344	r	r Sent as zero; ignored on reception . SHOULD NOT be allocated for any other uses . 	500	0
3344	T	T Foreign agent supports reverse tunneling [ 27 ]. 	231	0
3344	Care-of Address	The advertised foreign agent care-of address(es ) provided by this foreign agent . An Agent Advertisement MUST include at least one care-of address if the ' F ' bit is set . The number of care-of addresses present is determined by the Length field in the Extension . 	230	0
3344	Type	Type 19 ( Prefix-Lengths Extension ) 	100	0
3344	Length	Length N , where N is the value ( possibly zero ) of the Num Addrs field in the ICMP Router Advertisement portion of the Agent Advertisement . 	100	0
3344	Prefix Length	The number of leading bits that define the network number of the corresponding Router Address listed in the ICMP Router Advertisement portion of the message . The prefix length for each Router Address is encoded as a separate byte , in the order that the Router Addresses are listed in the ICMP Router Advertisement portion of the message . 	230	0
3344	Type	Type 1 ( Registration Request ) 	231	0
3344	S	S Simultaneous bindings . If the ' S ' bit is set , the mobile node is requesting that the home agent retain its prior mobility bindings , as described in Section 3.6.1.2 . 	210	0
3344	B	B Broadcast datagrams . If the ' B ' bit is set , the mobile node requests that the home agent tunnel to it any broadcast datagrams that it receives on the home network , as described in Section 4.3 . 	210	0
3344	D	D Decapsulation by mobile node . If the ' D ' bit is set , the mobile node will itself decapsulate datagrams which are sent to the care-of address . That is , the mobile node is using a co-located care-of address . 	301	0
3344	M	M Minimal encapsulation . If the ' M ' bit is set , the mobile node requests that its home agent use minimal encapsulation [ 34 ] for datagrams tunneled to the mobile node . 	400	0
3344	G	G GRE encapsulation . If the ' G ' bit is set , the mobile node requests that its home agent use GRE encapsulation [ 16 ] for datagrams tunneled to the mobile node . 	400	0
3344	r	r Sent as zero; ignored on reception . SHOULD NOT be allocated for any other uses . 	500	0
3344	T	T Reverse Tunneling requested; see [ 27 ]. 	302	0
3344	x	x Sent as zero; ignored on reception . 	500	0
3344	Lifetime	The number of seconds remaining before the registration is considered expired . A value of zero indicates a request for deregistration . A value of 0xffff indicates infinity . 	120	0
3344	Home Address	Home Address 	230	0
3344	Home Agent	Home Agent 	230	0
3344	Care-of Address	Care-of Address 	230	0
3344	Identification	A 64-bit number , constructed by the mobile node , used for matching Registration Requests with Registration Replies , and for protecting against replay attacks of registration messages . See Sections 5.4 and 5.7 . 	400	0
3344	Type	Type 3 ( Registration Reply ) 	231	0
3344	Code	Code A value indicating the result of the Registration Request . See below for a list of currently defined Code values . 	231	0
3344	Lifetime	If the Code field indicates that the registration was accepted , the Lifetime field is set to the number of seconds remaining before the registration is considered expired . A value of zero indicates that the mobile node has been deregistered . A value of 0xffff indicates infinity . If the Code field indicates that the registration was denied , the contents of the Lifetime field are unspecified and MUST be ignored on reception . 	210	0
3344	Home Address	Home Address 	230	0
3344	Home Agent	Home Agent 	230	0
3344	Identification	A 64-bit number used for matching Registration Requests with Registration Replies , and for protecting against replay attacks of registration messages . The value is 	231	0
3344	Type	Type 32 	240	0
3344	Length	Length 4 plus the number of bytes in the Authenticator . 	100	0
3344	SPI	SPI Security Parameter Index ( 4 bytes ). An opaque identifier ( see Section 1.6 ). 	230	0
3344	Type	Type 33 	240	0
3344	Length	Length 4 plus the number of bytes in the Authenticator . 	100	0
3344	SPI	SPI Security Parameter Index ( 4 bytes ). An opaque identifier ( see Section 1.6 ). 	230	0
3344	Type	Type 34 	240	0
3344	Length	Length 4 plus the number of bytes in the Authenticator . 	100	0
3344	SPI	SPI Security Parameter Index ( 4 bytes ). An opaque identifier ( see Section 1.6 ). 	230	0
3344	Code	In this case , the Lifetime field in the Registration Reply will contain the maximum Lifetime value which that foreign agent is willing to accept in any Registration Request . The mobile node MAY attempt to register with this same agent , using a Lifetime in the Registration Request that MUST be less than or equal to the value specified in the Reply . 	230	0
3344	Code	In this case , the Identification field in the Registration Reply will contain a value that allows the mobile node to synchronize with the home agent , based upon the style of replay protection in effect ( Section 5.7 ). The mobile node MUST adjust the parameters it uses to compute the Identification field based upon the information in the Registration Reply , before issuing any future Registration Requests . 	230	0
3344	Code	This code is returned by a home agent when the mobile node is performing dynamic home agent address resolution as described in Sections 3.6.1.1 and 3.6.1.2 . In this case , the Home Agent field within the Reply will contain the unicast IP address of the home agent returning the Reply . The mobile node MAY then attempt to register with this home agent in future Registration Requests . In addition , the mobile node SHOULD adjust the parameters it uses to compute the Identification field based upon the corresponding field in the Registration Reply , before issuing any future Registration Requests . 	230	0
3422	C	Copyright ( C ) The Internet Society ( 2002 ). All Rights Reserved . 	303	0
3422	C	This document and translations of it may be copied and furnished to others , and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared , copied , published and distributed , in whole or in part , without restriction of any kind , provided that the above copyright notice and this paragraph are included on all such copies and derivative works . However , this document itself may not be modified in any way , such as by removing the copyright notice or references to the Internet Society or other Internet organizations , except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed , or as required to translate it into languages other than English . 	303	0
3423	Data Sequence Number	An accounting Data Record level sequence number , which is attached to all data messages to facilitate reliable and in-sequence delivery . 	200	0
3423	Version	The Version field indicates the supported CRANE protocol implementation . This field MUST be set to 1 to indicate the CRANE protocol Version 1.0 . CRANE protocol Version 1.0 only supports Ipv4 addressing; however , it can be used to transfer information related to Ipv6 flows . 	220	0
3423	Session ID	The Session ID field identifies the session with which the message is associated . The session ID is ignored in the case of GET SESS and GET SESS RSP messages . More details about session can be found in Section 2.9 . 	202	0
3423	Message Flags	The Message Flags field can be used to identify options associated with the message . For CRANE Version 1.0 , all the flags are reserved; unless otherwise specified , the flags are set to zero on transmit and are ignored on receipt . 	500	0
3423	Message Length	The Message Length field is the total length of the CRANE message in octet including the header . 	100	0
3423	Description	The Flow Start message is sent from a CRANE server to a CRANE client to indicate that the CRANE server is ready to receive CRANE messages . 	201	0
3423	Description	The Flow Start Acknowledge message is sent by a CRANE client to acknowledge the reception of a START message from a specific CRANE server . It is sent only to that server to indicate that the client considers it ready to receive CRANE messages . 	201	0
3423	Client Boot Time	The Client Boot Time field is the timestamp of the last client startup in seconds from 1970 . This field can be combined with the DSN and the client's IP address to serve as a system wide unique record identifier . 	121	0
3423	Description	The Flow Stop message is sent from a CRANE server to a CRANE client to instruct it to stop sending data ( to that server ). The STOP message does not disconnect the server; it only stops the CRANE client from sending " DATA " messages . 	201	0
3423	Description	The Flow Stop Acknowledgement message acknowledges the STOP message issued by a CRANE server . 	231	0
3423	Description	The CONNECT message is sent from a CRANE server to a CRANE client to identify itself . The message MUST be the first message sent over a transport layer connection between the server and the client . 	230	0
3423	Server Address	Server Address : 32 bit unsigned integer 	230	0
3423	Server Port	The Server Port field is the server's port number for the transport layer ( the port number specified here doesn't necessarily have to match the port number used by the transport layer ) 	231	0
3423	Description	A CRANE client sends the Template Data message to a CRANE server after a START or a START NEGOTIATE message was received from the server . The message MUST contain all the templates that are going to be used for the session . It SHOULD also include the template for the status records ( See section 2.8 ) 	400	0
3423	Config . ID	The Configuration ID field identifies the version number associated with a template set . Changes to any of the templates would result in a new template version , and the version number would be incremented by one . An implementation SHOULD handle rollovers of the version number . 	220	0
3423	Flags	Flags : 8 bit unsigned char 	231	0
3423	Number of Templates	The Number of Templates field is the number of Templates ( a template is described by a Template Block ) specified by the message . 	231	0
3423	Template Block	The Template Block field is of variable length and aligned to 32 bit boundary . It is the specification of a template . 	400	0
3423	Template ID	Template ID : 16 bit unsigned integer 	231	0
3423	Number of Keys	The Number of Keys field is the number of keys included in the template . 	231	0
3423	Template Flags	The Template Flags field is composed of flags that indicate different attributes of the template . In CRANE Version 1.0 , only the ' T ' bit is defined , other bits in the field SHOULD be set to zero by the sender and ignored by the receiver . 	201	0
3423	Description Length	The Description Length field is the length of the Description field . If no description is supplied , the length MUST be 0 . 	100	0
3423	Template Block Length	The Template Block Length is the length of the template block in octets . 	100	0
3423	Description	The Description field contains the text description of the template ( e.g ., " Aggregated by interface and ToS bits "). It is a variable length field of up to 64Kb long , and padded with 0 to the next 32 bit boundary . 	400	0
3423	Key Block	Key Block 	302	0
3423	Key ID	The Key ID field identifies the key within a template . See section 2.4 for more details . 	231	0
3423	Key Type ID	Key Type ID : 16 bit unsigned integer 	231	0
3423	Key Attribute Vector	The Key Attribute Vector field indicates different attributes of the key . In CRANE Version 1 , only the ' K ' bit is defined , other bits in the field SHOULD be set to zero by the sender and ignored by the receiver . 	210	0
3423	Description	The Template Data Acknowledge message is sent from a CRANE server to a CRANE client after a TMPL DATA message has been received . It proposes changes of the templates and/or key status changes ( enable/disable ) for the templates . 	301	0
3423	Config . ID	See Section 4.6 . The value MUST be identical to the Config . ID field of the acknowledged TMPL DATA message . 	231	0
3423	Number of Template Changes	The Number of Template Changes field is the number of changed Templates ( a changed template is described by a Template Change Block ) specified by the message . 	231	0
3423	Template Change Block	Template Change Block 	301	0
3423	Template ID	Template ID : 16 bit unsigned integer 	231	0
3423	Number of Keys	Number of Keys : 16 bit unsigned integer 	100	0
3423	Key Block	Key Block 	302	0
3423	Description	The Final Template Data message is sent by a CRANE client to all the CRANE servers in a session , to convey the finalize templates . It is similar to the TMPL DATA message , with the only difference that a server must accept the templates in this message . 	301	0
3423	Description	The CRANE server acknowledges reception of the TMPL DATA or FINAL TMPL DATA by sending a Final Template Data Acknowledge message . It does not carry any changes to the templates . Unlike TMPL DATA ACK messages , a FINAL TMPL DATA ACK message indicates the acceptance of the templates for the session . A server MAY respond with this message to a TMPL DATA ( if it does not want any changes in the templates ). A server MUST respond with this message to a FINAL TMPL DATA . 	301	0
3423	Description	The Get Sessions message is sent by a CRANE server to a CRANE client to query what are the sessions it should participate . This is typically done just before a UI configuration of the CRANE client's templates . As each session has its own set of templates , there is a need to know the server's participation of all the sessions . 	201	0
3423	Request ID	The Request ID field identifies the specific request issued by the server . The same Request ID MUST be placed in the responding message in order to associate it with the request . 	231	0
3423	Description	The Get Sessions Response message is sent by a CRANE client to a CRANE server as a reply to a GET SESS request . The message MUST contain all the information related to any session with which the requesting server is associated . 	230	0
3423	Request ID	Request ID : 16 bit unsigned integer 	231	0
3423	Number of Sessions	The Number of Sessions field is the number of session blocks in the message . 	202	0
3423	Vendor String Length	The Vendor String Length field is the length of Vendor String field in octet . The field limits vendor strings to 64Kb long . If no such string is supplied , the length MUST be set to 0 . 	100	0
3423	Vendor String	The Vendor String field is a variable length field . It identifies the vendor that created the session . It MUST be padded with 0 to the next 32 bit boundary . The information differentiates similar templates from different vendors . The actual format of the information is application specific and outside the scope of this document . 	231	0
3423	Session Block	Session Block 	400	0
3423	Session ID	Session ID : 8 bit unsigned char 	202	0
3423	Session Name Length	The Session Name Length field is the length of the Session Name field . The field limits the session name strings to 64 Kb long . As a name is mandatory to differentiate between sessions , this field MUST NOT be 0 . 	100	0
3423	Session Description Length	The Session Description Length field is the length of a session description . The field limits the session description to 64Kb long . If no such Description is supplied , the length MUST be set to 0 . 	100	0
3423	Session Name	The Session Name field is the name for a session , which MAY be displayed to end-users . It MUST be padded with 0 to the next 32 bit boundary . Session Name MUST be unique within a CRANE client . This field is mandatory and MUST be a part of any Session Block . 	230	0
3423	Session Description	The Session Description field is the text description of a session; it could be displayed to end-users . It MUST be padded with 0 to the next 32 bit boundary . 	302	0
3423	Description	The Get Templates message is sent by a CRANE server to a CRANE client to query templates in a session . 	301	0
3423	Request ID	Request ID : 16 bit unsigned integer 	231	0
3423	Description	The Get Templates Response message is sent by a CRANE client to a CRANE server as a response to a GET TMPL message . The message SHOULD contain all templates available for the specific session . 	301	0
3423	Request ID	Request ID : 16 bit unsigned integer 	231	0
3423	Number of Templates	Number of Templates : 16 bit unsigned integer 	100	0
3423	Template Block	Same as the template block defined in the TMPL DATA message ( see Section 4.6 ). However , Extended Key Blocks MUST be used instead of Key Blocks . Extended key Block field provides extensive informational data that MAY be displayed to end-users . 	400	0
3423	Key ID	Key ID : 32 bit unsigned integer 	231	0
3423	Key Type ID	Key Type ID : 16 bit unsigned integer 	231	0
3423	Key Name Length	The Key Name Length field is the length of the Key Name field . The field limits Key Name strings to 64 Kb long . As a name is mandatory to a key , this field MUST NOT be 0 . 	100	0
3423	Key Label Length	The Key Label Length field is the length of the Key Label field . The field limits Key Label strings to 64 Kb long . Length of 0 means that the Label field is to be skipped . 	100	0
3423	Key Help Length	The Key Help Length field is the length of the Key Help field . The field limits Key Help strings to 64 Kb long . Length of 0 means that the Help field is to be skipped . 	100	0
3423	Key Name	The Key Name field is the name for the key , which could be displayed to end users . It MUST be padded with 0 to the next 32 bit boundary . Key Name MUST be unique ( within the template ) and case sensitive . This field is mandatory and MUST be a part of any Extended Key Block . 	231	0
3423	Key Label	The Key Label field is a descriptive label , which could be displayed to end users concerning this key . It MUST be padded with 0 to the next 32 bit boundary . This field SHOULD be a part of any Extended Key Block . 	230	0
3423	Key Help	The Key Help field is any Help string that could be displayed to end users concerning this key . It MUST be padded with 0 to the next 32 bit boundary . This field MAY be a part of any Extended Key Block . 	231	0
3423	Key Attribute Vector	Key Attribute Vector : 32 bit unsigned integer 	231	0
3423	Description	The Start Negotiation message is sent by a CRANE server after the configuration process has completed . The message should initiate template negotiation by the client with all CRANE servers in a session . The CRANE server MAY re-send this message up to 3 times with repeat interval of 5 seconds unless it is acknowledged by the CRANE client . Otherwise , the CRANE user will be informed . The client should send TMPL DATA message to the servers after acknowledged the message . 	301	0
3423	Description	The Start Negotiation Acknowledge message MUST be sent by a CRANE client to the server to acknowledge the reception of the START NEGOTIATE message . 	121	0
3423	Description	The DATA message carries actual data records from a CRANE client to a CRANE server . A data record is a structured collection of fields that matches a specific template . 	400	0
3423	Template ID	Template ID : 16 bit unsigned integer 	231	0
3423	Flags	The Flags field is composed of flag bits that indicate processing requirements of the data records . The CRANE Version 1 defined two flags for these purposes . Unless otherwise specified , the other flags are set to zero on transmit and are ignored on receipt . 	231	0
3423	Data Sequence Number	The Data Sequence Number field is the record sequence number used for preserving data orders and detecting data losses . The DSN MUST be incremented by one for each new record transmitted . The selection of the initial DSN number is implementation specific . 	200	0
3423	Record Data	The Record Data field carries the actual accounting/billing data that is structured according to the template identified by the Template ID field . 	400	0
3423	Description	The Data Acknowledgement message is sent from a CRANE server to acknowledge receipt of records . It acknowledges the maximal in - sequence DSN received . 	110	0
3423	Data Sequence Number	See Section 4.16 . It MUST be DSN of the last in-sequence record that was received by the server . 	200	0
3423	Description	The Error message MAY be issued by either a CRANE server or client . It indicates an error condition that was detected by the sender . 	302	0
3423	Timestamp	The Timestamp field is a timestamp in seconds since 00:00:00 GMT , January 1 , 1970 . 	121	0
3423	Error Code	Error Code : 16 bit unsigned integer 	231	0
3423	Description Length	The Description Length field is the length of the Description field . The field limits Description strings to 64 Kb long . Length of 0 means that the Description field is to be skipped . 	100	0
3423	Description	The Description field is a text description that allows the sender to provide more detailed information about the error condition . It MUST be padded with 0 to the next 32 bit boundary . 	301	0
3423	Description	CRANE servers MAY inquire general operation status of a client by sending the Status Request message . The status information SHOULD include a collection of states , counters , accumulators of the data collection functions that reside with the client . The status MAY include more information about the CRANE client itself . 	230	0
3423	Description	The Status Response message contains a status report that MUST be compatible with the status template of the session . It is client's response to a STATUS REQ message from a server . 	301	0
3423	Template ID	Template ID : 16 bit unsigned integer 	231	0
3423	Record Length	The Record Length field is the length of the Record Data field in octets . 	100	0
3423	Record Data	The Record Data field contains the status data that complies with the status template . For more details see section 2.4 	400	0
3423	Server Boot Time	The Server Boot Time field is the timestamp of the last server startup in seconds from 1970 . 	121	0
3423	' C '	The ' C ', ' R ', ' A ', ' N ' fields are ASCII encoded characters to identify the CRANE server . 	210	0
3423	' R '	The ' C ', ' R ', ' A ', ' N ' fields are ASCII encoded characters to identify the CRANE server . 	210	0
3423	' A '	The ' C ', ' R ', ' A ', ' N ' fields are ASCII encoded characters to identify the CRANE server . 	210	0
3423	Additional Protocols Count	The Additional Protocols Count field specifies the number of additional protocols supported by the client . In the case that only the default protocol is supported , the field MUST be set to 0 . 	302	0
3423	Transport Type	Transport Type : 32 bit unsigned integer 	231	0
3423	Protocol Version	Version number of the CRANE protocol supported over the specific transport layer , the current version is 1 . 	220	0
3423	Port Number	Port Number : 16 bit unsigned integer 	231	0
3450	Sender Current Time	This field represents the current clock of the sender at the time this packet was transmitted , measured in units of 1ms and computed modulo 2^32 units from the start of the session . 	121	0
3450	FEC Payload ID	The length and format of the FEC Payload ID depends on the FEC Encoding ID as described in the FEC building block [ 10 ]. The FEC Payload ID format is determined by the FEC Encoding ID that MUST be communicated in the Session Description . The Session Description MAY specify that more than one FEC Encoding ID is used in the session , in which case the Session Description MUST contain a mapping that identifies which Codepoint values correspond to which FEC Encoding IDs . This mapping , if used , is outside the scope of this document . 	200	0
3450	Source Block Number	The Source Block Number identifies from which source block of the object the encoding symbol(s ) in the payload are generated . These blocks are numbered consecutively from 	230	0
3450	Encoding Symbol ID	The Encoding Symbol ID identifies which specific encoding symbol(s ) generated from the source block are carried in the packet payload . The exact details of the correspondence between Encoding Symbol IDs and the encoding symbol(s ) in the packet payload are dependent on the particular encoding algorithm used as identified by the FEC Encoding ID and by the FEC Instance ID . 	231	0
3450	HEL	The length of the whole Header Extension field , expressed in multiples of 32-bit words . This field MUST be present for variable-length extensions ( HET between 0 and 127 ) and MUST NOT be present for fixed-length extensions ( HET between 128 and 255 ). 	100	0
3451	C	Copyright ( C ) The Internet Society ( 2002 ). All Rights Reserved . 	303	0
3451	V	Indicates the LCT version number . The LCT version number for this specification is 1 . 	220	0
3451	C	C=0 indicates the Congestion Control Information ( CCI ) field is 32-bits in length . C=1 indicates the CCI field is 64-bits in length . C=2 indicates the CCI field is 96-bits in length . C=3 indicates the CCI field is 128-bits in length . 	240	0
3451	r	Reserved for future use . A sender MUST set these bits to zero and a receiver MUST ignore these bits . 	500	0
3451	S	This is the number of full 32-bit words in the TSI field . The TSI field is 32*S + 16*H bits in length , i.e . the length is either 0 bits , 16 bits , 32 bits , or 48 bits . 	231	0
3451	O	This is the number of full 32-bit words in the TOI field . The TOI field is 32*O + 16*H bits in length , i.e ., the length is either 0 bits , 16 bits , 32 bits , 48 bits , 64 bits , 80 bits , 96 bits , or 112 bits . 	231	0
3451	T	T = 0 indicates that the Sender Current Time ( SCT ) field is not present . T = 1 indicates that the SCT field is present . The SCT is inserted by senders to indicate to receivers how long the session has been in progress . 	210	0
3451	R	R = 0 indicates that the Expected Residual Time ( ERT ) field is not present . R = 1 indicates that the ERT field is present . The ERT is inserted by senders to indicate to receivers how much longer the session / object transmission will continue . 	210	0
3451	A	Normally , A is set to 0 . The sender MAY set A to 1 when termination of transmission of packets for the session is imminent . A MAY be set to 1 in just the last packet transmitted for the session , or A MAY be set to 1 in the last few seconds of packets transmitted for the session . Once the sender sets A to 1 in one packet , the sender SHOULD set A to 1 in all subsequent packets until termination of transmission of 	210	0
3451	B	Normally , B is set to 0 . The sender MAY set B to 1 when termination of transmission of packets for an object is imminent . If the TOI field is in use and B is set to 1 then termination of transmission for the object identified by the TOI field is imminent . If the TOI field is not in use and B is set to 1 then termination of transmission for the one object in the session identified by out-of-band information is imminent . B MAY be set to 1 in just the last packet transmitted for the object , or B MAY be set to 1 in the last few seconds packets transmitted for the object . Once the sender sets B to 1 in one packet for a particular object , the sender SHOULD set B to 1 in all subsequent packets for the object until termination of transmission of packets for the object . A received packet with B set to 1 indicates to a receiver that the sender will immediately stop sending packets for the object . When a receiver receives a packet with B set to 1 then it SHOULD assume that no more packets will be sent for the object to the session . 	210	0
3451	HDR_LEN	Total length of the LCT header in units of 32-bit words . The length of the LCT header MUST be a multiple of 32-bits . This field can be used to directly access the portion of the packet beyond the LCT header , i.e ., to the first other header if it exists , or to the packet payload if it exists and there is no other header , or to the end of the packet if there are no other headers or packet payload . 	100	0
3451	HEL	The length of the whole Header Extension field , expressed in multiples of 32-bit words . This field MUST be present for variable-length extensions ( HET between 0 and 127 ) and MUST NOT be present for fixed-length extensions ( HET between 128 and 255 ). 	100	0
3451	C	This document and translations of it may be copied and furnished to others , and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared , copied , published and distributed , in whole or in part , without restriction of any kind , provided that the above copyright notice and this paragraph are included on all such copies and derivative works . However , this document itself may not be modified in any way , such as by removing the copyright notice or references to the Internet Society or other Internet organizations , except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed , or as required to translate it into languages other than English . 	302	0
3471	Value	Value Type ----- ---- 1 Packet 2 Ethernet 3 ANSI/ETSI PDH 4 Reserved 5 SDH ITU-T G.707 / SONET ANSI T1.105 6 Reserved 7 Digital Wrapper 8 Lambda ( photonic ) 9 Fiber 10 Reserved 11 FiberChannel 	240	0
3471	Switching Type	Indicates the type of switching that should be performed on a particular link . This field is needed for links that advertise more than one type of switching capability . This field should map to one of the values advertised for the corresponding link in the routing Switching Capability Descriptor , see [ GMPLS - RTG ]. 	231	0
3471	Value	Value Type ----- ---- 1 Packet-Switch Capable-1 ( PSC-1 ) 2 Packet-Switch Capable-2 ( PSC-2 ) 3 Packet-Switch Capable-3 ( PSC-3 ) 4 Packet-Switch Capable-4 ( PSC-4 ) 51 Layer-2 Switch Capable ( L2SC ) 100 Time-Division-Multiplex Capable ( TDM ) 150 Lambda-Switch Capable ( LSC ) 200 Fiber-Switch Capable ( FSC ) 	240	0
3471	Label	Carries label information . The interpretation of this field depends on the type of the link over which the label is used . 	400	0
3471	Label	Indicates port/fiber or lambda to be used , from the perspective of the sender of the object/TLV . Values used in this field only have significance between two neighbors , and the receiver may need to convert the received value into a value that has local significance . Values may be configured or dynamically determined using a protocol such as [ LMP ]. 	301	0
3471	Start Label	Indicates the channel identifier of the lowest value wavelength making up the waveband , from the object/TLV sender's perspective . 	231	0
3471	End Label	Indicates the channel identifier of the highest value wavelength making up the waveband , from the object/TLV sender's perspective . 	231	0
3471	Action	Action : 8 bits 	400	0
3471	Reserved	This field is reserved . It MUST be set to zero on transmission and MUST be ignored on receipt . 	500	0
3471	Label Type	Indicates the type and format of the labels carried in the object/TLV . Values are signaling protocol specific . 	231	0
3471	Label	This field identifies the label to be used . The format of this field is identical to the one used by the Label field in Generalized Label , see Section 3.2.1 . 	400	0
3471	S	Secondary ( S ): 1 bit 	210	0
3471	Reserved	This field is reserved . It MUST be set to zero on transmission and MUST be ignored on receipt . These bits SHOULD be pass through unmodified by transit nodes . 	500	0
3471	Link Flags	Indicates desired link protection type . As previously mentioned , protection capabilities of a link may be advertised in routing . A value of 0 implies that any , including no , link protection may be used . More than one bit may be set to indicate when multiple protection types are acceptable . When multiple bits are set and multiple protection types are available , the choice of protection type is a local ( policy ) decision . 	302	0
3471	R	When set , indicates that the edge node SHOULD reflect the object/TLV back in the appropriate message . This bit MUST NOT be set in state change request , i.e ., Notify , messages . 	210	0
3471	Reserved	This field is reserved . It MUST be set to zero on transmission and MUST be ignored on receipt . These bits SHOULD be pass through unmodified by transit nodes . 	500	0
3471	T	When set , indicates that the local actions related to the " testing " mode should be taken . 	302	0
3471	A	When set , indicates that the local actions related to the " administratively down " state should be taken . 	302	0
3471	D	When set , indicates that that the local actions related to LSP teardown should be taken . Edge nodes may use this flag to control connection teardown . 	302	0
3471	Length	Indicates the total length of the TLV , i.e ., 4 + the length of the value field in octets . A value field whose length is not a multiple of four MUST be zero-padded so that the TLV is four - octet aligned . 	100	0
3471	Type	Type : 16 bits 	400	0
3471	IP Address	The IP address field may carry either an IP address of a link or an IP address associated with the router , where associated address is the value carried in a router address TLV of routing . 	230	0
3471	Interface ID	Interface ID : 32 bits 	230	0
3471	Switching Type	Switching Type - valid value range is 1-255 . This document defines values 1-4 , 100 , 150 and 200 . 	231	0
3471	Action	Action - valid value range is 0-255 . This document defines values 0-3 . 	110	0
3472	Label Type	Indicates the type and format of the labels carried in the TLV . Values match the TLV type of the appropriate Label TLV . 	231	0
3472	U	See [ RFC3471 ] for a description of L , U and Label parameters . 	231	0
3473	Label Type	Indicates the type and format of the labels carried in the object . Values match the C-Type of the appropriate RSVP_LABEL object . Only the low order 8 bits are used in this field . 	231	0
3473	IPv4 Notify Node Address	The IP address of the node that should be notified when generating an error message . 	230	0
3473	IPv6 Notify Node Address	The IP address of the node that should be notified when generating an error message . 	230	0
3473	U	See [ RFC3471 ] for a description of L , U and Label parameters . 	231	0
3473	Type	Type 	240	0
3473	Length	The Length contains the total length of the subobject in bytes , including the Type and Length fields . The Length is always divisible by 4 . 	100	0
3473	C-Type	The C-Type of the included Label Object . Copied from the Label Object . 	231	0
3473	Type	Type 	240	0
3473	Length	Length 	100	0
3473	Flags	Flags 	202	0
3473	C-Type	The C-Type of the included Label Object . Copied from the Label Object . 	231	0
3473	Restart Time	Restart Time is measured in milliseconds . Restart Time SHOULD be set to the sum of the time it takes the sender of the object to restart its RSVP-TE component ( to the point where it can exchange RSVP Hello with its neighbors ) and the communication channel that is used for RSVP communication . A value of 0xffffffff indicates that the restart of the sender's control plane may occur over an indeterminate interval and that the operation of its data plane is unaffected by control plane failures . The method used to ensure continued data plane operation is outside the scope of this document . 	122	0
3473	Recovery Time	The period of time , in milliseconds , that the sender desires for the recipient to re-synchronize RSVP and MPLS forwarding state with the sender after the re-establishment of Hello synchronization . A value of zero ( 0 ) indicates that MPLS forwarding state was not preserved across a particular reboot . 	120	0
3475	Message ID	Message ID : Is as defined in RFC3036 [ 4 ]. 	202	0
3475	Source ID TLV	Source ID TLV : Is as defined in UNI 1.0 [ 6 ] and in [ 7 ]. 	400	0
3475	Dest ID TLV	Dest ID TLV : Is as defined in UNI 1.0 [ 6 ] and in [ 7 ]. 	302	0
3475	Call ID TLV	Call ID TLV : Is as defined in section 4.1 of this document . 	230	0
3475	Call Capability TLV	Call Capability TLV : Is as defined in section 4.2 of this document . 	231	0
3475	Local Identifier	Local Identifier : A 64-bit identifier that remains constant over the life of the call . 	230	0
3475	IS	International Segment ( IS ): To be coded according to ITU-T recommendation T.50 . The International Segment ( IS ) field provides a 3 character ISO 3166 Geographic/Political Country Code . The country code is based on the three-character uppercase alphabetic ISO 3166 Country Code ( e.g ., USA , FRA ). 	231	0
3475	NS	National Segment ( NS ): The National Segment ( NS ) field consists of two sub-fields : 	400	0
3479	C	Copyright ( C ) The Internet Society ( 2003 ). All Rights Reserved . 	303	0
3479	R	R : FT Reconnect Flag . Set to 1 if the sending LSR has preserved state and resources for all FT-labels since the previous LDP session between the same LDP peers , and is otherwise set to 0 . See section 5.4 , " FT Procedures After TCP Failure ", for details of how this flag is used . 	210	0
3479	S	S : Save State Flag . Set to 1 if the use of the FT Protection TLV is supported on messages other than the KeepAlive message used for check-pointing ( see the C bit ). I.e ., the S bit indicates that some label on the session may be a Sequence Numbered FT Label . 	210	0
3479	A	A : All-Label Protection Required Set to 1 if all labels on the session MUST be treated as Sequence Numbered FT Labels . This removes from a node the option of 	302	0
3479	C	C : Check-Pointing Flag . Set to 1 to indicate that the check-Pointing procedures in this document are in use . 	210	0
3479	L	L : Learn From Network Flag . Set to 1 if the Fault Recovery procedures of [ RFC3478 ] are to be used to re-learn state from the network . 	240	0
3479	C	It is not valid for both the L and either the S or C bits to be set to 1 . 	210	0
3479	S	S A C L Comments ========================= 0 x 0 0 Invalid 0 0 0 1 See [ RFC3478 ] 0 1 0 1 Invalid 0 x 1 0 Check-Pointing of all labels 0 x 1 1 Invalid 1 0 0 0 Full FT on selected labels 1 1 0 0 Full FT on all labels 1 x 0 1 Invalid 1 x 1 0 Same as ( S=1,A=x,C=0,L=0 ) 1 x 1 1 Invalid . 	240	0
3479	1	( 4 ) A check-Point request from P1 . It carries the sequence number of the check-point request . 	240	0
3479	1	( 4 ) A check-point request from P1 . It carries the sequence number of the check-point request and a Cork TLV . 	240	0
3479	C	This document and translations of it may be copied and furnished to others , and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared , copied , published and distributed , in whole or in part , without restriction of any kind , provided that the above copyright notice and this paragraph are included on all such copies and derivative works . However , this document itself may not be modified in any way , such as by removing the copyright notice or references to the Internet Society or other Internet organizations , except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed , or as required to translate it into languages other than English . 	302	0
3496	Reserved	Reserved : 29 bits This field is reserved . It must be set to zero on transmission and must be ignored on receipt . 	500	0
3496	SC	SC : 3 bits Indicates the ATM Service Class . Values currently allowed are : 0 : UBR ( Unspecified Bit Rate ) 1 : VBR-NRT ( Variable Bit Rate , Non-Real Time ) 2 : VBR-RT ( Variable Bit Rate , Real Time ) 3 : CBR ( Constant Bit Rate ) 4-7 : reserved 	240	0
3497	PT	Payload Type ( PT ): 7 bits A dynamically allocated payload type field that designates the payload as SMPTE 292M . 	400	0
3497	M	Marker bit ( M ): 1 bit The Marker bit denotes the end of a video frame , and is set to 1 for the last packet of the video frame and is otherwise set to 0 for all other packets . 	210	0
3497	F	F : 1 bit The F bit as defined in the SMPTE 292M timing signals ( see Table 1 ). F=1 identifies field 2 and F=0 identifies field 1 . 	210	0
3497	V	V : 1 bit The V bit as defined in the SMPTE 292M timing signals ( see Table 1 ). V=1 during field blanking , and V=0 else where . 	210	0
3497	Z	Z : 2 bits SHOULD be set to zero by the sender and MUST be ignored by receivers . 	500	0
3518	C	Copyright ( C ) The Internet Society ( 2003 ). All Rights Reserved . 	303	0
3518	Pads	Any PPP frame may have padding inserted in the " Optional Data Link Layer Padding " field . This number tells the receiving system how many pad octets to strip off . 	200	0
3518	MAC Type	Up-to-date values of the MAC Type field are specified in the most recent " Assigned Numbers " RFC [ 4 ]. Current values are assigned as follows : 	231	0
3518	Frame Control	On 802.4 , 802.5 , and FDDI LANs , there are a few octets preceding the Destination MAC Address , one of which is protected by the FCS . 	400	0
3518	Destination MAC Address	Destination MAC Address 	230	0
3518	Source MAC Address	Source MAC Address 	230	0
3518	Frame FCS	Mentioned primarily for clarity . The FCS used on the PPP link is separate from and unrelated to the LAN FCS . 	231	0
3518	Pads	Any PPP frame may have padding inserted in the " Optional Data Link Layer Padding " field . This number tells the receiving system how many pad octets to strip off . 	200	0
3518	MAC Type	Up-to-date values of the MAC Type field are specified in the most recent " Assigned Numbers " RFC [ 4 ]. Current values are assigned as follows : 	231	0
3518	Frame Control	On 802.4 , 802.5 , and FDDI LANs , there are a few octets preceding the Destination MAC Address , one of which is protected by the FCS . 	400	0
3518	Destination MAC Address	Destination MAC Address 	230	0
3518	Source MAC Address	Source MAC Address 	230	0
3518	Pri	Pri 	302	0
3518	C	Canonical flag as defined by IEEE 802.1Q . It must be set if RIF data is present in the LLC data . 	231	0
3518	VLAN ID	VLAN ID 	202	0
3518	Frame FCS	Mentioned primarily for clarity . The FCS used on the PPP link is separate from and unrelated to the LAN FCS . 	231	0
3518	Type	Type 	240	0
3518	Length	Length 	100	0
3518	LAN Segment Number	A 12-bit number identifying the LAN segment , as defined in the IEEE 802.1D Source Routing Specification . 	231	0
3518	Type	Type 	240	0
3518	Length	Length 	100	0
3518	LAN Segment Number	A 12-bit number identifying the LAN segment , as defined in the IEEE 802.1D Source Routing Specification . 	231	0
3518	Type	Type 	240	0
3518	Length	Length 	100	0
3518	MAC Type	One of the values of the PDU MAC Type field ( previously described in the " Bridged LAN Traffic " section ) that this system is prepared to receive and service . 	231	0
3518	Type	Type 	240	0
3518	Length	Length 	100	0
3518	Type	Type 	240	0
3518	Length	Length 	100	0
3518	Type	Type 	240	0
3518	Length	2 octets plus 1 additional octet for each protocol that will be actively supported . Most systems will only support a single spanning tree protocol , resulting in a length of 3 . 	100	0
3518	Type	Type 	240	0
3518	Length	Length 	100	0
3518	Type	Type 	240	0
3518	Length	Length 	100	0
3518	Type	Type 	240	0
3518	Length	Length 	100	0
3518	Spanning Tree Protocol	Up-to-date values of the Spanning-Tree-Protocol field are specified in the most recent " Assigned Numbers " RFC [ 4 ]. Current values are assigned as follows : 	231	0
3518	C	This document and translations of it may be copied and furnished to others , and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared , copied , published and distributed , in whole or in part , without restriction of any kind , provided that the above copyright notice and this paragraph are included on all such copies and derivative works . However , this document itself may not be modified in any way , such as by removing the copyright notice or references to the Internet Society or other Internet organizations , except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed , or as required to translate it into languages other than English . 	302	0
3519	Type	Type 144 	220	0
3519	Length	Length 6 . Length in bytes of this extension , not including the Type and Length bytes . 	100	0
3519	Sub-Type	Sub-Type 0 	231	0
3519	Reserved	Reserved 1 Reserved for future use . MUST be set to 0 on sending , MUST be ignored on reception . 	500	0
3519	F	F F ( Force ) flag . Indicates that the mobile node wants to force MIP UDP tunnelling to be established . 	210	0
3519	R	R R ( Registration through FA Required ) flag . Indicates that the R bit was set in the FA's Agent Advertisement . Registration is being made using a co-located care-of address , but through the FA . 	231	0
3519	Reserved	Reserved 2 Reserved for future use . MUST be set to 0 on sending , MUST be ignored on reception . 	500	0
3519	Encapsulation	Encapsulation Indicates the type of tunnelled data , using the same numbering as the IP Header Protocol Field . 	231	0
3519	Reserved	Reserved 3 Reserved for future use . MUST be set to 0 on sending , MUST be verified as 0 on receipt; otherwise the extension must be handled as not understood and silently skipped . 	500	0
3519	Type	Type 44 	240	0
3519	Length	Length 6 . Length in bytes of this extension , not including the Type and Length bytes . 	100	0
3519	Sub-Type	Sub-Type 0 	231	0
3519	Reply Code	Reply Code Indicates whether the HA assents or declines to use UDP tunnelling for the current mobility binding . See Section 3.2.1 below . 	302	0
3519	F	F F ( Forced ) flag . Indicates that tunnelling is being forced because the F flag was set in the tunnelling request , irrespective of the detection of a NAT or not . 	210	0
3519	Keepalive Interval	Keepalive Interval Specifies the NAT keepalive interval that the mobile node SHOULD use . A keepalive packet SHOULD be sent if Keepalive Interval seconds have elapsed without any signalling or data traffic being sent . If this field is set to 0 , the mobile node MUST use its default configured keepalive interval . 	121	0
3519	Reserved	Reserved Reserved for future use . MUST be set to 0 on sending , MUST be ignored on reception . 	500	0
3519	Type	Type 4 	240	0
3519	Next Header	Next Header Indicates the type of tunnelled data , using the same numbering as the IP Header Protocol Field . 	231	0
3519	Reserved	Reserved Reserved for future use . MUST be set to 0 on sending , MUST be ignored on reception . 	500	0
3519	U	U UDP Tunnelling support . This Agent supports MIP UDP Tunnelling as specified in this document . This flag SHOULD be set in advertisements sent by a foreign agent which supports MIP UDP tunnelling and is situated behind a NAT . It MUST NOT be set in advertisements from foreign agents which are not situated behind a NAT , and thus has no need to advertise the capability . 	231	0
3543	X	X The mobility agent supports Registration Revocation 	400	0
3543	Type	Type 137 	220	0
3543	Type	Type 7 	240	0
3543	A	A Agent bit (' direction ' bit ). 	231	0
3543	I	I Inform bit . 	231	0
3543	Type	Type 15 	240	0
3543	I	I Inform bit . 	231	0
3545	C	Copyright ( C ) The Internet Society ( 2003 ). All Rights Reserved . 	303	0
3545	C	This document and translations of it may be copied and furnished to others , and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared , copied , published and distributed , in whole or in part , without restriction of any kind , provided that the above copyright notice and this paragraph are included on all such copies and derivative works . However , this document itself may not be modified in any way , such as by removing the copyright notice or references to the Internet Society or other Internet organizations , except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed , or as required to translate it into languages other than English . 	302	0
3547	KEK Attributes	The following attributes may be present in a SAK Payload . The attributes must follow the format defined in ISAKMP [ RFC2408 ] section 3.3 . In the table , attributes that are defined as TV are marked as Basic ( B ); attributes that are defined as TLV are marked as Variable ( V ). 	400	0
3547	Key Packet Attributes	o Key Packet Attributes ( variable length ) -- Contains Key information . The format of this field is specific to the value of the KD Type field . The following sections describe the format of each KD Type . 	400	0
3549	Length	Length : 32 bits The length of the message in bytes , including the header . 	100	0
3549	Type	Type : 16 bits This field describes the message content . It can be one of the standard message types : NLMSG_NOOP Message is ignored . NLMSG_ERROR The message signals an error and the payload contains a nlmsgerr structure . This can be looked at as a NACK and typically it is from FEC to CPC . NLMSG_DONE Message terminates a multipart message . 	240	0
3549	Flags	Flags : 16 bits The standard flag bits used in Netlink are NLM_F_REQUEST Must be set on all request messages ( typically from user space to kernel space ) NLM_F_MULTI Indicates the message is part of a multipart message terminated by NLMSG_DONE NLM_F_ACK Request for an acknowledgment on success . Typical direction of request is from user space ( CPC ) to kernel space ( FEC ). NLM_F_ECHO Echo this request . Typical direction of request is from user space ( CPC ) to kernel space ( FEC ). 	240	0
3549	Sequence Number	Sequence Number : 32 bits The sequence number of the message . 	202	0
3549	Error code	An error code of zero indicates that the message is an ACK response . An ACK response message contains the original Netlink message header , which can be used to compare against ( sent sequence numbers , etc ). 	301	0
3549	Family	Family : 8 bits This is always set to AF_UNSPEC . 	302	0
3549	Device Type	Device Type : 16 bits This defines the type of the link . The link could be Ethernet , a tunnel , etc . We are interested only in IPv4 , although the link type is L3 protocol-independent . 	231	0
3549	Interface Index	Interface Index : 32 bits Uniquely identifies interface . 	231	0
3549	Device Flags	IFF_UP Interface is administratively up . IFF_BROADCAST Valid broadcast address set . IFF_DEBUG Internal debugging flag . IFF_LOOPBACK Interface is a loopback interface . IFF_POINTOPOINT Interface is a point-to-point link . IFF_RUNNING Interface is operationally up . IFF_NOARP No ARP protocol needed for this interface . IFF_PROMISC Interface is in promiscuous mode . IFF_NOTRAILERS Avoid use of trailers . IFF_ALLMULTI Receive all multicast packets . IFF_MASTER Master of a load balancing bundle . IFF_SLAVE Slave of a load balancing bundle . IFF_MULTICAST Supports multicast . 	240	0
3549	Change Mask	Change Mask : 32 bits Reserved for future use . Must be set to 0xFFFFFFFF . 	303	0
3549	Family	Family : 8 bits Address Family : AF_INET for IPv4; and AF_INET6 for IPV6 . 	240	0
3549	Length	Length : 8 bits The length of the address mask . 	100	0
3549	Flags	Flags : 8 bits IFA_F_SECONDARY For secondary address ( alias interface ). 	231	0
3549	Family	Family : 8 bits Address Family : AF_INET for IPv4; and AF_INET6 for IPV6 . 	240	0
3549	Src length	Src length : 8 bits Prefix length of source IP address . 	100	0
3549	Dest length	Dest length : 8 bits Prefix length of destination IP address . 	100	0
3549	TOS	TOS : 8 bits The 8-bit TOS ( should be deprecated to make room for DSCP ). Table ID : 8 bits Table identifier . Up to 255 route tables are supported . RT_TABLE_UNSPEC An unspecified routing table . RT_TABLE_DEFAULT The default table . RT_TABLE_MAIN The main table . RT_TABLE_LOCAL The local table . 	240	0
3549	Protocol	Protocol : 8 bits Identifies what/who added the route . Protocol Route origin . .............................................. RTPROT_UNSPEC Unknown . RTPROT_REDIRECT By an ICMP redirect . RTPROT_KERNEL By the kernel . RTPROT_BOOT During bootup . RTPROT_STATIC By the administrator . 	240	0
3549	Scope	Scope : 8 bits Route scope ( valid distance to destination ). RT_SCOPE_UNIVERSE Global route . RT_SCOPE_SITE Interior route in the local autonomous system . RT_SCOPE_LINK Route on this link . RT_SCOPE_HOST Route on the local host . RT_SCOPE_NOWHERE Destination does not exist . 	240	0
3549	Type	Type : 8 bits The type of route . 	231	0
3549	Flags	Flags : 32 bits Further qualify the route . RTM_F_NOTIFY If the route changes , notify the user . RTM_F_CLONED Route is cloned from another route . RTM_F_EQUALIZE Allow randomization of next hop path in multi-path routing ( currently not implemented ). 	240	0
3549	Family	Family : 8 bits Address Family : AF_INET for IPv4; and AF_INET6 for IPV6 . 	240	0
3549	Interface Index	Interface Index : 32 bits The unique interface index . 	231	0
3549	State	State : 16 bits A bitmask of the following states : NUD_INCOMPLETE Still attempting to resolve . NUD_REACHABLE A confirmed working cache entry NUD_STALE an expired cache entry . NUD_DELAY Neighbor no longer reachable . Traffic sent , waiting for confirmation . NUD_PROBE A cache entry that is currently being re-solicited . NUD_FAILED An invalid cache entry . NUD_NOARP A device which does not do neighbor discovery ( ARP ). NUD_PERMANENT A static entry . Flags : 8 bits NTF_PROXY A proxy ARP entry . NTF_ROUTER An IPv6 router . 	240	0
3549	Family	Family : 8 bits Address Family : AF_INET for IPv4; and AF_INET6 for IPV6 . 	240	0
3549	Interface Index	Interface Index : 32 bits The unique interface index . 	231	0
3549	Parent Qdisc	Parent Qdisc : 32 bits Used in hierarchical layering of queuing disciplines . If this value and the Qdisc handle are the same and equal to TC_H_ROOT , then the defined qdisc is the top most layer known as the root qdisc . 	231	0
3549	TCM Info	TCM Info : 32 bits Set by the FE to 1 typically , except when the Qdisc instance is in use , in which case it is set to imply a reference count . From the CPC towards the direction of the FEC , this is typically set to 0 	301	0
3549	Mode	Mode : 8 bits Control information on the packet to be sent to the CPC . The different types are : 	400	0
3549	Range	Range : 32 bits If IPQ_COPY_PACKET , this defines the maximum length to copy . 	100	0
3549	Packet ID	Packet ID : 32 bits The unique packet identifier as passed to the CPC by the FEC . 	230	0
3549	Mark	Mark : 32 bits The internal metadata value set to describe the rule in which the packet was picked . 	230	0
3549	timestamp_m	timestamp_m : 32 bits Packet arrival time ( seconds ) 	121	0
3549	timestamp_u	timestamp_u : 32 bits Packet arrival time ( useconds in addition to the seconds in timestamp_m ) 	121	0
3549	hook	hook : 32 bits The firewall module from which the packet was picked . 	400	0
3549	indev_name	indev_name : 128 bits ASCII name of incoming interface . 	230	0
3549	hw_protocol	hw_protocol : 16 bits Hardware protocol , in network order . 	231	0
3549	hw_type	hw_type : 16 bits Hardware type . 	231	0
3549	hw_addrlen	hw_addrlen : 8 bits Hardware address length . 	230	0
3549	hw_addr	hw_addr : 64 bits Hardware address . 	230	0
3549	data_len	data_len : 32 bits Length of packet data . 	100	0
3549	Value	This is the verdict to be imposed on the packet still sitting in the FEC . Verdicts could be : 	240	0
3549	Packet ID	Packet ID : 32 bits The packet identifier as passed to the CPC by the FEC . 	230	0
3549	Data Length	Data Length : 32 bits The data length of the modified packet ( in bytes ). If you don't modify the packet just set it to 0 . 	100	0
3550	SSRC	Synchronization source ( SSRC ): The source of a stream of RTP packets , identified by a 32-bit numeric SSRC identifier carried in the RTP header so as not to be dependent upon the network address . All packets from a synchronization source form part of the same timing and sequence number space , so a receiver groups packets by synchronization source for playback . Examples of synchronization sources include the sender of a stream of packets derived from a signal source such as a microphone or a camera , or an RTP mixer ( see below ). A synchronization source may change its data format , e.g ., audio encoding , over time . The SSRC identifier is a randomly chosen value meant to be globally unique within a particular RTP session ( see Section 8 ). A participant need not use the same SSRC identifier for all the RTP sessions in a multimedia session; the binding of the SSRC identifiers is provided through RTCP ( see Section 6.5.1 ). If a participant generates multiple streams in one RTP session , for example from separate video cameras , each MUST be identified as a different SSRC . 	230	0
3550	CSRC	Contributing source ( CSRC ): A source of a stream of RTP packets that has contributed to the combined stream produced by an RTP mixer ( see below ). The mixer inserts a list of the SSRC identifiers of the sources that contributed to the generation of a particular packet into the RTP header of that packet . This list is called the CSRC list . An example application is audio conferencing where a mixer indicates all the talkers whose speech 	230	0
3550	V	version ( V ): 2 bits This field identifies the version of RTP . The version defined by this specification is two ( 2 ). ( The value 1 is used by the first draft version of RTP and the value 0 is used by the protocol initially implemented in the " vat " audio tool .) 	220	0
3550	P	padding ( P ): 1 bit If the padding bit is set , the packet contains one or more additional padding octets at the end which are not part of the payload . The last octet of the padding contains a count of how many padding octets should be ignored , including itself . Padding may be needed by some encryption algorithms with fixed block sizes or for carrying several RTP packets in a lower-layer protocol data unit . 	231	0
3550	X	extension ( X ): 1 bit If the extension bit is set , the fixed header MUST be followed by exactly one header extension , with a format defined in Section 5.3.1 . 	210	0
3550	CC	CSRC count ( CC ): 4 bits The CSRC count contains the number of CSRC identifiers that follow the fixed header . 	231	0
3550	M	marker ( M ): 1 bit The interpretation of the marker is defined by a profile . It is intended to allow significant events such as frame boundaries to be marked in the packet stream . A profile MAY define additional marker bits or specify that there is no marker bit by changing the number of bits in the payload type field ( see Section 5.3 ). 	210	0
3550	PT	payload type ( PT ): 7 bits This field identifies the format of the RTP payload and determines its interpretation by the application . A profile MAY specify a default static mapping of payload type codes to payload formats . Additional payload type codes MAY be defined dynamically through non-RTP means ( see Section 3 ). A set of default mappings for audio and video is specified in the companion RFC 3551 [ 1 ]. An RTP source MAY change the payload type during a session , but this field SHOULD NOT be used for multiplexing separate media streams ( see Section 5.2 ). 	231	0
3550	sequence number	sequence number : 16 bits The sequence number increments by one for each RTP data packet sent , and may be used by the receiver to detect packet loss and to restore packet sequence . The initial value of the sequence number SHOULD be random ( unpredictable ) to make known-plaintext attacks on encryption more difficult , even if the source itself does not encrypt according to the method in Section 9.1 , because the packets may flow through a translator that does . Techniques for choosing unpredictable numbers are discussed in [ 17 ]. 	200	0
3550	timestamp	timestamp : 32 bits The timestamp reflects the sampling instant of the first octet in the RTP data packet . The sampling instant MUST be derived from a clock that increments monotonically and linearly in time to allow synchronization and jitter calculations ( see Section 6.4.1 ). The resolution of the clock MUST be sufficient for the desired synchronization accuracy and for measuring packet arrival jitter ( one tick per video frame is typically not sufficient ). The clock frequency is dependent on the format of data carried as payload and is specified statically in the profile or payload format specification that defines the format , or MAY be specified dynamically for payload formats defined through non-RTP means . If RTP packets are generated periodically , the nominal sampling instant as determined from the sampling clock is to be used , not a reading of the system clock . As an example , for fixed-rate audio the timestamp clock would likely increment by one for each sampling period . If an audio application reads blocks covering 	121	0
3550	SSRC	SSRC : 32 bits The SSRC field identifies the synchronization source . This identifier SHOULD be chosen randomly , with the intent that no two synchronization sources within the same RTP session will have the same SSRC identifier . An example algorithm for generating a random identifier is presented in Appendix A.6 . Although the probability of multiple sources choosing the same identifier is low , all RTP implementations must be prepared to detect and resolve collisions . Section 8 describes the probability of collision along with a mechanism for resolving collisions and detecting RTP-level forwarding loops based on the uniqueness of the SSRC identifier . If a source changes its source transport address , it must also choose a new SSRC identifier to avoid being interpreted as a looped source ( see Section 8.2 ). 	230	0
3550	V	version ( V ): 2 bits Identifies the version of RTP , which is the same in RTCP packets as in RTP data packets . The version defined by this specification is two ( 2 ). 	220	0
3550	P	padding ( P ): 1 bit If the padding bit is set , this individual RTCP packet contains some additional padding octets at the end which are not part of the control information but are included in the length field . The last octet of the padding is a count of how many padding octets should be ignored , including itself ( it will be a multiple of four ). Padding may be needed by some encryption algorithms with fixed block sizes . In a compound RTCP packet , padding is only required on one individual packet because the compound packet is encrypted as a whole for the method in Section 9.1 . Thus , padding MUST only be added to the last individual packet , and if padding is added to that packet , the padding bit MUST be set only on that packet . This convention aids the header validity checks described in Appendix A.2 and allows detection of packets from some early implementations that incorrectly set the padding bit on the first individual packet and add padding to the last individual packet . 	231	0
3550	RC	reception report count ( RC ): 5 bits The number of reception report blocks contained in this packet . A value of zero is valid . 	302	0
3550	PT	packet type ( PT ): 8 bits Contains the constant 200 to identify this as an RTCP SR packet . 	231	0
3550	length	length : 16 bits The length of this RTCP packet in 32-bit words minus one , including the header and any padding . ( The offset of one makes zero a valid length and avoids a possible infinite loop in scanning a compound RTCP packet , while counting 32-bit words avoids a validity check for a multiple of 4 .) 	100	0
3550	SSRC	SSRC : 32 bits The synchronization source identifier for the originator of this SR packet . 	230	0
3550	RTP timestamp	RTP timestamp : 32 bits Corresponds to the same time as the NTP timestamp ( above ), but in the same units and with the same random offset as the RTP timestamps in data packets . This correspondence may be used for intra - and inter-media synchronization for sources whose NTP timestamps are synchronized , and may be used by media-independent receivers to estimate the nominal RTP clock frequency . Note that in most cases this timestamp will not be equal to the RTP timestamp in any adjacent data packet . Rather , it MUST be calculated from the corresponding NTP timestamp using the relationship between the RTP timestamp counter and real time as maintained by periodically checking the wallclock time at a sampling instant . 	122	0
3550	sender's packet count	sender's packet count : 32 bits The total number of RTP data packets transmitted by the sender since starting transmission up until the time this SR packet was generated . The count SHOULD be reset if the sender changes its SSRC identifier . 	200	0
3550	sender's octet count	sender's octet count : 32 bits The total number of payload octets ( i.e ., not including header or padding ) transmitted in RTP data packets by the sender since starting transmission up until the time this SR packet was generated . The count SHOULD be reset if the sender changes its SSRC identifier . This field can be used to estimate the average payload data rate . 	100	0
3550	fraction lost	fraction lost : 8 bits The fraction of RTP data packets from source SSRC_n lost since the previous SR or RR packet was sent , expressed as a fixed point number with the binary point at the left edge of the field . ( That is equivalent to taking the integer part after multiplying the loss fraction by 256 .) This fraction is defined to be the number of packets lost divided by the number of packets expected , as defined in the next paragraph . An implementation is shown in Appendix A.3 . If the loss is negative due to duplicates , the fraction lost is set to zero . Note that a receiver cannot tell whether any packets were lost after the last one received , and that there will be no reception report block issued for a source if all packets from that source sent during the last reporting interval have been lost . 	201	0
3550	cumulative number of packets lost	cumulative number of packets lost : 24 bits The total number of RTP data packets from source SSRC_n that have been lost since the beginning of reception . This number is defined to be the number of packets expected less the number of packets actually received , where the number of packets received includes any which are late or duplicates . Thus , packets that arrive late are not counted as lost , and the loss may be negative if there are duplicates . The number of packets expected is defined to be the extended last sequence number received , as defined next , less the initial sequence number received . This may be calculated as shown in Appendix A.3 . 	200	0
3550	extended highest sequence number received	extended highest sequence number received : 32 bits The low 16 bits contain the highest sequence number received in an RTP data packet from source SSRC_n , and the most significant 16 bits extend that sequence number with the corresponding count of sequence number cycles , which may be maintained according to the algorithm in Appendix A.1 . Note that different receivers within the same session will generate different extensions to the sequence number if their start times differ significantly . 	200	0
3550	interarrival jitter	interarrival jitter : 32 bits An estimate of the statistical variance of the RTP data packet interarrival time , measured in timestamp units and expressed as an unsigned integer . The interarrival jitter J is defined to be the mean deviation ( smoothed absolute value ) of the difference D in packet spacing at the receiver compared to the sender for a pair of packets . As shown in the equation below , this is equivalent to the difference in the " relative transit time " for the two packets; 	122	0
3550	V	version ( V ), padding ( P ), length : As described for the SR packet ( see Section 6.4.1 ). 	220	0
3550	P	version ( V ), padding ( P ), length : As described for the SR packet ( see Section 6.4.1 ). 	220	0
3550	length	version ( V ), padding ( P ), length : As described for the SR packet ( see Section 6.4.1 ). 	220	0
3550	PT	packet type ( PT ): 8 bits Contains the constant 202 to identify this as an RTCP SDES packet . 	231	0
3550	SC	source count ( SC ): 5 bits The number of SSRC/CSRC chunks contained in this SDES packet . A value of zero is valid but useless . 	302	0
3550	V	version ( V ), padding ( P ), length : As described for the SR packet ( see Section 6.4.1 ). 	220	0
3550	P	version ( V ), padding ( P ), length : As described for the SR packet ( see Section 6.4.1 ). 	220	0
3550	length	version ( V ), padding ( P ), length : As described for the SR packet ( see Section 6.4.1 ). 	220	0
3550	PT	packet type ( PT ): 8 bits Contains the constant 203 to identify this as an RTCP BYE packet . 	231	0
3550	SC	source count ( SC ): 5 bits The number of SSRC/CSRC identifiers included in this BYE packet . A count value of zero is valid , but useless . 	231	0
3550	V	version ( V ), padding ( P ), length : As described for the SR packet ( see Section 6.4.1 ). 	220	0
3550	P	version ( V ), padding ( P ), length : As described for the SR packet ( see Section 6.4.1 ). 	220	0
3550	length	version ( V ), padding ( P ), length : As described for the SR packet ( see Section 6.4.1 ). 	220	0
3550	subtype	subtype : 5 bits May be used as a subtype to allow a set of APP packets to be defined under one unique name , or for any application-dependent data . 	231	0
3550	PT	packet type ( PT ): 8 bits Contains the constant 204 to identify this as an RTCP APP packet . 	231	0
3550	name	name : 4 octets A name chosen by the person defining the set of APP packets to be unique with respect to other APP packets this application might receive . The application creator might choose to use the application name , and then coordinate the allocation of subtype values to others who want to define new packet types for the application . Alternatively , it is RECOMMENDED that others choose a name based on the entity they represent , then coordinate the use of the name within that entity . The name is interpreted as a sequence of four ASCII characters , with uppercase and lowercase characters treated as distinct . 	231	0
3558	LLL	Interleave Length ( LLL ): 3 bits Indicates the length of interleave; a value of 0 indicates bundling , a special case of interleaving . See Section 6 and Section 7 for more detailed discussion . 	100	0
3558	NNN	Interleave Index ( NNN ): 3 bits Indicates the index within an interleave group . MUST have a value less than or equal to the value of LLL . Values of NNN greater than the value of LLL are invalid . Packet with invalid NNN values SHOULD be ignored by the receiver . 	231	0
3558	MMM	Mode Request ( MMM ): 3 bits The Mode Request field is used to signal Mode Request information . See Section 10 for details . 	301	0
3558	Count	Frame Count ( Count ): 5 bits The number of ToC fields ( and vocoder frames ) present in the packet is the value of the frame count field plus one . A value of zero indicates that the packet contains one ToC field , while a value of 31 indicates that the packet contains 32 ToC fields . 	210	0
3558	padding	Padding ( padding ): 0 or 4 bits This padding ensures that codec data frames start on an octet boundary . When the frame count is odd , the sender MUST add 4 bits of padding following the last TOC . When the frame count is even , the sender MUST NOT add padding bits . If padding is present , the padding bits MUST be set to zero by sender , and SHOULD be ignored by receiver . 	302	0
3561	Type	Type 1 	240	0
3561	J	J Join flag; reserved for multicast . 	500	0
3561	R	R Repair flag; reserved for multicast . 	500	0
3561	G	G Gratuitous RREP flag; indicates whether a gratuitous RREP should be unicast to the node specified in the Destination IP Address field ( see sections 6.3 , 6.6.3 ). 	210	0
3561	D	D Destination only flag; indicates only the destination may respond to this RREQ ( see section 6.5 ). 	210	0
3561	U	U Unknown sequence number; indicates the destination sequence number is unknown ( see section 6.3 ). 	302	0
3561	Reserved	Reserved Sent as 0; ignored on reception . 	500	0
3561	Hop Count	Hop Count The number of hops from the Originator IP Address to the node handling the request . 	100	0
3561	RREQ ID	RREQ ID A sequence number uniquely identifying the particular RREQ when taken in conjunction with the originating node's IP address . 	230	0
3561	Type	Type 2 	240	0
3561	R	R Repair flag; used for multicast . 	231	0
3561	A	A Acknowledgment required; see sections 5.4 and 6.7 . 	302	0
3561	Reserved	Reserved Sent as 0; ignored on reception . 	500	0
3561	Hop Count	Hop Count The number of hops from the Originator IP Address to the Destination IP Address . For multicast route requests this indicates the number of hops to the multicast tree member sending the RREP . 	230	0
3561	Lifetime	Lifetime The time in milliseconds for which nodes receiving the RREP consider the route to be valid . 	120	0
3561	Type	Type 3 	240	0
3561	N	N No delete flag; set when a node has performed a local repair of a link , and upstream nodes should not delete the route . 	302	0
3561	Reserved	Reserved Sent as 0; ignored on reception . 	500	0
3561	DestCount	DestCount The number of unreachable destinations included in the message; MUST be at least 1 . 	230	0
3561	Type	Type 4 	240	0
3561	Reserved	Reserved Sent as 0; ignored on reception . 	500	0
3561	Hop Count	Hop Count The Hop Count as indicated in the node's route table entry for the originator 	231	0
3561	Destination IP Address	Destination IP Address The IP address of the node that originated the RREQ 	230	0
3561	Destination Sequence Number	Destination Sequence Number The Originator Sequence Number from the RREQ 	231	0
3561	Originator IP Address	Originator IP Address The IP address of the Destination node in the RREQ 	230	0
3561	Lifetime	Lifetime The remaining lifetime of the route towards the originator of the RREQ , as known by the intermediate node . 	120	0
3561	Destination IP Address	Destination IP Address The node's IP address . 	230	0
3561	Destination Sequence Number	Destination Sequence Number The node's latest sequence number . 	200	0
3561	Hop Count	Hop Count 0 	302	0
3561	Lifetime	Lifetime ALLOWED_HELLO_LOSS * HELLO_INTERVAL 	240	0
3561	Type	Type 1-255 	220	0
3561	Length	Length The length of the type-specific data , not including the Type and Length fields of the extension in bytes . 	100	0
3561	Type	Type 1 	240	0
3561	Length	Length 4 	100	0
3572	Type	Type : 1 for Source link-layer address . 2 for Target link-layer address . 	240	0
3572	Length	Length : 1 ( in units of 8 octets ). 	100	0
3572	Address	Address : MAPOS version 1 8-bit address . 	230	0
3572	Type	Type : 1 for Source link-layer address . 2 for Target link-layer address . 	240	0
3572	Length	Length : 1 ( in units of 8 octets ). 	100	0
3576	Code	The Code field is one octet , and identifies the type of RADIUS packet . Packets received with an invalid Code field MUST be silently discarded . RADIUS codes ( decimal ) for this extension are assigned as follows : 	231	0
3576	Identifier	The Identifier field is one octet , and aids in matching requests and replies . The RADIUS client can detect a duplicate request if it has the same server source IP address and source UDP port and Identifier within a short span of time . 	301	0
3576	Length	The Length field is two octets . It indicates the length of the packet including the Code , Identifier , Length , Authenticator and Attribute fields . Octets outside the range of the Length field MUST be treated as padding and ignored on reception . If the packet is shorter than the Length field indicates , it MUST be silently discarded . The minimum length is 20 and the maximum length is 4096 . 	100	0
3576	Authenticator	The Authenticator field is sixteen ( 16 ) octets . The most significant octet is transmitted first . This value is used to authenticate the messages between the RADIUS server and client . 	301	0
3576	Type	Type 	240	0
3576	Length	Length 	100	0
3576	Value	The Value field is four octets , containing an integer specifying the cause of the error . Values 0-199 and 300-399 are reserved . Values 200-299 represent successful completion , so that these values may only be sent within Disconnect-ACK or CoA-ACK message and MUST NOT be sent within a Disconnect-NAK or CoA-NAK . Values 	302	0
3579	Type	Type 	240	0
3579	Length	Length 	100	0
3579	Type	Type 	240	0
3579	Length	Length 	100	0
3611	C	Copyright ( C ) The Internet Society ( 2003 ). All Rights Reserved . 	303	0
3611	V	version ( V ): 2 bits Identifies the version of RTP . This specification applies to RTP version two . 	220	0
3611	P	padding ( P ): 1 bit If the padding bit is set , this XR packet contains some additional padding octets at the end . The semantics of this field are identical to the semantics of the padding field in the SR packet , as defined by the RTP specification . 	231	0
3611	reserved	reserved : 5 bits This field is reserved for future definition . In the absence of such definition , the bits in this field MUST be set to zero and MUST be ignored by the receiver . 	500	0
3611	length	length : 16 bits As described for the RTCP Sender Report ( SR ) packet ( see Section 6.4.1 of the RTP specification [ 9 ]). Briefly , the length of this XR packet in 32-bit words minus one , including the header and any padding . 	100	0
3611	SSRC	SSRC : 32 bits The synchronization source identifier for the originator of this XR packet . 	230	0
3611	report blocks	report blocks : variable length . Zero or more extended report blocks . In keeping with the extended report block framework defined below , each block MUST consist of one or more 32-bit words . 	400	0
3611	BT	block type ( BT ): 8 bits Identifies the block format . Seven block types are defined in Section 4 . Additional block types may be defined in future specifications . This field's name space is managed by the Internet Assigned Numbers Authority ( IANA ), as described in Section 6.2 . 	231	0
3611	block length	block length : 16 bits The length of this report block , including the header , in 32 - bit words minus one . If the block type definition permits , zero is an acceptable value , signifying a block that consists of only the BT , type-specific , and block length fields , with a null type-specific block contents field . 	100	0
3611	BT	block type ( BT ): 8 bits A Loss RLE Report Block is identified by the constant 1 . 	302	0
3611	rsvd .	rsvd .: 4 bits This field is reserved for future definition . In the absence of such definition , the bits in this field MUST be set to zero and MUST be ignored by the receiver . 	500	0
3611	T	thinning ( T ): 4 bits The amount of thinning performed on the sequence number space . Only those packets with sequence numbers 0 mod 2^T are reported on by this block . A value of 0 indicates that there is no thinning , and all packets are reported on . The maximum thinning is one packet in every 32,768 ( amounting to two packets within each 16-bit sequence space ). 	110	0
3611	block length	block length : 16 bits Defined in Section 3 . 	100	0
3611	SSRC of source	SSRC of source : 32 bits The SSRC of the RTP data packet source being reported upon by this report block . 	230	0
3611	begin_seq	begin_seq : 16 bits The first sequence number that this block reports on . 	200	0
3611	end_seq	end_seq : 16 bits The last sequence number that this block reports on plus one . 	200	0
3611	C	chunk type ( C ): 1 bit A zero identifies this as a run length chunk . 	210	0
3611	R	run type ( R ): 1 bit Zero indicates a run of 0s . One indicates a run of 1s . 	210	0
3611	run length	run length : 14 bits A value between 1 and 16,383 . The value MUST not be zero for a run length chunk ( zeroes in both the run type and run length fields would make the chunk a terminating null chunk ). Run lengths of 15 or less MAY be described with a run length chunk despite the fact that they could also be described as part of a bit vector chunk . 	100	0
3611	C	chunk type ( C ): 1 bit A one identifies this as a bit vector chunk . 	231	0
3611	bit vector	bit vector : 15 bits The vector is read from left to right , in order of increasing sequence number ( with the appropriate allowance for wraparound ). 	200	0
3611	BT	block type ( BT ): 8 bits A Duplicate RLE Report Block is identified by the constant 2 . 	240	0
3611	rsvd .	rsvd .: 4 bits This field is reserved for future definition . In the absence of such a definition , the bits in this field MUST be set to zero and MUST be ignored by the receiver . 	500	0
3611	T	thinning ( T ): 4 bits As defined in Section 4.1 . 	201	0
3611	block length	block length : 16 bits Defined in Section 3 . 	100	0
3611	SSRC of source	SSRC of source : 32 bits As defined in Section 4.1 . 	400	0
3611	begin_seq	begin_seq : 16 bits As defined in Section 4.1 . 	301	0
3611	end_seq	end_seq : 16 bits As defined in Section 4.1 . 	400	0
3611	BT	block type ( BT ): 8 bits A Packet Receipt Times Report Block is identified by the constant 3 . 	240	0
3611	rsvd .	rsvd .: 4 bits This field is reserved for future definition . In the absence of such a definition , the bits in this field MUST be set to zero and MUST be ignored by the receiver . 	500	0
3611	T	thinning ( T ): 4 bits As defined in Section 4.1 . 	201	0
3611	block length	block length : 16 bits Defined in Section 3 . 	100	0
3611	SSRC of source	SSRC of source : 32 bits As defined in Section 4.1 . 	400	0
3611	begin_seq	begin_seq : 16 bits As defined in Section 4.1 . 	400	0
3611	end_seq	end_seq : 16 bits As defined in Section 4.1 . 	400	0
3611	BT	block type ( BT ): 8 bits A Receiver Reference Time Report Block is identified by the constant 4 . 	240	0
3611	reserved	reserved : 8 bits This field is reserved for future definition . In the absence of such definition , the bits in this field MUST be set to zero and MUST be ignored by the receiver . 	500	0
3611	block length	block length : 16 bits The constant 2 , in accordance with the definition of this field in Section 3 . 	100	0
3611	BT	block type ( BT ): 8 bits A DLRR Report Block is identified by the constant 5 . 	400	0
3611	reserved	reserved : 8 bits This field is reserved for future definition . In the absence of such definition , the bits in this field MUST be set to zero and MUST be ignored by the receiver . 	500	0
3611	block length	block length : 16 bits Defined in Section 3 . 	100	0
3611	BT	block type ( BT ): 8 bits A Statistics Summary Report Block is identified by the constant 6 . 	400	0
3611	L	loss report flag ( L ): 1 bit Bit set to 1 if the lost_packets field contains a report , 0 otherwise . 	210	0
3611	D	duplicate report flag ( D ): 1 bit Bit set to 1 if the dup_packets field contains a report , 0 otherwise . 	210	0
3611	J	jitter flag ( J ): 1 bit Bit set to 1 if the min_jitter , max_jitter , mean_jitter , and dev_jitter fields all contain reports , 0 if none of them do . 	210	0
3611	ToH	TTL or Hop Limit flag ( ToH ): 2 bits This field is set to 0 if none of the fields min_ttl_or_hl , max_ttl_or_hl , mean_ttl_or_hl , or dev_ttl_or_hl contain reports . If the field is non-zero , then all of these fields contain reports . The value 1 signifies that they report on IPv4 TTL values . The value 2 signifies that they report on 	210	0
3611	rsvd .	rsvd .: 3 bits This field is reserved for future definition . In the absence of such a definition , the bits in this field MUST be set to zero and MUST be ignored by the receiver . 	500	0
3611	block length	block length : 16 bits The constant 9 , in accordance with the definition of this field in Section 3 . 	100	0
3611	SSRC of source	SSRC of source : 32 bits As defined in Section 4.1 . 	400	0
3611	begin_seq	begin_seq : 16 bits As defined in Section 4.1 . 	400	0
3611	end_seq	end_seq : 16 bits As defined in Section 4.1 . 	400	0
3611	lost_packets	lost_packets : 32 bits Number of lost packets in the above sequence number interval . 	110	0
3611	dup_packets	dup_packets : 32 bits Number of duplicate packets in the above sequence number interval . 	200	0
3611	min_jitter	min_jitter : 32 bits The minimum relative transit time between two packets in the above sequence number interval . All jitter values are measured as the difference between a packet's RTP timestamp and the reporter's clock at the time of arrival , measured in the same units . 	122	0
3611	max_jitter	max_jitter : 32 bits The maximum relative transit time between two packets in the above sequence number interval . 	120	0
3611	mean_jitter	mean_jitter : 32 bits The mean relative transit time between each two packet series in the above sequence number interval , rounded to the nearest value expressible as an RTP timestamp . 	122	0
3611	dev_jitter	dev_jitter : 32 bits The standard deviation of the relative transit time between each two packet series in the above sequence number interval . 	122	0
3611	min_ttl_or_hl	min_ttl_or_hl : 8 bits The minimum TTL or Hop Limit value of data packets in the sequence number range . 	100	0
3611	max_ttl_or_hl	max_ttl_or_hl : 8 bits The maximum TTL or Hop Limit value of data packets in the sequence number range . 	100	0
3611	mean_ttl_or_hl	mean_ttl_or_hl : 8 bits The mean TTL or Hop Limit value of data packets in the sequence number range , rounded to the nearest integer . 	110	0
3611	dev_ttl_or_hl	dev_ttl_or_hl : 8 bits The standard deviation of TTL or Hop Limit values of data packets in the sequence number range . 	231	0
3611	BT	block type ( BT ): 8 bits A VoIP Metrics Report Block is identified by the constant 7 . 	231	0
3611	reserved	reserved : 8 bits This field is reserved for future definition . In the absence of such a definition , the bits in this field MUST be set to zero and MUST be ignored by the receiver . 	500	0
3611	block length	block length : 16 bits The constant 8 , in accordance with the definition of this field in Section 3 . 	100	0
3611	SSRC of source	SSRC of source : 32 bits As defined in Section 4.1 . 	400	0
3611	loss rate	loss rate : 8 bits The fraction of RTP data packets from the source lost since the beginning of reception , expressed as a fixed point number with the binary point at the left edge of the field . This value is calculated by dividing the total number of packets lost ( after the effects of applying any error protection such as FEC ) by the total number of packets expected , multiplying the result of the division by 256 , limiting the maximum value to 255 ( to avoid overflow ), and taking the integer part . The numbers of duplicated packets and discarded packets do not enter into this calculation . Since receivers cannot be required to maintain unlimited buffers , a receiver MAY categorize late-arriving packets as lost . The degree of lateness that triggers a loss SHOULD be significantly greater than that which triggers a discard . 	110	0
3611	discard rate	discard rate : 8 bits The fraction of RTP data packets from the source that have been discarded since the beginning of reception , due to late or early arrival , under-run or overflow at the receiving jitter buffer . This value is expressed as a fixed point number with the binary point at the left edge of the field . It is calculated by dividing the total number of packets discarded ( excluding duplicate packet discards ) by the total number of packets expected , multiplying the result of the division by 256 , limiting the maximum value to 255 ( to avoid overflow ), and taking the integer part . 	201	0
3611	loss rate	loss rate 12 , which corresponds to 5% discard rate 12 , which corresponds to 5% burst density 84 , which corresponds to 33% gap density 10 , which corresponds to 4% burst duration 120 , value in milliseconds gap duration 520 , value in milliseconds 	240	0
3611	burst density	burst density : 8 bits The fraction of RTP data packets within burst periods since the beginning of reception that were either lost or discarded . This value is expressed as a fixed point number with the binary point at the left edge of the field . It is calculated by dividing the total number of packets lost or discarded ( excluding duplicate packet discards ) within burst periods by the total number of packets expected within the burst periods , multiplying the result of the division by 256 , limiting the maximum value to 255 ( to avoid overflow ), and taking the integer part . This field MUST be populated and MUST be set to zero if no packets have been received . 	110	0
3611	gap density	gap density : 8 bits The fraction of RTP data packets within inter-burst gaps since the beginning of reception that were either lost or discarded . The value is expressed as a fixed point number with the binary point at the left edge of the field . It is calculated by dividing the total number of packets lost or discarded ( excluding duplicate packet discards ) within gap periods by the total number of packets expected within the gap periods , multiplying the result of the division by 256 , limiting the maximum value to 255 ( to avoid overflow ), and taking the integer part . This field MUST be populated and MUST be set to zero if no packets have been received . 	110	0
3611	burst duration	burst duration : 16 bits The mean duration , expressed in milliseconds , of the burst periods that have occurred since the beginning of reception . The duration of each period is calculated based upon the packets that mark the beginning and end of that period . It is equal to the timestamp of the end packet , plus the duration of the end packet , minus the timestamp of the beginning packet . If the actual values are not available , estimated values MUST be used . If there have been no burst periods , the burst duration value MUST be zero . 	100	0
3611	gap duration	gap duration : 16 bits The mean duration , expressed in milliseconds , of the gap periods that have occurred since the beginning of reception . The duration of each period is calculated based upon the packet that marks the end of the prior burst and the packet that marks the beginning of the subsequent burst . It is equal to the timestamp of the subsequent burst packet , minus the timestamp of the prior burst packet , plus the duration of the prior burst packet . If the actual values are not available , estimated values MUST be used . In the case of a gap that occurs at the beginning of reception , the sum of the timestamp of the prior 	100	0
3611	round trip delay	round trip delay : 16 bits The most recently calculated round trip time between RTP interfaces , expressed in milliseconds . This value MAY be measured using RTCP , the DLRR method defined in Section 4.5 of this document , where it is necessary to convert the units of measurement from NTP timestamp values to milliseconds , or other approaches . If RTCP is used , then the reported delay value is the time of receipt of the most recent RTCP packet from source SSRC , minus the LSR ( last SR ) time reported in its SR ( Sender Report ), minus the DLSR ( delay since last SR ) reported in its SR . A non-zero LSR value is required in order to calculate round trip delay . A value of 0 is permissible; however , this field MUST be populated as soon as a delay estimate is available . 	122	0
3611	end system delay	end system delay : 16 bits The most recently estimated end system delay , expressed in milliseconds . End system delay is defined as the sum of the total sample accumulation and encoding delay associated with the sending direction and the jitter buffer , decoding , and playout buffer delay associated with the receiving direction . This delay MAY be estimated or measured . This value SHOULD be provided in all VoIP metrics reports . If an implementation is unable to provide the data , the value 0 MUST be used . 	231	0
3611	signal level	signal level : 8 bits The voice signal relative level is defined as the ratio of the signal level to a 0 dBm0 reference [ 10 ], expressed in decibels as a signed integer in two's complement form . This is measured only for packets containing speech energy . The intent of this metric is not to provide a precise measurement of the signal level but to provide a real time indication that the signal level may be excessively high or low . 	231	0
3611	noise level	noise level : 8 bits The noise level is defined as the ratio of the silent period background noise level to a 0 dBm0 reference , expressed in decibels as a signed integer in two's complement form . 	231	0
3611	RERL	residual echo return loss ( RERL ): 8 bits The residual echo return loss value may be measured directly by the VoIP end system's echo canceller or may be estimated by adding the echo return loss ( ERL ) and echo return loss enhancement ( ERLE ) values reported by the echo canceller . 	231	0
3611	RERL	In the case of a VoIP gateway , the source of echo is typically line echo that occurs at 2-4 wire conversion points in the network . This can be in the 8-12 dB range . A line echo canceler can provide an ERLE of 30 dB or more and hence reduce this to 40-50 dB . In the case of an IP phone , this could be acoustic coupling between handset speaker and microphone or residual acoustic echo from speakerphone operation , and may more correctly be termed terminal coupling loss ( TCL ). A typical handset would result in 40-50 dB of echo loss due to acoustic feedback . 	400	0
3611	R factor	R factor : 8 bits The R factor is a voice quality metric describing the segment of the call that is carried over this RTP session . It is expressed as an integer in the range 0 to 100 , with a value of 94 corresponding to " toll quality " and values of 50 or less regarded as unusable . This metric is defined as including the effects of delay , consistent with ITU-T G.107 [ 6 ] and ETSI TS 101 329-5 [ 3 ]. 	231	0
3611	ext . R factor	ext . R factor : 8 bits The external R factor is a voice quality metric describing the segment of the call that is carried over a network segment external to the RTP segment , for example a cellular network . Its values are interpreted in the same manner as for the RTP R factor . This metric is defined as including the effects of delay , consistent with ITU-T G.107 [ 6 ] and ETSI TS 101 329-5 [ 3 ], and relates to the outward voice path from the Voice over IP termination for which this metrics block applies . 	231	0
3611	Gmin	Gmin : 8 bits The gap threshold . This field contains the value used for this report block to determine if a gap exists . The recommended value of 16 corresponds to a burst period having a minimum density of 6.25% of lost or discarded packets , which may cause noticeable degradation in call quality; during gap periods , if packet loss or discard occurs , each lost or discarded packet would be preceded by and followed by a sequence of at least 16 received non-discarded packets . Note that lost or discarded 	400	0
3611	RX config	receiver configuration byte ( RX config ): 8 bits This byte consists of the following fields : 	400	0
3611	PLC	packet loss concealment ( PLC ): 2 bits Standard ( 11 ) / enhanced ( 10 ) / disabled ( 01 ) / unspecified ( 00 ). When PLC = 11 , then a simple replay or interpolation algorithm is being used to fill-in the missing packet; this approach is typically able to conceal isolated lost packets at low packet loss rates . When PLC = 10 , then an enhanced interpolation algorithm is being used; algorithms of this type are able to conceal high packet loss rates effectively . When PLC = 01 , then silence is being inserted in place of lost packets . When PLC = 00 , then no information is available concerning the use of PLC; however , for some codecs this may be inferred . 	302	0
3611	JBA	jitter buffer adaptive ( JBA ): 2 bits Adaptive ( 11 ) / non-adaptive ( 10 ) / reserved ( 01 )/ unknown ( 00 ). When the jitter buffer is adaptive , then its size is being dynamically adjusted to deal with varying levels of jitter . When non-adaptive , the jitter buffer size is maintained at a fixed level . When either adaptive or non - adaptive modes are specified , then the jitter buffer size parameters below MUST be specified . 	301	0
3611	JB rate	jitter buffer rate ( JB rate ): 4 bits J = adjustment rate ( 0-15 ). This represents the implementation specific adjustment rate of a jitter buffer in adaptive mode . This parameter is defined in terms of the approximate time taken to fully adjust to a step change in peak to peak jitter from 30 ms to 100 ms such that : 	122	0
3611	reserved	reserved : 8 bits This field is reserved for future definition . In the absence of such a definition , the bits in this field MUST be set to zero and MUST be ignored by the receiver . 	500	0
3611	JB nominal	jitter buffer nominal delay ( JB nominal ): 16 bits This is the current nominal jitter buffer delay in milliseconds , which corresponds to the nominal jitter buffer delay for packets that arrive exactly on time . This parameter MUST be provided for both fixed and adaptive jitter buffer implementations . 	301	0
3611	JB maximum	jitter buffer maximum delay ( JB maximum ): 16 bits This is the current maximum jitter buffer delay in milliseconds which corresponds to the earliest arriving packet that would not be discarded . In simple queue implementations this may correspond to the nominal size . In adaptive jitter buffer implementations , this value may dynamically vary up to JB abs max ( see below ). This parameter MUST be provided for both fixed and adaptive jitter buffer implementations . 	231	0
3611	JB abs max	jitter buffer absolute maximum delay ( JB abs max ): 16 bits This is the absolute maximum delay in milliseconds that the adaptive jitter buffer can reach under worst case conditions . If this value exceeds 65535 milliseconds , then this field SHALL convey the value 65535 . This parameter MUST be provided for adaptive jitter buffer implementations and its value MUST be set to JB maximum for fixed jitter buffer implementations . 	122	0
3611	BT	BT name -- ---- 1 Loss RLE Report Block 2 Duplicate RLE Report Block 3 Packet Receipt Times Report Block 4 Receiver Reference Time Report Block 5 DLRR Report Block 6 Statistics Summary Report Block 7 VoIP Metrics Report Block 	240	0
3611	C	This document and translations of it may be copied and furnished to others , and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared , copied , published and distributed , in whole or in part , without restriction of any kind , provided that the above copyright notice and this paragraph are included on all such copies and derivative works . However , this document itself may not be modified in any way , such as by removing the copyright notice or references to the Internet Society or other Internet organizations , except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed , or as required to translate it into languages other than English . 	302	0
3618	Type	Type ( 8 bits ) Describes the format of the Value field . 	400	0
3618	Length	Length ( 16 bits ) Length of Type , Length , and Value fields in octets . Minimum length required is 4 octets , except for Keepalive messages . The maximum TLV length is 9192 . 	100	0
3618	Length	Length ( 16 bits ) Length of Type , Length , and Value fields in octets . Minimum length required is 4 octets , except for Keepalive messages . The maximum TLV length is 9192 . 	100	0
3626	Packet Length	Packet Length 	100	0
3626	Packet Sequence Number	The Packet Sequence Number ( PSN ) MUST be incremented by one each time a new OLSR packet is transmitted . " Wrap-around " is handled as described in section 19 . A separate Packet Sequence Number is maintained for each interface such that packets transmitted over an interface are sequentially enumerated . 	200	0
3626	Message Type	This field indicates which type of message is to be found in the " MESSAGE " part . Message types in the range of 0-127 are reserved for messages in this document and in possible extensions . 	231	0
3626	Vtime	This field indicates for how long time after reception a node MUST consider the information contained in the message as valid , unless a more recent update to the information is received . The validity time is represented by its mantissa ( four highest bits of Vtime field ) and by its exponent ( four lowest bits of Vtime field ). In other words : 	120	0
3626	Message Size	This gives the size of this message , counted in bytes and measured from the beginning of the " Message Type " field and until the beginning of the next " Message Type " field ( or - if there are no following messages - until the end of the packet ). 	100	0
3626	Originator Address	This field contains the main address of the node , which has originally generated this message . This field SHOULD NOT be confused with the source address from the IP header , which is changed each time to the address of the intermediate interface 	230	0
3626	Time To Live	This field contains the maximum number of hops a message will be transmitted . Before a message is retransmitted , the Time To Live MUST be decremented by 1 . When a node receives a message with a Time To Live equal to 0 or 1 , the message MUST NOT be retransmitted under any circumstances . Normally , a node would not receive a message with a TTL of zero . 	120	0
3626	Hop Count	This field contains the number of hops a message has attained . Before a message is retransmitted , the Hop Count MUST be incremented by 1 . 	100	0
3626	Message Sequence Number	While generating a message , the " originator " node will assign a unique identification number to each message . This number is inserted into the Sequence Number field of the message . The sequence number is increased by 1 ( one ) for each message originating from the node . " Wrap-around " is handled as described in section 19 . Message sequence numbers are used to ensure that a given message is not retransmitted more than once by any node . 	200	0
3626	OLSR Interface Address	This field contains the address of an OLSR interface of the node , excluding the nodes main address ( which already indicated in the originator address ). 	230	0
3626	Reserved	This field must be set to " 0000000000000 " to be in compliance with this specification . 	302	0
3626	Willingness	This field specifies the willingness of a node to carry and forward traffic for other nodes . 	230	0
3626	Link Code	This field specifies information about the link between the interface of the sender and the following list of neighbor interfaces . It also specifies information about the status of the neighbor . 	230	0
3626	Link Message Size	The size of the link message , counted in bytes and measured from the beginning of the " Link Code " field and until the next " Link Code " field ( or - if there are no more link types - the end of the message ). 	100	0
3626	Neighbor Interface Address	Neighbor Interface Address 	230	0
3626	ANSN	A sequence number is associated with the advertised neighbor set . Every time a node detects a change in its advertised neighbor set , it increments this sequence number (" Wraparound " is handled as described in section 19 ). This number is sent in this ANSN field of the TC message to keep track of the most recent information . When a node receives a TC message , it can decide on the basis of this Advertised Neighbor Sequence Number , whether or not the received information about the advertised neighbors of the originator node is more recent than what it already has . 	201	0
3626	Advertised Neighbor Main Address	This field contains the main address of a neighbor node . All main addresses of the advertised neighbors of the Originator node are put in the TC message . If the maximum allowed message size ( as imposed by the network ) is reached while there are still advertised neighbor addresses which have not been inserted into the TC-message , more TC messages will be generated until the entire advertised neighbor set has been sent . Extra main addresses of neighbor nodes may be included , if redundancy is desired . 	230	0
3626	Reserved	This field is reserved , and MUST be set to " 0000000000000000 " for compliance with this document . 	500	0
3626	Network Address	Network Address 	230	0
3626	Netmask	Netmask 	400	0
3626	Willingness	18.8 . Willingness 	240	0
3633	OPTION_IA_PD	OPTION_IA_PD ( 25 ) 	302	0
3633	OPTION_IAPREFIX	from the option-code space as defined in section 24.3 , " DHCP Options " of RFC 3315 . 	231	0
3633	.	This document and translations of it may be copied and furnished to others , and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared , copied , published and distributed , in whole or in part , without restriction of any kind , provided that the above copyright notice and this paragraph are included on all such copies and derivative works . However , this document itself may not be modified in any way , such as by removing the copyright notice or references to the Internet Society or other Internet organizations , except as needed for the purpose of developing Internet standards in which case the procedures for copyrights defined in the Internet Standards process must be followed , or as required to translate it into languages other than English . 	303	0
3684	L	L - Length included If the underlying delivery service provides a length field , the sender MAY set L = ' 0 ' and omit the length extension . Otherwise , the sender MUST set L = ' 1 ' and include a 16-bit unsigned integer length immediately after any previous header field . The length includes all header and data bytes and is written into the length field in network byte order . 	100	0
3684	I	I - Router ID ( RID ) included If the underlying delivery service encodes the sender's RID , the sender MAY set I = ' 0 ' and omit the RID field . Otherwise , the sender MUST set I = ' 1 ' and include a 4-octet RID in network byte order immediately after any previous header fields . The RID option provides a mechanism for implicit network-level address resolution . A receiver that detects a RID option SHOULD create a binding between the RID and the source address that appears in the network-level header . 	210	0
3684	OPTIONS	OPTIONS ( 4 bits ) Four option bits that depend on TYPE . 	400	0
3684	TYPE	TYPE ( 4 bits ) Identifier for message type or padding option . 	231	0
3684	HSEQ	HSEQ ( 8 bits ) The HELLO sequence number . 	200	0
3684	I	nbr_rid(I,J ) - The router ID of the node associated with neighbor interface J . 	230	0
3684	I	nbr_status(I,J ) - The current status of the link ( I,J ), which can be LOST , 1-WAY , or 2-WAY . 	240	0
3684	I	nbr_life(I,J ) - The amount of time ( in seconds ) remaining before nbr_status(I,J ) must be changed to LOST if no further HELLO message from interface J is received . Set to NBR_HOLD_TIME whenever a HELLO is received on interface I from interface J . 	120	0
3684	I	nbr_hseq(I,J ) - The value of HSEQ in the last HELLO message received on interface I from interface J . Used to determine the number of HELLOs that have been missed . 	231	0
3684	I	nbr_count(I,J ) - The remaining number of times a NEIGHBOR REQUEST/ REPLY/LOST message containing J must be sent on interface I . 	120	0
3684	I	hello_history(I,J ) - A list of the sequence numbers of the last HELLO_ACQUIRE_WINDOW HELLO messages received on interface I from interface J . 	110	0
3684	I	nbr_metric(I,J ) - An optional measure of the quality of the link ( I,J ), represented by an integer between 1 and 255 , where smaller values indicate better quality . Defaults to 1 if not used . 	302	0
3684	I	nbr_pri(I,J ) - The relay priority of the node associated with interface J . 	230	0
3684	I	a . If HSEQ - nbr_hseq(I,J ) > NBR_HOLD_COUNT , then set nbr_status(I,J ) = LOST and nbr_count(I,J ) = NBR_HOLD_COUNT . 	210	0
3684	I	a . If interface I appears in the NEIGHBOR LOST list , set nbr_status(I,J ) = LOST and nbr_count(I,J ) = 0 . Call Link_Down(I,J ). 	210	0
3684	n	Process_Add_Update(j , update ) For m = 1 ,..., n : (( u,v_m ) is the mth link in update .) 1 . Let v = v_m . 2 . Create an entry for v in TT if it does not exist . 3 . Add j to r(u,v ). 4 . If j = p(u ) OR p(u ) = NULL : 4.1 . Add ( u,v ) to TG . 4.2 . Set reported(u,v ) = 1 . 5 . If the M ( metrics ) bit in update is 1 : 5.1 . Set metric(j,u,v ) to the m-th metric in the update . 5.2 . If j = p(u ) OR p(u ) = NULL : 5.2.1 . Set metric(u,v ) = metric(j,u,v ). 5.2.2 . If USE_METRICS = 1 , set c(u,v ) = metric(u,v ). 6 . If the D ( implicit deletion ) bit in update is 1 : 6.1 . Set w = pred(j,v ). 6.2 . If ( w != NULL AND w != u ): 6.2.1 . Remove j from r(w,v ). 6.2.2 . If j = p(w ), remove ( w,v ) from TG . 7 . Set pred(j,v ) = u . ( Set new predecessor .) 8 . If m <= NRL ( v = v_m is a reported leaf ): 8.1 . Set leaf_update = ( FULL , 0 , 0 , 0 , v ). 8.2 . Process_Full_Update(j , leaf_update ). 9 . If m > NRL + NRNL ( v = v_m is not reported by j ): 9.1 . Remove j from r(v ). 9.2 . Set rt_expire(j,v ) = 0 . 9.3 . For each node w s.t . j is in r(v,w ), remove j from r(v,w ). 	240	0
3684	n	Process_Delete_Update(j , update ) For m = 1 ,..., n : (( u,v_m ) is the mth link in update .) 1 . Let v = v_m . 2 . Remove j from r(u,v ). 3 . If pred(j,v ) = u , set pred(j,v ) = NULL . 4 . If j = p(u ), remove ( u,v ) from TG . 	240	0
3684	I	Link_Up(I,J ) 1 . Let j = nbr_rid(I,J ). 2 . If j is not in N : 2.1 . Add j to N . 2.2 . Add ( i,j ) to TG . 2.3 . Set reported(i,j ) = 1 . 3 . If nbr_metric(I,J ) < metric(i,j ), set local_if(j ) = I , nbr_if(j ) = J , and metric(i,j ) = nbr_metric(I,J ). 4 . If USE_METRICS = 1 , set cost(i,j ) = metric(i,j ). 	240	0
3684	I	Link_Up(I,J ) 1 . Let j = nbr_rid(I,J ). 2 . If j is not in N : 2.1 . Add j to N . 2.2 . Add ( i,j ) to TG . 2.3 . Set reported(i,j ) = 1 . 3 . If nbr_metric(I,J ) < metric(i,j ), set local_if(j ) = I , nbr_if(j ) = J , and metric(i,j ) = nbr_metric(I,J ). 4 . If USE_METRICS = 1 , set cost(i,j ) = metric(i,j ). 	240	0
3711	E	E-flag : 1 bit , REQUIRED The E-flag indicates if the current SRTCP packet is encrypted or unencrypted . Section 9.1 of [ RFC3550 ] allows the split of a compound RTCP packet into two lower-layer packets , one to be encrypted and one to be sent in the clear . The E bit set to " 1 " indicates encrypted packet , and " 0 " indicates non-encrypted packet . 	210	0
3711	SRTCP index	SRTCP index : 31 bits , REQUIRED The SRTCP index is a 31-bit counter for the SRTCP packet . The index is explicitly included in each packet , in contrast to the " implicit " index approach used for SRTP . The SRTCP index MUST be set to zero before the first SRTCP packet is sent , and MUST be incremented by one , modulo 2^31 , after each SRTCP packet is sent . In particular , after a re-key , the SRTCP index MUST NOT be reset to zero again . 	231	0
3711	E	where the 128-bit integer value IV SHALL be defined by the SSRC , the SRTP packet index i , and the SRTP session salting key k_s , as below . 	400	0
3711	...	where the 128-bit integer value IV SHALL be defined by the SSRC , the SRTP packet index i , and the SRTP session salting key k_s , as below . 	400	0
3711	E	Figure 4 . f8-mode of operation ( asterisk , (*), denotes bitwise XOR ). The figure represents the KG in Figure 3 , when AES-f8 is used . 	210	0
3734	Total Length	Total Length ( 32 bits ): The total length of the EPP data unit measured in octets in network ( big endian ) byte order . The octets contained in this field MUST be included in the total length calculation . 	100	0
3734	EPP XML Instance	EPP XML Instance ( variable length ): The EPP XML instance carried in the data unit . 	400	0
3738	CTSI	CTSI indicates the index of the current time slot . This must be sent in each packet within the session . The Current Time Slot Index increases by one modulo T each TSD seconds at the sender , where T is the number of time slots associated with the session and TSD is the time slot duration . Note that T is also the number of wave channels associated with the session , and thus T MUST be at most 255 . 	201	0
3738	Channel Number	CN is the channel number that this packet belongs to . CN for the base channel is T , and the CNs for the wave channels are 0 through T-1 . Thus , T+1 channels in total are used , and thus T MUST be at most 255 . 	231	0
3738	Packet Sequence Number	The PSN of each packet is scoped by its CN value . The sequence numbers of consecutive packets sent to the base channel are 	200	0
3738	CTSI	CTSI indicates the index of the current time slot . This must be sent in each packet within the session . The Current Time Slot Index increases by one modulo T each TSD seconds at the sender , where T is the number of time slots associated with the session and TSD is the time slot duration . Note that T is also the number of wave channels associated with the session , and thus T MUST be at most 65,535 . 	122	0
3738	Channel Number	CN is the channel number that this packet belongs to . CN for the base channel is T , and the CNs for the wave channels are 0 through T-1 . Thus , T+1 channels in total are used , and thus T MUST be at most 65,535 . 	231	0
3738	Packet Sequence Number	The PSN of each packet is scoped by its CN value . The sequence numbers of consecutive packets sent to the base channel are numbered consecutively modulo 2^32 . The same sequence of PSNs 	200	0
3748	Type	Type 	240	0
3748	Length	Length 	100	0
3748	Authentication Protocol	Authentication Protocol 	400	0
3748	Code	The Code field is one octet and identifies the Type of EAP packet . EAP Codes are assigned as follows : 	231	0
3748	Identifier	The Identifier field is one octet and aids in matching Responses with Requests . 	301	0
3748	Length	The Length field is two octets and indicates the length , in octets , of the EAP packet including the Code , Identifier , Length , and Data fields . Octets outside the range of the Length field should be treated as Data Link Layer padding and MUST be ignored upon reception . A message with the Length field set to a value larger than the number of received octets MUST be silently discarded . 	100	0
3748	Code	Code 	231	0
3748	Identifier	The Identifier field is one octet . The Identifier field MUST be the same if a Request packet is retransmitted due to a timeout while waiting for a Response . Any new ( non-retransmission ) Requests MUST modify the Identifier field . 	301	0
3748	Length	The Length field is two octets and indicates the length of the EAP packet including the Code , Identifier , Length , Type , and Type-Data fields . Octets outside the range of the Length field should be treated as Data Link Layer padding and MUST be ignored upon reception . A message with the Length field set to a value larger than the number of received octets MUST be silently discarded . 	100	0
3748	Type	The Type field is one octet . This field indicates the Type of Request or Response . A single Type MUST be specified for each EAP Request or Response . An initial specification of Types follows in Section 5 of this document . 	400	0
3748	Code	Code 	231	0
3748	Identifier	The Identifier field is one octet and aids in matching replies to Responses . The Identifier field MUST match the Identifier field of the Response packet that it is sent in response to . 	301	0
3748	Length	Length 	100	0
3748	Type	Type 	240	0
3748	Type	Type 	240	0
3748	Code	Code 	231	0
3748	Identifier	The Identifier field is one octet and aids in matching Responses with Requests . The Identifier field of a legacy Nak Response MUST match the Identifier field of the Request packet that it is sent in response to . 	301	0
3748	Length	Length 	100	0
3748	Type	Type 	240	0
3748	Code	Code 	231	0
3748	Identifier	The Identifier field is one octet and aids in matching Responses with Requests . The Identifier field of an Expanded Nak Response MUST match the Identifier field of the Request packet that it is sent in response to . 	301	0
3748	Length	Length 	100	0
3748	Type	Type 	240	0
3748	Vendor-Id	Vendor-Id 	231	0
3748	Vendor-Type	Vendor-Type 	231	0
3748	Type	Type 	240	0
3748	Type	Type 	240	0
3748	Type	Type 	240	0
3748	Type	Type 	240	0
3748	Vendor-Id	The Vendor-Id is 3 octets and represents the SMI Network Management Private Enterprise Code of the Vendor in network byte order , as allocated by IANA . A Vendor-Id of zero is reserved for use by the IETF in providing an expanded global EAP Type space . 	231	0
3748	Vendor-Type	The Vendor-Type field is four octets and represents the vendor - specific method Type . 	231	0
3748	Type	Type 	240	0
3748	2	[ 3 ] An attacker may launch denial of service attacks by spoofing lower layer indications or Success/Failure packets , by replaying EAP packets , or by generating packets with overlapping Identifiers . 	303	0
3768	Version	The version field specifies the VRRP protocol version of this packet . This document defines version 2 . 	220	0
3768	Type	The type field specifies the type of this VRRP packet . The only packet type defined in this version of the protocol is : 	231	0
3768	Virtual Rtr ID	The Virtual Router Identifier ( VRID ) field identifies the virtual router this packet is reporting status for . Configurable item in the range 1-255 ( decimal ). There is no default . 	230	0
3768	Priority	The priority field specifies the sending VRRP router's priority for the virtual router . Higher values equal higher priority . This field is an 8 bit unsigned integer field . 	230	0
3768	Count IP Addrs	5.3.5 . Count IP Addrs 	240	0
3768	Adver Int	The Advertisement interval indicates the time interval ( in seconds ) between ADVERTISEMENTS . The default is 1 second . This field is used for troubleshooting misconfigured routers . 	122	0
3768	Checksum	The checksum field is used to detect data corruption in the VRRP message . 	301	0
3768	Priority	Priority Priority value to be used by this VRRP router in Master election for this virtual router . The value of 255 ( decimal ) is reserved for the router that owns the IP addresses associated with the virtual router . The value of 0 ( zero ) is reserved for Master 	230	0
3772	Code	Only LCP Code values 1 through 7 ( Configure-Request , Configure - Ack , Configure-Nak , Configure-Reject , Terminate-Request , Terminate-Ack , and Code-Reject ) are used . All other codes SHOULD result in a VSNCP Code-Reject reply . 	231	0
3772	Identifier	Identifier and Length 	100	0
3772	Length	Identifier and Length 	100	0
3772	OUI	This three-octet field contains the vendor's Organizationally Unique Identifier . The bits within the octet are in canonical order , and the most significant octet is transmitted first . See Section 5 below for more information on OUI values . 	231	0
3772	Magic-Number	The four-octet Magic-Number field is used to detect looped-back links . If the Magic-Number Option was not negotiated by LCP , then this field MUST be set to 0 . Implementation of the LCP Magic - Number Option is RECOMMENDED . 	302	0
3772	OUI	This three-octet field contains the vendor's Organizationally Unique Identifier . The bits within the octet are in canonical order , and the most significant octet is transmitted first . See Section 5 below for more information on OUI values . 	231	0
3772	Reserved	Reserved for future definition . Must be zero on transmit and ignored on reception . 	500	0
3772	Type	Type 	240	0
3772	Length	Length 	100	0
3772	Authentication-Protocol	Authentication-Protocol 	400	0
3772	OUI	This three-octet field contains the vendor's Organizationally Unique Identifier . The bits within the octet are in canonical order , and the most significant octet is transmitted first . See Section 5 below for more information on OUI values . 	231	0
3775	Payload Proto	8-bit selector . Identifies the type of header immediately following the Mobility Header . Uses the same values as the IPv6 Next Header field [ 11 ]. 	231	0
3775	Header Len	8-bit unsigned integer , representing the length of the Mobility Header in units of 8 octets , excluding the first 8 octets . 	100	0
3775	MH Type	8-bit selector . Identifies the particular mobility message in question . Current values are specified in Section 6.1.2 and onward . An unrecognized MH Type field causes an error indication to be sent . 	230	0
3775	Reserved	8-bit field reserved for future use . The value MUST be initialized to zero by the sender , and MUST be ignored by the receiver . 	500	0
3775	Checksum	16-bit unsigned integer . This field contains the checksum of the Mobility Header . The checksum is calculated from the octet string consisting of a " pseudo-header " followed by the entire Mobility Header starting with the Payload Proto field . The checksum is the 16-bit one's complement of the one's complement sum of this string . 	301	0
3775	Message Data	A variable length field containing the data specific to the indicated Mobility Header type . 	400	0
3775	Reserved	16-bit field reserved for future use . The value MUST be initialized to zero by the sender , and MUST be ignored by the receiver . 	500	0
3775	Mobility Options	Variable-length field of such length that the complete Mobility Header is an integer multiple of 8 octets long . This field contains zero or more TLV-encoded mobility options . The encoding and format of defined options are described in Section 6.2 . The receiver MUST ignore and skip any options which it does not understand . 	400	0
3775	Reserved	16-bit field reserved for future use . This value MUST be initialized to zero by the sender , and MUST be ignored by the receiver . 	500	0
3775	Home Init Cookie	Home Init Cookie 	302	0
3775	Mobility Options	Variable-length field of such length that the complete Mobility Header is an integer multiple of 8 octets long . This field contains zero or more TLV-encoded mobility options . The receiver 	400	0
3775	Reserved	16-bit field reserved for future use . The value MUST be initialized to zero by the sender , and MUST be ignored by the receiver . 	500	0
3775	Care-of Init Cookie	Care-of Init Cookie 	400	0
3775	Mobility Options	Variable-length field of such length that the complete Mobility Header is an integer multiple of 8 octets long . This field contains zero or more TLV-encoded mobility options . The receiver MUST ignore and skip any options which it does not understand . This specification does not define any options valid for the Care-of Test Init message . 	400	0
3775	Home Nonce Index	This field will be echoed back by the mobile node to the correspondent node in a subsequent Binding Update . 	100	0
3775	Home Init Cookie	Home Init Cookie 	302	0
3775	Home Keygen Token	This field contains the 64 bit home keygen token used in the return routability procedure . 	230	0
3775	Mobility Options	Variable-length field of such length that the complete Mobility Header is an integer multiple of 8 octets long . This field contains zero or more TLV-encoded mobility options . The receiver MUST ignore and skip any options which it does not understand . This specification does not define any options valid for the Home Test message . 	400	0
3775	Care-of Nonce Index	This value will be echoed back by the mobile node to the correspondent node in a subsequent Binding Update . 	202	0
3775	Care-of Init Cookie	Care-of Init Cookie 	400	0
3775	Care-of Keygen Token	This field contains the 64 bit care-of keygen token used in the return routability procedure . 	400	0
3775	Mobility Options	Variable-length field of such length that the complete Mobility Header is an integer multiple of 8 octets long . This field contains zero or more TLV-encoded mobility options . The receiver MUST ignore and skip any options which it does not understand . This specification does not define any options valid for the Care-of Test message . 	400	0
3775	A	The Acknowledge ( A ) bit is set by the sending mobile node to request a Binding Acknowledgement ( Section 6.1.8 ) be returned upon receipt of the Binding Update . 	302	0
3775	H	The Home Registration ( H ) bit is set by the sending mobile node to request that the receiving node should act as this node's home agent . The destination of the packet carrying this message MUST be that of a router sharing the same subnet prefix as the home address of the mobile node in the binding . 	302	0
3775	L	The Link-Local Address Compatibility ( L ) bit is set when the home address reported by the mobile node has the same interface identifier as the mobile node's link-local address . 	301	0
3775	K	If this bit is cleared , the protocol used for establishing the IPsec security associations between the mobile node and the home agent does not survive movements . It may then have to be rerun . ( Note that the IPsec security associations themselves are expected to survive movements .) If manual IPsec configuration is used , the bit MUST be cleared . 	303	0
3775	Reserved	These fields are unused . They MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
3775	Sequence #	A 16-bit unsigned integer used by the receiving node to sequence Binding Updates and by the sending node to match a returned Binding Acknowledgement with this Binding Update . 	200	0
3775	Lifetime	16-bit unsigned integer . The number of time units remaining before the binding MUST be considered expired . A value of zero indicates that the Binding Cache entry for the mobile node MUST be deleted . ( In this case the specified care-of address MUST also be set equal to the home address .) One time unit is 4 seconds . 	120	0
3775	Mobility Options	Variable-length field of such length that the complete Mobility Header is an integer multiple of 8 octets long . This field contains zero or more TLV-encoded mobility options . The encoding and format of defined options are described in Section 6.2 . The receiver MUST ignore and skip any options which it does not understand . 	400	0
3775	K	If this bit is cleared , the protocol used by the home agent for establishing the IPsec security associations between the mobile node and the home agent does not survive movements . It may then have to be rerun . ( Note that the IPsec security associations themselves are expected to survive movements .) 	303	0
3775	Reserved	These fields are unused . They MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
3775	Status	8-bit unsigned integer indicating the disposition of the Binding Update . Values of the Status field less than 128 indicate that the Binding Update was accepted by the receiving node . Values greater than or equal to 128 indicate that the Binding Update was rejected by the receiving node . The following Status values are currently defined : 	240	0
3775	Sequence #	The Sequence Number in the Binding Acknowledgement is copied from the Sequence Number field in the Binding Update . It is used by the mobile node in matching this Binding Acknowledgement with an outstanding Binding Update . 	231	0
3775	Lifetime	The granted lifetime , in time units of 4 seconds , for which this node SHOULD retain the entry for this mobile node in its Binding Cache . 	120	0
3775	Mobility Options	Variable-length field of such length that the complete Mobility Header is an integer multiple of 8 octets long . This field contains zero or more TLV-encoded mobility options . The encoding and format of defined options are described in Section 6.2 . The receiver MUST ignore and skip any options which it does not understand . 	400	0
3775	Status	8-bit unsigned integer indicating the reason for this message . The following values are currently defined : 	231	0
3775	Reserved	A 8-bit field reserved for future use . The value MUST be initialized to zero by the sender , and MUST be ignored by the receiver . 	500	0
3775	Home Address	The home address that was contained in the Home Address destination option . The mobile node uses this information to determine which binding does not exist , in cases where the mobile node has several home addresses . 	230	0
3775	Mobility Options	Variable-length field of such length that the complete Mobility Header is an integer multiple of 8 octets long . This field contains zero or more TLV-encoded mobility options . The receiver MUST ignore and skip any options which it does not understand . 	400	0
3775	Mobility Options	Mobility messages can include zero or more mobility options . This allows optional fields that may not be needed in every use of a particular Mobility Header , as well as future extensions to the format of the messages . Such options are included in the Message Data field of the message itself , after the fixed portion of the message data specified in the message subsections of Section 6.1 . 	400	0
3775	Option Type	8-bit identifier of the type of mobility option . When processing a Mobility Header containing an option for which the Option Type value is not recognized by the receiver , the receiver MUST quietly ignore and skip over the option , correctly handling any remaining options in the message . 	231	0
3775	Option Length	8-bit unsigned integer , representing the length in octets of the mobility option , not including the Option Type and Option Length fields . 	100	0
3775	Option Data	Option Data 	400	0
3775	Alternate Care-of Address	The Alternate Care-of Address option has an alignment requirement of 8n+6 . Its format is as follows : 	400	0
3775	Option Type	Option Type 	231	0
3775	Option Length	8-bit unsigned integer . Length of the option , in octets , excluding the Option Type and Option Length fields . This field MUST be set to 16 . 	100	0
3775	Home Address	The home address of the mobile node sending the packet . This address MUST be a unicast routable address . 	230	0
3775	Next Header	8-bit selector . Identifies the type of header immediately following the routing header . Uses the same values as the IPv6 Next Header field [ 11 ]. 	231	0
3775	Hdr Ext Len	2 ( 8-bit unsigned integer); length of the routing header in 8 - octet units , not including the first 8 octets . 	100	0
3775	Routing Type	Routing Type 	240	0
3775	Segments Left	Segments Left 	301	0
3775	Reserved	32-bit reserved field . The value MUST be initialized to zero by the sender , and MUST be ignored by the receiver . 	500	0
3775	Home Address	Home Address 	230	0
3775	Type	Type 	240	0
3775	Code	Code 	231	0
3775	Checksum	Checksum 	301	0
3775	Identifier	An identifier to aid in matching Home Agent Address Discovery Reply messages to this Home Agent Address Discovery Request message . 	231	0
3775	Reserved	This field is unused . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
3775	Type	Type 	240	0
3775	Code	Code 	231	0
3775	Checksum	Checksum 	301	0
3775	Identifier	The identifier from the invoking Home Agent Address Discovery Request message . 	231	0
3775	Reserved	This field is unused . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
3775	Home Agent Addresses	A list of addresses of home agents on the home link for the mobile node . The number of addresses presented in the list is indicated by the remaining length of the IPv6 packet carrying the Home Agent Address Discovery Reply message . 	230	0
3775	Type	Type 	240	0
3775	Code	Code 	231	0
3775	Checksum	Checksum 	301	0
3775	Identifier	An identifier to aid in matching a future Mobile Prefix Advertisement to this Mobile Prefix Solicitation . 	231	0
3775	Reserved	This field is unused . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
3775	Type	Type 	240	0
3775	Code	Code 	231	0
3775	Checksum	Checksum 	301	0
3775	Identifier	An identifier to aid in matching this Mobile Prefix Advertisement to a previous Mobile Prefix Solicitation . 	231	0
3775	M	1-bit Managed Address Configuration flag . When set , hosts use the administered ( stateful ) protocol for address autoconfiguration in addition to any addresses autoconfigured using stateless address autoconfiguration . The use of this flag is described in [ 12 , 13 ]. 	231	0
3775	O	1-bit Other Stateful Configuration flag . When set , hosts use the administered ( stateful ) protocol for autoconfiguration of other ( non-address ) information . The use of this flag is described in [ 12 , 13 ]. 	231	0
3775	Reserved	This field is unused . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
3775	H	The Home Agent ( H ) bit is set in a Router Advertisement to indicate that the router sending this Router Advertisement is also functioning as a Mobile IPv6 home agent on this link . 	302	0
3775	Reserved	Reduced from a 6-bit field to a 5-bit field to account for the addition of the above bit . 	231	0
3775	R	1-bit router address flag . When set , indicates that the Prefix field contains a complete IP address assigned to the sending router . The indicated prefix is the first Prefix Length bits of the Prefix field . The router IP address has the same scope and conforms to the same lifetime values as the advertised prefix . This use of the Prefix field is compatible with its use in advertising the prefix itself , since Prefix Advertisement uses only the leading bits . Interpretation of this flag bit is thus independent of the processing required for the On-Link ( L ) and Autonomous Address-Configuration ( A ) flag bits . 	230	0
3775	Reserved	Reduced from a 6-bit field to a 5-bit field to account for the addition of the above bit . 	231	0
3775	Type	Type 	240	0
3775	Length	8-bit unsigned integer . The length of the option ( including the type and length fields ) is in units of 8 octets . The value of this field MUST be 1 . 	100	0
3775	Reserved	This field is unused . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
3775	Advertisement Interval	32-bit unsigned integer . The maximum time , in milliseconds , between successive unsolicited Router Advertisement messages sent by this router on this network interface . Using the conceptual router configuration variables defined by Neighbor Discovery [ 12 ], this field MUST be equal to the value MaxRtrAdvInterval , expressed in milliseconds . 	120	0
3775	Type	Type 	240	0
3775	Length	8-bit unsigned integer . The length of the option ( including the type and length fields ) in units of 8 octets . The value of this field MUST be 1 . 	100	0
3775	Reserved	This field is unused . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
3775	Home Agent Preference	16-bit unsigned integer . The preference for the home agent sending this Router Advertisement , for use in ordering the addresses returned to a mobile node in the Home Agent Addresses field of a Home Agent Address Discovery Reply message . Higher values mean more preferable . If this option is not included in a Router Advertisement in which the Home Agent ( H ) bit is set , the preference value for this home agent MUST be considered to be 0 . Greater values indicate a more preferable home agent than lower values . 	231	0
3775	Home Agent Lifetime	16-bit unsigned integer . The lifetime associated with the home agent in units of seconds . The default value is the same as the Router Lifetime , as specified in the main body of the Router Advertisement . The maximum value corresponds to 18.2 hours . A value of 0 MUST NOT be used . The Home Agent Lifetime applies only to this router's usefulness as a home agent; it does not apply to information contained in other message fields or options . 	100	0
3775	R	o The Solicited Flag ( S ) in the Advertisement MUST NOT be set , since it was not solicited by any Neighbor Solicitation . 	231	0
3775	H	Unless a binding has been established between the mobile node and a correspondent node , traffic from the mobile node to the correspondent node goes through a reverse tunnel . Home agents MUST support reverse tunneling as follows : 	400	0
3775	Preferred Lifetime	where MaxMobPfxAdvInterval is as defined in Section 12 . Then compute the final delay for the advertisement : 	110	0
3775	H	o The Home Registration ( H ) bit MUST be set in the Binding Update . 	302	0
3775	A	o The packet MUST contain a Home Address destination option , giving the mobile node's home address for the binding . 	230	0
3790	Version	This document describes of version of IGMP used for IPv4 multicast . This is not compatible with IPv6 . 	220	0
3790	Version	7.3.22 . RFC 3376 Internet Group Management Protocol , Version 3 	220	0
3792	Type	Type 	240	0
3792	Length	Length 	100	0
3792	Address	Address 	202	0
3792	Type	Type 	240	0
3792	Length	Length 	100	0
3792	Address	The Address field is four octets . The value 0xFFFFFFFF indicates that the NAS Should allow the user to select an address ( e.g ., Negotiated ). The value 0xFFFFFFFE indicates that the NAS should select an address for the user ( e.g ., Assigned from a pool of addresses kept by the NAS ). Other valid values indicate that the NAS should use that value as the user's IP address . 	240	0
3792	Type	Type 	240	0
3792	Length	Length 	100	0
3792	Address	The Address field is four octets specifying the IP netmask of the user . 	230	0
3792	Type	Type 	240	0
3792	Length	Length 	100	0
3792	Address	The Address field is four octets . The value 0xFFFFFFFF indicates that the NAS SHOULD allow the user to select an address . The value 0 indicates that the NAS SHOULD select a host to connect the user to . Other values indicate the address the NAS SHOULD connect the user to . 	210	0
3792	Type	Type 	240	0
3792	Length	Length 	100	0
3795	Free	Free 	303	0
3795	IP address	IP address 	230	0
3807	EFA	Envelope Function Address ( EFA ) - 13 bit number , ranging from 0 to 8191 ( decimal ). An EFA uniquely identifies one of the five V5.2 protocols , or an ISDN agent attached to an AN . The following list contains the possible values for the EFA : 	230	0
3807	Link Identifier	Link Identifier - Identifier for an E1 link on the SG ( 27 bits ). MUST be unique on the SG . This Link Identifier MUST match the Link Identifier used in the Link Management Messages defined later in this document . 	230	0
3807	Chnl ID	Chnl ID - Channel Identifier ( 5 bits ). This is equal to the time - slot number of the addressed time slot . Possible values are 15 , 16 and 31 representing the possible time slots for C-channels on a V5 interface . For Link Management Messages , the Chnl ID MUST be set to 0 . All other values are reserved for future use . 	121	0
3810	Code	5.1.1 . Code 	240	0
3810	Checksum	The standard ICMPv6 checksum; it covers the entire MLDv2 message , plus a " pseudo-header " of IPv6 header fields [ RFC2463 ]. For computing the checksum , the Checksum field is set to zero . When a packet is received , the checksum MUST be verified before processing it . 	400	0
3810	Maximum Response Code	The Maximum Response Code field specifies the maximum time allowed before sending a responding Report . The actual time allowed , called the Maximum Response Delay , is represented in units of milliseconds , and is derived from the Maximum Response Code as follows : 	100	0
3810	Reserved	5.1.4 . Reserved 	240	0
3810	Multicast Address	For a General Query , the Multicast Address field is set to zero . For a Multicast Address Specific Query or Multicast Address and Source Specific Query , it is set to the multicast address being queried ( see section 5.1.10 , below ). 	210	0
3810	QRV	If non-zero , the QRV field contains the [ Robustness Variable ] value used by the Querier . If the Querier's [ Robustness Variable ] exceeds 7 ( the maximum value of the QRV field ), the QRV field is set to zero . 	301	0
3810	QQIC	The Querier's Query Interval Code field specifies the [ Query Interval ] used by the Querier . The actual interval , called the Querier's Query Interval ( QQI ), is represented in units of seconds , and is derived from the Querier's Query Interval Code as follows : 	231	0
3810	Reserved	The Reserved fields are set to zero on transmission , and ignored on reception . 	500	0
3810	Checksum	The standard ICMPv6 checksum; it covers the entire MLDv2 message , plus a " pseudo-header " of IPv6 header fields [ RFC2460 , RFC2463 ]. In order to compute the checksum , the Checksum field is set to zero . When a packet is received , the checksum MUST be verified before processing it . 	301	0
3810	Record Type	It specifies the type of the Multicast Address Record . See section 5.2.12 for a detailed description of the different possible Record Types . 	231	0
3810	Aux Data Len	The Aux Data Len field contains the length of the Auxiliary Data Field in this Multicast Address Record , in units of 32-bit words . It may contain zero , to indicate the absence of any auxiliary data . 	100	0
3810	Multicast Address	The Multicast Address field contains the multicast address to which this Multicast Address Record pertains . 	230	0
3810	Auxiliary Data	The Auxiliary Data field , if present , contains additional information that pertain to this Multicast Address Record . The protocol specified in this document , MLDv2 , does not define any auxiliary data . Therefore , implementations of MLDv2 MUST NOT include any auxiliary data ( i.e ., MUST set the Aux Data Len field to zero ) in any transmitted Multicast Address Record , and MUST ignore any such data present in any received Multicast Address Record . The semantics and the internal encoding of the Auxiliary Data field are to be defined by any future version or extension of MLD that uses this field . 	400	0
3810	Multicast Address	Multicast Address and Source All nodes on the link that had Specific Query expressed interest in the source and multicast address 	230	0
3825	LaRes	LaRes : Latitude resolution . 6 bits indicating the number of valid bits in the fixed-point value of Latitude . 	200	0
3825	Latitude	Latitude : a 34 bit fixed point value consisting of 9 bits of integer and 25 bits of fraction . Latitude SHOULD be normalized to within +/- 90 degrees . Positive numbers are north of the equator and negative numbers are south of the equator . 	231	0
3825	LoRes	LoRes : Longitude resolution . 6 bits indicating the number of valid bits in the fixed-point value of Longitude . 	200	0
3825	Longitude	Longitude : a 34 bit fixed point value consisting of 9 bits of integer and 25 bits of fraction . Longitude SHOULD be normalized to within +/- 180 degrees . Positive values are East of the prime meridian and negative ( 2s complement ) numbers are West of the prime meridian . 	110	0
3825	Altitude	AltRes : Altitude resolution . 6 bits indicating the number of valid bits in the altitude . Values above 30 ( decimal ) are undefined and reserved . 	110	0
3825	AltRes	AltRes : Altitude resolution . 6 bits indicating the number of valid bits in the altitude . Values above 30 ( decimal ) are undefined and reserved . 	110	0
3825	AT	AT : Altitude Type for altitude . Codes defined are : 	231	0
3825	Datum	The datum must include both a horizontal and a vertical reference . Since the WGS 84 reference datum is three-dimensional , it includes both . For any additional datum parameters , the datum codepoint must specify both horizontal datum and vertical datum references . 	400	0
3825	Altitude	In this example , we are not inside a structure , therefore we will assume an altitude value of 15 meters , interpolated from the US Geological survey map , Washington West quadrangle . 	200	0
3825	Altitude	In this example , we are inside a structure , therefore we will assume an altitude value of 103 to indicate the floor we are on . The Altitude Type value is 2 , indicating floors . The AltRes field would indicate that all bits in the Altitude field are true , as we want to accurately represent the floor of the structure where we are located . 	210	0
3846	Type	Type 136 ( skippable ) [ 5 ]. 	302	0
3846	Length	Length 8-bit unsigned integer . Length of the extension , in octets , excluding the extension Type and the extension Length fields . This field MUST be set to 1 plus the total length of the NAI field . 	100	0
3846	Sub-Type	Sub-Type This field describes the particular type NAI which is carried in the NAI field . 	231	0
3868	Routing Context	Routing Context - An Application Server Process may be configured to process traffic within more than one Application Server . In this case , the Routing Context parameter is exchanged between the SGP and the ASP ( or between two ASPs ), identifying the relevant Application Server . From the perspective of an SGP/ASP , the Routing Context uniquely identifies the range of traffic associated with a particular Application Server , which the ASP is configured to receive . There is a 1:1 relationship between a Routing Context value and a Routing Key within an AS . Therefore the Routing Context can be viewed as an index into an AS Table containing the AS Routing Keys . 	400	0
3868	Network Appearance	Network Appearance - The Network Appearance is an SUA local reference ( typically an integer ) shared by SG and AS that together with a Signalling Point Code uniquely identifies an SS7 node by indicating the specific SS7 network it belongs to . 	230	0
3868	M	M-SCTP_ESTABLISH request Direction : LM -> SUA Purpose : LM requests ASP to establish an SCTP association with its peer . 	400	0
3868	M	M-SCTP_ESTABLISH confirm Direction : SUA -> LM Purpose : ASP confirms to LM that it has established an SCTP association with its peer . 	302	0
3868	M	M-SCTP_ESTABLISH indication Direction : SUA -> LM Purpose : SUA informs LM that a remote ASP has established an SCTP association . 	400	0
3868	M	M-SCTP_RELEASE request Direction : LM -> SUA Purpose : LM requests ASP to release an SCTP association with its peer . 	400	0
3868	M	M-SCTP_RELEASE confirm Direction : SUA -> LM Purpose : ASP confirms to LM that it has released SCTP association with its peer . 	302	0
3868	M	M-SCTP_RELEASE indication Direction : SUA -> LM Purpose : SUA informs LM that a remote ASP has released an SCTP Association or the SCTP association has failed . 	400	0
3868	M	M-SCTP RESTART indication Direction : SUA -> LM Purpose : SUA informs LM that an SCTP restart indication has been received . 	210	0
3868	M	M-SCTP_STATUS request Direction : LM -> SUA Purpose : LM requests SUA to report the status of an SCTP association . 	400	0
3868	M	M-SCTP_STATUS confirm Direction : SUA -> LM Purpose : SUA responds with the status of an SCTP association . 	301	0
3868	M	M-SCTP STATUS indication Direction : SUA -> LM Purpose : SUA reports the status of an SCTP association . 	231	0
3868	M	M-ASP_STATUS request Direction : LM -> SUA Purpose : LM requests SUA to report the status of a local or remote ASP . 	400	0
3868	M	M-ASP_STATUS confirm Direction : SUA -> LM Purpose : SUA reports status of local or remote ASP . 	301	0
3868	M	M-AS_STATUS request Direction : LM -> SUA Purpose : LM requests SUA to report the status of an AS . 	240	0
3868	M	M-AS_STATUS confirm Direction : SUA -> LM Purpose : SUA reports the status of an AS . 	301	0
3868	M	M-NOTIFY indication Direction : SUA -> LM Purpose : SUA reports that it has received a Notify message from its peer . 	301	0
3868	M	M-ERROR indication Direction : SUA -> LM Purpose : SUA reports that it has received an Error message from its peer or that a local operation has been unsuccessful . 	210	0
3868	M	M-ASP_UP request Direction : LM -> SUA Purpose : LM requests ASP to start its operation and send an ASP Up message to its peer . 	400	0
3868	M	M-ASP_UP confirm Direction : SUA -> LM Purpose : ASP reports that is has received an ASP UP Ack message from its peer . 	301	0
3868	M	M-ASP_UP indication Direction : SUA -> LM Purpose : SUA reports it has successfully processed an incoming ASP Up message from its peer . 	400	0
3868	M	M-ASP_DOWN request Direction : LM -> SUA Purpose : LM requests ASP to stop its operation and send an ASP Down message to its peer . 	210	0
3868	M	M-ASP_DOWN confirm Direction : SUA -> LM Purpose : ASP reports that is has received an ASP Down Ack message from its peer . 	301	0
3868	M	M-ASP_DOWN indication Direction : SUA -> LM Purpose : SUA reports it has successfully processed an incoming ASP Down message from its peer , or the SCTP association has been lost/reset . 	301	0
3868	M	M-ASP_ACTIVE request Direction : LM -> SUA Purpose : LM requests ASP to send an ASP Active message to its peer . 	400	0
3868	M	M-ASP_ACTIVE confirm Direction : SUA -> LM Purpose : ASP reports that is has received an ASP Active Ack message from its peer . 	400	0
3868	M	M-ASP_ACTIVE indication Direction : SUA -> LM Purpose : SUA reports it has successfully processed an incoming ASP Active message from its peer . 	400	0
3868	M	M-ASP_INACTIVE request Direction : LM -> SUA Purpose : LM requests ASP to send an ASP Inactive message to its peer . 	400	0
3868	M	M-ASP_INACTIVE confirm Direction : LM -> SUA Purpose : ASP reports that is has received an ASP Inactive Ack message from its peer . 	301	0
3868	M	M-ASP_INACTIVE indication Direction : SUA -> LM Purpose : SUA reports it has successfully processed an incoming ASP Inactive message from its peer . 	400	0
3868	M	M-AS_ACTIVE indication Direction : SUA -> LM Purpose : SUA reports that an AS has moved to the AS-ACTIVE state . 	301	0
3868	M	M-AS_INACTIVE indication Direction : SUA -> LM Purpose : SUA reports that an AS has moved to the AS-INACTIVE state . 	301	0
3868	M	M-AS_DOWN indication Direction : SUA -> LM Purpose : SUA reports that an AS has moved to the AS-DOWN state . 	301	0
3868	M	M-RK_REG request Direction : LM -> SUA Purpose : LM requests ASP to register RK(s ) with its peer by sending REG REQ message . 	400	0
3868	M	M-RK_REG confirm Direction : SUA -> LM Purpose : ASP reports that it has received REG RSP message with registration status as successful from its peer . 	301	0
3868	M	M-RK_REG indication Direction : SUA -> LM Purpose : SUA informs LM that it has successfully processed an incoming REG REQ message . 	301	0
3868	M	M-RK_DEREG request Direction : LM -> SUA Purpose : LM requests ASP to deregister RK(s ) with its peer by sending DEREG REQ message . 	301	0
3868	M	M-RK_DEREG confirm Direction : SUA -> LM Purpose : ASP reports that it has received DEREG RESP message with deregistration status as successful from its peer . 	302	0
3868	M	M-RK_DEREG indication Direction : SUA -> LM Purpose : SUA informs LM that it has successfully processed an incoming DEREG REQ from its peer . 	400	0
3868	Message Length	The Message Length defines the length of the message in octets , including the header and including all padding bytes . Message Length is a 32-bit identifier . 	100	0
3868	Parameter Tag	Tag field is a 16-bit identifier of the type of parameter . It takes a value of 0 to 65535 . 	231	0
3868	Parameter Length	The Parameter Length field contains the size of the parameter in bytes , including the Parameter Tag , Parameter Length , and Parameter Value fields . The Parameter Length does not include any padding bytes . However , composite parameters will contain all padding bytes , since all parameters contained within this composite parameter will be considered multiples of 4 bytes . 	100	0
3868	Parameter Value	The Parameter Value field contains the actual information to be transfered in the parameter . 	230	0
3868	Info String	The optional INFO String parameter can carry any meaningful UTF-8 [ 3629 ] character string along with the message . Length of the INFO String parameter is from 0 to 255 octets . No procedures are presently identified for its use but service providers may use the INFO String for debugging purposes . 	231	0
3868	Routing Context	The Routing Context parameter contains ( a list of ) 4-byte unsigned integers indexing the Application Server traffic that the sending ASP is configured/registered to receive . There is a one-to-one relationship between an index entry and a Routing Key or AS Name . 	230	0
3868	Diagnostic Information	The Diagnostic Information can be used to convey any information relevant to an error condition , to assist in the identification of the error condition . In the case of an Adaptation Layer Identifier or Traffic Handling Mode , the Diagnostic Information includes the received parameter . In the other cases , the Diagnostic information may be the first 40 bytes of the offending message . 	400	0
3868	Heartbeat Data	The sending node defines the Heartbeat Data field contents . It may include a Heartbeat Sequence Number and/or Timestamp , or other implementation specific details . 	400	0
3868	Traffic Mode Type	The Traffic Mode Type parameter identifies the traffic mode of operation of the ASP within an AS . 	231	0
3868	Error Code	The Error Code parameter indicates the reason for the Error Message . The Error parameter value can be one of the following values : 	231	0
3868	Status	The Status parameter identifies the type of the status that is being notified and the Status ID . 	231	0
3868	ASP Identifier	3.9.17 . ASP Identifier 	202	0
3868	Affected Point Code	The Affected Point Code Destinations parameter contains a list of Affected Point Code fields , each a three-octet parameter to allow for 14 -, 16 - and 24-bit binary formatted SS7 Point Codes . Affected Point Codes that are less than 24-bits are padded on the left to the 24-bit boundary . 	231	0
3868	Mask	The Mask parameter can be used to identify a contiguous range of Affected Destination Point Codes , independent of the point code format . Identifying a contiguous range of Affected PCs may be useful when reception of an MTP3 management message or a linkset event simultaneously affects the availability status of a series of destinations at an SG . 	400	0
3868	Correlation ID	The Correlation ID is a 32-bit identifier that is attached to CLDT messages to indicate to a newly entering ASP in a Broadcast AS where in the traffic flow of CLDT messages the ASP is joining . It is attached to the first CLDT message sent to an ASP by an SG after sending an ASP Active Ack or otherwise starting traffic to an ASP . The Correlation ID is only significant within a Routing Context . 	230	0
3868	Routing Context	Routing Context contains the Routing Context value of the matching Routing key to deregister , as found in the DEREG REQ message . 	230	0
3868	Deregistration Status	Deregistration Status parameter indicates the success or the reason for failure of the deregistration . 	302	0
3868	Registration Status	3.9.22 . Registration Status 	302	0
3868	Registration Status	The Registration Status field indicates the success or the reason for failure of a registration request . 	302	0
3868	Deregistration Status	3.9.23 . Deregistration Status 	240	0
3868	Deregistration Status	The Deregistration Result Status field indicates the success or the reason for failure of the deregistration . 	302	0
3868	Local Routing Key Identifier	The Local Routing Key Identifier field is a 32-bits unsigned integer . The Identifier value is assigned by the ASP and is used to correlate the response in a REG RSP message with the original registration request . The Identifier value must remain unique until the REG RSP message is received . 	230	0
3868	Source Address	3.10.2 . Source Address 	240	0
3868	Routing Indicator	3.10.2.1 . Routing Indicator 	240	0
3868	Reserved	Reserved 0 Route on Global Title 1 Route on SSN + PC 2 Route on Hostname 3 Route on SSN + IP Address 4 	240	0
3868	Address Indicator	This parameter is needed for interworking with SS7 networks . The address indicator specifies what address parameters are actually received in the SCCP address from the SS7 network , or are to be populated in the SCCP address when the message is sent into the SS7 network . The value of the routing indicator needs to be taken into account . It is used in the ASP to SG direction . For example , the PC parameter is present in the destination address of the CLDT sent from ASP->SG , but bit 2 is set to " 0 " meaning " do not populate this in the SCCP called party address ". The effect is that the SG only uses the PC to populate the MTP routing label DPC field , but does not include it in the SCCP called party address . 	230	0
3868	GTI	0000 Invalid 0001 Nature of Address is taken over . It is implicitly assumed that the Translation Type = Unknown and Numbering Plan = E.164 ( value 1 ). 0010 This is most commonly used in North American networks . The Translation Type implicitly determines Nature of Address and Numbering Plan . This data can be configured in the SG . The number of digits is always even and determined by the SCCP address length . 0011 Numbering Plan and Translation Type are taken over . It is implicitly assumed that the Nature of Address = Unknown . 0100 This format is used in international networks and most commonly in networks outside North America . All information to populate the source address is present in the SCCP Address . 	240	0
3868	Point Code	See chapter 3.9.18 Affected Point Code for the layout of the Point Code field . 	231	0
3868	Host Name	This field contains a host name in " host name syntax " per RFC 1123 Section 2.1 [ 1123 ]. The method for resolving the host name is out of scope for this document . 	231	0
3868	Destination Address	The format of this parameter is identical to the Source Address parameter . 	231	0
3868	Source Reference Number	The source reference number is a 4 octet long integer . This is allocated by the source SUA instance . 	231	0
3868	Destination Reference Number	The destination reference number is a 4 octet long integer . This is allocated by the destination SUA instance . 	400	0
3868	SCCP Cause	This parameter bundles the SCCP parameters Release cause , Return cause , Reset cause , Error cause and Refusal cause . 	240	0
3868	Sequence Number	This parameter is used to indicate whether " more " data will follow in subsequent CODT messages , and/or to number each CODT message sequentially for the purpose of flow control . It contains the received as well as the sent sequence number , P(R ) and P(S ) in Q.713 , chapters 3.7 and 3.9 . 	200	0
3868	Receive Sequence Number	This parameter is used exclusively for protocol class 3 in the data acknowledgement message to indicate the lower edge of the receiving window . See Q.713 , chapter 3.9 . 	231	0
3868	ASP Capabilities	This parameter is used so that the ASP can report its capabilities regarding SUA for supporting different protocol classes and interworking scenarios . 	231	0
3868	a	a - Protocol Class 3 b - Protocol Class 2 c - Protocol Class 1 d - Protocol Class 0 	240	0
3868	Interworking	Interworking 	400	0
3868	Credit	The length of the credit field is one octet . See ITU-T Q.713 Chapter 3.10 . The parameter is used for protocol class 3 exclusively . 	100	0
3868	Data	The Data parameter field contains the SS7 SCCP-User application message , for example an INAP/TCAP message . 	400	0
3868	Network Appearance	3.10.13 . Network Appearance 	240	0
3868	SMI	3.10.18 . SMI 	240	0
3868	SMI	Subsystem Multiplicity Indicator ( SMI ) can have the following values : 	231	0
3868	Importance	3.10.19 . Importance 	240	0
3868	Importance	Possible values of the Importance Parameter are between 0 and 7 , where the value of 0 indicates the least important and 7 indicates the most important . 	210	0
3868	Message Priority	3.10.20 . Message Priority ( or Priority ) 	240	0
3868	Protocol Class	3.10.21 . Protocol Class 	240	0
3868	Sequence Control	3.10.22 . Sequence Control 	240	0
3868	Sequence Control	The field is coded with the value of the sequence control parameter associated with a group of messages and are chosen so as to ensure proper loadsharing of message groups over SLS values while ensuring that sequence control values within message groups have the sequence control value coded with the same value as the initial message of the message group . 	231	0
3868	Segmentation	The first/remaining segments field is formatted as follows : bit 8 ( MSB ): indicates whether this is the first segment ( 1 ) or not ( 0 ) 	210	0
3868	Congestion Level	3.10.24 . Congestion Level 	240	0
3913	Length	Length : This 2-octet unsigned integer indicates the total length of the message , including the header , in octets . Thus , e.g ., it allows one to locate in the transport-level stream the start of the next message . The value of the Length field must always be at least 4 and no greater than 4096 , and may be further constrained , depending on the message type . No " padding " of extra data after the message is allowed , so the Length field must have the smallest value required given the rest of the message . 	100	0
3913	Type	Type : This 1-octet unsigned integer indicates the type code of the message . The following type codes are defined : 	231	0
3913	Version	Version : This 1-octet unsigned integer indicates the protocol version number of the message . The current BGMP version number is 1 . 	220	0
3913	AddrFam	AddrFam : The IANA-assigned address family number of the BGMP Identifier . These include ( among others ): 	231	0
3913	Hold Time	Hold Time : This 2-octet unsigned integer indicates the number of seconds that the sender proposes for the value of the Hold Timer . Upon receipt of an OPEN message , a BGMP speaker MUST calculate the value of the Hold Timer by using the smaller of its configured Hold Time and the Hold Time received in the OPEN message . The Hold Time MUST be either zero or at least three seconds . An implementation may reject connections on the basis of the Hold Time . The calculated value indicates the maximum number of seconds that may elapse between the receipt of successive KEEPALIVE , and/or UPDATE messages by the sender . 	121	0
3913	EnTyp	EnTyp : 0 - All 1's Mask . The Mask field is 0 bytes long . 1 - Mask length included . The Mask field is 4 bytes long , and contains the mask length , in bits . 2 - Full Mask included . The Mask field is the same length as the Address field , and contains the full bitmask . 	240	0
3913	AddrFam	AddrFam : The IANA-assigned address family number of the encoded prefix . 	230	0
3913	Length	Length : The Length is the length of the entire attribute , including the length , type , and data fields . If other attributes are nested within the data field , the length includes the size of all such nested attributes . 	100	0
3913	Encoded-Address-Prefix	Encoded-Address-Prefix The Source-prefix in the format described above . Nested Attributes No GROUP , SOURCE , or FWDR_PREF attributes may be immediately nested within a SOURCE attribute . 	230	0
3913	Preference Value	Preference Value A 32-bit non-negative integer . Nested Attributes No JOIN , PRUNE , or FWDR_PREF attributes may be immediately nested within a FWDR_PREF attribute . 	400	0
3913	P	P The PR-bit value . Nested Attributes No attributes in the document other than SOURCE may be immediately nested within a POISON_REVERSE attribute . 	230	0
3913	O	O-bit : Open-bit . If clear , the connection will be closed . If set , indicates the error is not fatal . 	302	0
3913	Error subcode	Error subcode : This 1-octet unsigned integer provides more specific information about the nature of the reported error . Each Error Code may have one or more Error Subcodes associated with it . If no appropriate Error Subcode is defined , then a zero ( Unspecific ) value is used for the Error Subcode field . The notation ( MC ) below indicates the error is a fatal one and the O-bit must be clear . Non-fatal subcodes SHOULD be sent with the O-bit set . 	231	0
3925	subopt-code	subopt-code The code for the encapsulated option 	230	0
3925	subopt-len	subopt-len An unsigned integer giving the length of the option-data field in this encapsulated option in octets 	100	0
3925	sub-option-data	sub-option-data Data area for the encapsulated option 	400	0
3926	V	This document specifies FLUTE version 1 . Hence in any ALC packet that carries FDT Instance and that belongs to the file delivery session as specified in this specification MUST set this field to ' 1 '. 	220	0
3926	FDT Instance ID	For each file delivery session the numbering of FDT Instances starts from ' 0 ' and is incremented by one for each subsequent FDT Instance . After reaching the maximum value ( 2^20-1 ), the numbering starts again from ' 0 '. When wraparound from 2^20-1 to 0 occurs , 0 is considered higher than 2^20-1 . A new FDT Instance reusing a previous FDT Instance ID number , due to wraparound , may not implicitly expire the previous FDT Instance with the same ID . It would be reasonable for 	201	0
3926	CENC	This field signals the content encoding algorithm used in the FDT Instance payload . The definition of this field is outside the scope of this specification . Applicable content encoding algorithms include , for example , ZLIB [ 10 ], DEFLATE [ 16 ] and GZIP [ 17 ]. 	400	0
3926	Reserved	Reserved , 16 bits : 	231	0
3926	General EXT_FTI format	The general EXT_FTI format specifies the structure and those attributes of FEC Object Transmission Information that are applicable to any FEC Encoding ID . 	400	0
3926	HEL	The length of the whole Header Extension field , expressed in multiples of 32-bit words . This length includes the FEC Encoding ID specific format part . 	100	0
3926	Transfer Length	The length of the transport object that carries the file in bytes . ( This is the same as the file length if the file is not content encoded .) 	100	0
3926	FEC Instance ID	This field is used for FEC Instance ID . It is only present if the value of FEC Encoding ID is in the range of 128-255 . When the value of FEC Encoding ID is in the range of 0-127 , this field is set to 0 . 	302	0
3926	Encoding Symbol Length	Encoding Symbol Length , 16 bits : 	100	0
3926	Maximum Source Block Length	Maximum Source Block Length , 32 bits : 	100	0
3926	Encoding Symbol Length	Encoding Symbol Length , 16 bits : 	100	0
3926	Maximum Source Block Length	Maximum Source Block Length , 16 bits : 	100	0
3931	Session ID	A 32-bit field containing a non-zero identifier for a session . L2TP sessions are named by identifiers that have local significance only . That is , the same logical session will be given different Session IDs by each end of the control connection for the life of the session . When the L2TP control connection is used for session establishment , Session IDs are selected and exchanged as Local Session ID AVPs during the creation of a session . The Session ID alone provides the necessary context for all further packet processing , including the presence , size , and value of the Cookie , the type of L2-Specific Sublayer , and the type of payload being tunneled . 	202	0
3931	Ns	The message sequence number , Ns , begins at 0 . Each subsequent message is sent with the next increment of the sequence number . The sequence number is thus a free-running counter represented modulo 65536 . The sequence number in the header of a received message is considered less than or equal to the last received number if its value lies in the range of the last received number and the preceding 32767 values , inclusive . For example , if the last received sequence number was 15 , then messages with sequence numbers 0 through 15 , as well as 32784 through 65535 , would be considered less than or equal . Such a message would be considered a duplicate of a message already received and ignored from processing . However , in order to ensure that all messages are acknowledged properly ( particularly in the case of a lost ACK message ), receipt of duplicate messages MUST be acknowledged by the reliable delivery mechanism . This acknowledgment may either piggybacked on a message in queue or sent explicitly via an ACK message . 	201	0
3931	M	Mandatory ( M ) bit : Controls the behavior required of an implementation that receives an unrecognized AVP . The M bit of a given AVP MUST only be inspected and acted upon if the AVP is unrecognized ( see Section 5.2 ). 	230	0
3931	M	Mandatory ( M ) bit : Controls the behavior required of an implementation that receives an unrecognized AVP . The M bit of a given AVP MUST only be inspected and acted upon if the AVP is unrecognized ( see Section 5.2 ). 	230	0
3931	H	Hidden ( H ) bit : Identifies the hiding of data in the Attribute Value field of an AVP . This capability can be used to avoid the passing of sensitive data , such as user passwords , as cleartext in an AVP . Section 5.3 describes the procedure for performing AVP hiding . 	230	0
3931	Length	Length : Contains the number of octets ( including the Overall Length and bit mask fields ) contained in this AVP . The Length may be calculated as 6 + the length of the Attribute Value field in octets . 	100	0
3931	Vendor ID	Vendor ID : The IANA-assigned " SMI Network Management Private Enterprise Codes " [ RFC1700 ] value . The value 0 , corresponding to IETF-adopted attribute values , is used for all AVPs defined within this document . Any vendor wishing to implement its own L2TP extensions can use its own Vendor ID along with private Attribute values , guaranteeing that they will not collide with any other vendor's extensions or future IETF extensions . Note that there are 16 bits allocated for the Vendor ID , thus limiting this feature to the first 65,535 enterprises . 	231	0
3931	Attribute Type	Attribute Type : A 2-octet value with a unique interpretation across all AVPs defined under a given Vendor ID . 	231	0
3931	M	If the M bit is set on an AVP that is unrecognized by its recipient , the session or control connection associated with the control message containing the AVP MUST be shut down . If the control message containing the unrecognized AVP is associated with a session ( e.g ., an ICRQ , ICRP , ICCN , SLI , etc .), then the session MUST be issued a CDN with a Result Code of 2 and Error Code of 8 ( as defined in Section 5.4.2 ) and shut down . If the control message containing the unrecognized AVP is associated with establishment or maintenance of a Control Connection ( e.g ., SCCRQ , SCCRP , SCCCN , Hello ), then the associated Control Connection MUST be issued a StopCCN with Result Code of 2 and Error Code of 8 ( as defined in Section 5.4.2 ) and shut down . If the M bit is not set on an unrecognized AVP , the AVP MUST be ignored when received , processing the control message as if the AVP were not present . 	210	0
3931	Message Type	The Message Type AVP , Attribute Type 0 , identifies the control message herein and defines the context in which the exact meaning of the following AVPs will be determined . 	240	0
3931	M	The Mandatory ( M ) bit within the Message Type AVP has special meaning . Rather than an indication as to whether the AVP itself should be ignored if not recognized , it is an indication as to whether the control message itself should be ignored . If the M bit is set within the Message Type AVP and the Message Type is unknown to the implementation , the control connection MUST be cleared . If the M bit is not set , then the implementation may ignore an unknown message type . The M bit MUST be set to 1 for all message types defined in this document . This AVP MUST NOT be hidden ( the H bit MUST be 0 ). The Length of this AVP is 8 . 	210	0
3931	Result Code	The Result Code AVP , Attribute Type 1 , indicates the reason for terminating the control connection or session . 	302	0
3931	Assigned Control Connection ID	The Assigned Control Connection ID AVP , Attribute Type 61 , contains the ID being assigned to this control connection by the sender . 	230	0
3931	Local Session ID	The Local Session ID AVP ( analogous to the Assigned Session ID in L2TPv2 ), Attribute Type 63 , contains the identifier being assigned to this session by the sender . 	230	0
3931	Remote Session ID	The Remote Session ID AVP , Attribute Type 64 , contains the identifier that was assigned to this session by the peer . 	230	0
3931	Serial Number	The Serial Number AVP , Attribute Type 15 , contains an identifier assigned by the LAC or LNS to this session . 	202	0
3931	L2-Specific Sublayer	The L2-Specific Sublayer AVP , Attribute Type 69 , indicates the presence and format of the L2-Specific Sublayer the sender of this AVP requires on all incoming data packets for this L2TP session . 	400	0
3931	Physical Channel ID	The Physical Channel ID AVP , Attribute Type 25 , contains the vendor-specific physical channel number used for a call . 	231	0
3931	Reserved	Reserved : 2 octets of Reserved data is present ( providing longword alignment within the AVP of the following values ). Reserved data MUST be zero on sending and ignored upon receipt . Hardware Overruns : Number of receive buffer overruns since call was established . Buffer Overruns : Number of buffer overruns detected since call was established . Timeout Errors : Number of timeouts since call was established . Alignment Errors : Number of alignment errors since call was established . 	500	0
3931	Message Type	Message Type 	240	0
3931	Message Type	Message Type 	240	0
3931	L2-Specific Sublayer Type	10.9 . L2-Specific Sublayer Type 	231	0
3931	Data Sequencing Level	10.10 . Data Sequencing Level 	240	0
3946	Signal Type	This field indicates the type of Elementary Signal that comprises the requested LSP . Several transforms can be applied successively on the Elementary Signal to build the Final Signal being actually requested for the LSP . 	231	0
3946	RCC	This field is used to request the optional SONET/SDH contiguous concatenation of the Elementary Signal . 	231	0
3946	NCC	This field indicates the number of identical SONET SPEs/SDH VCs ( i.e ., Elementary Signal ) that are requested to be concatenated , as specified in the RCC field . 	231	0
3946	NVC	This field indicates the number of signals that are requested to be virtually concatenated . These signals are all of the same type by definition . They are Elementary Signal SPEs/VCs for which signal types are defined in this document , i.e ., VT1.5_SPE/VC-11 , VT2_SPE/VC-12 , VT3_SPE , VT6_SPE/VC-2 , STS-1_SPE/VC-3 or STS-3c_SPE/VC-4 . 	231	0
3946	U	1 . S=1->N is the index of a particular STS-3/AUG-1 inside an STS-N/STM-N multiplex . S is only significant for SONET STS-N ( N>1 ) and SDH STM-N ( N>0 ). S must be 0 and ignored for STS-1 and STM-0 . 	231	0
3946	K	1 . S=1->N is the index of a particular STS-3/AUG-1 inside an STS-N/STM-N multiplex . S is only significant for SONET STS-N ( N>1 ) and SDH STM-N ( N>0 ). S must be 0 and ignored for STS-1 and STM-0 . 	231	0
3946	L	1 . S=1->N is the index of a particular STS-3/AUG-1 inside an STS-N/STM-N multiplex . S is only significant for SONET STS-N ( N>1 ) and SDH STM-N ( N>0 ). S must be 0 and ignored for STS-1 and STM-0 . 	231	0
3957	Type	Type 40 ( not skippable ) ( see [ 1 ] and section 8 ) 	302	0
3957	Subtype	Subtype A number assigned to identify the way in which the MN-FA Key Generation Nonce Request Subtype Data is to be used when generating the registration key . 	231	0
3957	Length	Length The 16-bit Length field indicates the length of the extension . It is equal to the number of bytes in the MN-FA Key Generation Nonce Request Subtype Data plus 4 ( for the Mobile Node SPI field ). 	100	0
3957	Mobile Node SPI	Mobile Node SPI The Security Parameters Index that the mobile node will assign for the Mobility Security Association created for use with the registration key . 	400	0
3957	Type	Type 41 ( not skippable ) ( see [ 1 ] and section 8 ) 	302	0
3957	Subtype	Subtype A number assigned to identify the way in which the MN-FA Key Generation Nonce Reply Subtype Data is to be used to obtain the registration key . 	231	0
3957	Length	Length The 16-bit Length field is equal to the number of bytes in the MN-FA Key Generation Nonce Reply Subtype Data . 	100	0
3957	AAA SPI	AAA SPI A 32-bit opaque value , indicating the SPI that the mobile node must use to determine the transform to use for establishing the Mobility Security Association between the mobile node and its prospective foreign agent . 	230	0
3957	FA SPI	FA SPI The SPI for the Mobility Security Association to the FA that the mobile node creates using the Key Generation Nonce . 	230	0
3957	Type	Type 42 ( not skippable ) ( see [ 1 ] and section 8 ) 	302	0
3957	Subtype	Subtype a number assigned to identify the way in which the MN-HA Key Generation Nonce Request Subtype Data is to be used when generating the registration key . 	231	0
3957	Length	Length The 16-bit Length field indicates the length of the extension . It is equal to the number of bytes in the MN-HA Key Generation Nonce Request . 	100	0
3957	Mobile Node SPI	Mobile Node SPI The Security Parameters Index that the mobile node will assign for the Mobility Security Association created for use with the registration key . 	400	0
3957	Type	Type 43 ( not skippable ) ( see [ 1 ] and section 8 ) 	302	0
3957	Subtype	Subtype a number assigned to identify the way in which the MN-HA Key Generation Nonce Reply Subtype Data is to be used to obtain the MN-HA key . 	400	0
3957	Length	Length The 16-bit Length field indicates the length of the extension . It is equal to the number of bytes in the MN - HA Key Generation Nonce Reply Subtype Data plus 4 ( for the Lifetime field ). 	100	0
3957	Lifetime	Lifetime This field indicates the duration of time ( in seconds ) for which the MN-HA key is valid . 	120	0
3957	AAA SPI	AAA SPI A 32-bit opaque value , indicating the SPI that the mobile node must use to determine the transform to use for establishing the Mobility Security Association between the mobile node and its home agent . 	230	0
3957	HA SPI	HA SPI The SPI for the Mobility Security Association to the HA that the mobile node creates using the Key Generation Nonce . 	230	0
3963	Mobile Network Prefix	An IPv6 prefix delegated to a Mobile Router and advertised in the Mobile Network . More than one Mobile Network Prefix could be advertised in a Mobile Network . 	230	0
3963	R	The Mobile Router Flag is set to indicate to the Home Agent that the Binding Update is from a Mobile Router . If the flag is set to 0 , the Home Agent assumes that the Mobile Router is behaving as a Mobile Node , and it MUST NOT forward packets destined for the Mobile Network to the Mobile Router . 	210	0
3963	R	The Mobile Router Flag is set to indicate that the Home Agent that processed the Binding Update supports Mobile Routers . It is set to 1 only if the corresponding Binding Update had the Mobile Router Flag set to 1 . 	210	0
3963	Type	Type 	240	0
3963	Length	Eight-bit unsigned integer indicating the length in octets of the option , excluding the type and length fields . Set to 18 . 	100	0
3963	Reserved	This field is unused for now . The value MUST be initialized to 0 by the sender and MUST be ignored by the receiver . 	500	0
3963	Prefix Length	Eight-bit unsigned integer indicating the prefix length of the IPv6 prefix contained in the option . 	100	0
3963	Mobile Network Prefix	Mobile Network Prefix 	400	0
3963	R	A one-bit flag that when set indicates that the Mobile Router wants to discover Home Agents supporting Mobile Routers . 	301	0
3963	R	A one-bit flag that when set indicates that the Home Agents listed in this message support Mobile Routers . 	231	0
3963	R	A one-bit flag that when set indicates that the Home Agent supports Mobile Routers . 	301	0
3971	Type	Type 	240	0
3971	Length	The length of the option ( including the Type , Length , Pad Length , Reserved , CGA Parameters , and Padding fields ) in units of 8 octets . 	100	0
3971	Pad Length	The number of padding octets beyond the end of the CGA Parameters field but within the length specified by the Length field . Padding octets MUST be set to zero by senders and ignored by receivers . 	500	0
3971	Reserved	An 8-bit field reserved for future use . The value MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
3971	CGA Parameters	A variable-length field containing the CGA Parameters data structure described in Section 4 of [ 11 ]. 	400	0
3971	Padding	A variable-length field making the option length a multiple of 8 , containing as many octets as specified in the Pad Length field . 	100	0
3971	Type	Type 	240	0
3971	Length	The length of the option ( including the Type , Length , Reserved , Key Hash , Digital Signature , and Padding fields ) in units of 8 octets . 	100	0
3971	Reserved	A 16-bit field reserved for future use . The value MUST be initialized to zero by the sender , and MUST be ignored by the receiver . 	500	0
3971	Key Hash	A 128-bit field containing the most significant ( leftmost ) 128 bits of a SHA-1 [ 14 ] hash of the public key used for constructing the signature . The SHA-1 hash is taken over the presentation used in the Public Key field of the CGA Parameters data structure carried in the CGA option . Its purpose is to associate the signature to a particular key known by the receiver . Such a key can either be stored in the certificate cache of the receiver or be received in the CGA option in the same message . 	400	0
3971	Digital Signature	A variable-length field containing a PKCS#1 v1.5 signature , constructed by using the sender's private key over the following sequence of octets : 	400	0
3971	Padding	This variable-length field contains padding , as many bytes long as remain after the end of the signature . 	302	0
3971	Timestamp	5.3 . Timestamp and Nonce Options 	240	0
3971	Type	Type 	240	0
3971	Length	The length of the option ( including the Type , Length , Reserved , and Timestamp fields ) in units of 8 octets; i.e ., 2 . 	100	0
3971	Reserved	A 48-bit field reserved for future use . The value MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
3971	Timestamp	A 64-bit unsigned integer field containing a timestamp . The value indicates the number of seconds since January 1 , 1970 , 00:00 UTC , by using a fixed point format . In this format , the integer number of seconds is contained in the first 48 bits of the field , and the remaining 16 bits indicate the number of 1/64K fractions of a second . 	122	0
3971	Type	Type 	240	0
3971	Length	The length of the option ( including the Type , Length , and Nonce fields ) in units of 8 octets . 	100	0
3971	Type	Type 	240	0
3971	Code	Code 	231	0
3971	Checksum	Checksum 	301	0
3971	Identifier	A 16-bit unsigned integer field , acting as an identifier to help match advertisements to solicitations . The Identifier field MUST NOT be zero , and its value SHOULD be randomly generated . This randomness does not have to be cryptographically hard , as its purpose is only to avoid collisions . 	303	0
3971	Component	This 16-bit unsigned integer field is set to 65,535 if the sender seeks to retrieve all certificates . Otherwise , it is set to the component identifier corresponding to the certificate that the receiver wants to retrieve ( see Sections 6.4.2 and 6.4.6 ). 	302	0
3971	Type	Type 	240	0
3971	Code	Code 	231	0
3971	Checksum	Checksum 	301	0
3971	Identifier	A 16-bit unsigned integer field , acting as an identifier to help match advertisements to solicitations . The Identifier field MUST be zero for advertisements sent to the All-Nodes multicast address and MUST NOT be zero for others . 	303	0
3971	All Components	A 16-bit unsigned integer field , used to inform the receiver of the number of certificates in the entire path . 	100	0
3971	Component	A 16-bit unsigned integer field , used to inform the receiver which certificate is being sent . 	400	0
3971	Reserved	An unused field . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
3971	Type	Type 	240	0
3971	Length	The length of the option ( including the Type , Length , Name Type , Pad Length , and Name fields ), in units of 8 octets . 	100	0
3971	Name Type	The type of the name included in the Name field . This specification defines two legal values for this field : 	231	0
3971	Pad Length	The number of padding octets beyond the end of the Name field but within the length specified by the Length field . Padding octets MUST be set to zero by senders and ignored by receivers . 	500	0
3971	Padding	A variable-length field making the option length a multiple of 8 , beginning after the previous field ends and continuing to the end of the option , as specified by the Length field . 	100	0
3971	Type	Type 	240	0
3971	Length	The length of the option ( including the Type , Length , Cert Type , Pad Length , and Certificate fields ), in units of 8 octets . 	100	0
3971	Cert Type	The type of the certificate included in the Certificate field . This specification defines only one legal value for this field : 	231	0
3971	Reserved	An 8-bit field reserved for future use . The value MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
3971	Padding	A variable length field making the option length a multiple of 8 , beginning after the ASN.1 encoding of the previous field [ 7 , 15 ] ends and continuing to the end of the option , as specified by the Length field . 	100	0
3973	S	Prune state is associated with an ( S,G ) pair . When a new member for a group G appears in a pruned area , a router can " graft " toward the source S for the group , thereby turning the pruned branch back into a forwarding branch . 	301	0
3973	S	For every source/group pair ( S,G ), a router stores the following state : 	400	0
3973	S	For every source/group pair ( S,G ), a router stores the following state : 	400	0
3973	S	( S,G ) state : For each interface : Local Membership : State : One of {" NoInfo ", " Include "} 	400	0
3973	S	PIM ( S,G ) Prune State : State : One of {" NoInfo " ( NI ), " Pruned " ( P ), " PrunePending " ( PP )} Prune Pending Timer ( PPT ) Prune Timer ( PT ) 	302	0
3973	S	( S,G ) Assert Winner State : State : One of {" NoInfo " ( NI ), " I lost Assert " ( L ), " I won Assert " ( W )} Assert Timer ( AT ) Assert winner's IP Address Assert winner's Assert Metric 	240	0
3973	S	The macros pim_include(*,G ) and pim_include(S,G ) indicate the interfaces to which traffic might or might not be forwarded because of hosts that are local members on those interfaces . 	230	0
3973	S	The macros pim_include(*,G ) and pim_include(S,G ) indicate the interfaces to which traffic might or might not be forwarded because of hosts that are local members on those interfaces . 	230	0
3973	S	The macros pim_include(*,G ) and pim_include(S,G ) indicate the interfaces to which traffic might or might not be forwarded because of hosts that are local members on those interfaces . 	230	0
3973	P	Pruned ( P ) The set , olist(S,G ), is empty . The router will not forward data from S addressed to group G . 	500	0
3973	S	Pruned ( P ) The set , olist(S,G ), is empty . The router will not forward data from S addressed to group G . 	500	0
3973	P	When the Upstream(S,G ) state machine is in the Pruned ( P ) state , the following events may trigger a transition : 	240	0
3973	S	Graft message to RPF'(S ). The Graft Retry Timer ( GRT(S,G )) MUST be set to Graft_Retry_Period . 	121	0
3973	S	OT(S,G ) Expires The OverrideTimer ( OT(S,G )) expires . The router MUST send a Join(S,G ) to RPF'(S ). The Upstream(S,G ) state machine remains in the AckPending ( AP ) state . 	210	0
3973	S	OT(S,G ) Expires The OverrideTimer ( OT(S,G )) expires . The router MUST send a Join(S,G ) to RPF'(S ). The Upstream(S,G ) state machine remains in the AckPending ( AP ) state . 	210	0
3973	S	See GraftAck(S,G ) from RPF'(S ) A GraftAck is received from RPF'(S ). The GraftRetry Timer MUST be cancelled , and the Upstream(S,G ) state machine MUST transition to the Forwarding(F ) state . 	302	0
3973	S	See GraftAck(S,G ) from RPF'(S ) A GraftAck is received from RPF'(S ). The GraftRetry Timer MUST be cancelled , and the Upstream(S,G ) state machine MUST transition to the Forwarding(F ) state . 	302	0
3973	P	When the Prune(S,G ) Downstream state machine is in the Pruned ( P ) state , the following events may trigger a transition . 	110	0
3973	TTL	for each interface I in pim_nbrs { if ( TTL(SRM ) == 0 OR ( TTL(SRM ) - 1 ) < Threshold(I )) continue; /* Out of TTL , skip this interface */ if ( boundary(I,G )) continue; /* This interface is scope boundary , skip it */ if ( I == iif ) continue; /* This is the incoming interface , skip it */ if ( lost_assert(S,G,I ) == TRUE ) continue; /* Let the Assert Winner do State Refresh */ 	210	0
3973	TTL	for each interface I in pim_nbrs { if ( TTL(SRM ) == 0 OR ( TTL(SRM ) - 1 ) < Threshold(I )) continue; /* Out of TTL , skip this interface */ if ( boundary(I,G )) continue; /* This interface is scope boundary , skip it */ if ( I == iif ) continue; /* This is the incoming interface , skip it */ if ( lost_assert(S,G,I ) == TRUE ) continue; /* Let the Assert Winner do State Refresh */ 	210	0
3973	S	if ( I contained in prunes(S,G )) { set Prune Indicator bit of SRM ' to 1; 	210	0
3973	S	NotOriginator(NO ) This is the starting state of the Origination(S,G ) state machine . While in this state , a router will not originate State Refresh messages for the ( S,G ) pair . 	301	0
3973	O	When the Originating(S,G ) state machine is in the Originator ( O ) state , the following events may trigger a transition : 	240	0
3973	S	The ( S,G ) Assert state machine for interface I is shown in Figure 4 . There are three states : 	400	0
3973	S	NoInfo ( NI ) This router has no ( S,G ) Assert state on interface I . 	301	0
3973	S	CouldAssert(S,G,I ) = ( RPF_interface(S ) != I ) 	210	0
3973	S	CouldAssert(S,G,I ) = ( RPF_interface(S ) != I ) 	210	0
3973	S	AT(S,G,I ) Expires The ( S,G ) Assert Timer ( AT(S,G,I )) expires . The Assert state machine MUST transition to the NoInfo ( NI ) state . 	210	0
3973	S	AT(S,G,I ) Expires The ( S,G ) Assert Timer ( AT(S,G,I )) expires . The Assert state machine MUST transition to the NoInfo ( NI ) state . 	210	0
3973	S	AT(S,G,I ) Expires The ( S,G ) Assert Timer ( AT(S,G,I )) expires . The Assert state machine MUST transition to the NoInfo ( NI ) state . 	210	0
3973	S	AT(S,G,I ) Expires The ( S,G ) Assert Timer ( AT(S,G,I )) expires . The Assert state machine MUST transition to NoInfo ( NI ) state . The router MUST delete the Assert Winner's address and metric . If CouldAssert == TRUE , the router MUST evaluate any possible transitions to its Upstream(S,G ) state machine . 	210	0
3973	S	AT(S,G,I ) Expires The ( S,G ) Assert Timer ( AT(S,G,I )) expires . The Assert state machine MUST transition to NoInfo ( NI ) state . The router MUST delete the Assert Winner's address and metric . If CouldAssert == TRUE , the router MUST evaluate any possible transitions to its Upstream(S,G ) state machine . 	210	0
3973	S	AT(S,G,I ) Expires The ( S,G ) Assert Timer ( AT(S,G,I )) expires . The Assert state machine MUST transition to NoInfo ( NI ) state . The router MUST delete the Assert Winner's address and metric . If CouldAssert == TRUE , the router MUST evaluate any possible transitions to its Upstream(S,G ) state machine . 	210	0
3973	PIM Ver	PIM Ver , Type , Reserved , Checksum Described above . 	400	0
3973	Type	PIM Ver , Type , Reserved , Checksum Described above . 	240	0
3973	Reserved	PIM Ver , Type , Reserved , Checksum Described above . 	400	0
3973	PIM Ver	PIM Ver , Type , Reserved , Checksum Described above . 	400	0
3973	Type	PIM Ver , Type , Reserved , Checksum Described above . 	240	0
3973	Reserved	PIM Ver , Type , Reserved , Checksum Described above . 	400	0
3973	PIM Ver	PIM Ver , Type , Reserved , Checksum Described above . 	400	0
3973	Type	PIM Ver , Type , Reserved , Checksum Described above . 	240	0
3973	Reserved	PIM Ver , Type , Reserved , Checksum Described above . 	400	0
3973	PIM Ver	PIM Ver , Type , Reserved , Checksum Described above . 	400	0
3973	Type	PIM Ver , Type , Reserved , Checksum Described above . 	240	0
3973	Reserved	PIM Ver , Type , Reserved , Checksum Described above . 	400	0
3973	S	Per ( S,G ) Pair : ( S,G ) Assert Timer : AT(S,G,I ) ( S,G ) Prune Timer : PT(S,G,I ) ( S,G ) PrunePending Timer : PPT(S,G,I ) 	210	0
3973	S	Per ( S,G ) Pair : ( S,G ) Graft Retry Timer : GRT(S,G ) ( S,G ) Upstream Override Timer : OT(S,G ) ( S,G ) Prune Limit Timer : PLT(S,G ) ( S,G ) Source Active Timer : SAT(S,G ) ( S,G ) State Refresh Timer : SRT(S,G ) 	210	0
3984	F	F : 1 bit forbidden_zero_bit . The H.264 specification declares a value of 1 as a syntax violation . 	302	0
3984	NRI	NRI : 2 bits nal_ref_idc . A value of 00 indicates that the content of the NAL unit is not used to reconstruct reference pictures for inter picture prediction . Such NAL units can be discarded without risking the integrity of the reference pictures . Values greater than 00 indicate that the decoding of the NAL unit is required to maintain the integrity of the reference pictures . 	210	0
3984	DON	decoding order number ( DON ): A field in the payload structure , or a derived variable indicating NAL unit decoding order . Values of DON are in the range of 0 to 65535 , inclusive . After reaching the maximum value , the value of DON wraps around to 0 . 	231	0
3984	DON	DON : Decoding Order Number DONB : Decoding Order Number Base DOND : Decoding Order Number Difference FEC : Forward Error Correction FU : Fragmentation Unit IDR : Instantaneous Decoding Refresh IEC : International Electrotechnical Commission ISO : International Organization for Standardization ITU-T : International Telecommunication Union , Telecommunication Standardization Sector MANE : Media Aware Network Element MTAP : Multi-Time Aggregation Packet MTAP16 : MTAP with 16-bit timestamp offset MTAP24 : MTAP with 24-bit timestamp offset NAL : Network Abstraction Layer NALU : NAL Unit SEI : Supplemental Enhancement Information STAP : Single-Time Aggregation Packet STAP-A : STAP type A STAP-B : STAP type B TS : Timestamp VCL : Video Coding Layer 	240	0
3984	M	Marker bit ( M ): 1 bit Set for the very last packet of the access unit indicated by the RTP timestamp , in line with the normal use of the M bit in video formats , to allow an efficient playout buffer handling . For aggregation packets ( STAP and MTAP ), the marker bit in the RTP header MUST be set to the value that the marker bit of the last NAL unit of the aggregation packet would have been if it were transported in its own RTP packet . Decoders MAY use this bit as an early indication of the last packet of an access unit , but MUST NOT rely on this property . 	210	0
3984	PT	Payload type ( PT ): 7 bits The assignment of an RTP payload type for this new packet format is outside the scope of this document and will not be specified here . The assignment of a payload type has to be performed either through the profile used or in a dynamic way . 	231	0
3984	F	F : 1 bit forbidden_zero_bit . A value of 0 indicates that the NAL unit type octet and payload should not contain bit errors or other syntax violations . A value of 1 indicates that the NAL unit type octet and payload may contain bit errors or other syntax violations . 	210	0
3984	NRI	NRI : 2 bits nal_ref_idc . The semantics of value 00 and a non-zero value remain unchanged from the H.264 specification . In other words , a value of 00 indicates that the content of the NAL unit is not used to reconstruct reference pictures for inter picture prediction . Such NAL units can be discarded without risking the integrity of the reference pictures . Values greater than 00 indicate that the decoding of the NAL unit is required to maintain the integrity of the reference pictures . 	210	0
3984	DON	In the interleaved packetization mode , the transmission order of NAL units is allowed to differ from the decoding order of the NAL units . Decoding order number ( DON ) is a field in the payload structure or a derived variable that indicates the NAL unit decoding order . Rationale and examples of use cases for transmission out of decoding order and for the use of DON are given in section 13 . 	231	0
3984	DON	If ( DON(m ) < DON(n ) and DON(n ) - DON(m ) < 32768 ), don_diff(m,n ) = DON(n ) - DON(m ) 	210	0
3984	DON	If ( DON(m ) < DON(n ) and DON(n ) - DON(m ) < 32768 ), don_diff(m,n ) = DON(n ) - DON(m ) 	210	0
3984	DON	If ( DON(m ) > DON(n ) and DON(m ) - DON(n ) >= 32768 ), don_diff(m,n ) = 65536 - DON(m ) + DON(n ) 	210	0
3984	DON	If ( DON(m ) > DON(n ) and DON(m ) - DON(n ) >= 32768 ), don_diff(m,n ) = 65536 - DON(m ) + DON(n ) 	210	0
3984	DON	If ( DON(m ) < DON(n ) and DON(n ) - DON(m ) >= 32768 ), don_diff(m,n ) = - ( DON(m ) + 65536 - DON(n )) 	210	0
3984	DON	If ( DON(m ) < DON(n ) and DON(n ) - DON(m ) >= 32768 ), don_diff(m,n ) = - ( DON(m ) + 65536 - DON(n )) 	210	0
3984	DON	If ( DON(m ) > DON(n ) and DON(m ) - DON(n ) < 32768 ), don_diff(m,n ) = - ( DON(m ) - DON(n )) 	210	0
3984	DON	If ( DON(m ) > DON(n ) and DON(m ) - DON(n ) < 32768 ), don_diff(m,n ) = - ( DON(m ) - DON(n )) 	210	0
3984	DON	If ( DON(m ) < DON(n ) and DON(n ) - DON(m ) < 32768 ), AbsDON(n ) = AbsDON(m ) + DON(n ) - DON(m ) 	210	0
3984	DON	If ( DON(m ) < DON(n ) and DON(n ) - DON(m ) < 32768 ), AbsDON(n ) = AbsDON(m ) + DON(n ) - DON(m ) 	210	0
3984	DON	If ( DON(m ) > DON(n ) and DON(m ) - DON(n ) >= 32768 ), AbsDON(n ) = AbsDON(m ) + 65536 - DON(m ) + DON(n ) 	302	0
3984	DON	If ( DON(m ) > DON(n ) and DON(m ) - DON(n ) >= 32768 ), AbsDON(n ) = AbsDON(m ) + 65536 - DON(m ) + DON(n ) 	302	0
3984	DON	If ( DON(m ) < DON(n ) and DON(n ) - DON(m ) >= 32768 ), 	302	0
3984	DON	If ( DON(m ) < DON(n ) and DON(n ) - DON(m ) >= 32768 ), 	302	0
3984	DON	If ( DON(m ) > DON(n ) and DON(m ) - DON(n ) < 32768 ), AbsDON(n ) = AbsDON(m ) - ( DON(m ) - DON(n )) 	210	0
3984	DON	If ( DON(m ) > DON(n ) and DON(m ) - DON(n ) < 32768 ), AbsDON(n ) = AbsDON(m ) - ( DON(m ) - DON(n )) 	210	0
4064	Type	Type 255 ( EXP-MSG-TYPE ) 	231	0
4064	Type	Type 127 ( EXP-NONSKIP-EXT-TYPE ) is the type , which describes an experimental extension . 	231	0
4064	Sub-Type	Sub-Type A unique number given to each member in the aggregated type . 	231	0
4064	Length	Length Indicates the length ( in bytes ) of the data field within this extension . It does NOT include the Type , Sub-Type , and Length fields . 	100	0
4064	Type	Type 127 ( EXP-NONSKIP-EXT-TYPE ) is the type , which describes an ICMP router discovery experimental extension . 	231	0
4064	Length	Length Indicates the length ( in bytes ) of the data field within this extension . It does NOT include the Type and Length fields . 	100	0
4064	Type	Type 255 ( EXP-SKIP-EXT-TYPE ) is the type , which describes an experimental extension . 	231	0
4064	Length	Length Indicates the length ( in bytes ) of the data field within this extension . It does NOT include the Type and Length fields . 	100	0
4064	Type	Type 255 ( EXP-SKIP-EXT-TYPE ) is the type , which describes an experimental extension . 	231	0
4064	Length	Length Indicates the length ( in bytes ) of the data field within this extension . It does NOT include the Type and Length fields . 	100	0
4065	Type	Type For IPv4 , 41; for IPv6 150 	220	0
4065	Code	Code As defined by the relevant ICMP specification and free for use by the Experimental Mobility protocol . 	400	0
4065	Checksum	Checksum ICMP checksum 	301	0
4065	Subtype	Subtype One octet subtype code identifying the Experimental Mobility protocol 	231	0
4065	Reserved	Reserved Unless otherwise defined by the Experimental Mobility protocol , set to zero by the sender and ignored by the receiver . 	500	0
4066	C	Candidate Access Router Discovery ( CARD ) 	230	0
4066	C	Copyright ( C ) The Internet Society ( 2005 ). 	302	0
4066	C	Candidate AR ( CAR ) 	231	0
4066	C	Upon receipt of an AR-AR CARD Request , a CAR shall extract the sending AR's capabilities , if the sending AR has included its capabilities . The CAR SHALL store the received capabilities in its CAR table and set the timer for individual capabilities appropriately . The values of the table entries ' timeouts depend on the nature of capabilities in the AR-AR CARD Reply message . The CAR must include the same sequence number in the AR-AR CARD Reply Message as that received in the AR-AR CARD Request Message . The AR-AR CARD Reply shall include the CAR's capabilities as list of attribute-value pairs in the Capability Container message parameter . If the sending AR has appended an optional Preferences sub-option , the CAR MAY perform capability filtering and send back only those capabilities of interest to the requesting AR , identified according to the 	121	0
4066	Type	Type : Experimental Mobility type ( assigned by IANA for IPv4 and IPv6 , see [ Ke04 ]). 	231	0
4066	Code	Code : 0 	500	0
4066	Checksum	Checksum : The ICMP checksum . 	301	0
4066	Subtype	Subtype : Experimental Mobility subtype for CARD; see [ Ke04 ]. 	231	0
4066	Reserved	Reserved : This field is currently unused . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
4066	Preferences	Preferences ( optional ): The Preferences sub-option carries information about attributes of interest to the requesting entity . Attributes are encoded according to the AVP encoding rule , which is described in Section 5.1.4 . For proper settings of AVP Code and Data field , see Section 5.1.3.2 . This sub-option is used only if optional capability pre-filtering is performed on ARs , and it provides only capabilities of interest to a requesting MN . 	400	0
4066	Requirements	Requirements ( optional ): The Requirements sub-option carries information about attribute-value pairs required for pre - filtering of CARs on the MN's current AR . This parameter conveys MN specific attribute-value pairs to allow the MN's current AR to send only information about CARs of interest back to the requesting MN . CARs are filtered on ARs according to the CARs ' capability parameters and given policy or threshold , as encoded in the Requirements sub - 	400	0
4066	Type	Type : 8-bit identifier of the type of option , assigned by IANA . See [ Ke04 ] for CARD Request and CARD Reply values . 	231	0
4066	Length	Length : 8-bit unsigned integer . The length of the option , including the type and length fields in units of 8 octets . The value 0 is invalid . 	100	0
4066	Vers .	Vers .: 3-bit version code . For this specification , Vers.=1 . 	220	0
4066	Type	Type : Assigned by IANA for IPv4 and IPv6; see [ Ke04 ]. 	231	0
4066	Length	Length : The length of the option in units of 8 octets , including the type and length fields as well as sub-options . 	100	0
4066	Vers .	Vers .: 3-bit version code . For this specification , Vers.=1 . 	220	0
4066	C	C-flag : Indicates that the requesting entity is also interested in associated CARs ' capabilities . If the MN wants the AR to append CARs ' capability parameters to the CARD Reply in addition to address information , the MN must set this flag . 	210	0
4066	A	A-flag : Indicates that the requesting entity does NOT want the receiver of this message to perform reverse address translation . This flag is set if CARD protocol messages are piggybacked with a protocol that performs reverse address translation . For details , refer to Section 4.4 of this document . 	210	0
4066	T	T-flag : Indicates that the requesting entity is interested in obtaining all certificates from the responder . This flag is only valid on the AR-AR interface . 	231	0
4066	Reserved	Reserved : Initialized to zero , ignored on receipt . 	500	0
4066	Sequence Number	Sequence Number : Allows requests to be correlated with replies . 	301	0
4066	Type	Type : Assigned by IANA for IPv4 and IPv6 [ Ke04 ]. 	231	0
4066	Length	Length : The length of the option in units of 8 octets , including the type and length fields as well as sub-options . 	100	0
4066	Vers .	Vers .: 3-bit version code . For this specification , Vers.=1 . 	220	0
4066	U	U-flag : Indicates an unsolicited CARD Reply . This flag is only valid on the AR-AR interface . 	231	0
4066	L	L-flag : Set if this message is the last message in a multiple ICMP message reply . This flag is only valid on the MN-AR interface . 	210	0
4066	Reserved	Reserved : Initialized to zero , ignored on receipt . 	500	0
4066	Sequence Number	Sequence Number : Allows requests to be correlated with replies . 	301	0
4066	Status Code	Status Code : This field allows ARs to inform a requesting entity about processing results for a particular L2 ID . The L2 ID sub-option MUST be sent back to the requesting entity with a CARD Reply message . 	230	0
4066	Preferences	Preferences : List of capability attribute values ( see Section 5.1.4 ). 	231	0
4066	Requirements	AVPs MUST be encoded according to the rule described in Section 5.1.4 . Both the ATTRIBUTE ( AVP Code ) and VALUE ( Data ) fields MUST be present and set appropriately . The end of the Requirements list can be determined when an ATTRIBUTE value of 0x0 is read . 	110	0
4066	Reserved	Reserved : Initialized to zero , ignored on receipt . 	500	0
4066	AVPs	AVPs : AVPs are a method of encapsulating capability information relevant for the CARD protocol . See Section 5.1.4 for the AVP encoding rule and list parsing . 	400	0
4066	Address Type	Address Type : Indicates the type of the address . 	230	0
4066	Reserved	Reserved : Initialized to zero , ignored on receipt . 	500	0
4066	Component	Component : A 2 octet unsigned integer field set to 65,535 if the sender desires to retrieve all the certificates in the certification path . Otherwise , it is set to the component identifier corresponding to the certificate that the receiver wants to retrieve . 	231	0
4066	Trusted Anchor Name	Trusted Anchor Name : DER encoding for the X.501 name of certification path component(see [ Arkko04 ] for more detail on certification path component name encoding ). 	231	0
4066	Reserved	Reserved : Initialized to zero , ignored on receipt . 	500	0
4066	All Components	All Components : 2 octet unsigned integer giving the total number of certificates in the certification path . 	231	0
4066	Component	Component : 2 octet unsigned integer giving the location of this certificate in the certification path . 	231	0
4066	AVP Code	AVP Code : Identifies the attribute uniquely . The AVP Code 0x0000 is reserved and MUST NOT be assigned to a capability . 	231	0
4066	AVP Length	AVP Length : The 2 octet AVP length field indicates the number of octets in this AVP , including the AVP Code , AVP Length , Reserved , Lifetime , and Data fields . 	100	0
4066	Reserved	Reserved : Initialized to zero , ignored on receipt . 	500	0
4066	TSN	TSN Transmission Sequence Number . See [ Stew00 ]. 	200	0
4066	C	This document is subject to the rights , licenses and restrictions contained in BCP 78 , and except as set forth therein , the authors retain all their rights . 	303	0
4067	Length	Length Message length in units of 8 octet words . 	100	0
4067	Reserved	Reserved Reserved for future use . Set to zero by the sender . 	500	0
4067	Data	Data Context type-dependent data , whose length is defined by the Length Field . If the data is not 64 bit aligned , the data field is padded with zeros . 	400	0
4067	Vers .	Vers . Version number of CXTP protocol = 0x1 	220	0
4067	Type	Type CTAR = 0x1 	240	0
4067	Reserved	Reserved Set to zero by the sender , ignored by the receiver . 	500	0
4067	Length	Length Message length in units of octets . 	100	0
4067	Sequence Number	Sequence Number A value used to identify requests and acknowledgements ( see Section 3.2 ). 	200	0
4067	Vers .	Vers . Version number of CXTP protocol = 0x1 	220	0
4067	Type	Type CTAA = 0x2 	240	0
4067	Reserved	Reserved Set to zero by the sender and ignored by the receiver . 	500	0
4067	Length	Length Message length in units of octets . 	100	0
4067	Vers .	Vers . Version number of CXTP protocol = 0x1 	220	0
4067	Type	Type CTD = 0x3 ( Context Transfer Data ) PCTD = 0x4 ( Predictive Context Transfer Data ) 	240	0
4067	Length	Length Message length in units of octets . 	100	0
4067	Algorithm	Algorithm Algorithm for carrying out the computation of the MN Authorization Token . Currently only 1 algorithm is defined , HMAC_SHA1 = 1 . 	400	0
4067	Key Length	Key Length Length of key , in octets . 	100	0
4067	Key	Key Shared key between MN and AR for CXTP . 	230	0
4067	Vers .	Vers . Version number of CXTP protocol = 0x1 	220	0
4067	Type	Type CTDR = 0x5 ( Context Transfer Data ) 	240	0
4067	Reserved	Reserved Set to zero by the sender and ignored by the receiver . 	500	0
4067	Length	Length Message length in units of octets . 	100	0
4067	Vers .	Vers . Version number of CXTP protocol = 0x1 	220	0
4067	Type	Type CTC = 0x6 ( Context Transfer Cancel ) 	302	0
4067	Length	Length Message length in units of octets . 	100	0
4067	Reserved	Reserved Set to zero by the sender and ignored by the receiver . 	500	0
4067	Vers .	Vers . Version number of CXTP protocol = 0x1 	220	0
4067	Type	Type CTREQ = 0x7 ( Context Transfer Request ) 	240	0
4067	Reserved	Reserved Set to zero by the sender and ignored by the receiver . 	500	0
4067	Length	Length Message length in units of octets . 	100	0
4067	Sequence Number	Sequence Number Copied from the CTAR message , allows the pAR to distinguish requests from previously sent context . 	200	0
4067	TSN	TSN Transmission Sequence Number . See [ SCTP ]. 	200	0
4067	Type	Type Experimental Mobility Type ( To be assigned by IANA , for IPv4 and IPv6 , see [ IANA ]) 	231	0
4067	Code	Code 0 	302	0
4067	Checksum	Checksum The ICMP checksum . 	301	0
4067	Reserved	Reserved Set to zero by the sender and ignored by the receiver . 	500	0
4068	H	The MN expects a PrRtAdv in response to its RtSolPr message . If the MN does not receive a PrRtAdv message even after RTSOLPR_RETRIES , it must assume that PAR does not support the fast handover protocol and stop sending RtSolPr messages . 	302	0
4068	Type	Type The Experimental Mobility Protocol Type . See [ 4 ]. 	240	0
4068	Code	Code 0 	302	0
4068	Checksum	Checksum The ICMPv6 checksum . 	301	0
4068	Subtype	Subtype 2 	240	0
4068	Reserved	Reserved MUST be set to zero by the sender and ignored by the receiver . 	500	0
4068	Identifier	Identifier MUST be set by the sender so that replies can be matched to this Solicitation . 	301	0
4068	Type	Type The Experimental Mobility Protocol Type . See RFC 4065 [ 4 ]. 	231	0
4068	Checksum	Checksum The ICMPv6 checksum . 	301	0
4068	Subtype	Subtype 3 	240	0
4068	Reserved	Reserved MUST be set to zero by the sender and ignored by the receiver . 	500	0
4068	Identifier	Identifier Copied from the Router Solicitation for Proxy Advertisement or set to Zero if unsolicited . 	230	0
4068	H	The Handover Initiate ( HI ) is an ICMPv6 message sent by an Access Router ( typically PAR ) to another Access Router ( typically NAR ) to initiate the process of a MN's handover . 	230	0
4068	Type	Type The Experimental Mobility Protocol Type . See RFC 4065 [ 4 ]. 	231	0
4068	Checksum	Checksum The ICMPv6 checksum . 	301	0
4068	Subtype	Subtype 4 	240	0
4068	Reserved	Reserved MUST be set to zero by the sender and ignored by the receiver . 	500	0
4068	Identifier	Identifier MUST be set by the sender so replies can be matched to this message . 	301	0
4068	H	The Handover Acknowledgment message is a new ICMPv6 message that MUST be sent ( typically by NAR to PAR ) as a reply to the Handover Initiate message . 	301	0
4068	Type	Type The Experimental Mobility Protocol Type . See RFC 4065 [ 4 ]. 	231	0
4068	Code	Code 0 : Handover Accepted , NCoA valid 1 : Handover Accepted , NCoA not valid 2 : Handover Accepted , NCoA in use 3 : Handover Accepted , NCoA assigned ( used in Assigned addressing ) 4 : Handover Accepted , NCoA not assigned ( used in Assigned addressing ) 128 : Handover Not Accepted , reason unspecified 129 : Administratively prohibited 130 : Insufficient resources 	240	0
4068	Checksum	Checksum The ICMPv6 checksum . 	301	0
4068	Subtype	Subtype 5 	240	0
4068	Reserved	Reserved MUST be set to zero by the sender and ignored by the receiver . 	500	0
4068	Identifier	Identifier Copied from the corresponding field in the Handover Initiate message to which this message is a response . 	230	0
4068	Reserved	Reserved This field is unused . MUST be set zero . 	500	0
4068	Lifetime	Lifetime See RFC 3775 [ 3 ]. 	100	0
4068	Status	Status 8-bit unsigned integer indicating the disposition of the Fast Binding Update . Values of the Status field that are less than 128 indicate that the Binding Update was accepted by the receiving node . The following such Status values are currently defined : 	240	0
4068	Reserved	Reserved An unused field . MUST be set to zero . 	500	0
4068	Lifetime	Lifetime The granted lifetime in seconds for which the sender of this message will retain a binding for traffic redirection . 	120	0
4068	Type	Type 17 	240	0
4068	Length	Length The size of this option in 8 octets including the Type , Option-Code , and Length fields . 	100	0
4068	Option-Code	Option-Code 1 Old Care-of Address 2 New Care-of Address 3 NAR's IP address 	240	0
4068	Reserved	Reserved MUST be set to zero by the sender and MUST be ignored by the receiver . 	500	0
4068	IPv6 Address	IPv6 Address The IP address for the unit defined by the Type field . 	230	0
4068	Type	Type 18 	240	0
4068	Length	Length The size of this option in 8 octets including the Type , Option-Code , and Length fields . 	100	0
4068	Option-Code	Option-Code 0 	302	0
4068	Reserved	Reserved MUST be set to zero by the sender and MUST be ignored by the receiver . 	500	0
4068	Prefix	Prefix An IP address or a prefix of an IP address . The Prefix Length field contains the number of valid leading bits in the prefix . The bits in the prefix after the prefix length are reserved and MUST be initialized to zero by the sender and ignored by the receiver . 	230	0
4068	LLA	6.4.3 . Link-Layer Address ( LLA ) Option 	240	0
4068	Type	Type 19 	240	0
4068	Length	Length The size of this option in 8 octets including the Type , Option-Code , and Length fields . 	100	0
4068	Option-Code	Option-Code 0 wildcard requesting resolution for all nearby access points 1 Link-Layer Address of the New Access Point 2 Link-Layer Address of the MN 3 Link-Layer Address of the NAR ( i.e ., Proxied Originator ) 4 Link-Layer Address of the source of the RtSolPr or PrRtAdv message 5 The access point identified by the LLA belongs to the current interface of the router 6 No prefix information available for the access point identified by the LLA 7 No fast handovers support available for the access point identified by the LLA 	240	0
4068	LLA	LLA The variable length Link-Layer Address . 	230	0
4068	Type	Type 7 	240	0
4068	Length	Length The size of this option in octets not including the Type , Length , and Option-Code fields . 	100	0
4068	Option-Code	Option-Code 2 Link-Layer Address of the MN 	230	0
4068	LLA	LLA The variable length Link-Layer Address . 	230	0
4068	Type	Type 20 	240	0
4068	Length	Length 8-bit unsigned integer . Length of the option , in 8 octets . The length is 1 when NCoA is not supplied . The length is 3 when NCoA is supplied ( immediately following the Reserved field ). 	100	0
4068	Option-Code	Option-Code 0 	302	0
4068	Status	Status 8-bit unsigned integer indicating the disposition of the Fast Neighbor Advertisement message . The following Status values are currently defined : 	231	0
4068	Reserved	Reserved MUST be set to zero by the sender and MUST be ignored by the receiver . 	500	0
4068	Subtype	Subtype Description Reference ------- ----------- --------- 2 RtSolPr Section 6.1.1 3 PrRtAdv Section 6.1.2 4 HI Section 6.2.1 5 HAck Section 6.2.2 	240	0
4122	time_low	time_low unsigned 32 0-3 The low field of the bit integer timestamp 	110	0
4122	time_mid	time_mid unsigned 16 4-5 The middle field of the bit integer timestamp 	121	0
4124	Reserved	SUM ( Reserved ( CTc )) <= Max Reservable Bandwidth , 	231	0
4124	Reserved	Reserved : 29 bits This field is reserved . It MUST be set to zero on transmission and MUST be ignored on receipt . 	500	0
4124	CT	CT : 3 bits Indicates the Class-Type . Values currently allowed are 1 , 2 , ... , 7 . Value of 0 is Reserved . 	240	0
4129	Reserved	Reserved : 7 bits 	303	0
4129	V	The V-bit is used to determine if the message is for a particular DLC or if it is applicable for all the DLCs in the carrier . The possible values of the V-bit are listed below : 	210	0
4140	M	M If set to 1 it indicates a MAP registration . 	210	0
4140	Type	Type IPv6 Neighbor Discovery option . 23 . 	240	0
4140	Length	Length 8-bit unsigned integer . The length of the option and MUST be set to 3 . 	100	0
4140	Dist	Dist A 4-bit unsigned integer identifying the Distance Between MAP and the receiver of the advertisement . Its default value SHOULD be set to 1 if Dynamic MAP discovery is used . The Distance MUST be set to 1 if the MAP is on the same link as the mobile node . This field need not be interpreted as the number of hops between MAP and the mobile node . The only requirement is that the meaning of the Distance field is consistently interpreted within one Domain . A Distance value of Zero MUST NOT be used . 	210	0
4140	Pref	Pref The preference of a MAP . A 4-bit unsigned integer . A decimal value of 15 indicates the highest availability . 	231	0
4140	R	R When set to 1 , it indicates that the mobile node MUST form an RCoA based on the prefix in the MAP option . 	210	0
4140	Valid Lifetime	Valid Lifetime The minimum value ( in seconds ) of both the preferred and valid lifetimes of the prefix assigned to the MAP's subnet . This value indicates the validity of the MAP's address and consequently the time for which the RCoA is valid . 	121	0
4165	SIO	SIO - Service Information Octet 	400	0
4165	Common Message Header	The protocol messages for M2PA require a message header structure that contains a version , message class , message type , and message length . The header structure is shown in Figure 5 . 	302	0
4165	Common Message Header	Figure 5 . Common Message Header 	240	0
4165	Version	The version field contains the version of M2PA . The supported versions are : 	220	0
4165	Spare	The Spare field SHOULD be set to all zeroes ( 0's ) by the sender and ignored by the receiver . The Spare field SHOULD NOT be used for proprietary information . 	231	0
4165	Message Class	2.1.3 . Message Class 	240	0
4165	Message Type	The following list contains the message types for the defined messages . 	231	0
4165	Message Length	The Message Length defines the length of the message in octets , including the Common Header . 	100	0
4165	M2PA-specific Message Header	Figure 6 . M2PA-specific Message Header 	400	0
4165	BSN	2.2.1 . Backward Sequence Number ( BSN ) 	240	0
4165	FSN	2.2.2 . Forward Sequence Number ( FSN ) 	240	0
4165	PRI	PRI - Priority used only in national MTP defined in [ JT-Q703 ] and [ JT-Q704 ]. These bits are spare for other MTP versions . 	231	0
4174	Length	iSNS Functions : A bitmapped field defining the functions supported by the iSNS servers . The format of this field is described in section 2.1 . 	400	0
4174	iSNS Functions	iSNS Functions : A bitmapped field defining the functions supported by the iSNS servers . The format of this field is described in section 2.1 . 	400	0
4174	iSNS Server Security Bitmap	iSNS Server Security Bitmap : Contains the iSNS server security settings specified in section 2.4 . 	400	0
4174	iSNS Server Security Bitmap	The format of the iSNS server security Bitmap field is shown in Figure 5 . If valid , this field communicates to the DHCP client the security settings that are required to communicate with the indicated iSNS server . 	302	0
4175	C	Copyright ( C ) The Internet Society ( 2005 ). 	302	0
4175	PT	A dynamically allocated payload type field that designates the payload as uncompressed video . 	400	0
4175	M	If progressive scan video is being transmitted , the marker bit denotes the end of a video frame . If interlaced video is being transmitted , it denotes the end of the field . The marker bit MUST be set to 1 for the last packet of the video frame/field . It MUST be set to 0 for other packets . 	210	0
4175	Sequence Number	The low-order bits for RTP sequence number . The standard 16-bit sequence number is augmented with another 16 bits in the payload header in order avoid problems due to wrap-around when operating at high rate rates . 	231	0
4175	Extended Sequence Number	The high order bits of the extended 32-bit sequence number , in network byte order . 	200	0
4175	Length	Number of octets of data included from this scan line , in network byte order . This MUST be a multiple of the pgroup value . 	200	0
4175	Offset	Offset of the first pixel of the payload data within the scan line . If YCbCr format data is being transported , this is the pixel offset of the luminance sample; if RGB format data is being transported , it is the pixel offset of the red sample; if BGR format data is being transported , it is the pixel offset of the blue sample . The 	110	0
4175	F	Identifies which field the scan line belongs to , for interlaced data . F=0 identifies the first field and F=1 the second field . For progressive scan data ( e.g ., SMPTE 296M format video ), F MUST always be set to zero . 	210	0
4175	C	Determines if an additional scan line header follows the current scan line header in the RTP packet . Set to 1 if an additional header follows , implying that the RTP packet is carrying data for more than one scan line . Set to 0 otherwise . Several scan lines MAY be included in a single packet , up to the path MTU limit . The only way to determine the number of scan lines included per packet is to parse the payload headers . 	210	0
4175	C	This document is subject to the rights , licenses and restrictions contained in BCP 78 , and except as set forth therein , the authors retain all their rights . 	303	0
4175	.	This document is subject to the rights , licenses and restrictions contained in BCP 78 , and except as set forth therein , the authors retain all their rights . 	303	0
4184	Payload Header	Each AC-3 RTP payload MUST begin with the payload header shown in Figure 3 . 	302	0
4184	MBZ	o MBZ ( Must Be Zero ): Bits marked MBZ SHALL be set to the value zero and SHALL be ignored by receivers . The bits are reserved for future extensions . 	500	0
4184	FT	o FT ( Frame Type ): This two-bit field indicates the type of frame(s ) present in the payload . It takes the following values : 	240	0
4184	NF	o NF ( Number of frames/fragments ): An 8-bit field whose meaning depends on the Frame Type ( FT ) in this payload . For complete frames ( FT of 0 ), it is used to indicate the number of AC-3 frames in the RTP payload . For frame fragments ( FT of 1 , 2 , or 3 ), it is used to indicate the number fragments ( and therefore packets ) that make up the current frame . NF MUST be identical for packets containing fragments of the same frame . 	201	0
4186	MAC	MAC 	302	0
4186	Length	Indicates the length of this attribute in multiples of four bytes . The maximum length of an attribute is 1024 bytes . The length includes the Attribute Type and Length bytes . 	100	0
4186	AT_IV	This message MUST NOT include AT_MAC , AT_IV , or AT_ENCR_DATA . 	400	0
4186	AT_IV	This message MUST NOT include AT_MAC , AT_IV , or AT_ENCR_DATA . 	400	0
4186	AT_NONCE_MT	10.4 . AT_NONCE_MT 	240	0
4186	AT_ANY_ID_REQ	10.6 . AT_ANY_ID_REQ 	240	0
4186	AT_IDENTITY	10.8 . AT_IDENTITY 	240	0
4186	AT_RAND	10.9 . AT_RAND 	240	0
4186	AT_IV	AT_IV and AT_ENCR_DATA attributes can be used to transmit encrypted information between the EAP-SIM peer and server . 	301	0
4186	AT_ENCR_DATA	AT_IV and AT_ENCR_DATA attributes can be used to transmit encrypted information between the EAP-SIM peer and server . 	400	0
4186	AT_PADDING	AT_IV and AT_ENCR_DATA attributes can be used to transmit encrypted information between the EAP-SIM peer and server . 	400	0
4186	AT_MAC	The AT_MAC attribute is used for EAP-SIM message authentication . Section 8 specifies in which messages AT_MAC MUST be included . 	231	0
4186	AT_COUNTER	10.15 . AT_COUNTER 	240	0
4186	AT_NONCE_S	10.17 . AT_NONCE_S 	240	0
4186	AT_NOTIFICATION	10.18 . AT_NOTIFICATION 	240	0
4187	AUTN	AKA parameter . AUTN is an authentication value generated by the AuC , which , together with the RAND , authenticates the server to the peer , 128 bits . 	301	0
4187	AUTS	AKA parameter . A value generated by the peer upon experiencing a synchronization failure , 112 bits . 	231	0
4187	RAND	RAND 	202	0
4187	RES	Authentication result from the peer , which , together with the RAND , authenticates the peer to the server , 128 bits . 	400	0
4187	Attribute Type	Indicates the particular type of attribute . The attribute type values are listed in Section 11 . 	231	0
4187	Length	Indicates the length of this attribute in multiples of 4 bytes . The maximum length of an attribute is 1024 bytes . The length includes the Attribute Type and Length bytes . 	100	0
4187	AT_IV	This message MUST NOT include AT_MAC , AT_IV , or AT_ENCR_DATA . 	400	0
4187	AT_IV	This message MUST NOT include AT_MAC , AT_IV , or AT_ENCR_DATA . 	400	0
4187	AT_ANY_ID_REQ	10.3 . AT_ANY_ID_REQ 	240	0
4187	AT_IDENTITY	10.5 . AT_IDENTITY 	240	0
4187	AT_RAND	10.6 . AT_RAND 	240	0
4187	AT_AUTN	10.7 . AT_AUTN 	240	0
4187	AT_RES	10.8 . AT_RES 	240	0
4187	AT_AUTS	10.9 . AT_AUTS 	240	0
4187	AT_IV	AT_IV and AT_ENCR_DATA attributes can be used to transmit encrypted information between the EAP-AKA peer and server . 	301	0
4187	AT_ENCR_DATA	AT_IV and AT_ENCR_DATA attributes can be used to transmit encrypted information between the EAP-AKA peer and server . 	400	0
4187	AT_PADDING	AT_IV and AT_ENCR_DATA attributes can be used to transmit encrypted information between the EAP-AKA peer and server . 	400	0
4187	AT_CHECKCODE	The AT_MAC attribute is not used in the very first EAP-AKA messages during the AKA-Identity round , because keying material has not been derived yet . The peer and the server may exchange one or more pairs of EAP-AKA messages of the Subtype AKA-Identity before keys are derived and before the AT_MAC attribute can be applied . The EAP /- AKA-Identity messages may also be used upon fast re-authentication . 	301	0
4187	AT_MAC	The AT_MAC attribute is used for EAP-AKA message authentication . Section 9 specifies in which messages AT_MAC MUST be included . 	231	0
4187	AT_COUNTER	10.16 . AT_COUNTER 	240	0
4187	AT_NONCE_S	10.18 . AT_NONCE_S 	240	0
4187	AT_NOTIFICATION	10.19 . AT_NOTIFICATION 	240	0
4191	Prf	Prf ( Default Router Preference ) 2-bit signed integer . Indicates whether to prefer this router over other default routers . If the Router Lifetime is zero , the preference value MUST be set to ( 00 ) by the sender and MUST be ignored by the receiver . If the Reserved ( 10 ) value is received , the receiver MUST treat the value as if it were ( 00 ). 	302	0
4191	Resvd	Resvd ( Reserved ) A 3-bit unused field . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
4191	Type	Type 24 	240	0
4191	Length	Length 8-bit unsigned integer . The length of the option ( including the Type and Length fields ) in units of 8 octets . The Length field is 1 , 2 , or 3 depending on the Prefix Length . If Prefix Length is greater than 64 , then Length must be 3 . If Prefix Length is greater than 0 , then Length must be 2 or 3 . If Prefix Length is zero , then Length must be 1 , 2 , or 3 . 	100	0
4191	Prf	Prf ( Route Preference ) 2-bit signed integer . The Route Preference indicates whether to prefer the router associated with this prefix over others , when multiple identical prefixes ( for different routers ) have been received . If the Reserved ( 10 ) value is received , the Route Information Option MUST be ignored . 	231	0
4191	Resvd	Resvd ( Reserved ) Two 3-bit unused fields . They MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
4204	Vers	Vers : 4 bits 	400	0
4204	Flags	The following bit-values are defined . All other bits are reserved and should be sent as zero and ignored on receipt . 	500	0
4204	Msg Type	Msg Type : 8 bits 	231	0
4204	LMP Length	The total length of this LMP message in bytes , including the common header and any variable-length objects that follow . 	100	0
4204	N	The N flag indicates if the object is negotiable ( N=1 ) or non - negotiable ( N=0 ). 	210	0
4204	Class	The Class indicates the object type . Each object has a name , which is always capitalized in this document . 	231	0
4204	Length	The Length field indicates the length of the object in bytes , including the N , C-Type , Class , and Length fields . 	100	0
4204	Class	13.1 . CCID ( Control Channel ID ) Class 	240	0
4204	CC_Id	This MUST be node-wide unique and non-zero . The CC_Id identifies the control channel of the sender associated with the message . 	230	0
4204	CC_Id	CC_Id : 32 bits 	231	0
4204	HelloInterval	Indicates how frequently the Hello packets will be sent and is measured in milliseconds ( ms ). 	120	0
4204	HelloDeadInterval	If no Hello packets are received within the HelloDeadInterval , the control channel is assumed to have failed . The HelloDeadInterval is measured in milliseconds ( ms ). The HelloDeadInterval MUST be greater than the HelloInterval , and SHOULD be at least 3 times the value of HelloInterval . 	201	0
4204	TxSeqNum	This is the current sequence number for this Hello message . This sequence number will be incremented when the sequence number is reflected in the RcvSeqNum of a Hello packet that is received over the control channel . 	200	0
4204	RcvSeqNum	This is the sequence number of the last Hello message received over the control channel . RcvSeqNum=0 is used to indicate that a Hello message has not yet been received . 	201	0
4204	Flags	Flags : 16 bits 	231	0
4204	VerifyInterval	This is the interval between successive Test messages and is measured in milliseconds ( ms ). 	122	0
4204	Number of Data Links	Number of Data Links : 32 bits 	400	0
4204	EncType	This is the encoding type of the data link . The defined EncType values are consistent with the LSP Encoding Type values of [ RFC3471 ]. 	231	0
4204	Verify Transport Mechanism	This defines the transport mechanism for the Test Messages . The scope of this bit mask is restricted to each encoding type . The local node will set the bits corresponding to the various mechanisms it can support for transmitting LMP test messages . The receiver chooses the appropriate mechanism in the BeginVerifyAck message . 	231	0
4204	TransmissionRate	This is the transmission rate of the data link over which the Test messages will be transmitted . This is expressed in bytes per second and represented in IEEE floating-point format . 	122	0
4204	Wavelength	When a data link is assigned to a port or component link that is capable of transmitting multiple wavelengths ( e.g ., a fiber or waveband-capable port ), it is essential to know which wavelength the test messages will be transmitted over . This value corresponds to the wavelength at which the Test messages will be transmitted over and has local significance . If there is no ambiguity as to the wavelength over which the message will be sent , then this value SHOULD be set to 0 . 	400	0
4204	VerifyDeadInterval	If a Test message is not detected within the VerifyDeadInterval , then a node will send the TestStatusFailure message for that data link . 	303	0
4204	Verify_Transport_Response	The recipient of the BeginVerify message ( and the future recipient of the TEST messages ) chooses the transport mechanism from the various types that are offered by the transmitter of the Test messages . One and only one bit MUST be set in the verification transport response . 	400	0
4204	Verify_Id	This is used to differentiate Test messages from different TE links and/or LMP peers . This is a node-unique value that is assigned by the recipient of the BeginVerify message . 	231	0
4204	Flags	The following flags are defined . All other bit-values are reserved and should be sent as zero and ignored on receipt . 	500	0
4204	Flags	The following flags are defined . All other bit-values are reserved and should be sent as zero and ignored on receipt . 	500	0
4204	Type	The Type indicates the type of contents of the subobject . Currently defined values are : 	231	0
4204	Wavelength	Type = 2 , Wavelength 	240	0
4204	Length	The Length contains the total length of the subobject in bytes , including the Type and Length fields . The Length MUST be at least 4 , and MUST be a multiple of 4 . 	100	0
4204	Switching Type	This is used to identify the local Interface Switching Type of the TE link as defined in [ RFC3471 ]. 	231	0
4204	EncType	This is the encoding type of the data link . The defined EncType values are consistent with the LSP Encoding Type values of [ RFC3471 ]. 	231	0
4204	Wavelength	This value indicates the wavelength carried over the port . Values used in this field only have significance between two neighbors . 	231	0
4204	Channel_Status	This indicates the status condition of a data channel . The following values are defined . All other values are reserved . 	301	0
4204	C-Type	LMP Object Class name space and Class type ( C-Type ) 	231	0
4207	Trace Type	The type of the trace message . The following values are defined . All other values are reserved . 	231	0
4207	Trace Length	This is the length in bytes of the trace message ( as specified by the Trace Type ). 	100	0
4207	Trace Type	Trace Type : 16 bits 	400	0
4207	C-Type	LMP Object Class name space and Class type ( C-Type ): 	231	0
4209	Type	Type : 8 bits 	231	0
4209	Length	The Length field contains the total length of the sub-object in bytes , including the Type and Length fields . The Length MUST be at least 4 , and MUST be a multiple of 4 . 	100	0
4209	Link Group ID	The main purpose of the Link Group ID is to reduce control traffic during failures that affect many data links . A local ID may be assigned to a group of data links . This ID can be used to reduce the control traffic in the event of a failure by enabling a single ChannelStatus message with the LINK GROUP CHANNEL_STATUS object ( see Section 2.4.1 ) to be used for a group of data links instead of individual ChannelStatus messages for each data link . A data link may be a member of multiple groups . This is achieved by including multiple Link Group ID sub-objects in the LinkSummary message . 	231	0
4209	Link Group ID	Link Group ID 0xFFFFFFFF is reserved and indicates all data links in a TE link . All data links are members of Link Group 0xFFFFFFFF by default . 	210	0
4209	BER	2.3.3 . Bit Error Rate ( BER ) Estimate 	240	0
4209	BER	The exponent from the BER representation described above . That is , if the BER is 10 to the minus X , the BER field is set to X . 	231	0
4209	Link Flags	Link Flags : 6 bits 	231	0
4209	Span Length	This value represents the total length of the WDM span in meters , expressed as an unsigned ( long ) integer . 	100	0
4209	Administrative Group	2.3.6 . Administrative Group ( Color ) 	240	0
4209	Administrative Group	Administrative Group : 32 bits 	400	0
4209	Link Group ID	The Link Group ID 0xFFFFFFFF is reserved and indicates all data links in a TE link . All data links are members of the Link Group 0xFFFFFFFF by default . 	302	0
4209	Channel Status	Channel Status : 32 bits 	302	0
4233	Version	The version field contains the version of the IUA adaptation layer . The supported versions are the following : 	220	0
4233	Message Class	0 Management ( MGMT ) Message 1 Reserved for Other SIGTRAN Adaptation Layer 2 Reserved for Other SIGTRAN Adaptation Layers 3 ASP State Maintenance ( ASPSM ) Messages 4 ASP Traffic Maintenance ( ASPTM ) Messages 5 Q.921/Q.931 Boundary Primitives Transport ( QPTM ) Messages 6 Reserved for Other SIGTRAN Adaptation Layer 7 Reserved for Other SIGTRAN Adaptation Layer 8 Reserved for Other SIGTRAN Adaptation Layer 9 to 127 Reserved by the IETF 128 to 255 Reserved for IETF-Defined Message Class extensions 	240	0
4233	Reserved	The Reserved field is 8 bits . It SHOULD be set to all ' 0's and ignored by the receiver . 	231	0
4233	Message Length	The Message Length defines the length of the message in octets , including the Common Header . The Message Length MUST include parameter padding bytes , if any . 	100	0
4233	Parameter Tag	The Tag field is a 16-bit identifier of the type of parameter . It takes a value of 0 to 65534 . Common parameters used by adaptation layers are in the range of 0x00 to 0x3f . The parameter Tags defined are as follows : 	231	0
4233	Parameter Length	The Parameter Length field contains the size of the parameter in bytes , including the Parameter Tag , Parameter Length , and Parameter Value fields . The Parameter Length does not include any padding bytes . 	100	0
4233	Parameter Value	The Parameter Value field contains the actual information to be transferred in the parameter . 	230	0
4233	Reason	Reason 	302	0
4233	Protocol Data	Protocol Data 	400	0
4233	Protocol Data	Protocol Data 	400	0
4233	ASP Identifier	ASP Identifier ( Optional ) INFO String ( Optional ) 	231	0
4233	ASP Identifier	The optional ASP Identifier parameter contains a unique value that is locally significant among the ASPs that support an AS . The SG should save the ASP Identifier to be used , if necessary , with the Notify message ( see Section 3.3.3.2 ). 	303	0
4233	INFO String	INFO String ( optional ) 	231	0
4233	INFO String	INFO String ( Optional ) 	400	0
4233	INFO String	INFO String ( Optional ) 	231	0
4233	Traffic Mode Type	Traffic Mode Type ( Mandatory ) Interface Identifiers ( Optional ) - Combination of integer and integer ranges , OR - string ( text-formatted ) INFO String ( Optional ) 	240	0
4233	Interface Identifiers	Traffic Mode Type ( Mandatory ) Interface Identifiers ( Optional ) - Combination of integer and integer ranges , OR - string ( text-formatted ) INFO String ( Optional ) 	240	0
4233	Traffic Mode Type	Traffic Mode Type ( Mandatory ) Interface Identifier ( Optional ) - Combination of integer and integer ranges , OR - string ( text formatted ) INFO String ( Optional ) 	240	0
4233	Interface Identifiers	Interface Identifiers ( Optional ) - Combination of integer and integer ranges , OR - string ( text formatted ) 	231	0
4233	INFO String	The format for the ASP Inactive message parameters using integer - formatted Interface Identifiers is as follows : 	400	0
4233	Interface Identifiers	Interface Identifiers ( Optional ) - Combination of integer and integer ranges , OR - string ( text formatted ) INFO String ( Optional ) 	231	0
4233	Heartbeat Data	Heartbeat Data ( Optional ) 	400	0
4233	Diagnostic Information	When included , the optional Diagnostic information can be any information germane to the error condition , to assist in identification of the error condition . The Diagnostic information SHOULD contain the offending message . 	400	0
4233	Status	Status ( Mandatory ) ASP Identifier ( Optional ) Interface Identifiers ( Optional ) INFO String ( Optional ) 	231	0
4233	Status Type	The Status Type parameter identifies the type of the Notify message . The following are the valid Status Type values : 	231	0
4303	Sequence Number	This unsigned 32-bit field contains a counter value that increases by one for each packet sent , i.e ., a per-SA packet sequence number . For a unicast SA or a single-sender multicast SA , the sender MUST increment this field for every transmitted packet . Sharing an SA among multiple senders is permitted , though generally not recommended . ESP provides no means of synchronizing packet counters among multiple senders or meaningfully managing a receiver packet counter and window in the context of multiple senders . Thus , for a multi-sender SA , the anti-replay features of ESP are not available ( see Sections 3.3.3 and 3.4.3 .) 	200	0
4303	Sequence Number	To support high-speed IPsec implementations , Extended Sequence Numbers ( ESNs ) SHOULD be implemented , as an extension to the current , 32-bit sequence number field . Use of an ESN MUST be negotiated by an SA management protocol . Note that in IKEv2 , this negotiation is implicit; the default is ESN unless 32-bit sequence numbers are explicitly negotiated . ( The ESN feature is applicable to multicast as well as unicast SAs .) 	400	0
4303	Pad Length	The Pad Length field indicates the number of pad bytes immediately preceding it in the Padding field . The range of valid values is 0 to 255 , where a value of zero indicates that no Padding bytes are present . As noted above , this does not include any TFC padding bytes . The Pad Length field is mandatory . 	400	0
4303	Next Header	The Next Header is a mandatory , 8-bit field that identifies the type of data contained in the Payload Data field , e.g ., an IPv4 or IPv6 packet , or a next layer header and data . The value of this field is chosen from the set of IP Protocol Numbers defined on the web page of the IANA , e.g ., a value of 4 indicates IPv4 , a value of 41 indicates IPv6 , and a value of 6 indicates TCP . 	231	0
4306	Certificate Data	o Certificate Data ( variable length ) - Actual encoding of certificate data . The type of certificate is indicated by the Certificate Encoding field . 	231	0
4306	Certification Authority	o Certification Authority ( variable length ) - Contains an encoding of an acceptable certification authority for the type of certificate requested . 	303	0
4306	Selector Length	o Selector Length - Specifies the length of this Traffic Selector Substructure including the header . 	100	0
4306	Value	o Value ( 0 or more octets ) - The variable-length value of this Configuration Attribute . 	231	0
4328	Signal Type	This field ( 8 bits ) indicates the type of G.709 Elementary Signal that comprises the requested LSP . The permitted values are : 	231	0
4328	NMC	The NMC field ( 16 bits ) indicates the number of ODU tributary slots used by an ODUj when multiplexed into an ODUk ( k > j ) for the requested LSP . This field is not applicable when an ODUk is mapped into an OTUk and irrelevant at the Optical Channel layer . In both cases , it MUST be set to zero ( NMC = 0 ) when sent and should be ignored when received . 	400	0
4328	NVC	The NVC field ( 16 bits ) is dedicated to ODUk virtual concatenation ( i.e ., ODUk Inverse Multiplexing ) purposes . It indicates the number of ODU1 , ODU2 , or ODU3 Elementary Signals that are requested to be virtually concatenated to form an ODUk-Xv signal . By definition , these signals MUST be of the same type . 	231	0
4328	t2	The specification of the fields t1 , t2 , and t3 self-consistently characterizes the ODUk label space . The value space for the t1 , t2 , and t3 fields is defined as follows : 	240	0
4330	LI	Leap Indicator ( LI ): This is a two-bit code warning of an impending leap second to be inserted/deleted in the last minute of the current day . This field is significant only in server messages , where the values are defined as follows : 	240	0
4330	VN	Version Number ( VN ): This is a three-bit integer indicating the NTP/SNTP version number , currently 4 . If necessary to distinguish between IPv4 , IPv6 , and OSI , the encapsulating context must be inspected . 	220	0
4330	Mode	Mode : This is a three-bit number indicating the protocol mode . The values are defined as follows : 	240	0
4330	Stratum	Stratum : This is an eight-bit unsigned integer indicating the stratum . This field is significant only in SNTP server messages , where the values are defined as follows : 	400	0
4330	Precision	Precision : This is an eight-bit signed integer used as an exponent of two , where the resulting value is the precision of the system clock in seconds . This field is significant only in server messages , where the values range from - 6 for mains-frequency clocks to - 20 for microsecond clocks found in some workstations . 	110	0
4330	Root Delay	Root Delay : This is a 32-bit signed fixed-point number indicating the total roundtrip delay to the primary reference source , in seconds with the fraction point between bits 15 and 16 . Note that this variable can take on both positive and negative values , depending on the relative time and frequency offsets . This field is significant only in server messages , where the values range from negative values of a few milliseconds to positive values of several hundred milliseconds . 	122	0
4330	Root Dispersion	Root Dispersion : This is a 32-bit unsigned fixed-point number indicating the maximum error due to the clock frequency tolerance , in seconds with the fraction point between bits 15 and 16 . This field is significant only in server messages , where the values range from zero to several hundred milliseconds . 	231	0
4330	Reference Identifier	Reference Identifier : This is a 32-bit bitstring identifying the particular reference source . This field is significant only in server messages , where for stratum 0 ( kiss-o'-death message ) and 1 ( primary server ), the value is a four-character ASCII string , left justified and zero padded to 32 bits . For IPv4 secondary servers , the value is the 32-bit IPv4 address of the synchronization source . For IPv6 and OSI secondary servers , the value is the first 32 bits of the MD5 hash of the IPv6 or NSAP address of the synchronization source . 	230	0
4330	VN	VN 1-4 copied from 1-4 request 	231	0
4330	Mode	Mode 3 4 5 	240	0
4330	Stratum	Stratum 0 0-15 0-15 	302	0
4330	Poll	Poll 0 ignore ignore 	500	0
4330	Precision	Precision 0 ignore ignore 	500	0
4330	Root Delay	Root Delay 0 ignore ignore 	500	0
4330	Root Dispersion	Root Dispersion 0 ignore ignore 	302	0
4330	Reference Identifier	Reference Identifier 0 ignore ignore 	500	0
4330	VN	VN 1-4 copied from 4 request 	302	0
4330	Mode	Mode 3 4 5 	240	0
4330	Stratum	Stratum ignore 1 1 	240	0
4330	Poll	Poll ignore copied from log2 poll request interval 	231	0
4330	Precision	Precision ignore - log2 server - log2 server significant significant bits bits 	231	0
4330	Root Delay	Root Delay ignore 0 0 	500	0
4330	Root Dispersion	Root Dispersion ignore 0 0 	302	0
4330	Reference Identifier	Reference Identifier ignore source ident source ident 	230	0
4332	Default Gateway	o Default Gateway 	240	0
4332	DHCP Server	o DHCP Server 	400	0
4332	Type	Type : 134 	220	0
4340	Data Offset	Data Offset : 8 bits The offset from the start of the packet's DCCP header to the start of its application data area , in 32-bit words . The receiver MUST ignore packets whose Data Offset is smaller than the minimum-sized header for the given Type or larger than the DCCP packet itself . 	110	0
4340	CCVal	CCVal : 4 bits Used by the HC-Sender CCID . For example , the A-to-B CCID's sender , which is active at DCCP A , MAY send 4 bits of information per packet to its receiver by encoding that information in CCVal . The sender MUST set CCVal to zero unless its HC-Sender CCID specifies otherwise , and the receiver MUST ignore the CCVal field unless its HC-Receiver CCID specifies otherwise . 	400	0
4340	CsCov	Checksum Coverage ( CsCov ): 4 bits Checksum Coverage determines the parts of the packet that are covered by the Checksum field . This always includes the DCCP header and options , but some or all of the application data may be excluded . This can improve performance on noisy links for applications that can tolerate corruption . See Section 9 . 	400	0
4340	Checksum	Checksum : 16 bits The Internet checksum of the packet's DCCP header ( including options ), a network-layer pseudoheader , and , depending on Checksum Coverage , all , some , or none of the application data . See Section 9 . 	301	0
4340	Reserved	Reserved ( Res ): 3 bits Senders MUST set this field to all zeroes on generated packets , and receivers MUST ignore its value . 	500	0
4340	Res	Reserved ( Res ): 3 bits Senders MUST set this field to all zeroes on generated packets , and receivers MUST ignore its value . 	500	0
4340	Type	Type : 4 bits The Type field specifies the type of the packet . The following values are defined : 	231	0
4340	Type	Type Meaning ---- ------- 0 DCCP-Request 1 DCCP-Response 2 DCCP-Data 3 DCCP-Ack 4 DCCP-DataAck 5 DCCP-CloseReq 6 DCCP-Close 7 DCCP-Reset 8 DCCP-Sync 9 DCCP-SyncAck 10-15 Reserved 	240	0
4340	X	Extended Sequence Numbers ( X ): 1 bit Set to one to indicate the use of an extended generic header with 48-bit Sequence and Acknowledgement Numbers . DCCP-Data , DCCP - DataAck , and DCCP-Ack packets MAY set X to zero or one . All DCCP-Request , DCCP-Response , DCCP-CloseReq , DCCP-Close , DCCP - Reset , DCCP-Sync , and DCCP-SyncAck packets MUST set X to one; endpoints MUST ignore any such packets with X set to zero . High - rate connections SHOULD set X to one on all packets to gain increased protection against wrapped sequence numbers and attacks . See Section 7.6 . 	240	0
4340	Reserved	Reserved : 16 or 8 bits Senders MUST set this field to all zeroes on generated packets , and receivers MUST ignore its value . 	500	0
4340	Service Code	Service Code : 32 bits Describes the application-level service to which the client application wants to connect . Service Codes are intended to provide information about which application protocol a connection intends to use , thus aiding middleboxes and reducing reliance on globally well-known ports . See Section 8.1.2 . 	231	0
4340	Service Code	Service Code : 32 bits MUST equal the Service Code on the corresponding DCCP-Request . 	231	0
4340	Reset Code	Reset Code : 8 bits Represents the reason that the sender reset the DCCP connection . 	231	0
4340	Data 1	Data 1 , Data 2 , and Data 3 : 8 bits each The Data fields provide additional information about why the sender reset the DCCP connection . The meanings of these fields depend on the value of Reset Code . 	240	0
4340	Data 2	Data 1 , Data 2 , and Data 3 : 8 bits each The Data fields provide additional information about why the sender reset the DCCP connection . The meanings of these fields depend on the value of Reset Code . 	240	0
4340	Reset Code	Reset Code Name Data 1 Data 2 & 3 ----- ---- ------ ---------- 0 Unspecified 0 0 1 Closed 0 0 2 Aborted 0 0 3 No Connection 0 0 4 Packet Error pkt type 0 5 Option Error option # option data 6 Mandatory Error option # option data 7 Connection Refused 0 0 8 Bad Service Code 0 0 9 Too Busy 0 0 10 Bad Init Cookie 0 0 11 Aggression Penalty 0 0 12-127 Reserved 128-255 CCID-specific codes 	240	0
4348	CMR	CMR ( 4 bits ): This indicates a codec mode request sent to the speech encoder at the site of the receiver of this payload . CMR value 15 indicates that no mode request is present , and other unused values are reserved for future use . 	210	0
4348	R	R : This is a reserved bit that MUST be set to zero . The receiver MUST ignore all R bits . 	500	0
4348	ILL	ILL ( 4 bits , unsigned integer ): This is an OPTIONAL field that is present only if interleaving is signaled out-of-band for the session . ILL=L indicates to the receiver that the interleaving length is L+1 , in number of frame-blocks . 	400	0
4348	ILP	ILP ( 4 bits , unsigned integer ): This is an OPTIONAL field that is present only if interleaving is signaled . ILP MUST take a value between 0 and ILL , inclusive , indicating the interleaving index for frame-blocks in this payload in the interleave group . If the value of ILP is found greater than ILL , the payload SHOULD be discarded . 	302	0
4348	...	Payload s+L ( the last packet of this interleave group ): ILL=L , ILP=L , Carry frame-blocks : n+L , n+L+(L+1 ), n+L+2*(L+1 ), ..., n+L + ( N-1)*(L+1 ) 	400	0
4348	F	F ( 1 bit ): If set to 1 , indicates that this frame is followed by another speech frame in this payload; if set to 0 , indicates that this frame is the last frame in this payload . 	210	0
4348	FT	FT ( 4 bits ): Frame type index whose value is chosen according to Table 3 . 	231	0
4348	Q	Q ( 1 bit ): Frame quality indicator . If set to 0 , indicates that the corresponding frame is corrupted . During the interoperable mode , the receiver side ( with AMR-WB codec ) should set the RX_TYPE to either SPEECH_BAD or SID_BAD depending on the frame type ( FT ), if Q=0 . The VMR-WB encoder always sets Q bit to 1 . The VMR-WB decoder may ignore the Q bit . 	210	0
4352	ISF	ISF ( 5 bits ): Indicates the Internal Sampling Frequency employed for all frames in this payload . The index value corresponds to internal sampling frequency as specified in Table 24 in [ 1 ]. This field SHALL be set to 0 for payloads containing frames with Frame Type values 0-13 . 	302	0
4352	TFI	TFI ( 2 bits ): Transport Frame Index , from 0 ( first ) to 3 ( last ), indicating the position of the first transport frame of this payload in the AMR-WB + super-frame structure . For payloads with frames of only Frame Type values 0-9 , this field SHALL be set to 0 by the sender . The TFI value for a frame of type 0-9 SHALL be ignored by the receiver . Note that the frame type is coded in the table of contents ( as discussed later); hence , the mentioned dependencies of the frame type can be applied easily by interpreting only values carried in the payload header . It is not necessary to interpret the audio bit stream itself . 	110	0
4352	L	L ( 1 bit ): Long displacement field flag for payloads in interleaved mode . If set to 0 , four-bit displacement fields are used to indicate interleaving offset; if set to 1 , displacement fields of eight bits are used ( see Section 4.3.2.2 ). For payloads in the basic mode , this bit SHALL be set to 0 and SHALL be ignored by the receiver . 	210	0
4352	F	F ( 1 bit ): If set to 1 , indicates that this ToC entry is followed by another ToC entry; if set to 0 , indicates that this ToC entry is the last one in the ToC . 	210	0
4352	Frame Type	Frame Type ( FT ) ( 7 bits ): Indicates the audio codec frame type used for the group of frames referenced by this ToC entry . FT designates the combination of AMR-WB + core and stereo rate , one of the special AMR-WB + frame types , the AMR-WB rate , or comfort noise , as specified by Table 25 in [ 1 ]. 	231	0
4352	F	F ( 1 bit ): See definition in 4.3.2.1 . 	210	0
4352	Frame Type	Frame Type ( FT ) ( 7 bits ): See definition in 4.3.2.1 . 	231	0
4352	#frames	DIS1...DISn ( 4 bits ): A list of n ( n=#frames ) displacement fields indicating the displacement of the i:th ( i=1..n ) audio frame relative to the preceding audio frame in the payload , in units of frames . The four-bit unsigned integer displacement values may be between 0 and 15 , indicating the number of audio frames in decoding order between the ( i-1):th and the i:th frame in the payload . Note that for the first ToC entry of the payload , the value of DIS1 is meaningless . It SHALL be set to zero by a sender and SHALL be ignored by a receiver . This frame's location in the decoding order is uniquely defined by the RTP timestamp and TFI in the payload header . Note also that for subsequent ToC entries , DIS1 indicates the number of frames between the last frame of the previous group and the first frame of this group . 	240	0
4352	Padd	Padd ( 4 bits ): To ensure octet alignment , four padding bits SHALL be included at the end of the ToC entry in case there is odd number of frames in the group referenced by this entry . These bits SHALL be set to zero and SHALL be ignored by the receiver . If a group containing an even number of frames is referenced by this ToC entry , these padding bits SHALL NOT be included in the payload . 	301	0
4352	F	F ( 1 bit ): See definition in 4.3.2.1 . 	210	0
4352	Frame Type	Frame Type ( FT ) ( 7 bits ): See definition in 4.3.2.1 . 	231	0
4352	#frames	DIS1...DISn ( 8 bits ): A list of n ( n=#frames ) displacement fields indicating the displacement of the i:th ( i=1..n ) audio frame relative to the preceding audio frame in the payload , in units of frames . The eight-bit unsigned integer displacement values may be between 0 and 255 , indicating the number of audio frames in decoding order between the ( i-1):th and the i:th frame in the payload . Note that for the first ToC entry of the payload , the value of DIS1 is meaningless . It SHALL be set to zero by a sender and SHALL be ignored by a receiver . This frame's location in the decoding order is uniquely defined by the RTP timestamp and TFI in the payload header . Note also that for subsequent ToC entries , DIS1 indicates the displacement between the last frame of the previous group and the first frame of this group . 	301	0
4352	1	where TSprev denotes the timestamp of the last frame in the previous group . The timestamps of the subsequent frames in the group are computed in the same way as for the first group . 	121	0
4360	I	Value 0 : IANA-assignable type using the " First Come First Serve " policy 	231	0
4360	Value	Value 0 : IANA-assignable type using the " First Come First Serve " policy 	231	0
4360	Value	Value 1 : Part of this Type Field space is for IANA assignable types using either the Standard Action or the Early IANA Allocation policy . The rest of this Type Field space is for Experimental use . 	400	0
4360	T	T - Transitive bit 	231	0
4360	Value	Value 0 : The community is transitive across ASes 	230	0
4360	Value	Value 1 : The community is non-transitive across ASes 	400	0
4372	Type	Type : 89 for Chargeable-User-Identity . 	231	0
4372	Length	Length : >= 3 	100	0
4379	Value	Value Meaning ----- ------- 1 MPLS echo request 2 MPLS echo reply 	240	0
4379	Value	Value Meaning ----- ------- 1 Do not reply 2 Reply via an IPv4/IPv6 UDP packet 3 Reply via an IPv4/IPv6 UDP packet with Router Alert 4 Reply via application level control channel 	240	0
4379	Value	Value Meaning ----- ------- 	231	0
4379	MTU	The MTU is the size in octets of the largest MPLS frame ( including label stack ) that fits on the interface to the Downstream LSR . 	100	0
4379	Address Type	The Address Type indicates if the interface is numbered or unnumbered . It also determines the length of the Downstream IP Address and Downstream Interface fields . The resulting total for the initial part of the TLV is listed in the table below as " K Octets ". The Address Type is set to one of the following values : 	240	0
4379	DS Flags	DS Flags 	231	0
4379	I	Two flags are defined currently , I and N . The remaining flags MUST be set to zero when sending and ignored on receipt . 	500	0
4379	I	When this flag is set , it indicates that the replying router SHOULD include an Interface and Label Stack Object in the echo reply message . 	210	0
4379	N	Echo request messages will be used to diagnose non-IP flows . However , these messages are carried in IP packets . For a router that alters its ECMP algorithm based on the FEC or deep packet examination , this flag requests that the router treat this as it would if the determination of an IP payload had failed . 	230	0
4379	Multipath Type	Multipath Type 	240	0
4379	Depth Limit	The Depth Limit is applicable only to a label stack and is the maximum number of labels considered in the hash; this SHOULD be set to zero if unspecified or unlimited . 	231	0
4379	Multipath Length	Multipath Length 	100	0
4379	Downstream Label	The set of labels in the label stack as it would have appeared if this router were forwarding the packet through this interface . Any Implicit Null labels are explicitly included . Labels are treated as numbers , i.e ., they are right justified in the field . 	231	0
4379	Protocol	Protocol 	400	0
4379	Value	Value Meaning ----- ------- 1 Drop Pad TLV from reply 2 Copy Pad TLV to reply 3-255 Reserved for future use 	240	0
4379	Address Type	The Address Type indicates if the interface is numbered or unnumbered . It also determines the length of the IP Address and Interface fields . The resulting total for the initial part of the TLV is listed in the table below as " K Octets ". The Address Type is set to one of the following values : 	240	0
4379	Label	Label-L : the label from the actual stack currently being examined . Requires no initialization . 	231	0
4379	Label	Label-stack-depth : the depth of label being verified . Initialized to the number of labels in the received label stack S . 	400	0
4379	Value	Value Meaning ----- ------- 1 MPLS echo request 2 MPLS echo reply 	240	0
4379	Value	Value Meaning ----- ------- 1 Do not reply 2 Reply via an IPv4/IPv6 UDP packet 3 Reply via an IPv4/IPv6 UDP packet with Router Alert 4 Reply via application level control channel 	240	0
4379	Type	Type Sub-Type Value Field ---- -------- ----------- 1 Target FEC Stack 1 LDP IPv4 prefix 2 LDP IPv6 prefix 3 RSVP IPv4 LSP 4 RSVP IPv6 LSP 5 Not Assigned 6 VPN IPv4 prefix 7 VPN IPv6 prefix 8 L2 VPN endpoint 9 " FEC 128 " Pseudowire ( Deprecated ) 10 " FEC 128 " Pseudowire 11 " FEC 129 " Pseudowire 12 BGP labeled IPv4 prefix 13 BGP labeled IPv6 prefix 14 Generic IPv4 prefix 15 Generic IPv6 prefix 16 Nil FEC 2 Downstream Mapping 3 Pad 4 Not Assigned 5 Vendor Enterprise Number 6 Not Assigned 7 Interface and Label Stack 8 Not Assigned 9 Errored TLVs Any value The TLV not understood 10 Reply TOS Byte 	240	0
4383	i	i : 32 bit , MANDATORY Identifier of the time interval i , corresponding to the key K_i , which is used to calculate the TESLA MAC of the current packet ( and other packets sent in the current time interval i ). 	121	0
4383	Disclosed Key	Disclosed Key : variable length , MANDATORY The disclosed key ( K_(i-d )), which can be used to authenticate previous packets from earlier time intervals [ RFC4082 ]. A Section 4.3 parameter establishes the size of this field . 	400	0
4383	TESLA MAC	TESLA MAC ( Message Authentication Code ): variable length , MANDATORY The MAC computed using the key K'_i ( derived from K_i ) [ RFC4082 ], which is disclosed in a subsequent packet ( in the Disclosed Key field ). The MAC coverage is defined in Section 4.6 . A Section 4.3 parameter establishes the size of this field . 	231	0
4383	TESLA MAC	TESLA MAC HMAC-SHA1 HMAC-SHA1 ( TRUNCATED ) BIT-OUTPUT LENGTH n_m 80 80 	240	0
4385	Flags	These bits MAY be used by for per-payload signaling . Their semantics MUST be defined in the PW specification . 	231	0
4385	FRG	These bits are used when fragmenting a PW payload . Their use is described in [ FRAG ], which is currently a work in progress . When the PW is of a type that will never need payload fragmentation , these bits may be used as general purpose flags . 	400	0
4385	Length	When the PSN path between the PEs includes an Ethernet segment , the PW packet arriving at the CE-bound PE from the PSN may include padding appended by the Ethernet Data Link Layer . The CE-bound PE uses the length field to determine the size of the padding added by the PSN , and hence extract the PW payload from the PW packet . 	400	0
4391	GID	The GID is not needed when exchanging information within an IB subnet though it may be included in any packet . It is an absolute necessity when transmitting across the IB subnet since the IB routers use the GID to correctly forward the packets . The source and destination GIDs are fields included in the GRH . 	303	0
4391	Queue Pair Number	Every unicast UD communication is always directed to a particular queue pair ( QP ) at the peer . 	400	0
4391	GID	This is one of the GIDs of the port associated with the IPoIB interface [ IBTA ]. IB associates multiple GIDs with a port . It is RECOMMENDED that the GID formed by the combination of the IB subnet prefix and the port's " Port GUID " [ IBTA ] be included in the link-layer/hardware address . 	230	0
4391	Type	Type : Source Link-layer address 1 Target Link-layer address 2 	240	0
4396	M	Marker bit ( M ): The marker bit SHALL be set to 1 if the RTP packet includes one or more whole text samples or the last fragment of a text sample; otherwise , it is set to zero ( 0 ). 	210	0
4396	PT	Payload Type ( PT ): The payload type is set dynamically and sent by out-of-band means . 	231	0
4396	U	o U ( 1 bit ) " UTF Transformation flag ": This is used to inform RTP receivers whether UTF-8 ( U=0 ) or UTF-16 ( U=1 ) was used to encode the text string . UTF-16 text strings transported by this payload format MUST be serialized in big endian order , a.k.a . network byte order . 	210	0
4396	R	o R ( 4 bits ) " Reserved bits ": for future extensions . This field MUST be set to zero ( 0x0 ) and MUST be ignored by receivers . 	500	0
4396	TYPE	o TYPE ( 3 bits ) " Type Field ": This field specifies which specific header fields follow . The following TYPE values are defined : 	400	0
4396	U	o LEN , in this case , represents the length of the ( complete ) text sample plus eight ( 8 ) bytes of headers . For finding the length of the text sample in the Sample Size Box of 3GP files , see Section 4.3 . 	100	0
4396	R	o LEN , in this case , represents the length of the ( complete ) text sample plus eight ( 8 ) bytes of headers . For finding the length of the text sample in the Sample Size Box of 3GP files , see Section 4.3 . 	100	0
4396	TYPE	o LEN , in this case , represents the length of the ( complete ) text sample plus eight ( 8 ) bytes of headers . For finding the length of the text sample in the Sample Size Box of 3GP files , see Section 4.3 . 	100	0
4396	SIDX	o SIDX ( 8 bits ) " Text Sample Entry Index ": This is an index used to identify the sample descriptions . 	231	0
4396	SDUR	o SDUR ( 24 bits ) " Text Sample Duration ": indicates the sample duration in RTP timestamp units of the text sample . For this field , a length of 3 bytes is preferred to 2 bytes . This is because , for a typical clockrate of 1000 Hz , 16 bits would allow for a maximum duration of just 65 seconds , which might be too short for some streams . On the other hand , 24 bits at 1000 Hz allow for a maximum duration of about 4.6 hours , while for 90 KHz , this value is about 3 minutes . These values should be enough for streaming applications . However , if a larger duration is needed , the extension mechanism specified in Section 4.3 SHALL be used . 	100	0
4396	U	o U , R , and TYPE , as defined in Section 4.1.1 . 	210	0
4396	R	o U , R , and TYPE , as defined in Section 4.1.1 . 	210	0
4396	TYPE	o U , R , and TYPE , as defined in Section 4.1.1 . 	400	0
4396	SIDX	Note that the U , SIDX , and SDUR fields are meaningful since partial text strings can also be displayed . 	400	0
4396	SDUR	Note that the U , SIDX , and SDUR fields are meaningful since partial text strings can also be displayed . 	400	0
4396	R	o LEN indicates the length of the modifier contents . Its value is obtained upon fragmentation . Additionally , the LEN field MUST be greater than six ( 0x0006 ). Otherwise , the unit MUST be discarded . 	100	0
4396	R	LEN indicates as for TYPE 3 the length of the modifier contents and SHALL also be obtained upon fragmentation . The LEN field MUST be greater than six ( 0x0006 ). Otherwise , the unit MUST be discarded . 	100	0
4396	R	The LEN field indicates the length of the sample description , plus three units accounting for the SIDX and LEN field itself . Thus , this field MUST be greater than three ( 0x0003 ). Otherwise , the unit MUST be discarded . 	100	0
4396	X	i . If SIDX=Z is not stored , then store the sample description . Go to beginning of step 4 ( wait state ). ii . Else , go to the beginning of step 4 ( wait state ). 	240	0
4396	TLEN	o Text strings , TLEN , U bit , and modifiers from the Media Data Box ( mdat ). Text strings , 16-bit text string byte count , Byte Order Mark ( BOM , indicating UTF encoding ), and modifier boxes can be found here . 	301	0
4420	Type	Type 	240	0
4420	Length	The length of the Value field in bytes . Thus , if no Value field is present the Length field contains the value zero . Each Value field must be zero padded at the end to take it up to a four byte boundary -- the padding is not included in the length so that a one byte value would be encoded in an eight byte TLV with Length field set to one . 	100	0
4420	Type	Type 	240	0
4420	Length	The Length contains the total length of the subobject in bytes , including the Type and Length fields . This length must be a multiple of 4 and must be at least 8 . 	100	0
4425	P	P-picture : A picture that is coded using motion compensated prediction from past reference fields or frames . 	400	0
4425	M	Marker bit ( M ): 1 bit This bit is set to 1 if the RTP packet contains an Access Unit containing a complete VC-1 frame or the last fragment of a VC-1 frame . 	210	0
4425	PT	Payload type ( PT ): 7 bits This document does not assign an RTP payload type for this RTP payload format . The assignment of a payload type has to be performed either through the RTP profile used or in a dynamic way . 	400	0
4425	AU Control	AU Control : 8 bits The usage of the AU Control field is defined in section 5.3 . 	400	0
4425	RA Count	RA Count : 8 bits Random Access Point Counter . This field is a binary modulo 256 counter . The value of this field MUST be incremented by 1 each time an AU is transmitted where the RA bit in the AU Control field is set to 1 . The initial value of this field is undefined and MAY be chosen randomly . 	210	0
4425	AUP Len	AUP Len : 16 bits Access Unit Payload Length . Specifies the size , in bytes , of the payload of the Access Unit . The field does not include the size of the AU header itself . The field MUST be included in each AU header in an RTP packet , except for the last AU header in the packet . If this field is not included , the payload of the Access Unit SHALL be assumed to extend to the end of the RTP payload . 	100	0
4425	PTS Delta	PTS Delta : 32 bits Presentation time delta . Specifies the presentation time of the frame as a 2's complement offset ( delta ) from the timestamp field in the RTP header of this RTP packet . The PTS Delta field MUST use the same clock rate as the timestamp field in the RTP header . 	121	0
4425	DTS Delta	DTS Delta : 32 bits Decode time delta . Specifies the decode time of the frame as a 2's complement offset ( delta ) between the presentation time and the decode time . Note that if the presentation time is larger than the decode time , this results in a value for the DTS Delta field that is greater than zero . The DTS Delta field MUST use the same clock rate as the timestamp field in the RTP header . If this field is not included , the decode time of the frame SHALL be assumed to be identical to the presentation time of the frame . 	122	0
4425	PT	PT : 1 bit PTS Delta Present . This bit MUST be set to 1 if the AU header includes the PTS Delta field . 	210	0
4433	Type	Type DYNAMIC-HA-ADDRESS ( skippable ) 139 is the type , which specifies the dynamic HA address . 	231	0
4433	Length	Length Indicates the length of the extension not including the type , subtype , and length fields . Length is always 4 bytes . 	100	0
4433	HA-Address	HA-Address Address of the home agent . 	230	0
4443	Type	Type 1 	240	0
4443	Unused	Unused This field is unused for all code values . It must be initialized to zero by the originator and ignored by the receiver . Description 	500	0
4443	Type	Type 2 	240	0
4443	Code	Code Set to 0 ( zero ) by the originator and ignored by the receiver . 	500	0
4443	MTU	MTU The Maximum Transmission Unit of the next-hop link . 	230	0
4443	Type	Type 3 	240	0
4443	Unused	Unused This field is unused for all code values . It must be initialized to zero by the originator and ignored by the receiver . 	500	0
4443	Type	Type 4 	240	0
4443	Pointer	Pointer Identifies the octet offset within the invoking packet where the error was detected . 	231	0
4443	Type	Type 128 	240	0
4443	Code	Code 0 	302	0
4443	Identifier	Identifier An identifier to aid in matching Echo Replies to this Echo Request . May be zero . 	231	0
4443	Sequence Number	A sequence number to aid in matching Echo Replies to this Echo Request . May be zero . 	302	0
4443	Type	Type 129 	240	0
4443	Code	Code 0 	302	0
4443	Identifier	Identifier The identifier from the invoking Echo Request message . 	230	0
4443	Sequence Number	Sequence Number 	200	0
4447	C	Copyright ( C ) The Internet Society ( 2006 ). 	302	0
4447	Status Code	Status Code Specified in Section ==================================================================== " Illegal C-Bit " 6.1 " Wrong C-Bit " 6.2 " Incompatible bit-rate " [ CEP ] " CEP/TDM mis-configuration " [ CEP ] " PW status " 5.4.2 " Unassigned/Unrecognized TAI " 5.3.3 " Generic Misconfiguration Error " [ SAToP ] " Label Withdraw PW Status Method Not Supported " 5.4.1 	240	0
4447	C	The bit ( C ) is used to flag the presence of a control word as follows : 	210	0
4447	C	This document is subject to the rights , licenses and restrictions contained in BCP 78 , and except as set forth therein , the authors retain all their rights . 	303	0
4454	C	Copyright ( C ) The Internet Society ( 2006 ). 	302	0
4454	x	0x0002 ATM AAL5 SDU VCC transport 0x0003 ATM Cell transport Port Mode 0x0009 ATM Cell transport VCC Mode 0x000A ATM Cell transport VPC Mode 	240	0
4454	ATM-Specific Sublayer	This section defines a new ATM-Specific Sublayer , an alternative to the Default L2-Specific Sublayer as mentioned in Section 4.6 of [ RFC3931 ]. Four new flag bits ( T , G , C , and U ) are defined that concur with Section 8.2 of [ PWE3ATM ]. 	231	0
4454	B	* B and E bits 	110	0
4454	T	Bit ( T ) of the ATM-Specific Sublayer indicates whether the packet contains an ATM admin cell or an AAL5 payload . If T = 1 , the packet contains an ATM admin cell , encapsulated according to the VCC cell relay encapsulation of Section 5.2 . 	210	0
4454	G	The ingress LCCE device SHOULD set this bit to 1 if the Explicit Forward Congestion Indication ( EFCI ) bit of the final cell of the incoming AAL5 payload is set to 1 , or if the EFCI bit of the single ATM cell to be transported in the packet is set to 1 . Otherwise , this bit SHOULD be set to 0 . The egress LCCE device SHOULD set the EFCI bit of all the outgoing cells that transport the AAL5 payload to the value contained in this field . 	210	0
4454	C	The ingress LCCE device SHOULD set this bit to 1 if the Cell Loss Priority ( CLP ) bit of any of the incoming ATM cells of the AAL5 payload is set to 1 , or if the CLP bit of the single ATM cell that is to be transported in the packet is set to 1 . Otherwise this bit SHOULD be set to 0 . The egress LCCE device SHOULD set the CLP bit of all outgoing cells that transport the AAL5 CPCS-PDU to the value contained in this field . 	210	0
4454	U	When FRF.8.1 Frame Relay / ATM PVC Service Interworking ( see [ FRF8.1 ]) traffic is being transported , the CPCS-UU Least Significant Bit ( LSB ) of the AAL5 CPCS-PDU may contain the Frame Relay C/R bit . The ingress LCCE device SHOULD copy this bit to the U bit of the ATM-Specific Sublayer . The egress LCCE device SHOULD copy the U bit to the CPCS-UU Least Significant Bit ( LSB ) of the AAL5 payload . 	230	0
4454	x	0x0002 ATM AAL5 SDU VCC transport 0x0003 ATM Cell transparent Port Mode 0x0009 ATM Cell transport VCC Mode 0x000A ATM Cell transport VPC Mode 	240	0
4454	C	This document is subject to the rights , licenses and restrictions contained in BCP 78 , and except as set forth therein , the authors retain all their rights . 	303	0
4460	Upper Layer Abort Reason	o Upper Layer Abort Reason - Reason of the abort to be passed to the peer . 	400	0
4460	Upper Layer Abort Reason	o Upper Layer Abort Reason - The abort reason specified in case of a user-initiated abort . 	400	0
4535	Key Data	Key Data ( variable length ) - This is the actual key data , which is dependent on the Key Type algorithm for its format . 	400	0
4535	Signature Timestamp	Signature Timestamp ( 15 octets ) - This is the time value when the digital signature was applied . This field contains the timestamp in UTF-8 format YYYYMMDDHHMMSSZ , where YYYY is the year ( 0000 - 9999 ), MM is the numerical value of the month ( 01 - 12 ), DD is the day of the month ( 01 - 31 ), HH is the hour of the day ( 00 - 23 ), MM is the minute within the hour ( 00 - 59 ), SS is the seconds within the minute ( 00 - 59 ), and the letter Z indicates that this is Zulu time . This format is loosely based on [ RFC3161 ]. 	121	0
4553	L	L - If set , indicates that TDM data carried in the payload is invalid due to an attachment circuit fault . When the L bit is set the payload MAY be omitted in order to conserve bandwidth . The CE - bound IWF MUST play out an appropriate amount of filler data regardless of the payload size . Once set , if the fault is rectified , the L bit MUST be cleared . 	210	0
4553	R	R - If set by the PSN-bound IWF , indicates that its local CE-bound IWF is in the packet loss state , i.e ., has lost a preconfigured number of consecutive packets . The R bit MUST be cleared by the PSN-bound IWF once its local CE-bound IWF has exited the packet loss state , i.e ., has received a preconfigured number of consecutive packets . 	210	0
4553	RSV	RSV and FRG ( bits 6 to 9 ) - MUST be set to 0 by the PSN-bound IWF and MUST be ignored by the CE-bound IWF . RSV is reserved . FRG is fragmentation; see [ PWE3-FRAG ]. 	500	0
4553	FRG	RSV and FRG ( bits 6 to 9 ) - MUST be set to 0 by the PSN-bound IWF and MUST be ignored by the CE-bound IWF . RSV is reserved . FRG is fragmentation; see [ PWE3-FRAG ]. 	500	0
4553	LEN	LEN ( bits 10 to 15 ) - MAY be used to carry the length of the SAToP packet ( defined as the size of the SAToP header + the payload size ) if it is less than 64 bytes , and MUST be set to zero otherwise . When the LEN field is set to 0 , the preconfigured size of the SAToP packet payload MUST be assumed to be as described in Section 5.1 , and if the actual packet size is inconsistent with this length , the packet MUST be considered malformed . 	100	0
4553	Sequence number	Sequence number - used to provide the common PW sequencing function as well as detection of lost packets . It MUST be generated in accordance with the rules defined in Section 5.1 of [ RFC3550 ] for the RTP sequence number : 	200	0
4581	Extension Type	Extension Data Length : 16-bit unsigned integer . Length of the Extension Data field of this option , in octets . 	100	0
4581	Extension Data Length	Extension Data Length : 16-bit unsigned integer . Length of the Extension Data field of this option , in octets . 	100	0
4581	Extension Data	Extension Data : Variable-length field . Extension-Type-specific data . 	400	0
4582	Ver	Ver : The 3-bit version field MUST be set to 1 to indicate this version of BFCP . 	220	0
4582	Reserved	Reserved : At this point , the 5 bits in the reserved field SHOULD be set to zero by the sender of the message and MUST be ignored by the receiver . 	500	0
4582	Primitive	Primitive : This 8-bit field identifies the main purpose of the message . The following primitive values are defined : 	231	0
4582	Payload Length	Payload Length : This 16-bit field contains the length of the message in 4-octet units , excluding the common header . 	100	0
4582	Conference ID	Conference ID : This 32-bit field identifies the conference the message belongs to . 	230	0
4582	Transaction ID	Transaction ID : This field contains a 16-bit value that allows users to match a given message with its response . The value of the Transaction ID in server-initiated transactions is 0 ( see Section 8 ). 	302	0
4582	User ID	User ID : This field contains a 16-bit value that uniquely identifies a participant within a conference . 	230	0
4582	Type	Type : This 7-bit field contains the type of the attribute . Each attribute , identified by its type , has a particular format . The attribute formats defined are : 	240	0
4582	M	M : The ' M ' bit , known as the Mandatory bit , indicates whether support of the attribute is required . If an unrecognized attribute with the ' M ' bit set is received , the message is rejected . The ' M ' bit is significant for extension attributes defined in other documents only . All attributes specified in this document MUST be understood by the receiver so that the setting of the ' M ' bit is irrelevant for these . In all other cases , the unrecognised attribute is ignored but the message is processed . 	210	0
4582	Length	Length : This 8-bit field contains the length of the attribute in octets , excluding any padding defined for specific attributes . The length of attributes that are not grouped includes the Type , ' M ' bit , 	100	0
4582	Attribute Contents	Attribute Contents : The contents of the different attributes are defined in the following sections . 	400	0
4582	Beneficiary ID	Beneficiary ID : This field contains a 16-bit value that uniquely identifies a user within a conference . 	230	0
4582	Floor ID	Floor ID : This field contains a 16-bit value that uniquely identifies a floor within a conference . 	230	0
4582	Floor Request ID	Floor Request ID : This field contains a 16-bit value that identifies a floor request at the floor control server . 	230	0
4582	Prio	Prio : This field contains a 3-bit priority value , as shown in Table 3 . Senders SHOULD NOT use values higher than 4 in this field . Receivers MUST treat values higher than 4 as if the value received were 4 ( Highest ). The default priority value when the PRIORITY attribute is missing is 2 ( Normal ). 	302	0
4582	Reserved	Reserved : At this point , the 13 bits in the reserved field SHOULD be set to zero by the sender of the message and MUST be ignored by the receiver . 	500	0
4582	Request Status	Request Status : This 8-bit field contains the status of the request , as described in the following table . 	230	0
4582	Queue Position	Queue Position : This 8-bit field contains , when applicable , the position of the floor request in the floor request queue at the server . If the Request Status value is different from Accepted , if the floor control server does not implement a floor request queue , or if the floor control server does not want to provide the client with this information , all the bits of this field SHOULD be set to zero . 	230	0
4582	Error Code	Error Code : This 8-bit field contains an error code from the following table . If an error code is not recognised by the receiver , then the receiver MUST assume that an error exists , and therefore that the message is processed , but the nature of the error is unclear . 	231	0
4582	Error Specific Details	Error Specific Details : Present only for certain Error Codes . In this document , only for Error Code 4 ( Unknown Mandatory Attribute ). See Section 5.2.6.1 for its definition . 	231	0
4582	Padding	Padding : One , two , or three octets of padding added so that the contents of the ERROR-CODE attribute is 32-bit aligned . If the attribute is already 32-bit aligned , no padding is needed . 	400	0
4582	Unknown Type	Unknown Type : These 7-bit fields contain the Types of the attributes ( which were present in the message that triggered the Error message ) that were unknown to the receiver . 	231	0
4582	R	R : At this point , this bit is reserved . It SHOULD be set to zero by the sender of the message and MUST be ignored by the receiver . 	500	0
4582	Text	In some situations , the contents of the Text field may be generated by an automaton . If this automaton has information about the preferred language of the receiver of a particular ERROR-INFO attribute , it MAY use this language to generate the Text field . 	400	0
4582	Padding	Padding : One , two , or three octets of padding added so that the contents of the ERROR-INFO attribute is 32-bit aligned . The Padding bits SHOULD be set to zero by the sender and MUST be ignored by the receiver . If the attribute is already 32-bit aligned , no padding is needed . 	302	0
4582	Text	Padding : One , two , or three octets of padding added so that the contents of the PARTICIPANT-PROVIDED-INFO attribute is 32-bit aligned . The Padding bits SHOULD be set to zero by the sender and MUST be ignored by the receiver . If the attribute is already 32-bit aligned , no padding is needed . 	301	0
4582	Padding	Padding : One , two , or three octets of padding added so that the contents of the PARTICIPANT-PROVIDED-INFO attribute is 32-bit aligned . The Padding bits SHOULD be set to zero by the sender and MUST be ignored by the receiver . If the attribute is already 32-bit aligned , no padding is needed . 	301	0
4582	Text	In some situations , the contents of the Text field may be generated by an automaton . If this automaton has information about the preferred language of the receiver of a particular STATUS-INFO attribute , it MAY use this language to generate the Text field . 	400	0
4582	Padding	Padding : One , two , or three octets of padding added so that the contents of the STATUS-INFO attribute is 32-bit aligned . The Padding bits SHOULD be set to zero by the sender and MUST be ignored by the receiver . If the attribute is already 32-bit aligned , no padding is needed . 	302	0
4582	Supp . Attr .	Supp . Attr .: These fields contain the Types of the attributes that are supported by the floor control server in the following format : 	400	0
4582	R	R : Reserved : This bit MUST be set to zero upon transmission and MUST be ignored upon reception . 	500	0
4582	Padding	Padding : Two octets of padding added so that the contents of the SUPPORTED-ATTRIBUTES attribute is 32-bit aligned . If the attribute is already 32-bit aligned , no padding is needed . 	400	0
4582	Primitive	Primitive : These fields contain the types of the BFCP messages that are supported by the floor control server . See Table 1 for the list of BFCP primitives . 	231	0
4582	Padding	Padding : One , two , or three octets of padding added so that the contents of the SUPPORTED-PRIMITIVES attribute is 32-bit aligned . If the attribute is already 32-bit aligned , no padding is needed . 	400	0
4582	Text	Padding : One , two , or three octets of padding added so that the contents of the USER-DISPLAY-NAME attribute is 32-bit aligned . The Padding bits SHOULD be set to zero by the sender and MUST be ignored by the receiver . If the attribute is already 32-bit aligned , no padding is needed . 	302	0
4582	Padding	Padding : One , two , or three octets of padding added so that the contents of the USER-DISPLAY-NAME attribute is 32-bit aligned . The Padding bits SHOULD be set to zero by the sender and MUST be ignored by the receiver . If the attribute is already 32-bit aligned , no padding is needed . 	302	0
4582	Text	Text : This field contains the UTF-8 encoded user's contact URI , that is , the URI used by the user to set up the resources ( e.g ., media streams ) that are controlled by BFCP . For example , in the context of a conference set up by SIP , the USER-URI attribute would carry the SIP URI of the user . 	230	0
4582	Padding	Padding : One , two , or three octets of padding added so that the contents of the USER-URI attribute is 32-bit aligned . The Padding bits SHOULD be set to zero by the sender and MUST be ignored by the receiver . If the attribute is already 32-bit aligned , no padding is needed . 	302	0
4582	Beneficiary ID	Beneficiary ID : This field contains a 16-bit value that uniquely identifies a user within a conference . 	230	0
4582	Floor Request ID	Floor Request ID : This field contains a 16-bit value that identifies a floor request at the floor control server . 	230	0
4582	Floor ID	Floor ID : this field contains a 16-bit value that uniquely identifies a floor within a conference . 	230	0
4582	Floor Request ID	Floor Request ID : this field contains a 16-bit value that identifies a floor request at the floor control server . 	230	0
4585	V	version ( V ): 2 bits This field identifies the RTP version . The current version is 2 . 	220	0
4585	P	padding ( P ): 1 bit If set , the padding bit indicates that the packet contains additional padding octets at the end that are not part of the control information but are included in the length field . 	210	0
4585	FMT	Feedback message type ( FMT ): 5 bits This field identifies the type of the FB message and is interpreted relative to the type ( transport layer , payload - specific , or application layer feedback ). The values for each of the three feedback types are defined in the respective sections below . 	231	0
4585	PT	Payload type ( PT ): 8 bits This is the RTCP packet type that identifies the packet as being an RTCP FB message . Two values are defined by the IANA : 	231	0
4585	SSRC of packet sender	SSRC of packet sender : 32 bits The synchronization source identifier for the originator of this packet . 	230	0
4585	SSRC of media source	SSRC of media source : 32 bits The synchronization source identifier of the media source that this piece of feedback information is related to . 	230	0
4585	PID	Packet ID ( PID ): 16 bits The PID field is used to specify a lost packet . The PID field refers to the RTP sequence number of the lost packet . 	200	0
4585	BLP	bitmask of following lost packets ( BLP ): 16 bits The BLP allows for reporting losses of any of the 16 RTP packets immediately following the RTP packet indicated by the PID . The BLP's definition is identical to that given in [ 6 ]. Denoting the BLP's least significant bit as bit 1 , and its most significant bit as bit 16 , then bit i of the bit mask is set to 1 if the receiver has not received RTP packet number ( PID+i ) ( modulo 2^16 ) and indicates this packet is lost; bit i is set to 0 otherwise . Note that the sender MUST NOT assume that a receiver has received a packet because its bit mask was set to 0 . For example , the least significant bit of the BLP would be set to 1 if the packet corresponding to the PID and the following packet have been lost . However , the sender cannot infer that packets PID+2 through PID+16 have been received simply because bits 2 through 15 of the BLP are 0; all the sender knows is that the receiver has not reported them as lost at this time . 	231	0
4585	First	First : 13 bits The macroblock ( MB ) address of the first lost macroblock . The MB numbering is done such that the macroblock in the upper left corner of the picture is considered macroblock number 1 and the number for each macroblock increases from left to right and then from top to bottom in raster-scan order ( such that if there is a total of N macroblocks in a picture , the bottom right macroblock is considered macroblock number N ). 	230	0
4585	Number	Number : 13 bits The number of lost macroblocks , in scan order as discussed above . 	110	0
4585	PictureID	PictureID : 6 bits The six least significant bits of the codec-specific identifier that is used to reference the picture in which the loss of the macroblock(s ) has occurred . For many video codecs , the PictureID is identical to the Temporal Reference . 	230	0
4585	PB	PB : 8 bits The number of unused bits required to pad the length of the RPSI message to a multiple of 32 bits . 	100	0
4585	Payload Type	Payload Type : 7 bits Indicates the RTP payload type in the context of which the native RPSI bit string MUST be interpreted . 	400	0
4585	Native RPSI bit string	Native RPSI bit string : variable length The RPSI information as natively defined by the video codec . 	400	0
4585	PT	Name : RTPFB Long name : Generic RTP Feedback Value : 205 Reference : RFC 4585 . 	231	0
4587	SBIT	Number of most significant bits that should be ignored in the first data octet . 	500	0
4587	EBIT	Number of least significant bits that should be ignored in the last data octet . 	500	0
4587	V	Set to 0 if motion vectors are not used in this stream . Set to 1 if motion vectors may or may not be used in this stream . The meaning of this bit should not be changed during the course of the session . 	210	0
4587	GOBN	Encodes the GOB number in effect at the start of the packet . Set to 0 if the packet begins with a GOB header . 	200	0
4587	MBAP	Encodes the macroblock address predictor ( i.e ., the last MBA encoded in the previous packet ). This predictor ranges from 0 - 32 ( to predict the valid MBAs 1 - 33 ), but because the bit stream cannot be fragmented between a GOB header and MB 1 , the predictor at the start of the packet shall not be 0 . Therefore , the range is 1 - 32 , which is biased by - 1 to fit in 5 bits . For example , if MBAP is 0 , the value of the MBA predictor is 1 . Set to 0 if the packet begins with a GOB header . 	230	0
4587	QUANT	Quantizer value ( MQUANT or GQUANT ) in effect prior to the start of this packet . Set to 0 if the packet begins with a GOB header . 	302	0
4587	HMVD	Reference horizontal motion vector data ( MVD ). Set to 0 if V flag is 0 or if the packet begins with a GOB header , or when the MTYPE of the last MB encoded in the previous packet was not motion compensation ( MC ). HMVD is encoded as a 2s complement number , and ' 10000 ' corresponding to the value - 16 is forbidden ( motion vector fields range from +/- 15 ). 	210	0
4587	VMVD	Reference vertical motion vector data ( MVD ). Set to 0 if V flag is 0 or if the packet begins with a GOB header , or when the MTYPE of the last MB encoded in the previous packet was not MC . VMVD is encoded as a 2s complement number , and ' 10000 ' corresponding to the value - 16 SHALL not be used ( motion vector fields range from +/- 15 ). 	210	0
4591	C	Copyright ( C ) The Internet Society ( 2006 ). 	302	0
4591	Frame Relay Header Length	The Frame Relay Header Length Type is a 2-octet unsigned integer with the following values defined in this document : 	100	0
4591	F	F - FECN ( bit 12 ): FR FECN ( Forward Explicit Congestion Notification ) bit [ Q922 ]. 	210	0
4591	B	B - BECN ( bit 13 ): 	231	0
4591	D	D - DE ( bit 14 ) FR DE bit indicates the discard eligibility [ Q922 ]. 	210	0
4591	C	This document is subject to the rights , licenses and restrictions contained in BCP 78 , and except as set forth therein , the authors retain all their rights . 	303	0
4598	MBZ	o Must Be Zero ( MBZ ): Bits marked MBZ SHALL be set to the value zero and SHALL be ignored by receivers . The bits are reserved for future extensions . 	500	0
4598	F	o Frame Type ( F ): This one-bit field indicates the type of frame(s ) present in the payload . It takes the following values : 0 - One or more complete frames . 1 - Fragment of frame . ( Note that the M bit in the RTP header is set for the final fragment .) 	240	0
4598	NF	o Number of frames/fragments ( NF ): An 8-bit field whose meaning depends on the Frame Type ( F ) in this payload . For complete frames ( F of 0 ), it is used to indicate the number of E-AC-3 frames in the RTP payload . For frame fragments ( F of 1 ), it is used to indicate the number of fragments ( and therefore packets ) that make up the current frame . NF MUST be identical for packets containing fragments of the same frame . 	200	0
4601	S	4.1.4 . ( S,G ) State 	240	0
4601	S	For every source/group pair ( S,G ), a router keeps the following state : 	400	0
4601	S	( S,G ) state : 	302	0
4601	S	PIM ( S,G ) Join/Prune State : 	302	0
4601	S	o State : One of {" NoInfo " ( NI ), " I lost Assert " ( L ), " I won Assert " ( W )} 	240	0
4601	S	Upstream ( S,G ) Join/Prune State : 	301	0
4601	S	o Upstream ( S,G ) Join/Prune Timer ( JT ) 	110	0
4601	S	o SPTbit ( indicates ( S,G ) state is active ) 	210	0
4601	S	o ( S,G ) Keepalive Timer ( KAT ) 	210	0
4601	S	o Register state : One of {" Join " ( J ), " Prune " ( P ), " Join-Pending " ( JP ), " NoInfo " ( NI )} 	240	0
4601	S	o PMBR : the first PMBR to send a Register for this source with the Border bit set . 	230	0
4601	S	For every source/group pair ( S,G ) for which a router also has (*, G ) state , it also keeps the following state : 	400	0
4601	S	( S,G,rpt ) state : 	210	0
4601	S	PIM ( S,G,rpt ) Join/Prune State : 	302	0
4601	S	o State : One of {" RPTNotJoined(G )", " NotPruned(S,G,rpt )", " Pruned(S,G,rpt )"} 	240	0
4601	S	pim_include(S,G ) = { all interfaces I such that : ( ( I_am_DR ( I ) AND lost_assert(S,G,I ) == FALSE ) OR AssertWinner(S,G,I ) == me ) AND local_receiver_include(S,G,I ) } 	240	0
4601	S	pim_exclude(S,G ) = { all interfaces I such that : ( ( I_am_DR ( I ) AND lost_assert(*,G,I ) == FALSE ) OR AssertWinner(*,G,I ) == me ) AND local_receiver_exclude(S,G,I ) } 	240	0
4601	S	Update_SPTbit(S,G,iif ) oiflist = NULL 	302	0
4601	S	Update_SPTbit(S,G,iif ) is defined in Section 4.2.2 . 	302	0
4601	S	UpstreamJPState(S,G ) is the state of the finite state machine in Section 4.5.7 . 	301	0
4601	S	void CheckSwitchToSpt(S,G ) { if ( ( pim_include(*,G ) (-) pim_exclude(S,G ) (+) pim_include(S,G ) != NULL ) AND SwitchToSptDesired(S,G ) ) { # Note : Restarting the KAT will result in the SPT switch set KeepaliveTimer(S,G ) to Keepalive_Period } } 	210	0
4601	S	The ( S,G ) SPTbit is used to distinguish whether to forward on (*,*, RP)/(*,G ) or on ( S,G ) state . When switching from the RP tree to the source tree , there is a transition period when data is arriving due to upstream (*,*, RP)/(*,G ) state while upstream ( S,G ) state is being established , during which time a router should continue to forward only on (*,*, RP)/(*,G ) state . This prevents temporary black-holes that would be caused by sending a Prune(S,G,rpt ) before the upstream ( S,G ) state has finished being established . 	210	0
4601	S	void Update_SPTbit(S,G,iif ) { if ( iif == RPF_interface(S ) AND JoinDesired(S,G ) == TRUE AND ( DirectlyConnected(S ) == TRUE OR RPF_interface(S ) != RPF_interface(RP(G )) OR inherited_olist(S,G,rpt ) == NULL OR ( ( RPF'(S,G ) == RPF'(*,G ) ) AND ( RPF'(S,G ) != NULL ) ) OR ( I_Am_Assert_Loser(S,G,iif ) ) { Set SPTbit(S,G ) to TRUE } } 	210	0
4601	S	CouldRegister(S,G ) 	302	0
4601	S	The per-interface state machine for receiving ( S,G ) Join/Prune messages is given below and is almost identical to that for (*, G ) messages . There are three states : 	400	0
4601	S	Expiry Timer ( ET ) This timer is set when a valid Join(S,G ) is received . Expiry of the Expiry Timer causes this state machine to revert to NoInfo state . 	210	0
4601	S	The per-interface state machine for receiving ( S,G,rpt ) Join/Prune messages is given below . There are five states : 	400	0
4601	S	The per-interface state machines for ( S,G ) hold join state from downstream PIM routers . This state then determines whether a router needs to propagate a Join(S,G ) upstream towards the source . 	210	0
4601	S	Not Joined The downstream state machines and local membership information do not indicate that the router needs to join the shortest-path tree for this ( S,G ). 	302	0
4601	S	The upstream ( S,G ) state machine transitions to NotJoined state . Send Prune(S,G ) to the appropriate upstream neighbor , which is RPF'(S,G ). Cancel the Join Timer ( JT ), and set SPTbit(S,G ) to FALSE . 	301	0
4601	S	Send Join(S,G ) to the appropriate upstream neighbor , which is RPF'(S,G ). Restart the Join Timer ( JT ) to expire after t_periodic seconds . 	302	0
4601	S	Send Join(S,G ) to the appropriate upstream neighbor , which is RPF'(S,G ). Restart the Join Timer ( JT ) to expire after t_periodic seconds . 	302	0
4601	S	Let t_joinsuppress be the minimum of t_suppressed and the HoldTime from the Join/Prune message triggering this event . 	302	0
4601	S	The upstream ( S,G ) state machine remains in Joined state . If the Join Timer is set to expire in more than t_override seconds , reset it so that it expires after t_override seconds . 	302	0
4601	S	The upstream ( S,G ) state machine remains in Joined state . If the Join Timer is set to expire in more than t_override seconds , reset it so that it expires after t_override seconds . 	302	0
4601	S	The upstream ( S,G ) state machine remains in Joined state . If the Join Timer is set to expire in more than t_override seconds , reset it so that it expires after t_override seconds . 	302	0
4601	S	The upstream ( S,G ) state machine remains in Joined state . If the Join Timer is set to expire in more than t_override seconds , reset it so that it expires after t_override seconds . If the Join Timer is set to expire in less than t_override seconds , leave it unchanged . 	210	0
4601	S	The upstream ( S,G ) state machine remains in Joined state . If the Join Timer is set to expire in more than t_override seconds , reset it so that it expires after t_override seconds . 	302	0
4601	S	( S,G,rpt ) Joins and Prunes are ( S,G ) Joins or Prunes sent on the RP tree with the RPT bit set , either to modify the results of (*, G ) Joins , or to override the behavior of other upstream LAN peers . The next section describes the rules for sending triggered messages . This section describes the rules for including a Prune(S,G,rpt ) message with a Join(*,G ). 	210	0
4601	S	if ( SPTbit(S,G ) == TRUE ) { # Note : If receiving ( S,G ) on the SPT , we only prune off the # shared tree if the RPF neighbors differ . if ( RPF'(*,G ) != RPF'(S,G ) ) { add Prune(S,G,rpt ) to compound message } } else if ( inherited_olist(S,G,rpt ) == NULL ) { # Note : all (*, G ) olist interfaces received RPT prunes for ( S,G ). add Prune(S,G,rpt ) to compound message } else if ( RPF'(*,G ) != RPF'(S,G,rpt ) { # Note : we joined the shared tree , but there was an ( S,G ) assert # and the source tree RPF neighbor is different . add Prune(S,G,rpt ) to compound message } 	210	0
4601	S	The state machine for ( S,G,rpt ) triggered messages is required per - ( S,G ) when there is (*, G ) or (*,*, RP ) join state at a router , and the router or any of its upstream LAN peers wishes to prune S off the RP tree . 	230	0
4601	S	Pruned(S,G,rpt ) (*, G ) or (*,*, RP(G )) Joined , but ( S,G,rpt ) pruned 	231	0
4601	S	Pruned(S,G,rpt ) (*, G ) or (*,*, RP(G )) Joined , but ( S,G,rpt ) pruned 	231	0
4601	S	PruneDesired(S,G,rpt)->TRUE See macro above . This event is relevant in the " NotPruned " and " RPTNotJoined(G )" states . 	301	0
4601	S	PruneDesired(S,G,rpt)->FALSE See macro above . This transition is only relevant in the " Pruned " state . 	301	0
4601	S	RPTJoinDesired(G)->FALSE This event is relevant in the " Pruned " and " NotPruned " states . 	301	0
4601	S	RPTJoinDesired(G)->FALSE This event is relevant in the " Pruned " and " NotPruned " states . 	301	0
4601	S	The ( S,G ) Assert state machine for interface I is shown in Figure 10 . There are three states : 	400	0
4601	S	NoInfo ( NI ) This router has no ( S,G ) assert state on interface I . 	303	0
4601	S	Assert Timer Expires The ( S,G ) Assert Timer expires . As we're in the Winner state , we must still have ( S,G ) forwarding state that is actively being kept alive . We resend the ( S,G ) Assert and restart the Assert Timer ( Actions A3 below ). Note that the assert winner's Assert Timer is engineered to expire shortly before timers on assert losers; this prevents unnecessary thrashing of the forwarder and periodic flooding of duplicate packets . 	210	0
4601	S	Assert Timer Expires The ( S,G ) Assert Timer expires . We transition to NoInfo state , deleting the ( S,G ) assert information ( Actions A5 below ). 	210	0
4601	S	A1 : Send Assert(S,G ). Set Assert Timer to ( Assert_Time - Assert_Override_Interval ). Store self as AssertWinner(S,G,I ). Store spt_assert_metric(S,I ) as AssertWinnerMetric(S,G,I ). 	240	0
4601	S	bool lost_assert(S,G,rpt,I ) { if ( RPF_interface(RP(G )) == I OR ( RPF_interface(S ) == I AND SPTbit(S,G ) == TRUE ) ) { return FALSE } else { return ( AssertWinner(S,G,I ) != NULL AND AssertWinner(S,G,I ) != me ) } } 	210	0
4601	S	o A router MUST NOT send an ( S,G,rpt ) Join/Prune message for any reason . 	500	0
4601	S	o A router MUST NOT forward packets based on (*, G ) or ( S,G,rpt ) state . The (*, G )- and ( S,G,rpt)-related state summarization macros are NULL for any SSM address , for the purposes of packet forwarding . 	400	0
4601	S	o Upstream ( S,G ) state machine ( Section 4.5.7 ) 	110	0
4601	S	o Downstream ( S,G ) state machine ( Section 4.5.3 ) 	110	0
4601	S	o ( S,G ) Assert state machine ( Section 4.6.1 ) 	302	0
4601	Z	Admin Scope [ Z]one indicates the group range is an admin scope zone . This is used in the Bootstrap Router Mechanism [ 11 ] only . For all other purposes , this bit is set to zero and ignored on receipt . 	500	0
4601	S	S The Sparse bit is a 1-bit value , set to 1 for PIM-SM . It is used for PIM version 1 compatibility . 	210	0
4601	W	W The WC ( or WildCard ) bit is a 1-bit value for use with PIM Join/Prune messages ( see Section 4.9.5.1 ). 	210	0
4601	R	R The RPT ( or Rendezvous Point Tree ) bit is a 1-bit value for use with PIM Join/Prune messages ( see Section 4.9.5.1 ). If the WC bit is 1 , the RPT bit MUST be 1 . 	210	0
4601	Type	PIM Version , Type , Reserved , Checksum Described in Section 4.9 . 	220	0
4601	Reserved	PIM Version , Type , Reserved , Checksum Described in Section 4.9 . 	220	0
4601	OptionType	Holdtime is the amount of time a receiver must keep the neighbor reachable , in seconds . If the Holdtime is set to ' 0xffff ', the receiver of this message never times out the neighbor . This may be used with dial-on-demand links , to avoid keeping the link up with periodic Hello messages . 	120	0
4601	OptionType	The LAN Prune Delay option is used to tune the prune propagation delay on multi-access LANs . The T bit specifies the ability of the sending router to disable joins suppression . Propagation_Delay and Override_Interval are time intervals in units of milliseconds . A router originating a LAN Prune Delay option on interface I sets the Propagation_Delay field to the configured value of Propagation_Delay(I ) and the value of the Override_Interval field to the value of Override_Interval(I ). On a receiving router , the values of the fields are used to tune the value of the Effective_Override_Interval(I ) and its derived timer values . Section 4.3.3 describes how these values affect the behavior of a router . 	301	0
4601	OptionType	o OptionType 18 : deprecated and should not be used . 	302	0
4601	OptionType	DR Priority is a 32-bit unsigned number and should be considered in the DR election as described in Section 4.3.2 . 	231	0
4601	OptionType	Generation ID is a random 32-bit value for the interface on which the Hello message is sent . The Generation ID is regenerated whenever PIM forwarding is started or restarted on the interface . 	230	0
4601	OptionType	The contents of the Address List Hello option are described in Section 4.3.4 . All addresses within a single Address List must belong to the same address family . 	230	0
4601	B	B The Border bit . If the router is a DR for a source that it is directly connected to , it sets the B bit to 0 . If the router is a PMBR for a source in a directly connected cloud , it sets the B bit to 1 . 	210	0
4601	N	N The Null-Register bit . Set to 1 by a DR that is probing the RP before expiring its local Register-Suppression Timer . Set to 0 otherwise . 	210	0
4601	Type	PIM Version , Type , Reserved , Checksum Described in Section 4.9 . 	220	0
4601	Reserved	PIM Version , Type , Reserved , Checksum Described in Section 4.9 . 	220	0
4601	Type	PIM Version , Type , Reserved , Checksum Described in Section 4.9 . 	220	0
4601	Reserved	PIM Version , Type , Reserved , Checksum Described in Section 4.9 . 	220	0
4601	S	o The combination of a (*, G ) Prune and a ( S,G,rpt ) Join is also not generated . ( S,G,rpt ) Joins are only sent when the router is receiving all traffic for a group on the shared tree and it wishes to indicate a change for the particular source . As a (*, G ) prune indicates that the router no longer wishes to receive shared tree traffic , the ( S,G,rpt ) Join would be meaningless . 	210	0
4601	Type	PIM Version , Type , Reserved , Checksum Described in Section 4.9 . 	220	0
4601	Reserved	PIM Version , Type , Reserved , Checksum Described in Section 4.9 . 	220	0
4601	R	R RPT-bit is a 1-bit value . The RPT-bit is set to 1 for Assert(*,G ) messages and 0 for Assert(S,G ) messages . 	210	0
4601	N	Per neighbor ( N ): 	302	0
4601	S	Per Source ( S ): 	302	0
4601	S	( S,G ) Join Expiry Timer : ET(S,G,I ) 	210	0
4601	S	( S,G ) Prune-Pending Timer : PPT(S,G,I ) 	210	0
4601	S	( S,G ) Assert Timer : AT(S,G,I ) 	210	0
4601	S	( S,G,rpt ) Prune Expiry Timer : ET(S,G,rpt,I ) 	210	0
4601	S	( S,G,rpt ) Prune-Pending Timer : PPT(S,G,rpt,I ) 	210	0
4601	S	Per Source ( S ): 	302	0
4601	S	( S,G ) Upstream Join Timer : JT(S,G ) 	302	0
4601	S	( S,G ) Keepalive Timer : KAT(S,G ) 	210	0
4601	S	( S,G,rpt ) Upstream Override Timer : OT(S,G,rpt ) 	210	0
4601	S	Per Source,Group pair ( S,G ): 	302	0
4601	S	o The PIM-SM forwarding rule " iif == RPF_interface(S )" is relaxed to be TRUE if iif is any interface that is not part of the PIM-SM component of the PMBR ( see Section 4.2 ). 	210	0
4606	Signal Type	This field indicates the type of Elementary Signal that constitutes the requested Label Switched Path ( LSP ). Several transforms can be applied successively on the Elementary Signal to build the Final Signal actually being requested for the LSP . 	231	0
4606	RCC	This field is used to request the optional SONET/SDH contiguous concatenation of the Elementary Signal . 	231	0
4606	NCC	This field indicates the number of identical SONET SPEs/SDH VCs ( i.e ., Elementary Signal ) that are requested to be concatenated , as specified in the RCC field . 	231	0
4606	NVC	This field indicates the number of signals that are requested to be virtually concatenated . These signals are all of the same type by definition . They are Elementary Signal SPEs/VCs for which signal types are defined in this document; i.e ., VT1.5_SPE/VC-11 , 	231	0
4606	U	1 . S=1->N is the index of a particular STS-3/AUG-1 inside an STS-N/STM-N multiplex . S is only significant for SONET STS-N ( N>1 ) and SDH STM-N ( N>0 ). S must be 0 and ignored for STS-1 and STM-0 . 	231	0
4606	K	1 . S=1->N is the index of a particular STS-3/AUG-1 inside an STS-N/STM-N multiplex . S is only significant for SONET STS-N ( N>1 ) and SDH STM-N ( N>0 ). S must be 0 and ignored for STS-1 and STM-0 . 	231	0
4606	L	1 . S=1->N is the index of a particular STS-3/AUG-1 inside an STS-N/STM-N multiplex . S is only significant for SONET STS-N ( N>1 ) and SDH STM-N ( N>0 ). S must be 0 and ignored for STS-1 and STM-0 . 	231	0
4619	C	Copyright ( C ) The Internet Society ( 2006 ). 	302	0
4619	C	This document is subject to the rights , licenses and restrictions contained in BCP 78 , and except as set forth therein , the authors retain all their rights . 	303	0
4620	C	Copyright ( C ) The Internet Society ( 2006 ). 	302	0
4620	Type	o Type 	240	0
4620	Code	o Code 	240	0
4620	Checksum	o Qtype - A 16-bit field that designates the type of information requested in a Query or supplied in a Reply . Its value in a Reply is always copied from the corresponding Query by the Responder . Five values of Qtype are specified in this document . 	301	0
4620	Qtype	o Qtype - A 16-bit field that designates the type of information requested in a Query or supplied in a Reply . Its value in a Reply is always copied from the corresponding Query by the Responder . Five values of Qtype are specified in this document . 	231	0
4620	Flags	o Flags - Qtype-specific flags that may be defined for certain Query types and their Replies . Flags not defined for a given Qtype must be zero on transmission and ignored on reception , and must not be copied from a Query to a Reply unless so specified in the definition of the Qtype . 	231	0
4620	Nonce	o Nonce - An opaque 64-bit field to help avoid spoofing and/or to aid in matching Replies with Queries . Its value in a Query is chosen by the Querier . Its value in a Reply is always copied from the corresponding Request by the Responder . 	301	0
4620	Data	o Data - In a Query , the Subject Address or Name . In a Reply , Qtype-specific data is present only when the ICMPv6 Code field is zero . The length of the Data may be inferred from the IPv6 header's Payload Length field [ 6 ], the length of the fixed portion 	240	0
4620	TTL	o TTL ( Time to Live ) - MUST be zero . Any non-zero value received MUST be treated as zero . This field is no longer used but is present to preserve backward compatibility with older implementations . 	500	0
4620	G	o S - If set to 1 , Site-local addresses [ 12 ] are requested . However , Site-local addresses are now deprecated [ 15 ] and this flag is for backward compatibility . 	210	0
4620	S	o S - If set to 1 , Site-local addresses [ 12 ] are requested . However , Site-local addresses are now deprecated [ 15 ] and this flag is for backward compatibility . 	210	0
4620	L	o C - If set to 1 , IPv4-compatible ( now deprecated ) and IPv4-mapped addresses [ 3 ] are requested . Responses SHOULD include IPv4 addresses in IPv4-mapped form . 	210	0
4620	C	o C - If set to 1 , IPv4-compatible ( now deprecated ) and IPv4-mapped addresses [ 3 ] are requested . Responses SHOULD include IPv4 addresses in IPv4-mapped form . 	210	0
4620	A	o A - If set to 1 , all the Responder's unicast addresses ( of the specified scope(s )) are requested . If 0 , only those addresses are requested that belong to the interface ( or any one interface ) that 	210	0
4620	T	o T - Defined in a Reply only , indicates that the set of addresses is incomplete for space reasons . 	302	0
4620	A	o A - If set to 1 , all the Responder's unicast addresses are requested . If 0 , only those addresses are requested that belong to the interface ( or any one interface ) that has the Subject Address . 	210	0
4620	T	o T - Defined in a Reply only , indicates that the set of addresses is incomplete for space reasons . 	302	0
4620	C	This document is subject to the rights , licenses and restrictions contained in BCP 78 , and except as set forth therein , the authors retain all their rights . 	303	0
4623	MRU	5.3 . L2TP Maximum Receive Unit ( MRU ) AVP 	400	0
4623	MRRU	5.4 . L2TP Maximum Reassembled Receive Unit ( MRRU ) AVP 	400	0
4629	RR	RR : 5 bits 	400	0
4629	P	Indicates the picture start or a picture segment ( GOB/Slice ) start or a video sequence end ( EOS or EOSBS ). Two bytes of zero bits then have to be prefixed to the payload of such a packet to compose a complete picture/GOB/slice/EOS/EOSBS start code . This bit allows the omission of the two first bytes of the start codes , thus improving the compression ratio . 	110	0
4629	V	Indicates the presence of an 8-bit field containing information for Video Redundancy Coding ( VRC ), which follows immediately after the initial 16 bits of the payload header , if present . For syntax and semantics of that 8-bit VRC field , see Section 5.2 . 	400	0
4629	PLEN	Length , in bytes , of the extra picture header . If no extra picture header is attached , PLEN is 0 . If PLEN>0 , the extra picture header is attached immediately following the rest of the payload header . Note that the length reflects the omission of the first two bytes of the picture start code ( PSC ). See Section 6.1 . 	100	0
4629	PEBIT	Indicates the number of bits that shall be ignored in the last byte of the picture header . If PLEN is not zero , the ignored bits shall be the least significant bits of the byte . If PLEN is zero , then PEBIT shall also be zero . 	302	0
4629	TID	Thread ID . Up to 7 threads are allowed . Each frame of H.263 + VRC data will use as reference information only sync frames or frames within the same thread . By convention , thread 0 is expected to be the " canonical " thread , which is the thread from which the sync frame should ideally be used . In the case of corruption or loss of the thread 0 representation , a representation of the sync frame with a higher thread number can be used by the decoder . Lower thread numbers are expected to contain representations of the sync frames equal to or better than higher thread numbers in the absence of data corruption or loss . See [ Vredun ] for a detailed discussion of VRC . 	301	0
4629	Trun	Monotonically increasing ( modulo 16 ) 4-bit number counting the packet number within each thread . 	100	0
4629	S	A bit that indicates that the packet content is for a sync frame . An encoder using VRC may send several representations of the same " sync " picture , in order to ensure that , regardless of which thread of pictures is corrupted by errors or packet losses , the reception of at least one representation of a particular picture is ensured ( within at least one thread ). The sync picture can then be used for the prediction of any thread . If packet losses have not occurred , then the sync frame contents of thread 0 can be used , and those of other threads can be discarded ( and similarly for other threads ). Thread 0 is considered the " canonical " thread , the use of which is preferable 	210	0
4629	P	Codec options ( F,I,J,K,N,P,T ): These options MUST NOT appear unless the sender of these SDP parameters is able to decode those options . These options designate receiver capabilities even when sent in a " sendonly " offer . 	301	0
4629	0	This means that the sender of this message can decode an H.263 bit stream with a preferred custom picture size of 640x480 at a maximum frame rate of 25 frames per second using a custom picture clock frequency of 50 Hz . If that is not possible , then the 640x480 picture size is also supported at up to 30/2.002 frames per second using the ordinary picture clock frequency of 30/1.001 Hz . If neither of those is possible , then the CIF and QCIF picture sizes are also supported at up to 50 frames per second using the custom picture clock frequency of 50 Hz or up to 30/1.001 frames per second using the ordinary picture clock frequency of 30/1.001 Hz , and CIF is preferred over QCIF . 	302	0
4629	1	This means that the sender of this message can decode an H.263 bit stream with a preferred custom picture size of 640x480 at a maximum frame rate of 25 frames per second using a custom picture clock frequency of 50 Hz . If that is not possible , then the 640x480 picture size is also supported at up to 30/2.002 frames per second using the ordinary picture clock frequency of 30/1.001 Hz . If neither of those is possible , then the CIF and QCIF picture sizes are also supported at up to 50 frames per second using the custom picture clock frequency of 50 Hz or up to 30/1.001 frames per second using the ordinary picture clock frequency of 30/1.001 Hz , and CIF is preferred over QCIF . 	200	0
4629	1	This means that the sender of this message can decode an H.263 bit stream with a preferred custom picture size of 640x480 at a maximum frame rate of 25 frames per second using a custom picture clock frequency of 50 Hz . If that is not possible , then the 640x480 picture size is also supported at up to 30/2.002 frames per second using the ordinary picture clock frequency of 30/1.001 Hz . If neither of those is possible , then the CIF and QCIF picture sizes are also supported at up to 50 frames per second using the custom picture clock frequency of 50 Hz or up to 30/1.001 frames per second using the ordinary picture clock frequency of 30/1.001 Hz , and CIF is preferred over QCIF . 	302	0
4629	0	This means that the sender of this message can decode an H.263 bit stream with a preferred custom picture size of 640x480 at a maximum frame rate of 25 frames per second using a custom picture clock frequency of 50 Hz . If that is not possible , then the 640x480 picture size is also supported at up to 30/2.002 frames per second using the ordinary picture clock frequency of 30/1.001 Hz . If neither of those is possible , then the CIF and QCIF picture sizes are also supported at up to 50 frames per second using the custom picture clock frequency of 50 Hz or up to 30/1.001 frames per second using the ordinary picture clock frequency of 30/1.001 Hz , and CIF is preferred over QCIF . 	200	0
4629	0	This means that the sender of this message can decode an H.263 bit stream with a preferred custom picture size of 640x480 at a maximum frame rate of 25 frames per second using a custom picture clock frequency of 50 Hz . If that is not possible , then the 640x480 picture size is also supported at up to 30/2.002 frames per second using the ordinary picture clock frequency of 30/1.001 Hz . If neither of those is possible , then the CIF and QCIF picture sizes are also supported at up to 50 frames per second using the custom picture clock frequency of 50 Hz or up to 30/1.001 frames per second using the ordinary picture clock frequency of 30/1.001 Hz , and CIF is preferred over QCIF . 	302	0
4636	Type	Type 	240	0
4636	Length	Length 	100	0
4636	Sub-Type	Sub-Type 	231	0
4636	Status	A status code used by the foreign agent to supply status information to the mobile node . 	230	0
4666	Network Appearance	Network Appearance - The Network Appearance is a M3UA local reference shared by SG and AS ( typically an integer ) that , together with an Signaling Point Code , uniquely identifies an SS7 node by indicating the specific SS7 network to which it belongs . It can be used to distinguish between signalling traffic associated with different networks being sent between the SG and the ASP over a common SCTP association . An example scenario is where an SG appears as an 	230	0
4666	Routing Context	Routing Context - A value that uniquely identifies a Routing Key . Routing Context values are configured either using a configuration management interface , or by using the routing key management procedures defined in this document . 	230	0
4666	Message Class	Message Class : 8 bits ( unsigned integer ) 	231	0
4666	Message Type	The following list contains the message types for the defined messages . 	231	0
4666	Reserved	The Reserved field SHOULD be set to all ' 0's and ignored by the receiver . 	500	0
4666	Message Length	The Message Length defines the length of the message in octets , including the Common Header . The Message Length MUST include parameter padding octets , if there are any . 	100	0
4666	Parameter Tag	The Tag field is a 16-bit identifier of the type of parameter . It takes a value of 0 to 65534 . Common parameters used by adaptation layers are in the range of 0x00 to 0x3f . M3UA-specific parameters have Tags in the range 0x0200 to 0x02ff . The parameter Tags defined are as follows : 	231	0
4666	Network Appearance	Network Appearance 0x0200 Reserved 0x0201 Reserved 0x0202 Reserved 0x0203 User/Cause 0x0204 Congestion Indications 0x0205 Concerned Destination 0x0206 Routing Key 0x0207 Registration Result 0x0208 Deregistration Result 0x0209 Local Routing Key Identifier 0x020a Destination Point Code 0x020b Service Indicators 0x020c Reserved 0x020d Originating Point Code List 0x020e Reserved 0x020f Protocol Data 0x0210 Reserved 0x0211 Registration Status 0x0212 Deregistration Status 0x0213 Reserved by the IETF 0x0214 to 0xffff 	240	0
4666	Parameter Length	The Parameter Length field contains the size of the parameter in octets , including the Parameter Tag , Parameter Length , and Parameter Value fields . Thus , a parameter with a zero-length Parameter Value field would have a Length field of 4 . The Parameter Length does not include any padding octets . If the parameter contains subparameters , the Parameter Length field will include all the octets of each subparameter , including subparameter padding octets ( if there are any ). 	100	0
4666	Parameter Value	The Parameter Value field contains the actual information to be transferred in the parameter . 	230	0
4666	Network Appearance	Network Appearance Optional Routing Context Conditional Protocol Data Mandatory Correlation Id Optional 	400	0
4666	Network Appearance	The Network Appearance parameter identifies the SS7 network context for the message and implicitly identifies the SS7 Point Code format used , the SS7 Network Indicator value , and the MTP3 and possibly the MTP3-User protocol type/variant/version used within the specific SS7 network . Where an SG operates in the context of a single SS7 network , or if individual SCTP associations are dedicated to each SS7 network context , the Network Appearance parameter is not required . In other cases , the parameter may be configured to be present for the use of the receiver . 	231	0
4666	Routing Context	The Routing Context parameter contains the Routing Context value associated with the DATA message . Where a Routing Key has not been coordinated between the SGP and ASP , sending of Routing Context is not required . Where multiple Routing Keys and Routing Contexts are used across a common association , the Routing Context MUST be sent to identify the traffic flow , assisting in the internal distribution of Data messages . 	400	0
4666	Protocol Data	The Protocol Data parameter contains the original SS7 MTP3 message , including the Service Information Octet and Routing Label . 	231	0
4666	SLS	Signalling Link Selection Code ( SLS ) 	231	0
4666	User Protocol Data	User Protocol Data , which includes 	400	0
4666	Originating Point Code	Originating Point Code : 32 bits ( unsigned integer ) 	231	0
4666	Destination Point Code	The Originating and Destination Point Code fields contains the OPC and DPC from the routing label of the original SS7 message in Network Byte Order , justified to the least significant bit . Unused bits are coded ` 0 '. 	230	0
4666	User Protocol Data	The User Protocol Data field contains an octet string of MTP-User information from the original SS7 message , starting with the first octet of the original SS7 message following the Routing Label [ 7][8][26 ]. 	400	0
4666	Correlation Id	The Correlation Id parameter uniquely identifies the MSU carried in the Protocol Data within an AS . This Correlation Id parameter is assigned by the sending M3UA . 	231	0
4666	Network Appearance	Network Appearance Optional Routing Context Conditional Affected Point Code Mandatory INFO String Optional 	400	0
4666	Network Appearance	The description of Network Appearance in Section 3.3.1 applies , with the exception that Network Appearance does not have to be the first parameter in this message . 	231	0
4666	Routing Context	The conditional Routing Context parameter contains the Routing Context values associated with the DUNA message . Where a Routing Key has not been coordinated between the SGP and ASP , sending of Routing Context is not required . Where multiple Routing Keys and Routing Contexts are used across a common association , the Routing Context(s ) MUST be sent to identify the concerned traffic flows for which the DUNA message applies , assisting in outgoing traffic management and internal distribution of MTP-PAUSE indications to MTP3-Users at the receiver . 	400	0
4666	Mask	The Mask field can be used to identify a contiguous range of Affected Destination Point Codes . Identifying a contiguous range of Affected DPCs may be useful when receipt of an MTP3 management message or a linkset event simultaneously affects the availability status of a series of destinations at an SG . 	400	0
4666	INFO String	The optional INFO String parameter can carry any meaningful UTF-8 [ 10 ] character string along with the message . Length of the INFO String parameter is from 0 to 255 octets . No procedures are presently identified for its use , but the INFO String MAY be used for debugging purposes . An INFO String with a zero-length parameter is not considered an error ( a zero length parameter is one in which the Length field in the TLV will be set to 4 ). 	231	0
4666	Network Appearance	Network Appearance Optional Routing Context Conditional Affected Point Code Mandatory INFO String Optional 	231	0
4666	Network Appearance	Network Appearance Optional Routing Context Conditional Affected Point Code Mandatory INFO String Optional 	231	0
4666	Network Appearance	Network Appearance Optional Routing Context Conditional Affected Point Code Mandatory Concerned Destination Optional Congestion Indications Optional INFO String Optional 	240	0
4666	Network Appearance	Network Appearance Optional Routing Context Conditional Affected Point Code Mandatory User/Cause Mandatory INFO String Optional 	400	0
4666	Network Appearance	Network Appearance Optional Routing Context Conditional Affected Point Code Mandatory INFO String Optional 	231	0
4666	ASP Identifier	ASP Identifier Optional INFO String Optional 	231	0
4666	ASP Identifier	The optional ASP Identifier parameter contains a unique value that is locally significant among the ASPs that support an AS . The SGP should save the ASP Identifier to be used , if necessary , with the Notify message ( see Section 3.8.2 ). 	303	0
4666	ASP Identifier	ASP Identifier Optional INFO String Optional 	231	0
4666	INFO String	INFO String Optional 	400	0
4666	INFO String	INFO String Optional 	400	0
4666	Heartbeat Data	Heartbeat Data Optional 	400	0
4666	Traffic Mode Type	The optional Traffic Mode Type parameter identifies the traffic mode of operation of the ASP(s ) within an Application Server . The format of the Traffic Mode Type Identifier is as follows : 	240	0
4666	Destination Point Code	The Destination Point Code parameter is mandatory , and it identifies the Destination Point Code of incoming SS7 traffic for which the ASP is registering . For an alias point code configuration , the DPC parameter would be repeated for each point code . The format is the same as described for the Affected Destination parameter in the DUNA message ( see Section 3.4.1 ). Its format is : 	231	0
4666	Network Appearance	The optional Network Appearance parameter field identifies the SS7 network context for the Routing Key , and it has the same format as in the DATA message ( see Section 3.3.1 ) with the exception that it does not have to be the first parameter in the message . If the Network Appearance is not specified and the Routing Key applies to all Network Appearances , then this Routing Key MUST be the only one registered for the association; that is , Routing Context is implied , and DATA and SSNM messages are discriminated on Network Appearance rather than on Routing Context . Where Network Appearance is not specified and there is only one Network Appearance , then Network Appearance is implied . Its format is : 	231	0
4666	SI	The optional SI [ 7,8 ] field contains one or more Service Indicators from the values described in the MTP3-User Identity field of the DUPU message . The absence of the SI parameter in the Routing Key indicates the use of any SI value , excluding of course MTP management . Where an SI parameter does not contain a multiple of four SIs , the parameter is padded out to 32-byte alignment . 	231	0
4666	Registration Status	The Registration Result Status field indicates the success or the reason for failure of a registration request . 	302	0
4666	Routing Context	The Routing Context field contains the Routing Context value for the associated Routing Key if the registration was successful . It is set to " 0 " if the registration was not successful . 	210	0
4666	Routing Context	Routing Context Mandatory 	202	0
4666	Routing Context	The Routing Context parameter contains ( a list of ) integers indexing the Application Server traffic that the sending ASP is currently registered to receive from the SGP but now wishes to deregister . 	400	0
4666	Routing Context	The Routing Context field contains the Routing Context value of the matching Routing Key to deregister , as found in the DEREG REQ message . 	230	0
4666	Deregistration Status	The Deregistration Result Status field indicates the success or the reason for failure of the deregistration . 	302	0
4666	Traffic Mode Type	Traffic Mode Type Optional Routing Context Optional INFO String Optional 	240	0
4666	Traffic Mode Type	The Traffic Mode Type parameter identifies the traffic mode of operation of the ASP within an AS . The valid values for Traffic Mode Type are shown in the following table : 	231	0
4666	Routing Context	The optional Routing Context parameter contains ( a list of ) integers indexing the Application Server traffic that the sending ASP is configured/registered to receive . 	400	0
4666	Traffic Mode Type	Traffic Mode Type Optional Routing Context Optional INFO String Optional 	240	0
4666	Routing Context	Routing Context Optional INFO String Optional 	400	0
4666	Routing Context	Routing Context Optional INFO String Optional 	400	0
4666	Error Code	Error Code Mandatory Routing Context Mandatory* Network Appearance Mandatory* Affected Point Code Mandatory* Diagnostic Information Conditional 	240	0
4666	Error Code	The Error Code parameter indicates the reason for the Error Message . The Error parameter value can be one of the following values : 	231	0
4666	Diagnostic Information	When included , the optional Diagnostic Information can be any information germane to the error condition , to assist in identification of the error condition . The Diagnostic Information SHOULD contain the offending message . A Diagnostic Information parameter with a zero length parameter is not considered an error ( this means that the Length field in the TLV will be set to 4 ). 	400	0
4666	Status Type	The Status Type parameter identifies the type of the Notify message . The following are the valid Status Type values : 	231	0
4666	Status Information	The Status Information parameter contains more detailed information for the notification , based on the value of the Status Type . If the Status Type is AS-State_Change the following Status Information values are used : 	400	0
4675	Type	Type 	240	0
4675	Length	Length 	100	0
4675	Value	Value 	400	0
4675	Type	Type 	240	0
4675	Length	Length 	100	0
4675	Value	Value 	400	0
4675	Type	Type 	240	0
4675	Length	Length 	100	0
4675	String	The String field is at least one octet in length and contains the VLAN Name as defined in [ IEEE-802.1Q ] clause 12.10.2.1.3 ( a ). [ RFC3629 ] UTF-8 encoded 10646 characters are RECOMMENDED , but a robust implementation SHOULD support the field as undistinguished octets . 	231	0
4675	Type	Type 	240	0
4675	Length	Length 	100	0
4675	String	The String field is 8 octets in length and includes a table that maps the incoming priority ( if it is set -- the default is 0 ) into one of eight regenerated priorities . The first octet maps to incoming priority 0 , the second octet to incoming priority 1 , etc . The values in each octet represent the regenerated priority of the frame . 	240	0
4676	N	N : The length of this option is variable . The minimum length is 3 octets . 	100	0
4676	what	what : The ' what ' element describes to which location the DHCP entry refers . Currently , three options are defined : the location of the DHCP server ( a value of 0 ), the location of the network element believed to be closest to the client ( a value of 1 ), or the location of the client ( a value of 2 ). Option ( 2 ) SHOULD be used , but may not be known . Options ( 0 ) and ( 1 ) SHOULD NOT be used unless it is known that the DHCP client is in close physical proximity to the server or network element . 	230	0
4676	country code	country code : The two-letter ISO 3166 country code in capital ASCII letters , e.g ., DE or US . ( Civic addresses always contain country designations , suggesting the use of a fixed-format field to save space .) 	231	0
4676	what	what : See above ( Section 3.1 ). 	302	0
4676	country code	country code : See above ( Section 3.1 ). 	231	0
4676	CAtype	CAlength : The length , in octets , of the CAvalue , not including the CAlength field itself . 	100	0
4676	CAlength	CAlength : The length , in octets , of the CAvalue , not including the CAlength field itself . 	100	0
4676	CAtype	Brief description : Short description identifying the meaning of the element . 	400	0
4676	.	This document is subject to the rights , licenses and restrictions contained in BCP 78 , and except as set forth therein , the authors retain all their rights . 	303	0
4678	Version	o Message Length : A 4-byte signed integer value representing the total length of the SASP message . It is said to be a signed 4-byte value to make any Java implementations easier ( or any other implementations without unsigned values); however , no negative lengths are valid . 	100	0
4678	Message Length	o Message Length : A 4-byte signed integer value representing the total length of the SASP message . It is said to be a signed 4-byte value to make any Java implementations easier ( or any other implementations without unsigned values); however , no negative lengths are valid . 	100	0
4678	Message ID	o Message ID : Each request message is given a 4-byte Message ID by the message originator , which is simply returned in the Message ID field of the reply . This field is meant to assist the requester in correlating replies to the appropriate request when many requests have been sent . In the Send Weights message ( the only message transaction that has no reply ), this field serves no purpose . 	230	0
4678	Protocol	o Protocol : The assigned number of the IP transport layer used in the Protocol Field of the IP header . These are defined in [ RFC1700 ]; however , a current list is maintained at http://www.iana.org . for example : TCP = 0x06 , UDP = 0x11 , etc . 	231	0
4678	Port	o Port : The port number used for communication to the member . *** A value of 0 can be given for the Protocol and Port to signify a system level member . However , 0 shouldn't be perceived as a wildcard for either Port or Protocol fields ( i.e ., a deregistration request that includes a MemberData component with a 0 for the port doesn't mean deregister all applications listening on any port of that IP and protocol ). 	230	0
4678	Label	o Label : A UTF8 string that may be set while registering a member . This string is opaque to the GWM and is simply included with any correspondence containing the member data component . Note that the size of this label is <= 255 bytes . Because UTF8 character encodings may be up to 6 bytes , care must be exercised by the load balancer or member to make sure the UTF8 string it sends the GWM is in fact <= 255 bytes . 	400	0
4678	LB UID Length	o LB UID : A UTF8 string used as a unique identifier and a context for the Group Name ( e.g ., a UTF8 representation of the MAC address of the load balancer or some type of Universally Unique Identifier ( UUID )). This string is used by the Group Workload Manager to associate application registration and deregistration , and to set state messages with the correct load balancer . This unique identifier should not be any longer than 64 bytes . 	231	0
4678	Group Name Len	o Group Name Len : Length of the Group Name field to follow ( in bytes ). 	100	0
4678	State Field	o State Field : This field is used by the member to communicate state information to the scheduler . The information placed in this field is opaque to the GWM and will simply be forwarded to the scheduler with the member weights . There are no defined values for this field . 	400	0
4678	Flags Field	o Flags Field : This field has several flag values that describe several attributes of the member . 	231	0
4678	Weight	o Weight : This field represents the GWM's recommendation for the relative amount of work that should be sent to this member . This is a 16-bit field with a possible range of 0 to 65536 . Load balancers should be prepared to receive a wide range of weight values . Load balancers with limited maximum weight values may restrict the granularity of management by the GWM and in turn cause less than optimal performance . Many existing implementations have supported a minimum raw weight range from 0 to 100 . 	231	0
4678	State Field	o State Field : This field is used by the member to communicate state information to the load balancer or scheduler . There are no defined values for this field . 	400	0
4678	Flags Field	o Flags Field : This field describes attributes of the member . Currently the only flag value defined is that of the quiesce flag . The quiesce flag is used when an administrator would like to temporarily remove a member from the weight calculation , but not deregister it from the group . When quiesced , the member will still show up in the weights , but the quiesce flag will be set , 	231	0
4678	Member Count	o Member Count : The number of Member Data Components immediately following the Group Data structure . 	231	0
4678	Weight Entry Count	o Weight Entry Count : The number of Member Data / Weight Entry combinations to follow the Group Data TLV . 	231	0
4678	Member State Instance Count	o Member State Instance Count : The number of Member Data / Member State Instance combinations following the Group Data component . 	231	0
4678	Flag Field	o Flag Field 	240	0
4678	Group of Member Data Count	o Group of Member Data Count : The number of " Group of Member Data " components immediately following the Registration Request component . 	400	0
4678	Flag Field	o Flag Field 	240	0
4678	Reason	o Reason : Byte describing the reason for deregistering the group or instance . 	240	0
4678	Group of Member Data Count	o Group of Member Data Count : The number of " Group of Member Data " components immediately following the DeRegistration Request component . 	400	0
4678	Return Code	o Return Code : A byte return code indicating the status of action taken . 	301	0
4678	Group Data Count	o Group Data Count : The number of " Group Data " components immediately following the Get Weights Request TLV . 	400	0
4678	Return Code	o Return Code : A byte return code indicating the status of action taken . 	301	0
4678	Interval	o Interval : These two bytes indicate a recommended polling interval for the load balancer to use . The Group Workload Manager is stating that any polling interval smaller than the suggested interval would probably retrieve values before they have had a chance to change . 	110	0
4678	Flag Field	o Flag Field 	240	0
4678	Return Code	o Return Code : A byte return code indicating the status of action taken . 	301	0
4678	LB UID Length	o LB UID Length : one-byte length field describing the size of the following LB UID . 	100	0
4678	LB Health	o LB Health : This field gives the load balancer a chance to pass in a metric describing its own health or state . 	400	0
4678	Return Code	o Return Code : A byte return code indicating the status of action taken . 	301	0
4678	LB Health	LB Health : 0x00 Flags : 0000 0010 	240	0
4679	Type	Type 	240	0
4679	Length	This field MUST be set equal to the sum of the Vendor-Length fields of the sub-attributes contained in the Vendor-Specific Attribute , plus six ( Type + Length + Vendor-Id ). 	100	0
4679	Vendor-Id	This field MUST be set to decimal 3561 , the enterprise number assigned to the ADSL Forum [ IANA ]. 	231	0
4679	Vendor-Type	The Vendor-Type field is one octet in length and contains the sub-attribute type , as assigned by the DSL Forum . 	231	0
4679	Vendor-Length	The Vendor-Length field is one octet and indicates the length of the entire sub-attribute , including the Vendor-Type , Vendor-Length , and Value fields . 	100	0
4679	Value	The Value field is zero or more octets and contains information specific to the sub-attribute . The format and length of the Value field is determined by the Vendor-Type and Vendor-Length fields . The format of the value field is one of 2 data types , string or integer [ RFC2865 ]. 	400	0
4679	Vendor-Type	Vendor-Type 	231	0
4679	Vendor-Length	Vendor-Length 	100	0
4679	Vendor-Type	Vendor-Type 	231	0
4679	Vendor-Length	Vendor-Length 	100	0
4679	Vendor-Type	Vendor-Type 	231	0
4679	Vendor-Length	Vendor-Length 	100	0
4679	Value	This field contains a 4-byte unsigned integer , indicating the subscriber's actual data rate upstream of a synchronized DSL link . The rate is coded in bits per second . 	200	0
4679	Vendor-Type	Vendor-Type 	231	0
4679	Vendor-Length	Vendor-Length 	100	0
4679	Value	This field contains a 4-byte unsigned integer , indicating the subscriber's actual data rate downstream of a synchronized DSL link . The rate is coded in bits per second . 	200	0
4679	Vendor-Type	Vendor-Type 	231	0
4679	Vendor-Length	Vendor-Length 	100	0
4679	Value	This field contains a 4-byte unsigned integer , indicating the subscriber's minimum upstream data rate ( as configured by the operator ). The rate is coded in bits per second . 	200	0
4679	Vendor-Type	Vendor-Type 	231	0
4679	Vendor-Length	Vendor-Length 	100	0
4679	Value	This field contains a 4-byte unsigned integer , indicating the subscriber's minimum downstream data rate ( as configured by the operator ). The rate is coded in bits per second . 	200	0
4679	Vendor-Type	Vendor-Type 	231	0
4679	Vendor-Length	Vendor-Length 	100	0
4679	Value	This field contains a 4-byte unsigned integer , indicating the subscriber's actual DSL attainable upstream data rate . The rate is coded in bits per second . 	200	0
4679	Vendor-Type	Vendor-Type 	231	0
4679	Vendor-Length	Vendor-Length 	100	0
4679	Value	This field contains a 4-byte unsigned integer , indicating the subscriber's actual DSL attainable downstream data rate . The rate is coded in bits per second . 	200	0
4679	Vendor-Type	Vendor-Type 	231	0
4679	Vendor-Length	Vendor-Length 	100	0
4679	Value	This field is a 4-byte unsigned integer , indicating the numeric value of the subscriber's DSL maximum upstream data rate . The rate is coded in bits per second . 	110	0
4679	Vendor-Type	Vendor-Type 	231	0
4679	Vendor-Length	Vendor-Length 	100	0
4679	Value	This field is a 4-byte unsigned integer , indicating the numeric value of the subscriber's DSL maximum downstream data rate . The rate is coded in bits per second . 	110	0
4679	Vendor-Type	Vendor-Type 	231	0
4679	Vendor-Length	Vendor-Length 	100	0
4679	Value	This field is a 4-byte unsigned integer , indicating the numeric value of the subscriber's DSL minimum upstream data rate when in low power state ( L1/L2 ). The rate is coded in bits per second . 	110	0
4679	Vendor-Type	Vendor-Type 	231	0
4679	Vendor-Length	Vendor-Length 	100	0
4679	Value	This field is a 4-byte unsigned integer , indicating the numeric value of the subscriber's DSL minimum downstream data rate . The rate is coded in bits per second . 	110	0
4679	Vendor-Type	Vendor-Type 	231	0
4679	Vendor-Length	Vendor-Length 	100	0
4679	Value	This field is a 4-byte unsigned integer , indicating the numeric value in milliseconds of the subscriber's DSL maximum one-way upstream interleaving delay . 	121	0
4679	Vendor-Type	Vendor-Type 	231	0
4679	Vendor-Length	Vendor-Length 	100	0
4679	Value	This field is a 4-byte unsigned integer , indicating the numeric value in milliseconds of the subscriber's DSL actual upstream interleaving delay . 	121	0
4679	Vendor-Type	Vendor-Type 	231	0
4679	Vendor-Length	Vendor-Length 	100	0
4679	Value	This field is a 4-byte unsigned integer , indicating the numeric value in milliseconds of the subscriber's DSL maximum one-way downstream interleaving delay . 	121	0
4679	Vendor-Type	Vendor-Type 	231	0
4679	Vendor-Length	Vendor-Length 	100	0
4679	Value	This field is a 4-byte unsigned integer , indicating the numeric value in milliseconds of the subscriber's DSL actual downstream interleaving delay . 	120	0
4679	Vendor-Type	Vendor-Type 	231	0
4679	Vendor-Length	Vendor-Length 	100	0
4679	Value	This field is a string 3 bytes in length , logically divided into three 1-byte sub-fields as shown in the following diagram : 	400	0
4679	Data Link	Data Link 	400	0
4679	Vendor-Type	Vendor-Type 	231	0
4679	Vendor-Length	Vendor-Length 	100	0
4695	C	Copyright ( C ) The IETF Trust ( 2006 ). 	302	0
4695	N	o N-active commands . N-active commands are MIDI commands that do not appear before one of the following commands in the session history : MIDI Control Change numbers 123-127 ( numbers with All Notes Off semantics ) or 120 ( All Sound Off ), and any Reset State command . 	231	0
4695	C	o C-active commands . C-active commands are MIDI commands that do not appear before one of the following commands in the session history : MIDI Control Change number 121 ( Reset All Controllers ) and any Reset State command . 	231	0
4695	W	By default , the U , W , and Z bits MUST be set to 0 . If all parameter logs in the list code RPN parameters , the U bit MAY be set to 1 . If all parameter logs in the list code NRPN parameters , the W bit MAY be set to 1 . If the parameter numbers of all RPN and NRPN logs in the list lie in the range 0-127 ( and thus have an MSB value of 0 ), the Z bit MAY be set to 1 . 	210	0
4695	TCOUNT	If the T header bit is set to 1 , the 8-bit TCOUNT field appears in the command log . If the C header bit is set to 1 , the 8-bit COUNT field appears in the command log . TCOUNT and COUNT are interpreted as unsigned integers . 	210	0
4695	A	o A : Poly Aftertouch ( 0xA ) o B : System Reset ( 0xFF ) o C : Control Change ( 0xB ) o F : System Time Code ( 0xF1 ) o G : System Tune Request ( 0xF6 ) o H : System Song Select ( 0xF3 ) o J : System Common Undefined ( 0xF4 ) o K : System Common Undefined ( 0xF5 ) o N : NoteOff ( 0x8 ), NoteOn ( 0x9 ) o P : Program Change ( 0xC ) o Q : System Sequencer ( 0xF2 , 0xF8 , 0xF9 , 0xFA , 0xFB , 0xFC ) o T : Channel Aftertouch ( 0xD ) o V : System Active Sense ( 0xFE ) o W : Pitch Wheel ( 0xE ) 	240	0
4695	X	o X : SysEx ( 0xF0 ) o Y : System Real-Time Undefined ( 0xF9 ) o Z : System Real-Time Undefined ( 0xFD ) 	240	0
4695	FREQIDX	FREQIDX Sampling Frequency 	301	0
4695	C	This document is subject to the rights , licenses and restrictions contained in BCP 78 , and except as set forth therein , the authors retain all their rights . 	303	0
4712	B	basic ( B ): 1 bit - While set to 1 , the basic flag indicates that the PDU has BASIC part of the RAQMON PDU . A value of zero is considered valid and indicates a RAQMON NULL PDU . 	210	0
4712	T	trailer ( T ): 3 bits - Total number of Application-Specific Extensions that follow the BASIC part of RAQMON PDU . A value of zero is considered valid as many times as there is no application - specific information to add to the basic information . 	400	0
4712	P	padding ( P ): 1 bit - If the padding bit is set , the BASIC part of the RAQMON PDU contains some additional padding octets at the end of the BASIC part of the PDU that are not part of the monitoring information . Padding may be needed in some cases , as reporting is based on the intent of a RDS to report certain parameters . Also , some parameters may be reported only once at the beginning of the reporting session , e.g ., Data Source Name , Receiver Name , payload type , etc . Actual padding at the end of the BASIC part of the PDU is 0 , 8 , 16 , or 24 bits to make the length of the BASIC part of the PDU a multiple of 32 bits 	231	0
4712	S	Source IP version Flag ( S ): 1 bit - While set to 1 , the source IP version flag indicates that the Source IP address contained in the PDU is an IPv6 address . 	220	0
4712	R	Receiver IP version Flag ( R ): 1 bit - While set to 1 , the receiver IP version flag indicates that the receiver IP address contained in the PDU is an IPv6 address . 	220	0
4712	RC	record count ( RC ): 4 bits - Total number of application records contained in the BASIC part of the PDU . A value of zero is considered valid but useless , with the exception of the case of a NULL PDU indicating the end of a RDS reporting session . 	302	0
4712	DSRC	DSRC : 32 bits - Data Source identifier represents a unique RAQMON reporting session descriptor that points to a specific reporting session between RDS and RRC . Uniqueness of DSRC is valid only within a reporting session . DSRC values should be randomly generated using vendor-chosen algorithms for each communication session . It is not sufficient to obtain a DSRC simply by calling random () without carefully initializing the state . One could use an algorithm like the one defined in Appendix A.6 in [ RFC3550 ] to create a DSRC . Depending on the choice of algorithm , there is a finite probability that two DSRCs from two different RDSs may be the same . To further reduce the probability that two RDSs pick the same DSRC for two different reporting sessions , it is recommended that an RRC use parameters like Data Source Address ( DA ), Data Source Name ( DN ), and layer 2 Media Access Control ( MAC ) Address in the PDU in conjunction with a DSRC value . It is not mandatory for RDSs to send parameters like Data Source Address ( DA ), Data Source Name ( DN ), and MAC Address in every PDU sent to RRC , but occasionally sending these parameters will reduce the probability of DSRC collision drastically . However , this will cause an additional overhead per PDU . 	231	0
4712	RC_N	RC_N : 8 bits - The Record Count number indicates a sub-session within a communication session . A value of zero is a valid record number . The maximum number of records that can be described in one RAQMON Packet is 256 . 	110	0
4712	Session Duration	Session Duration : 32 bits - The Session ( sub-session ) Duration metric is defined in section 5.9 of [ RFC4710 ]. Session Duration is an unsigned integer expressed in seconds . 	100	0
4712	Data Source Device Port Used	Data Source Device Port Used : 16 bits - This parameter is defined in section 5.5 of [ RFC4710 ] and describes the port number used by the Data Source as used by the application in RC_N session while this RAQMON PDU was generated . 	400	0
4712	Receiver Device Port Used	Receiver Device Port Used : 16 bits - This parameter is defined in section 5.6 of [ RFC4710 ] and describes the receiver port used by the application to communicate to the receiver . It follows same syntax as Source Device Port Used . 	231	0
4712	Source Payload Type	Source Payload Type : 8 bits - This parameter is defined in section 5.24 of [ RFC4710 ] and specifies the payload type of the data source of the communication sub-session RC_N as defined in [ RFC3551 ]. 	231	0
4712	Receiver Payload Type	Receiver Payload Type : 8 bits - This parameter is defined in section 5.25 of [ RFC4710 ] and specifies the receiver payload type of the communication sub-session RC_N as defined in [ RFC3551 ]. 	231	0
4712	CPU Utilization	CPU Utilization : 8 bits - This parameter , defined in section 5.30 of [ RFC4710 ], represents the percentage of CPU used during session RC_N from the last report until the time this RAQMON PDU was generated . The CPU Utilization is expressed in percents in the range 0 to 100 . The value should indicate not only CPU utilization associated to a session RC_N but also actual CPU Utilization , to indicate a snapshot of the CPU utilization of the host running the RDS while session RC_N in progress . 	400	0
4712	Memory Utilization	Memory Utilization : 8 bits - This parameter , defined in section 5.31 of [ RFC4710 ], represents the percentage of total memory used during session RC_N up until the time this RAQMON PDU was generated . The memory utilization is expressed in percents 0 to 100 . The Memory Utilization value should indicate not only the memory utilization associated to a session RC_N but the total memory utilization , to indicate a snapshot of end-device memory utilization while session RC_N is in progress . 	400	0
4712	Session Setup Delay	Session Setup Delay : 16 bits - The Session ( sub-session ) Setup Delay metric is defined in section 5.8 of [ RFC4710 ] and expressed in milliseconds . 	110	0
4712	Application Delay	Application Delay : 16 bits - The Application Delay is defined in section 5.13 of [ RFC4710 ] and is represented as an unsigned integer expressed in milliseconds . 	100	0
4712	IP Packet Delay Variation	IP Packet Delay Variation : 16 bits - The IP Packet Delay Variation is defined in section 5.15 of [ RFC4710 ] and is represented as an unsigned integer expressed in milliseconds . 	301	0
4717	C	Copyright ( C ) The IETF Trust ( 2006 ). 	302	0
4717	VPI	The ingress router MUST copy the VPI field from the incoming cell into this field . For particular emulated VCs , the egress router MAY generate a new VPI and ignore the VPI contained in this field . 	400	0
4717	VCI	The ingress router MUST copy the VCI field from the incoming ATM cell header into this field . For particular emulated VCs , the egress router MAY generate a new VCI . 	400	0
4717	Sequence Number	9.2 . Sequence Number 	240	0
4717	M	Bit ( M ) of the control byte indicates whether the packet contains an ATM cell or a frame payload . If set to 0 , the packet contains an ATM cell . If set to 1 , the PDU contains an AAL5 payload . 	210	0
4717	V	Bit ( V ) of the control byte indicates whether the VCI field is present in the packet . If set to 1 , the VCI field is present for the cell . If set to 0 , no VCI field is present . In the case of a VCC , the VCI field is not required . For VPC , the VCI field is required and is transmitted with each cell . 	210	0
4717	C	The Cell Loss Priority ( CLP ) field indicates CLP value of the encapsulated cell . 	231	0
4717	Res	These bits are reserved and MUST be set to 0 upon transmission and ignored upon reception . 	500	0
4717	T	Bit ( T ) of the control word indicates whether the packet contains an ATM admin cell or an AAL5 payload . If T = 1 , the packet contains an ATM admin cell , encapsulated according to the N-to - one cell relay encapsulation , Figure 4 . If not set , the PDU contains an AAL5 payload . The ability to transport an ATM cell in the AAL5 SDU mode is intended to provide a means of enabling administrative functionality over the AAL5 VCC ( though it does not endeavor to preserve user-cell and admin-cell arrival/transport ordering ). 	210	0
4717	E	The ingress router , PE1 , SHOULD set this bit to 1 if the EFCI bit of the final cell of those that transported the AAL5 CPCS-SDU is set to 1 , or if the EFCI bit of the single ATM cell to be transported in the packet is set to 1 . Otherwise , this bit 	210	0
4717	C	The ingress router , PE1 , SHOULD set this bit to 1 if the CLP bit of any of the ATM cells that transported the AAL5 CPCS-SDU is set to 1 , or if the CLP bit of the single ATM cell to be transported in the packet is set to 1 . Otherwise this bit SHOULD be set to 0 . The egress router , PE2 , SHOULD set the CLP bit of all cells that transport the AAL5 CPCS-SDU to the value contained in this field . 	210	0
4717	U	When FRF.8.1 Frame Relay/ATM PVC Service Interworking [ RFC3916 ] traffic is being transported , the CPCS-UU Least Significant Bit ( LSB ) of the AAL5 CPCS-PDU may contain the Frame Relay C/R bit . The ingress router , PE1 , SHOULD copy this bit to the U bit of the control word . The egress router , PE2 , SHOULD copy the U bit to the CPCS-UU Least Significant Bit ( LSB ) of the AAL5 CPCS PDU . 	400	0
4717	E	This field is used to convey the EFCI state of the ATM cells . The EFCI state is indicated in the middle bit of each ATM cell's PTI field . 	210	0
4717	C	* C ( CLP ) bit 	210	0
4717	C	This document is subject to the rights , licenses and restrictions contained in BCP 78 , and except as set forth therein , the authors retain all their rights . 	303	0
4721	Subtype	where the Type , Length , Subtype , and SPI are as shown in Section 5 . The Preceding Mobile IP data refers to the UDP payload ( the Registration Request or Registration Reply data ) and all prior extensions in their entirety . The resulting function call , as described in [ RFC2104 ], would be : 	100	0
4721	Length	where the Type , Length , Subtype , and SPI are as shown in Section 5 . The Preceding Mobile IP data refers to the UDP payload ( the Registration Request or Registration Reply data ) and all prior extensions in their entirety . The resulting function call , as described in [ RFC2104 ], would be : 	100	0
4721	SPI	where the Type , Length , Subtype , and SPI are as shown in Section 5 . The Preceding Mobile IP data refers to the UDP payload ( the Registration Request or Registration Reply data ) and all prior extensions in their entirety . The resulting function call , as described in [ RFC2104 ], would be : 	100	0
4721	Type	Type , Subtype ( if present ), Length , SPI ) || 	100	0
4721	Subtype	Type , Subtype ( if present ), Length , SPI ) || 	100	0
4721	Length	Type , Subtype ( if present ), Length , SPI ) || 	100	0
4721	SPI	Type , Subtype ( if present ), Length , SPI ) || 	100	0
4728	Next Header	8-bit selector . Identifies the type of header immediately following the DSR Options header . Uses the same values as the IPv4 Protocol field [ RFC1700 ]. If no header follows , then Next Header MUST have the value 59 , " No Next Header " [ RFC2460 ]. 	231	0
4728	F	Flag bit . MUST be set to 0 . This bit is set in a DSR Flow State header ( Section 7.1 ) and clear in a DSR Options header . 	210	0
4728	Reserved	Reserved 	500	0
4728	Payload Length	The length of the DSR Options header , excluding the 4-octet fixed portion . The value of the Payload Length field defines the total length of all options carried in the DSR Options header . 	100	0
4728	Option Type	Option Type 	231	0
4728	Opt Data Len	8-bit unsigned integer . Length of the option , in octets , excluding the Option Type and Opt Data Len fields . MUST be set equal to ( 4 * n ) + 6 , where n is the number of addresses in the Route Request Option . 	100	0
4728	Identification	A unique value generated by the initiator ( original sender ) of the Route Request . Nodes initiating a Route Request generate a new Identification value for each Route Request , for example based on a sequence number counter of all Route Requests initiated by the node . 	301	0
4728	Target Address	Target Address 	230	0
4728	Option Type	Option Type 	231	0
4728	Opt Data Len	8-bit unsigned integer . Length of the option , in octets , excluding the Option Type and Opt Data Len fields . MUST be set equal to ( 4 * n ) + 1 , where n is the number of addresses in the Route Reply Option . 	100	0
4728	L	Set to indicate that the last hop given by the Route Reply ( the link from Address[n-1 ] to Address[n ]) is actually an arbitrary path in a network external to the DSR network; the exact route outside the DSR network is not represented in the Route Reply . Nodes caching this hop in their Route Cache MUST flag the cached hop with the External flag . Such hops MUST NOT be returned in a cached Route Reply generated from this Route Cache entry , and selection of routes from the Route Cache to route a packet being sent SHOULD prefer routes that contain no hops flagged as External . 	110	0
4728	Reserved	Reserved 	500	0
4728	Option Type	Option Type 	220	0
4728	Opt Data Len	8-bit unsigned integer . Length of the option , in octets , excluding the Option Type and Opt Data Len fields . 	100	0
4728	Error Type	The type of error encountered . Currently , the following type values are defined : 	231	0
4728	Reservd	Reservd 	302	0
4728	Salvage	A 4-bit unsigned integer . Copied from the Salvage field in the DSR Source Route option of the packet triggering the Route Error . 	231	0
4728	Error Source Address	The address of the node originating the Route Error ( e.g ., the node that attempted to forward a packet and discovered the link failure ). 	230	0
4728	Error Destination Address	The address of the node to which the Route Error must be delivered . For example , when the Error Type field is set to NODE_UNREACHABLE , this field will be set to the address of the node that generated the routing information claiming that the hop from the Error Source Address to Unreachable Node Address ( specified in the Type-Specific Information ) was a valid hop . 	230	0
4728	Unreachable Node Address	The IP address of the node that was found to be unreachable ( the next-hop neighbor to which the node with address Error Source Address was attempting to transmit the packet ). 	230	0
4728	Unsupported Opt	Unsupported Opt 	302	0
4728	Option Type	160 . Nodes not understanding this option will remove the option and return a Route Error . 	302	0
4728	Opt Data Len	8-bit unsigned integer . Length of the option , in octets , excluding the Option Type and Opt Data Len fields . 	100	0
4728	Identification	The Identification field is set to a unique value and is copied into the Identification field of the Acknowledgement option when returned by the node receiving the packet over this hop . 	301	0
4728	Option Type	Option Type 	220	0
4728	Opt Data Len	8-bit unsigned integer . Length of the option , in octets , excluding the Option Type and Opt Data Len fields . 	100	0
4728	Identification	Copied from the Identification field of the Acknowledgement Request option of the packet being acknowledged . 	230	0
4728	ACK Source Address	ACK Source Address 	230	0
4728	ACK Destination Address	The address of the node to which the acknowledgement is to be delivered . 	230	0
4728	Option Type	Option Type 	220	0
4728	Opt Data Len	8-bit unsigned integer . Length of the option , in octets , excluding the Option Type and Opt Data Len fields . For the format of the DSR Source Route option defined here , this field MUST be set to the value ( n * 4 ) + 2 , where n is the number of addresses present in the Address[i ] fields . 	100	0
4728	F	Set to indicate that the first hop indicated by the DSR Source Route option is actually an arbitrary path in a network external to the DSR network; the exact route outside the DSR 	110	0
4728	L	Set to indicate that the last hop indicated by the DSR Source Route option is actually an arbitrary path in a network external to the DSR network; the exact route outside the DSR network is not represented in the DSR Source Route option . Nodes caching this hop in their Route Cache MUST flag the cached hop with the External flag . Such hops MUST NOT be returned in a Route Reply generated from this Route Cache entry , and selection of routes from the Route Cache to route a packet being sent SHOULD prefer routes that contain no hops flagged as External . 	110	0
4728	Reserved	Reserved 	500	0
4728	Salvage	A 4-bit unsigned integer . Count of number of times that this packet has been salvaged as a part of DSR routing ( Section 3.4.1 ). 	100	0
4728	Segs Left	Number of route segments remaining , i.e ., number of explicitly listed intermediate nodes still to be visited before reaching the final destination . 	100	0
4728	Option Type	224 . Nodes not understanding this option will drop the packet and return a Route Error . 	240	0
4728	Option Type	Option Type 	220	0
4728	Opt Data Len	8-bit unsigned integer . Length of the option , in octets , excluding the Option Type and Opt Data Len fields . The size of the Option Data field . 	100	0
4728	Option Data	Option Data 	400	0
4728	Next Header	8-bit selector . Identifies the type of header immediately following the DSR Flow State header . Uses the same values as the IPv4 Protocol field [ RFC1700 ]. 	231	0
4728	F	Flag bit . MUST be set to 1 . This bit is set in a DSR Flow State header and clear in a DSR Options header ( Section 6.1 ). 	210	0
4728	Hop Count	7-bit unsigned integer . The number of hops through which this packet has been forwarded . 	100	0
4728	Option Type	128 . Nodes not understanding this option will ignore the option and return a Route Error . 	240	0
4728	Opt Data Len	8-bit unsigned integer . Length of the option , in octets , excluding the Option Type and Opt Data Len fields . 	100	0
4728	Timeout	Timeout 	121	0
4728	Option Type	129 . Nodes not understanding this option will ignore the option and return a Route Error . 	240	0
4728	Opt Data Len	8-bit unsigned integer . Length of the option , in octets , excluding the Option Type and Opt Data Len fields . 	100	0
4728	New Flow Identifier	Indicates the next identifier to store in the Flow ID field of the DSR Options header . 	231	0
4728	New IP Destination Address	Indicates the next address to store in the Destination Address field of the IP header . 	230	0
4728	Original IP Destination Address	Original IP Destination Address 	230	0
4728	Flow ID	Flow ID 	202	0
4728	Original IP Destination Address	Original IP Destination Address 	230	0
4728	Option Type	160 . Nodes not understanding this option will remove the option and return a Route Error . 	302	0
4728	Opt Data Len	8-bit unsigned integer . Length of the option , in octets , excluding the Option Type and Opt Data Len fields . 	100	0
4728	Packet Identifier	The Packet Identifier field is set to a unique number and is copied into the Identification field of the DSR Acknowledgement option when returned by the node receiving the packet over this hop . 	231	0
4728	ACK Request Source Address	ACK Request Source Address 	230	0
4728	...	where initiator is the value of the Source Address field in the IP header of the packet carrying the Route Request ( the address of the initiator of the Route Discovery ), and each Address[i ] is a node through which this Route Request has passed , in turn , during 	230	0
4728	...	where initiator is the value of the Destination Address field in the IP header of the packet carrying the Route Reply ( the address of the initiator of the Route Discovery ), and each Address[i ] is a node through which the source route passes , in turn , on the route to the target of the Route Discovery . Address[n ] is the address of the target . If the Last Hop External ( L ) bit is set in the Route Reply , the node MUST flag the last hop from the Route Reply ( the link from Address[n-1 ] to Address[n ]) in its Route Cache as External . The value n here is the number of addresses in the source route being returned in the Route Reply option , or ( Opt Data Len - 1 ) / 4 . 	230	0
4728	...	Otherwise ( i.e ., if Salvage is nonzero ), the routing information from the DSR Source Route is the sequence of hop addresses 	201	0
4728	...	where source is the value of the Source Address field in the IP header of the packet carrying the DSR Source Route option ( the original sender of the packet ), each Address[i ] is the value in the Address[i ] field in the DSR Source Route option , and destination is the value of the Destination Address field in the packet's IP header ( the last-hop address of the source route ). The value n here is the number of addresses in source route in the DSR Source Route option , or ( Opt Data Len - 2 ) / 4 . 	230	0
4728	...	where initiator is the address of the initiator of this Route Request , each Address[i ] is an address from the Route Request , and target is the target of the Route Request ( the Target Address field in the Route Request ). The value n here is the number of addresses recorded in the Route Request , or ( Opt Data Len - 6 ) / 4 . 	230	0
4728	...	where initiator is the address of the initiator of this Route Request , each Address[i ] is an address from the Route Request , and c-route is the sequence of hop addresses in the source route to this target node , obtained from the node's Route Cache . In appending this cached route to the source route for the reply , the address of this node itself MUST be excluded , since it is already listed as Address[n ]. 	230	0
4733	E	If set to a value of one , the " end " bit indicates that this packet contains the end of the event . For long-lasting events that have to be split into segments ( see below , Section 2.5.1.3 ), only the final packet for the final segment will have the E bit set . 	210	0
4733	modulation	modulation : The modulation frequency , in Hz . The field is a 9-bit unsigned integer , allowing modulation frequencies up to 511 Hz . If there is no modulation , this field has a value of zero . Note that the amplitude of modulation is not indicated in the payload and must be determined by out-of-band means . 	231	0
4733	T	T : If the T bit is set ( one ), the modulation frequency is to be divided by three . Otherwise , the modulation frequency is taken as is . 	210	0
4733	volume	volume : The power level of the tone , expressed in dBm0 after dropping the sign , with range from 0 to - 63 dBm0 . ( Note : A preferred level range for digital tone generators is - 8 dBm0 to - 3 dBm0 .) 	231	0
4733	duration	duration : The duration of the tone , measured in timestamp units and presented in network byte order . The tone begins at the instant identified by the RTP timestamp and lasts for the duration value . The value of zero is not permitted , and tones with such a duration SHOULD be ignored . 	120	0
4733	frequency	frequency : The frequencies of the tones to be added , measured in Hz and represented as a 12-bit unsigned integer . The field size is sufficient to represent frequencies up to 4095 Hz , which exceeds the range of telephone systems . A value of zero indicates silence . A single tone can contain any number of frequencies . If no frequencies are specified , the packet reports a period of silence . 	110	0
4733	R	R : This field is reserved for future use . The sender MUST set it to zero , and the receiver MUST ignore it . 	500	0
4746	Flags	The flags field is broken up into 8 bits each representing a binary flag . The field is defined as the Logical OR of the following values : 	231	0
4746	MAC ID	The MAC field specifies the cryptographic hash used to generate the keyed hash value . The following are currently supported : 	231	0
4746	DH Group ID	The Diffie-Hellman group field specifies the group used in the Diffie-Hellman computations . The following are currently supported : 	231	0
4746	Public Key ID	The Public Key ID field specifies the cipher used to encrypt the client's EAP-Response in PAX_SEC-2 . 	230	0
4749	MBS	MBS ( 4 bits ): maximum bit rate supported . Indicates a maximum bit rate to the encoder at the site of the receiver of this payload . The value of the MBS field is set according to the following table : 	231	0
4749	FT	FT ( 4 bits ): Frame type of the frame(s ) in this packet , as per the following table : 	231	0
4761	C	Copyright ( C ) The IETF Trust ( 2007 ). 	302	0
4761	C	C A Control word [ 7 ] MUST or MUST NOT be present when sending VPLS packets to this PE , depending on whether C is 1 or 0 , respectively 	210	0
4761	S	S Sequenced delivery of frames MUST or MUST NOT be used when sending VPLS packets to this PE , depending on whether S is 1 or 0 , respectively 	210	0
4761	C	This document is subject to the rights , licenses and restrictions contained in BCP 78 , and except as set forth therein , the authors retain all their rights . 	303	0
4762	C	Copyright ( C ) The IETF Trust ( 2007 ). 	302	0
4762	C	Control bit ( C ): This bit is used to signal the use of the control word as specified in [ RFC4447 ]. 	210	0
4762	Length	Attachment Group Identifier ( AGI ), Length , Value : The unique name of this VPLS . The AGI identifies a type of name , and Length denotes the length of Value , which is the name of the VPLS . We use the term AGI interchangeably with VPLS identifier . 	100	0
4762	Type	Type : Type field . This field MUST be set to 0x0404 . This identifies the TLV type as MAC List TLV . 	240	0
4762	Length	Length : Length field . This field specifies the total length in octets of the MAC addresses in the TLV . The length MUST be a multiple of 6 . 	100	0
4762	C	This document is subject to the rights , licenses and restrictions contained in BCP 78 , and except as set forth therein , the authors retain all their rights . 	303	0
4763	Length	KDF(Key , Label , Msg , Length ) R := [] ;; null string for i := 0 to FLOOR(Length/20)-1 do R := R | H-SHA1(Key , Label , Msg , i ) return R[0...(Length-1 )] 	240	0
4763	AT_ENCR_DATA	The AT_IV and AT_ENCR_DATA attributes can be used to transmit encrypted information between the Server and the Peer . The value field of AT_IV contains an initialization vector ( IV ) if one is required by the encryption algorithm used . It is not mandatory that the AT_IV attribute be included whenever the AT_ENCR_DATA attribute is . 	400	0
4763	Code	Code 	231	0
4763	Identifier	The identifier field is one octet and aids in matching responses with requests . 	301	0
4763	Length	The Length field is two octets and indicates the number of octets in an EAP message including the Code , Identifier , Length , Type , and Data fields . 	100	0
4763	Type	Type 	240	0
4763	Version	Version 	220	0
4763	Session ID	The Session ID is a 1-byte random number that MUST be freshly generated by the Server that must match all EAP messages in a particular EAP conversation . 	200	0
4763	Subtype	EAP-SAKE subtype : SAKE/Challenge , SAKE/Confirm , SAKE/Auth-Reject , and SAKE/Identity . All messages of type " EAP-SAKE " that are not of these subtypes MUST silently discarded . 	231	0
4763	Type	Type 	240	0
4763	Length	The total number of octets in the attribute , including Type and Length . 	100	0
4763	Code	Code 	231	0
4763	Identifier	Identifier 	202	0
4763	Length	Length 	100	0
4763	Type	Type 	240	0
4763	Version	Version 	220	0
4763	Session ID	Session ID 	202	0
4763	Subtype	Subtype 	231	0
4763	AT_RAND_S	The value field of this attribute contains the Server nonce RAND_S parameter . The RAND_S attribute MUST be present in EAP.Request/SAKE/Challenge . 	400	0
4763	AT_SERVERID	The value field of this attribute contains the Server identifier ( e.g ., a non-null terminated string ). The AT_SERVERID attribute SHOULD be present in EAP.Request/SAKE Challenge . 	230	0
4763	Code	Code 	231	0
4763	Identifier	A number that MUST match the Identifier field from the corresponding Request . 	231	0
4763	Length	Length 	100	0
4763	Type	Type 	240	0
4763	Version	Version 	220	0
4763	Session ID	Session ID 	202	0
4763	Subtype	Subtype 	231	0
4763	AT_RAND_P	The value field of this attribute contains the Peer nonce RAND_P parameter . The AT_RAND_P attribute MUST be present in the EAP.Response/SAKE/Challenge . 	301	0
4763	AT_PEERID	The value field of this attribute contains the NAI of the Peer . The Peer identity follows the same Network Access Identifier format that is used in EAP.Response/Identity , i.e ., including the NAI realm portion . The identity is the permanent identity , or a temporary identity . The identity does not include any terminating null characters . The AT_PEERID attribute is optional in the EAP.Response/SAKE/Challenge . 	230	0
4763	AT_SPI_P	The value field of this attribute contains the Peer's ciphersuite list SPI_P parameter . The AT_SPI_P attribute is optional in the EAP.Response/SAKE/Challenge . 	400	0
4763	AT_MIC_P	The value field of this attribute contains the Peer MIC_P parameter . The AT_MIC_P attribute MUST be present in the EAP.Response/SAKE/Challenge . 	301	0
4763	Code	Code 	231	0
4763	Identifier	Identifier 	202	0
4763	Length	Length 	100	0
4763	Type	Type 	240	0
4763	Version	Version 	220	0
4763	Session ID	Session ID 	202	0
4763	Subtype	Subtype 	231	0
4763	AT_SPI_S	The value field of this attribute contains the Server chosen ciphersuite SPI_S parameter . The AT_SPI_S attribute is optional in the EAP.Request/SAKE/Confirm . 	400	0
4763	AT_IV	This attribute is optional to use in this message . The value field of this attribute contains the Initialization Vector that is used with the encrypted data following . 	400	0
4763	AT_ENCR_DATA	This attribute is optional to use in this message . The encrypted data , if present , may contain an attribute AT_NEXT_TMPID , containing the NAI the Peer should use in the next EAP authentication . 	303	0
4763	AT_MSK_LIFE	This attribute is optional to use in this message . The value field of this attribute contains the MSK Lifetime in seconds . 	301	0
4763	AT_MIC_S	The value field of this attribute contains the Server MIC_S parameter . The AT_MIC_S attribute MUST be present in the EAP.Request/SAKE/Confirm . 	303	0
4763	Code	Code 	231	0
4763	Identifier	A number that MUST match the Identifier field from the corresponding Request . 	231	0
4763	Length	Length 	100	0
4763	Type	Type 	240	0
4763	Version	Version 	220	0
4763	Session ID	Session ID 	202	0
4763	Subtype	Subtype 	231	0
4763	AT_MIC_P	The value field of this attribute contains the Peer's MIC_P parameter . The AT_MIC_P attribute MUST be present in the EAP.Response/SAKE/Confirm . 	230	0
4763	AT_PADDING	The value field is set to zero . Added to achieve 32-bit alignment of the EAP-SAKE packet . 	302	0
4763	Code	Code 	231	0
4763	Identifier	A number that MUST match the Identifier field from the corresponding Request . 	231	0
4763	Length	Length 	100	0
4763	Type	Type 	240	0
4763	Version	Version 	220	0
4763	Session ID	Session ID 	202	0
4763	Subtype	Subtype 	231	0
4763	Code	Code 	231	0
4763	Identifier	Identifier 	230	0
4763	Length	Length 	100	0
4763	Type	Type 	240	0
4763	Version	Version 	220	0
4763	Session ID	Session ID 	202	0
4763	Subtype	Subtype 	231	0
4763	AT_PERM_ID_REQ	The AT_PERM_ID_REQ attribute is optional , to be included in cases where the Server requires the Peer to give its permanent identifier ( i.e ., PermID ). The AT_PERM_ID_REQ MUST NOT be included if the AT_ANY_ID_REQ attribute is included . The value field only contains two reserved bytes , which are set to zero on sending and ignored on reception . 	400	0
4763	AT_ANY_ID_REQ	The AT_ANY_ID_REQ attribute is optional , to be included in cases where the Server requires the Peer to send any identifier ( e.g ., PermID , TempID ). The AT_ANY_ID_REQ MUST NOT be included if AT_PERM_ID_REQ is included . The value field only contains two reserved bytes , which are set to zero on sending and ignored on reception . One of the AT_PERM_ID_REQ and AT_ANY_ID_REQ MUST be included . 	400	0
4763	AT_SERVERID	The value field of this attribute contains the identifier/realm of the Server . The AT_SERVERID attribute is optional but RECOMMENDED to include in the EAP.Request/SAKE/Identity . 	230	0
4763	Code	Code 	231	0
4763	Identifier	A number that MUST match the Identifier field from the corresponding Request . 	231	0
4763	Length	Length 	100	0
4763	Type	Type 	240	0
4763	Version	Version 	220	0
4763	Session ID	Session ID 	202	0
4763	Subtype	Subtype 	231	0
4763	AT_PEERID	The value field of this attribute contains the NAI of the Peer . The AT_PEERID attribute MUST be present in EAP.Response/SAKE/Identity . 	230	0
4764	RAND_S	* Send a 16-byte random challenge ( RAND_S ). RAND_S was called RA in Section 3.2 	301	0
4764	ID_S	* State its identity ( ID_S ). ID_S was denoted by A in Section 3.2 . 	301	0
4764	RAND_P	* Send another 16-byte random challenge ( RAND_P ). RAND_P was called RB in Section 3.2 	301	0
4764	ID_P	* State its identity ( ID_P ). ID_P was denoted by B in Section 3.2 . 	201	0
4776	N	N : The length of this option is variable . The minimum length is 3 octets . 	100	0
4776	what	what : The ' what ' element describes to which location the DHCP entry refers . Currently , three options are defined : the location of the DHCP server ( a value of 0 ), the location of the network element believed to be closest to the client ( a value of 1 ), or the location of the client ( a value of 2 ). Option ( 2 ) SHOULD be used , but may not be known . Options ( 0 ) and ( 1 ) SHOULD NOT be used unless it is known that the DHCP client is in close physical proximity to the server or network element . 	230	0
4776	country code	country code : The two-letter ISO 3166 country code in capital ASCII letters , e.g ., DE or US . ( Civic addresses always contain country designations , suggesting the use of a fixed-format field to save space .) 	231	0
4776	what	what : See above ( Section 3.1 ). 	302	0
4776	country code	country code : See above ( Section 3.1 ). 	231	0
4776	CAtype	CAlength : The length , in octets , of the CAvalue , not including the CAlength field itself . 	100	0
4776	CAlength	CAlength : The length , in octets , of the CAvalue , not including the CAlength field itself . 	100	0
4776	CAtype	Brief description : Short description identifying the meaning of the element . 	400	0
4776	.	This document is subject to the rights , licenses and restrictions contained in BCP 78 , and except as set forth therein , the authors retain all their rights . 	303	0
4783	Reference Count	The number of times this alarm has been repeated as determined by the reporting node . This field MUST NOT be set to zero , and TLVs received with this field set to zero MUST be ignored . 	500	0
4783	Reserved	This field is reserved . It MUST be set to zero on generation , MUST be ignored on receipt , and MUST be forwarded unchanged and unexamined by transit nodes . 	500	0
4783	Impact	Indicates the impact of the alarm indicated in the TLV . See [ M.20 ] for a general discussion on classification of failures . The following values are defined in this document . The details of the semantics may be found in [ M.20 ]. 	231	0
4783	Severity	Indicates the impact of the alarm indicated in the TLV . See [ RFC3877 ] and [ M.3100 ] for more information on severity . The following values are defined in this document . The details of the semantics may be found in [ RFC3877 ] and [ M.3100 ]: 	231	0
4783	Global Timestamp	Global Timestamp : 32 bits 	121	0
4783	Local Timestamp	Number of seconds reported by the local system clock at the time the associated alarm was detected on the node that originates this TLV . This number is expected to be meaningful in the context of the originating node . For example , it may indicate the number of seconds since the node rebooted or may be a local representation of an unsynchronized real-time clock . 	121	0
4783	I	Inhibit Alarm Communication ( I ): 1 bit When set , indicates that alarm communication is disabled for the LSP and that nodes SHOULD NOT add local alarm information . 	210	0
4793	C	Copyright ( C ) The IETF Trust ( 2007 ). 	302	0
4793	1	For the default algorithms , K_MAC , K_ENC , and SRK SHALL be 16 octets . For other cases , the key lengths will be as determined by the negotiated algorithms . The MSK and the EMSK SHALL each be 64 octets , in conformance with [ 1 ]. Therefore , in the case of default algorithms , the " dkLen " parameter from Section 5.2 of [ 6 ] SHALL be set to 176 ( the combined length of K_MAC , K_ENC , SRK , MSK , and EMSK ). 	400	0
4793	Code	Code 	231	0
4793	Identifier	The Identifier field is 1 octet and aids in matching responses with requests . For a more detailed description of this field and how to use it , see [ 1 ]. 	301	0
4793	Length	The Length field is 2 octets and indicates the length of the EAP packet including the Code , Identifier , Length , Type , Version , Flags , and TLV-based EAP-POTP message fields . 	100	0
4793	Type	Type 	240	0
4793	Reserved	This octet is reserved for future use . It SHALL be set to zero for this version . Recipients SHALL ignore this octet for this version of EAP-POTP . 	500	0
4793	M	M 	240	0
4793	1	The TLVs within EAP POTP-X are used to carry parameters between the EAP peer and the EAP server . An EAP peer may not necessarily implement all the TLVs supported by an EAP server , and to allow for interoperability , a special TLV allows an EAP server to discover if a TLV is supported by the EAP peer . 	400	0
4793	R	Reserved for future use . This bit SHALL be set to zero ( 0 ) for this version . Recipients SHALL ignore this bit for this version of the EAP-POTP . 	500	0
4793	TLV Type	TLV Type 	231	0
4793	Length	Length 	100	0
4793	M	M 	240	0
4793	R	Reserved for future use . This bit SHALL be set to zero ( 0 ) for this version . Recipients SHALL ignore this bit for this version of EAP-POTP . 	500	0
4793	TLV Type	TLV Type 	231	0
4793	Length	Length 	100	0
4793	Reserved	Reserved for future use . This octet MUST be set to zero for this version . Recipients SHALL ignore this octet for this version of EAP-POTP . 	500	0
4793	Highest	This field contains an unsigned integer representing the highest protocol version supported by the sender . If a value provided by a peer to an EAP server falls between the server's " Highest " and " Lowest " supported version ( inclusive ), then that value will be the negotiated version for the authentication session . 	220	0
4793	Lowest	This field contains an unsigned integer representing the lowest version acceptable by the EAP server . The field MUST be present in an EAP-Request . The field MUST NOT be present in an EAP - Response . A peer SHALL respond to an EAP-Request of type POTP-X with an EAP-Response of type Nak ( 3 ) if the peer's highest supported version is lower than the value of this field . 	231	0
4793	M	M 	240	0
4793	R	Reserved for future use . This bit SHALL be set to zero ( 0 ) for this version . Recipients SHALL ignore this bit for this version of EAP-POTP . 	500	0
4793	TLV Type	TLV Type 	231	0
4793	Length	Length 	100	0
4793	Reserved	Reserved for future use . All 7 bits MUST be set to zero for this version . Recipients SHALL ignore this bit for this version of EAP-POTP . 	500	0
4793	N	The N bit signals that the peer MUST NOT attempt to resume any session it has stored associated with this server . 	500	0
4793	Session Identifier	An 8-octet identifier for the session about to be negotiated . Note that , in the case of session resumption , this session identifier will not be used ( the session identifier for the resumed session will continue to be used ). 	202	0
4793	M	M 	240	0
4793	R	Reserved for future use . This bit SHALL be set to zero ( 0 ) for this version . Recipients SHALL ignore this bit for this version of EAP-POTP . 	500	0
4793	TLV Type	TLV Type 	231	0
4793	Length	Length 	100	0
4793	Reserved	Reserved for future use . All 9 bits SHALL be set to zero ( 0 ) for this version . Recipients SHALL ignore these bits for this version of EAP-POTP . 	500	0
4793	A	The A bit MUST be set in an EAP-Request if and only if the request immediately follows an EAP-Response of type POTP-X containing a New PIN TLV ( see Section 4.11.5 ), and the new PIN in the response was accepted by the EAP server . In this case , the A bit signals that the EAP-server has accepted the PIN , and that the peer SHALL use the newly established PIN when calculating the response ( when applicable ). The A bit MUST NOT be set if the S bit is set . If a request has both the S bit and the A bit set , the peer SHALL regard the request as invalid , and return an empty POTP-X EAP - Response message . 	210	0
4793	P	In an EAP-Request , the P bit indicates that the OTP in the response MUST be protected . Use of this bit also indicates that mutual authentication will take place , as well as generation of keying material . It is RECOMMENDED to always set the P bit . If a peer receives an EAP-Request with an OTP TLV that does not have the P bit set , and the peer's policy dictates protected mode , the peer MUST respond with an empty POTP-X EAP-Response message . All peers MUST support protected mode . 	210	0
4793	C	The C bit carries meaning only when the OTP algorithm in question makes use of server challenges . For other OTP algorithms , the C bit SHALL always be set to zero . 	210	0
4793	N	In an EAP-Request , the N bit , when set , indicates that the OTP to calculate SHALL be based on the next token " state ", and not the current one . As an example , for a time-based token , this means the next time slot . For an event-based token , this could mean the next counter value , if counter values are used . This bit will normally not be set in initial EAP-Request messages , but may be set in subsequent ones . Further , the N bit carries no meaning in an EAP-Request if a challenge is present and the C bit is not set , and SHALL be set to 0 , in this case . If a request that has the N bit set also contains a challenge , but does not have the C bit set , the peer SHALL regard the request as invalid , and return an empty POTP-X EAP-Response message . Note that setting the N bit in an EAP-Request will normally advance the internal state of the token . 	210	0
4793	T	The T bit only carries meaning for OTP methods normally incorporating a user PIN in the OTP computation . 	231	0
4793	E	In an EAP-Request , the E bit , when set , indicates that the peer MUST NOT use any stored pepper value associated with this server in the PBKDF2 computation . Rather , it MUST generate a new pepper ( if supported by the peer ) and/or use the iteration count parameter to protect the OTP ( if the server's Max Pepper Length is 0 , then the peer MUST rely on the iteration count only to protect the OTP ). This bit will usually not be set in initial EAP-Request messages , but may be set in subsequent ones , e.g ., if the server , upon receipt of an OTP TLV with a pepper identifier , detects that it does not have a pepper with that identifier in storage . This bit carries no meaning , and MUST be set to zero , when the P bit is not set . If a request has the E bit set but not the P bit , a peer SHALL regard the request as invalid , and return an empty POTP-X EAP-Response message . 	210	0
4793	S	In an EAP-Request , the S bit (" Same "), when set , indicates that the peer SHOULD calculate its response based on the same OTP value as was used for the preceding response . This bit MAY be set when the EAP server has received an OTP TLV from the peer protected with a pepper , of which the server is no longer in possession . Since the server has not attempted validation of the provided data , there is no need for the EAP peer to retrieve a new OTP value . This bit carries no meaning , and MUST be set to zero , when the E bit is not set . A peer SHALL regard a request where the S bit is set , but not the E bit , as invalid , and return an empty POTP-X EAP-Response message . Further , the S bit MUST NOT be set when the A bit also is set; see above . 	210	0
4793	Pepper Length	This octet SHALL be present if and only if the P bit is set . When present , it contains an unsigned integer , having a value between 0 and 255 ( inclusive ). In an EAP-Request , the integer represents the maximum length ( in bits ) of a client-generated pepper the server is prepared to search for . Peers MUST NOT generate peppers longer than this value . If the value is set to zero , it means the peer MUST NOT generate a pepper for the PBKDF2 calculation . In an EAP-Response , it indicates the length of the used pepper . 	301	0
4793	Iteration Count	These 4 octets SHALL be present if and only if the P bit is set . When present , they contain an unsigned , 4-octet integer in network byte order . In an EAP-Request , the integer represents the maximum iteration count the peer may use in the PBKDF2 computation . Peers MUST NOT use iteration counts higher than this value . In an EAP - Response , it indicates the actual iteration count used . 	301	0
4793	Authentication Data	EAP-Request : In an EAP-Request , the Authentication Data field , when present , contains an optional " challenge ". The challenge is an octet string that SHOULD be uniquely generated for each request in which it is present ( i.e ., it is a " nonce "), and SHOULD be 8 octets or longer . To avoid fragmentation ( i.e ., EAP messages longer than the minimum EAP MTU size; see [ 1 ]), the challenge MUST NOT be longer than 64 octets . When the challenge is not present , the OTP will be calculated on the current token state only . The peer MAY ignore a provided challenge if and only if the OTP token the peer is interacting with is not capable of including a challenge in the OTP calculation . In this case , EAP server policies will determine whether or not to accept a provided OTP value . 	400	0
4793	M	M 	240	0
4793	R	Reserved for future use . This bit SHALL be set to zero ( 0 ) for this version . Recipients SHALL ignore this bit for this version of EAP-POTP . 	500	0
4793	TLV Type	TLV Type 	231	0
4793	Length	Length 	100	0
4793	Vendor-Id	The Vendor-Id field is 4 octets , and contains the Vendor-Id of the TLV that was not supported . The high-order octet is 0 and the low-order 3 octets are the Structure of Management Information ( SMI ) Network Management Private Enterprise Code of the Vendor in network byte order . The Vendor-Id field MUST be zero for TLVs that are not Vendor-Specific TLVs . For Vendor-Specific TLVs , the Vendor-ID MUST be set to the SMI code . 	301	0
4793	NAK-Type	The type of the unsupported TLV . The TLV MUST have been included in the most recently received EAP message . 	231	0
4793	M	M 	240	0
4793	R	Reserved for future use . This bit SHALL be set to zero ( 0 ) for this version . Recipients SHALL ignore this bit for this version of EAP-POTP . 	500	0
4793	TLV Type	TLV Type 	231	0
4793	Length	2 + length of the PIN field ( as specified in the PIN Length field ) + ( 0 , 1 , or 2 ) 	100	0
4793	Reserved	Reserved for future use . All six bits SHALL be set to zero for this version . Recipients SHALL ignore these bits for this version of EAP-POTP . 	500	0
4793	Q	The Q bit , when set in an EAP-Request , indicates that an accompanying PIN is required , i.e ., the peer ( user ) is not free to choose another PIN . When the Q bit is set , there MUST be an accompanying PIN and the provided PIN MUST be used in subsequent OTP generations . A peer SHALL respond with an empty POTP-X EAP - Response message if the Q bit is set but there is not any accompanying PIN . When the Q bit is not set , any provided PIN is suggested only , and the peer is free to choose another PIN , subject to local policy . 	210	0
4793	A	This bit allows methods that distinguish between two different PIN types ( e.g ., decimal vs . alphanumeric ) to designate whether the augmented set is to be used ( when set ) or not ( when not set ). The A bit carries no meaning , and SHALL be set to zero , in an EAP - Response . 	210	0
4793	PIN Length	This field contains an unsigned integer representing the length of the provided PIN ( this implies that the maximum length of a PIN will be 255 octets ). 	100	0
4793	Min . PIN Length	This field MAY be present in an EAP-Request . This field MUST NOT be present in an EAP-Response . It SHALL be interpreted as an unsigned integer in network byte order representing the minimum length allowed for a new PIN . 	400	0
4793	Max . PIN Length	This field MUST NOT be present in an EAP-Request unless the Min . PIN Length field is present , in which case it MAY be present . The field MUST NOT be present in an EAP-Response . It SHALL be interpreted as an unsigned integer in network byte order representing the maximum length allowed for a new PIN . The value of this field , when present , MUST be equal to , or larger than , the value of the Min . PIN Length field . 	400	0
4793	M	M 	240	0
4793	R	Reserved for future use . This bit SHALL be set to zero ( 0 ) for this version . Recipients SHALL ignore this bit for this version of EAP-POTP . 	500	0
4793	TLV Type	TLV Type 	231	0
4793	Length	Length 	100	0
4793	Reserved	Reserved for future use . These 7 bits SHALL be set to zero ( 0 ) for this version . Recipients SHALL ignore these bits for this version of EAP-POTP . 	500	0
4793	C	The C bit , when set in an EAP-Request , indicates that the EAP server intends to send more EAP-Requests of type POTP-X in this session , after receipt of a Confirm TLV from the peer . 	210	0
4793	Authentication Data	Authentication Data 	400	0
4793	Pepper Identifier	In an EAP-Request , the truncated MAC MAY optionally be followed by an encrypted pepper and its identifier . This initial , 4-octet field identifies a pepper generated by the server . 	231	0
4793	M	M 	240	0
4793	R	Reserved for future use . This bit SHALL be set to zero ( 0 ) for this version . Recipients SHALL ignore this bit for this version of EAP-POTP . 	500	0
4793	TLV Type	TLV Type 	231	0
4793	Length	Length 	100	0
4793	M	M 	240	0
4793	R	Reserved for future use . This bit SHALL be set to zero ( 0 ) for this version . Recipients SHALL ignore this bit for this version of EAP-POTP . 	500	0
4793	TLV Type	TLV Type 	231	0
4793	Length	Length 	100	0
4793	Reserved	Reserved for future use . This octet SHALL be set to zero ( 0 ) for this version . Recipients SHALL ignore this octet for this version of EAP-POTP . 	500	0
4793	Session Identifier	Session Identifier 	202	0
4793	Authentication Data	Upon receipt of the Server-Info TLV , and if the N bit is not set , the peer searches for any stored sessions associated with the server identified by the Server Name field . If a stored session is found , the peer generates a random , 16-octet nonce , " c_nonce ", and calculates : 	400	0
4793	M	M 	240	0
4793	R	Reserved for future use . This bit SHALL be set to zero ( 0 ) for this version . Recipients SHALL ignore this bit for this version of EAP-POTP . 	500	0
4793	TLV Type	TLV Type 	231	0
4793	Length	Length 	100	0
4793	M	M 	240	0
4793	R	Reserved for future use . This bit SHALL be set to zero ( 0 ) for this version . Recipients SHALL ignore this bit for this version of EAP-POTP . 	500	0
4793	TLV Type	TLV Type 	231	0
4793	Length	Length 	100	0
4793	M	M 	240	0
4793	R	Reserved for future use . This bit SHALL be set to zero ( 0 ) for this version . Recipients SHALL ignore this bit for this version of EAP-POTP . 	500	0
4793	TLV Type	TLV Type 	231	0
4793	Length	Length 	100	0
4793	M	M 	240	0
4793	R	Reserved for future use . This bit SHALL be set to zero ( 0 ) for this version . Recipients SHALL ignore this bit for this version of EAP-POTP . 	500	0
4793	TLV Type	TLV Type 	231	0
4793	Length	Length 	100	0
4793	M	M 	240	0
4793	R	Reserved for future use . This bit SHALL be set to zero ( 0 ) for this version . Recipients SHALL ignore this bit for this version of EAP-POTP . 	500	0
4793	TLV Type	TLV Type 	231	0
4793	Length	Length 	100	0
4793	M	M 	240	0
4793	R	Reserved for future use . This bit SHALL be set to zero ( 0 ) for this version . Recipients SHALL ignore this bit for this version of EAP - POTP . 	500	0
4793	TLV Type	TLV Type 	231	0
4793	Length	Length 	100	0
4793	M	M 	240	0
4793	R	Reserved for future use . This bit SHALL be set to zero ( 0 ) for this version . Recipients SHALL ignore this bit for this version of EAP-POTP . 	500	0
4793	TLV Type	TLV Type 	231	0
4793	Length	Length 	100	0
4793	M	M 	240	0
4793	R	Reserved for future use . This bit SHALL be set to zero ( 0 ) for this version . Recipients SHALL ignore this bit for this version of EAP-POTP . 	500	0
4793	TLV Type	TLV Type 	231	0
4793	Length	>= 4 ( at least one class of algorithms and one algorithm for that class needs to be present ) 	302	0
4793	Reserved	Reserved for future use . This octet MUST be set to zero for this version . Recipients SHALL ignore this octet for this version of EAP-POTP . 	500	0
4793	MAC Alg . Length	MAC Alg . Length 	100	0
4793	C	This document is subject to the rights , licenses and restrictions contained in BCP 78 , and except as set forth therein , the authors retain all their rights . 	303	0
4813	Checksum	The Checksum field contains the standard IP checksum of the entire contents of the LLS block . 	301	0
4813	LLS TLVs	The contents of the LLS data block is constructed using TLVs . See Figure 4 for the TLV format . 	400	0
4813	2	LLS Type Name Reference 0 Reserved 1 Extended Options [ RFC4813 ] 2 Cryptographic Authentication [ RFC4813 ] 3-32767 Reserved for assignment by the IANA 32768-65535 Private Use 	240	0
4818	Type	Type 	240	0
4818	Length	The length of the entire attribute , in bytes . At least 4 ( to hold Type/Length/Reserved/Prefix-Length for a 0-bit prefix ), and no larger than 20 ( to hold Type/Length/ Reserved/Prefix - Length for a 128-bit prefix ) 	100	0
4818	Reserved	Reserved 	500	0
4818	Prefix-Length	The length of the prefix being delegated , in bits . At least 0 and no larger than 128 bits ( identifying a single IPv6 address ) 	100	0
4820	Flags	Flags : 1 byte ( unsigned integer ) This value SHOULD be set to zero on transmit and MUST be ignored on receipt . 	500	0
4820	Length	Length : 2 bytes ( unsigned integer ) This value holds the length of the Padding Data plus 4 . 	100	0
4820	Padding Data	Padding Data : n bytes ( unsigned integer ) This holds the Padding Data . The Padding Data MUST be ignored by the receiver . 	400	0
4820	Parameter Length	Parameter Length : 2 bytes ( unsigned integer ) This value holds the length of the Padding Data plus 4 . 	100	0
4842	N	N and P bits : These bits are used to explicitly relay negative and positive pointer adjustments events across the PSN . The use of N and P bits is OPTIONAL . If not used , N and P bits MUST be set to 0 . See Section 9 for details . 	210	0
4842	Sequence Number	Sequence Number [ 0:15 ]: The packet sequence number MUST continuously cycle from 0 to 0xFFFF . It is generated and processed in accordance with the rules established in [ RTP ]. 	200	0
4842	V	P : Padding . No padding is required . The P bit MUST be set to 0 by sender and ignored by receiver . 	500	0
4842	P	P : Padding . No padding is required . The P bit MUST be set to 0 by sender and ignored by receiver . 	500	0
4842	X	X : Header extension . No extensions are defined . The X bit MUST be set to 0 by sender and ignored by receiver . 	500	0
4842	CC	CC : CSRC count . The CC field MUST be set to 0 by sender and ignored by receiver . 	500	0
4842	M	M : Marker . The M bit MUST be set to 0 by sender and ignored by receiver . 	500	0
4842	PT	PT [ 0:6 ]: Payload type . A PT value SHOULD be allocated from the range of dynamic values for each direction of the PW . The same PT value MAY be reused both for direction and between different CEP PWs . 	231	0
4842	Sequence Number	Sequence Number [ 0:15 ]: The packet sequence number MUST continuously cycle from 0 to 0xFFFF . It is generated and processed in accordance with the rules established in [ RTP ]. The CEP receiver MUST sequence packets according to the Sequence Number field of the CEP header and MAY verify correct sequencing using RTP Sequence Number field . 	200	0
4842	Timestamp	Timestamp [ 0:31 ]: Timestamp values are used in accordance with the rules established in [ RTP ]. Frequency of the clock used for generating timestamps MUST be 19.44 MHz based on a local reference . 	121	0
4842	T	T : TUG-3 carried bit . If set to 1 , the VC-3 payload is carried within the TUG-3 container . If set to 0 , all the TUG-3 columns are not carried within the fractional VC-4 encapsulation . The TUG-3 columns are removed either because the VC-3 is unequipped or in AIS mode . 	210	0
4842	A	A : VC-3 AIS bit . The A bit MUST be set to 0 when the T bit is 1 ( i.e ., when the TUG-3 columns are carried within the fractional VC-4 encapsulation ). The A bit indicate the reason for removal of the entire TUG-3 columns . If set to 0 , the TUG-3 columns were removed because the VC-3 is unequipped . If set to 1 , the TUG-3 columns were removed because the VC-3 is in AIS mode . 	210	0
4842	T	T3 : When set , indicates that the PE sending the label-mapping request is configured to send Fractional SPE packets with T3 bandwidth reduction . 	302	0
4849	Type	Type 	240	0
4849	Length	Length 	100	0
4851	Code	Code 	231	0
4851	Identifier	The Identifier field is one octet and aids in matching responses with requests . The Identifier field MUST be changed on each Request packet . The Identifier field in the Response packet MUST match the Identifier field from the corresponding request . 	301	0
4851	Length	The Length field is two octets and indicates the length of the EAP packet including the Code , Identifier , Length , Type , Flags , Ver , Message Length , and Data fields . Octets outside the range of the Length field should be treated as Data Link Layer padding and should be ignored on reception . 	100	0
4851	Type	Type 	240	0
4851	Flags	L Length included; set to indicate the presence of the four - octet Message Length field 	100	0
4851	M	M More fragments; set on all but the last fragment 	110	0
4851	R	R Reserved ( must be zero ) 	500	0
4851	Ver	This field contains the version of the protocol . This document describes version 1 ( 001 in binary ) of EAP-FAST . 	220	0
4851	Message Length	The Message Length field is four octets , and is present only if the L bit is set . This field provides the total length of the message that may be fragmented over the data fields of multiple packets . 	100	0
4851	Type	Type 	240	0
4851	Length	The Length filed is two octets , which contains the length of the ID field in octets . 	100	0
4851	ID	Hint of the identity of the server . It should be unique across the deployment . 	230	0
4851	M	M 	240	0
4851	R	R 	302	0
4851	Reserved	Reserved , set to zero ( 0 ) 	500	0
4851	TLV Type	TLV Type 	231	0
4851	Length	Length 	100	0
4851	M	M 	240	0
4851	M	Mandatory , set to one ( 1 ) 	302	0
4851	R	R 	302	0
4851	Reserved	Reserved , set to zero ( 0 ) 	500	0
4851	TLV Type	TLV Type 	231	0
4851	Length	Length 	100	0
4851	Status	Status 	240	0
4851	M	M 	240	0
4851	M	Mandatory , set to one ( 1 ) 	302	0
4851	R	R 	302	0
4851	Reserved	Reserved , set to zero ( 0 ) 	500	0
4851	TLV Type	TLV Type 	231	0
4851	Length	Length 	100	0
4851	Vendor-Id	The Vendor-Id field is four octets , and contains the Vendor-Id of the TLV that was not supported . The high-order octet is 0 and the low-order three octets are the Structure of Management Information ( SMI ) Network Management Private Enterprise Code of the Vendor in network byte order . The Vendor-Id field MUST be zero for TLVs that are not Vendor-Specific TLVs . 	301	0
4851	NAK-Type	The NAK-Type field is two octets . The field contains the Type of the TLV that was not supported . A TLV of this Type MUST have been included in the previous packet . 	400	0
4851	M	M 	240	0
4851	M	Mandatory , set to one ( 1 ) 	302	0
4851	R	R 	302	0
4851	Reserved	Reserved , set to zero ( 0 ) 	500	0
4851	TLV Type	TLV Type 	231	0
4851	Length	Length 	100	0
4851	Error-Code	The Error-Code field is four octets . Currently defined values for Error-Code include : 	231	0
4851	M	M 	240	0
4851	R	R 	302	0
4851	Reserved	Reserved , set to zero ( 0 ) 	500	0
4851	TLV Type	TLV Type 	231	0
4851	Length	Length 	100	0
4851	Vendor-Id	The Vendor-Id field is four octets , and contains the Vendor-Id of the TLV . The high-order octet is 0 and the low-order 3 octets are the SMI Network Management Private Enterprise Code of the Vendor in network byte order . 	301	0
4851	M	M 	240	0
4851	M	Mandatory , set to ( 1 ) 	302	0
4851	R	R 	302	0
4851	Reserved	Reserved , set to zero ( 0 ) 	500	0
4851	TLV Type	TLV Type 	231	0
4851	Length	Length 	100	0
4851	M	M 	240	0
4851	M	Mandatory , set to ( 1 ) 	302	0
4851	R	R 	302	0
4851	Reserved	Reserved , set to zero ( 0 ) 	500	0
4851	TLV Type	TLV Type 	231	0
4851	Length	Length 	100	0
4851	Status	Status 	302	0
4851	M	M 	240	0
4851	M	Mandatory , set to ( 1 ) 	302	0
4851	R	R 	302	0
4851	Reserved	Reserved , set to zero ( 0 ) 	500	0
4851	TLV Type	TLV Type 	231	0
4851	Length	Length 	100	0
4851	Reserved	Reserved 	500	0
4851	Reserved	Reserved , set to zero ( 0 ) 	500	0
4851	Version	The Version field is a single octet , which is set to the version of Crypto-Binding TLV the EAP method is using . For an implementation compliant with this version of EAP-FAST , the version number MUST be set to 1 . 	220	0
4851	Sub-Type	Sub-Type 	231	0
4851	Nonce	The Nonce field is 32 octets . It contains a 256-bit nonce that is temporally unique , used for compound MAC key derivation at each end . The nonce in a request MUST have its least significant bit set to 0 and the nonce in a response MUST have the same value as the request nonce except the least significant bit MUST be set to 1 . 	302	0
4851	Compound MAC	The Compound MAC field is 20 octets . This can be the Server MAC ( B1_MAC ) or the Client MAC ( B2_MAC ). The computation of the MAC is described in Section 5.3 . 	400	0
4851	M	M 	240	0
4851	M	Mandatory set to one ( 1 ) 	302	0
4851	R	R 	302	0
4851	Reserved	Reserved , set to zero ( 0 ) 	500	0
4851	TLV Type	TLV Type 	231	0
4851	Length	Length 	100	0
4851	Action	Action 	302	0
4857	Type	Type 16 ( Mobility Agent Advertisement ) 	231	0
4857	I	I Regional Registration . This domain supports regional registration as specified in this document . 	231	0
4857	GFA IP Address	Type 46 ( GFA IP Address ) ( non-skippable ) 	231	0
4857	Replay Protection Style	When a MN uses Mobile IPv4 to register a care-of address with its HA , the style of replay protection used for the registration messages is assumed to be known by way of a mobility security association that is required to exist between the MN and the HA receiving the request . No such pre-existing security association between the MN and the GFA is likely to be available . By default , the MN SHOULD treat replay protection for Regional Registration messages exactly as specified in Mobile IPv4 [ RFC3344 ] for timestamp-based replay protection . 	230	0
4857	Replay Protection Style	Type 141 ( Replay Protection Style ) ( skippable ) 	231	0
4857	Regional Registration Lifetime	Type 142 ( Regional Registration Lifetime ) ( skippable ) 	302	0
4861	MTU	variable MTU - a link that does not have a well-defined MTU ( e.g ., IEEE 802.5 token rings ). Many links ( e.g ., Ethernet ) have a standard MTU defined by the link - layer protocol or by the specific document describing how to run IP over the link layer . 	400	0
4861	MTU	variable MTU - Neighbor Discovery allows routers to specify an MTU for the link , which all nodes then use . All nodes on a link must use the same MTU ( or Maximum Receive Unit ) in order for multicast to work properly . Otherwise , when multicasting , a sender , which can not know which nodes will receive the packet , could not determine a minimum packet size that all receivers can process ( or Maximum Receive Unit ). 	400	0
4861	Type	Type 133 	240	0
4861	Code	Code 0 	302	0
4861	Checksum	Checksum The ICMP checksum . See [ ICMPv6 ]. 	301	0
4861	Type	Type 134 	240	0
4861	Code	Code 0 	302	0
4861	Checksum	Checksum The ICMP checksum . See [ ICMPv6 ]. 	301	0
4861	Cur Hop Limit	Cur Hop Limit 8-bit unsigned integer . The default value that should be placed in the Hop Count field of the IP header for outgoing IP packets . A value of zero means unspecified ( by this router ). 	231	0
4861	M	M 1-bit " Managed address configuration " flag . When set , it indicates that addresses are available via Dynamic Host Configuration Protocol [ DHCPv6 ]. 	231	0
4861	O	O 1-bit " Other configuration " flag . When set , it indicates that other configuration information is available via DHCPv6 . Examples of such information are DNS-related information or information on other servers within the network . 	231	0
4861	Reserved	Reserved A 6-bit unused field . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
4861	Retrans Timer	Retrans Timer 32-bit unsigned integer . The time , in milliseconds , between retransmitted Neighbor Solicitation messages . Used by address resolution and the Neighbor Unreachability Detection algorithm ( see Sections 7.2 and 7.3 ). A value of zero means unspecified ( by this router ). 	120	0
4861	MTU	MTU SHOULD be sent on links that have a variable MTU ( as specified in the document that describes how to run IP over the particular link type ). MAY be sent on other links . 	301	0
4861	Type	Type 135 	220	0
4861	Code	Code 0 	302	0
4861	Checksum	Checksum The ICMP checksum . See [ ICMPv6 ]. 	301	0
4861	Reserved	Reserved This field is unused . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
4861	Type	Type 136 	220	0
4861	Code	Code 0 	302	0
4861	Checksum	Checksum The ICMP checksum . See [ ICMPv6 ]. 	301	0
4861	R	R Router flag . When set , the R-bit indicates that the sender is a router . The R-bit is used by Neighbor Unreachability Detection to detect a router that changes to a host . 	210	0
4861	S	S Solicited flag . When set , the S-bit indicates that the advertisement was sent in response to a Neighbor Solicitation from the Destination address . The S-bit is used as a reachability confirmation for Neighbor Unreachability Detection . It MUST NOT be set in multicast advertisements or in unsolicited unicast advertisements . 	210	0
4861	O	O Override flag . When set , the O-bit indicates that the advertisement should override an existing cache entry and update the cached link-layer address . When it is not set the advertisement will not update a cached link-layer address though it will update an existing Neighbor Cache entry for which no link-layer address is known . It SHOULD NOT be set in solicited advertisements for anycast addresses and in solicited proxy advertisements . It SHOULD be set in other solicited advertisements and in unsolicited advertisements . 	210	0
4861	Reserved	Reserved 29-bit unused field . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
4861	Type	Type 137 	220	0
4861	Code	Code 0 	302	0
4861	Checksum	Checksum The ICMP checksum . See [ ICMPv6 ]. 	301	0
4861	Reserved	Reserved This field is unused . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
4861	Type	Type 8-bit identifier of the type of option . The options defined in this document are : 	231	0
4861	Length	Length 8-bit unsigned integer . The length of the option ( including the type and length fields ) in units of 8 octets . The value 0 is invalid . Nodes MUST silently discard an ND packet that contains an option with length zero . 	100	0
4861	Length	Length The length of the option ( including the type and length fields ) in units of 8 octets . For example , the length for IEEE 802 addresses is 1 [ IPv6-ETHER ]. 	100	0
4861	Type	Type 3 	240	0
4861	Length	Length 4 	100	0
4861	Prefix Length	Prefix Length 8-bit unsigned integer . The number of leading bits in the Prefix that are valid . The value ranges from 0 to 128 . The prefix length field provides necessary information for on-link determination ( when combined with the L flag in the prefix information option ). It also assists with address autoconfiguration as specified in [ ADDRCONF ], for which there may be more restrictions on the prefix length . 	100	0
4861	L	L 1-bit on-link flag . When set , indicates that this prefix can be used for on-link determination . When not set the advertisement makes no statement about on-link or off-link properties of the prefix . In other words , if the L flag is not set a host MUST NOT conclude that an address derived from the prefix is off-link . That is , it MUST NOT update a previous indication that the address is on-link . 	210	0
4861	A	A 1-bit autonomous address-configuration flag . When set indicates that this prefix can be used for stateless address configuration as specified in [ ADDRCONF ]. 	231	0
4861	Reserved	Reserved1 6-bit unused field . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
4861	Reserved	Reserved2 This field is unused . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
4861	Prefix	Prefix An IP address or a prefix of an IP address . The Prefix Length field contains the number of valid leading bits in the prefix . The bits in the prefix after the prefix length are reserved and MUST be initialized to zero by the sender and ignored by the receiver . A router SHOULD NOT send a prefix option for the link-local prefix and a host SHOULD ignore such a prefix option . 	230	0
4861	Type	Type 4 	240	0
4861	Length	Length The length of the option in units of 8 octets . 	100	0
4861	Reserved	Reserved These fields are unused . They MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
4861	MTU	4.6.4 . MTU 	240	0
4861	Type	Type 5 	240	0
4861	Length	Length 1 	100	0
4861	Reserved	Reserved This field is unused . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
4861	MTU	MTU 32-bit unsigned integer . The recommended MTU for the link . 	100	0
4866	Option Type	8-bit identifier of the type of this mobility option . Its value is 12 . 	231	0
4866	Option Length	8-bit unsigned integer representing the length of the CGA Parameters field in octets . 	100	0
4866	CGA Parameters	This field contains up to 255 bytes of the CGA Parameters data structure defined in [ 2 ]. The concatenation of all CGA Parameters options in the order they appear in the Binding Update message MUST result in the original CGA Parameters data structure . All CGA Parameters options in the Binding Update message except the last one MUST contain exactly 255 bytes in the CGA Parameters field , and the Option Length field MUST be set to 255 accordingly . All CGA Parameters options MUST appear directly one after another , that is , a mobility option of a different type MUST NOT be placed in between two CGA Parameters options . 	400	0
4866	Option Type	8-bit identifier of the type of this mobility option . Its value is 13 . 	231	0
4866	Option Length	8-bit unsigned integer representing the length of the Signature field in octets . 	100	0
4866	Signature	This field contains the mobile or correspondent node's signature , generated with the mobile or correspondent node's private key as specified in Section 4.5 . 	400	0
4866	Option Type	8-bit identifier of the type of this mobility option . Its value is 14 . 	231	0
4866	Option Length	8-bit unsigned integer representing the length of the Permanent Home Keygen Token field in octets . 	100	0
4866	Permanent Home Keygen Token	This field contains the permanent home keygen token generated by the correspondent node . The content of this field MUST be encrypted with the mobile node's public key as defined in Section 4.7 . The length of the permanent home keygen token is 8 octets before encryption , though the ciphertext [ 4 ] and , hence , the Permanent Home Keygen Token field may be longer . 	100	0
4866	Option Type	8-bit identifier of the type of this mobility option . Its value is 15 . 	231	0
4866	Option Length	Option Length 	100	0
4866	Option Type	8-bit identifier of the type of this mobility option . Its value is 16 . 	231	0
4866	Option Length	This field MUST be set to 8 . It represents the length of the Care-of Keygen Token field in octets . 	100	0
4866	Care-of Keygen Token	This field contains the care-of keygen token generated by the correspondent node , as specified in Section 4.3 . 	400	0
4866	Option Type	8-bit identifier of the type of this mobility option . Its value is 11 . 	231	0
4866	Option Length	Option Length 	100	0
4867	CMR	CMR ( 4 bits ): Indicates a codec mode request sent to the speech encoder at the site of the receiver of this payload . The value of the CMR field is set to the frame type index of the corresponding speech mode being requested . The frame type index may be 0-7 for AMR , as defined in Table 1a in [ 2 ], or 0-8 for AMR-WB , as defined in Table 1a in [ 4 ]. CMR value 15 indicates that no mode request is present , and other values are for future use . 	231	0
4867	F	F ( 1 bit ): If set to 1 , indicates that this frame is followed by another speech frame in this payload; if set to 0 , indicates that this frame is the last frame in this payload . 	210	0
4867	FT	FT ( 4 bits ): Frame type index , indicating either the AMR or AMR-WB speech coding mode or comfort noise ( SID ) mode of the corresponding frame carried in this payload . 	231	0
4867	Q	Q ( 1 bit ): Frame quality indicator . If set to 0 , indicates the corresponding frame is severely damaged , and the receiver should set the RX_TYPE ( see [ 6 ]) to either SPEECH_BAD or SID_BAD depending on the frame type ( FT ). 	210	0
4867	CMR	R : is a reserved bit that MUST be set to zero . All R bits MUST be ignored by the receiver . 	500	0
4867	R	R : is a reserved bit that MUST be set to zero . All R bits MUST be ignored by the receiver . 	500	0
4867	ILL	ILL ( 4 bits , unsigned integer ): This is an OPTIONAL field that is present only if interleaving is signalled out-of-band for the session . ILL=L indicates to the receiver that the interleaving length is L+1 , in number of frame-blocks . 	301	0
4867	ILP	ILP ( 4 bits , unsigned integer ): This is an OPTIONAL field that is present only if interleaving is signalled . ILP MUST take a value between 0 and ILL , inclusive , indicating the interleaving index for frame-blocks in this payload in the interleaving group . If the value of ILP is found greater than ILL , the payload SHOULD be discarded . 	210	0
4867	F	F ( 1 bit ): see definition in Section 4.3.2 . 	210	0
4867	FT	FT ( 4 bits , unsigned integer ): see definition in Section 4.3.2 . 	231	0
4867	Q	P bits : padding bits , MUST be set to zero , and MUST be ignored on reception . 	500	0
4867	Reserved bits	Reserved bits : MUST be set to 0 when written , and a reader MUST ignore them . 	500	0
4867	CHAN	CHAN ( 4 bits , unsigned integer ): Indicates the number of audio channels contained in this storage file . The valid values and the order of the channels within a frame-block are specified in Section 4.1 in [ 12 ]. 	200	0
4872	C	Copyright ( C ) The IETF Trust ( 2007 ). 	302	0
4872	L	When set , forces the recovery LSP to be temporarily unavailable to transport traffic ( either normal or extra traffic ). 	302	0
4872	S	When set to 1 , this bit indicates that the requested LSP is a secondary LSP . When set to 0 ( default ), it indicates that the requested LSP is a primary LSP . 	210	0
4872	P	When set to 1 , this bit indicates that the requested LSP is a protecting LSP . When set to 0 ( default ), it indicates that the requested LSP is a working LSP . The combination , S set to 1 with P set to 0 is not valid . 	210	0
4872	N	When set to 1 , this bit indicates that the control plane message exchange is only used for notification during protection switching . When set to 0 ( default ), it indicates that the control plane message exchanges are used for protection-switching purposes . The N bit is only applicable when the LSP Protection Type Flag is set to either 0x04 ( 1:N Protection with Extra-Traffic ), or 0x08 ( 1+1 Unidirectional Protection ), or 0x10 ( 1+1 Bidirectional Protection ). The N bit MUST be set to 0 in any other case . 	210	0
4872	O	When set to 1 , this bit indicates that the protecting LSP is carrying the normal traffic after protection switching . The O bit is only applicable when the P bit is set to 1 , and the LSP Protection Type Flag is set to either 0x04 ( 1:N Protection with Extra-Traffic ), or 0x08 ( 1+1 Unidirectional Protection ) or 0x10 ( 1+1 Bidirectional Protection ). The O bit MUST be set to 0 in any other case . 	210	0
4872	Reserved	This field is reserved . It MUST be set to zero on transmission and MUST be ignored on receipt . These bits SHOULD be passed through unmodified by transit nodes . 	500	0
4872	Reserved	This field is reserved . It MUST be set to zero on transmission and MUST be ignored on receipt . These bits SHOULD be passed through unmodified by transit nodes . 	500	0
4872	Link Flags	Link Flags : 6 bits 	231	0
4872	Association Type	Indicates the type of association being identified . Note that this value is considered when determining association . The following are values defined in this document . 	231	0
4872	Association ID	A value assigned by the LSP head-end . When combined with the Association Type and Association Source , this value uniquely identifies an association . 	231	0
4872	Association Type	The following values defined for the Association Type ( 16 bits ) field of the ASSOCIATION object . 	231	0
4872	C	This document is subject to the rights , licenses and restrictions contained in BCP 78 , and except as set forth therein , the authors retain all their rights . 	303	0
4873	Type	Type 	240	0
4873	Length	Length 	100	0
4873	Reserved	This field is reserved . It MUST be set to zero on transmission and MUST be ignored on receipt . 	500	0
4873	C-Type	C-Type 	231	0
4873	R	When set ( 1 ) indicates that failure to establish the indicated protection should result in a failure of the LSP being protected . 	302	0
4873	Seg.Flags	This field is used to indicate when an upstream node desires LSP Segment recovery to be dynamically initiated where possible . The values used in this field are identical to the values defined for LSP Flags; see [ RFC4872 ]. 	201	0
4874	Attribute	Interface attribute values 0 indicates that the interface or set of interfaces associated with the IPv4 prefix should be excluded or avoided . 	302	0
4874	Attribute	Interface attribute value 0 indicates that the interface or set of interfaces associated with the IPv6 prefix should be excluded or avoided . 	302	0
4874	Attribute	Interface attribute value 0 indicates that the Interface ID specified should be excluded or avoided . 	210	0
4881	H	This is a new Mobile IPv4 message carried on UDP ( destination port 434 ) [ 1 ]. The UDP header is followed by the fields below . 	400	0
4881	Type	Type 16 ( Handoff Request ) 	231	0
4881	H	H Source-triggered handoff request . When set and the N bit is unset , indicates that the request was the result of an L2-ST at oFA . 	210	0
4881	N	N Target triggered handoff request . When set and the H bit is unset , indicates that the request was the result of an L2-TT at nFA . 	210	0
4881	R	R Set if the request is an HRqst(r ) ( i.e ., a request to renew the tunnel , H and N bits must be unset ). 	210	0
4881	M	M The FA issuing the HRqst will use Minimal Encapsulation as defined in [ 1,5 ] for the tunnel . 	400	0
4881	G	G The FA issuing the HRqst will use Generic Routing Encapsulation ( GRE ) [ 4 ] as defined in [ 1,5 ] for the tunnel . Extensions of HRqst containing GRE type and key Fields are outside the scope of this document . 	400	0
4881	T	T For an HRqst(s ), indicates that the oFA is willing to support both forward and reverse tunnel service . For an HRqst(t ), indicates that the nFA is requesting reverse tunnel service . 	210	0
4881	B	B When sent in an HRqst(s ), indicates that the MN has requested a reverse tunnel to the HA and that the nFA SHOULD use a reverse tunnel to the HA if it will not be reverse tunneling to the oFA . 	210	0
4881	Lifetime	Lifetime The lifetime of the tunnel in seconds . If this is an HRqst(t ), then the lifetime represents a request by nFA for a reverse tunnel . If this is an HRqst(s ), then the lifetime represents the maximum amount of time that oFA is willing to maintain both forward and reverse tunnels . If this is an HRqst(r ), then the lifetime represents a request for the amount of time to renew the tunnel's lifetime . A value of 0 on an HRqst(s ) indicates that the oFA is unwilling to grant tunnel service . A value of 0 on an HRqst(t ) indicates that the nFA does not require reverse tunnel service . A value of 0 on an HRqst(r ) indicates that the tunnel should be terminated . A value of 0xffff indicates infinity . 	120	0
4881	MN Home Address	MN Home Address For HRqst(s ), the home address of the MN . 	230	0
4881	Identification	Identification As defined in [ 1 ]. 	400	0
4881	H	This is a new Mobile IPv4 message carried on UDP ( destination port 434 ) [ 1 ]. The UDP header is followed by the fields below . 	400	0
4881	Type	Type 17 ( Handoff Reply ) 	231	0
4881	Code	Code A value indicating the result of the Handoff Request . Only two codes are currently supported , 0 , indicating success , and 1 , indicating that the handoff cannot be performed . The remaining values are for future use . 	210	0
4881	Lifetime	Lifetime The lifetime , in seconds , for which the bidirectional tunnel for the MN will be maintained . If this is an HRply(s ), then the lifetime represents a request by nFA , and it can be any value up to the maximum value sent in the HRqst(s ). Larger values are assumed to default to oFA's maximum . If this is an HRply(t ), then the lifetime represents the maximum amount of time that the oFA will grant to the nFA . If this is an HRply(r ), then the lifetime represents the amount of time by which the tunnel life will be extended . If the Code field indicates that handoff failed , the Lifetime field will be ignored and SHOULD be set to zero . A value of 0 on an HRply(t ) indicates that the oFA is unwilling to grant service . A value of 0 on an HRply(s ) indicates that the nFA does not 	120	0
4881	H	H Source-triggered handoff reply . When set and the N bit is unset , indicates that the reply is in response to an HRqst(s ). 	210	0
4881	N	N Target-triggered handoff reply . When set and the H bit is unset , indicates that the reply is in response to an HRqst(t ). 	210	0
4881	R	R Set if the reply is an HRply(r ). Neither the H nor the N bit are set . 	210	0
4881	M	M The FA issuing the HRqst will use Minimal Encapsulation as defined in [ 1,5 ] for the tunnel . 	400	0
4881	G	G The FA issuing the HRqst will use GRE [ 4 ] Encapsulation as defined in [ 1,5 ] for the tunnel . When this flag bit is set , the HRply may require extensions containing the GRE type and key fields , but they are outside the scope of this document . 	210	0
4881	T	T For an HRply(s ), indicates that the nFA is requesting to reverse tunnel service . For an HRply(t ), indicates that the oFA is willing to provide both forward and reverse tunnel service . 	210	0
4881	B	B When sent in an HRply(t ), indicates that the MN has requested a reverse tunnel to the HA and that the nFA SHOULD use a reverse tunnel to the HA if it will not be reverse tunneling to the oFA . It can be set in HRply(t ) only if the T bit was unset in the corresponding HRqst(t ). 	210	0
4881	MN Home Address	MN Home Address For HRply(t ), the home IPv4 address of the MN . 	230	0
4881	Identification	Identification As defined in [ 1 ]. 	400	0
4881	H	The Handoff to Third message has the same format as the Handoff Request and Handoff Reply messages , except both the H and N bits are set . If the HTT message is in response to an L2-ST and is sent to initiate a handoff , then , with the exception of the H and N bits , the message has the same fields set and includes the same extensions as an HRqst(s ). If the HTT message is sent in response to an HRqst(t ), then , with the exception of the H and N bits , the message has the same fields set and includes the same extensions as an HRply(t ). The tunnel bits MUST NOT be set in the HTT message because BET construction is not negotiated between oFA and nFA; it is negotiated between nFA and aFA in the ensuing HRqst(t)/HRply(t ). 	301	0
4881	H	In general and to a greater extent in wireless networks , packets carrying handoff signaling may be dropped or lost due to errors on the link . In this section , we consider mechanisms for recovery from handoff signaling failures . 	301	0
4881	1	2 ) Loss of the solicitation by an FA to obtain another neighboring FA's Advertisement or loss of the neighboring FA's advertisement . 	302	0
4881	3	Of these , case 3 ) is handled by standard Mobile IPv4 mechanisms described in [ 1 ]. Case 2 ) is expected to be a rare event because spontaneous packet drop rates on the fixed network are caused by congestion or router failure . Since bit error rates on wireless links are higher than on fixed links , case 1 ) is more likely to occur . In the following subsections , cases 1 ) and 2 ) are considered . 	302	0
4881	Type	138 ( skippable ) [ 1 ] - when used in Registration Requests 140 ( skippable ) [ 1 ] - when used in Agent Advertisements 	210	0
4881	Length	Length 	100	0
4881	Sub-Type	Sub-Type 	231	0
4881	Type	Type 	240	0
4881	Length	Length 	100	0
4881	Sub-Type	Sub-Type 	231	0
4881	Type	Type 	240	0
4881	Length	Length 	100	0
4881	Sub-Type	Sub-Type 	231	0
4881	Type	Type 	240	0
4881	Length	Length 	100	0
4881	Sub-Type	Sub-Type 	231	0
4881	Type	Type 	240	0
4881	Length	Length 	100	0
4881	Sub-Type	Sub-Type 	231	0
4881	Type	Type 	240	0
4881	Length	Length 	100	0
4881	Sub-Type	Sub-Type 	231	0
4881	Type	Type 	240	0
4881	Length	Length 	100	0
4881	Sub-Type	Sub-Type 	231	0
4881	Type	Type 	240	0
4881	Length	Length 	100	0
4881	Sub-Type	Sub-Type 	231	0
4881	Code	Sections 4.5 and 4.6 define two new Mobile IPv4 message types : Handoff Request and Handoff Reply . These require two type numbers to be assigned by IANA from the Mobile IPv4 Control message type address space . The Handoff Reply message also introduces its own Code field that requires IANA to manage a new Code address space . This specification makes use of the Code values 0-1 , where 0 identifies a successful handoff and 1 defines a generic handoff failure . All other values are available for assignment via IETF consensus [ 14 ]. 	231	0
4884	Version	Version : 4 bits 	220	0
4884	Checksum	The one's complement of the one's complement sum of the data structure , with the checksum field replaced by zero for the purpose of computing the checksum . An all-zero value means that no checksum was transmitted . See Section 5.2 for a description of how this field is used . 	301	0
4884	Length	Length of the object , measured in octets , including the object header and object payload . 	100	0
4895	Parameter Length	Parameter Length : 2 bytes ( unsigned integer ) This value is the length of the Random Number in bytes plus 4 . 	100	0
4895	Padding	Padding : 0 , 1 , 2 , or 3 bytes ( unsigned integer ) If the length of the Random Number is not a multiple of 4 bytes , the sender MUST pad the parameter with all zero bytes to make the parameter 32-bit aligned . The Padding MUST NOT be longer than 3 bytes and it MUST be ignored by the receiver . 	302	0
4895	Parameter Length	Parameter Length : 2 bytes ( unsigned integer ) This value is the number of listed Chunk Types plus 4 . 	100	0
4895	Chunk Type n	Chunk Type n : 1 byte ( unsigned integer ) Each Chunk Type listed is required to be authenticated when sent by the peer . 	301	0
4895	Padding	Padding : 0 , 1 , 2 , or 3 bytes ( unsigned integer ) If the number of Chunk Types is not a multiple of 4 , the sender MUST pad the parameter with all zero bytes to make the parameter 32-bit aligned . The Padding MUST NOT be longer than 3 bytes and it MUST be ignored by the receiver . 	302	0
4895	Parameter Length	Parameter Length : 2 bytes ( unsigned integer ) This value is the number of HMAC Identifiers multiplied by 2 , plus 4 . 	100	0
4895	HMAC Identifier n	HMAC Identifier n : 2 bytes ( unsigned integer ) The values expressed are a list of HMAC Identifiers that may be used by the peer . The values are listed by preference , with respect to the sender , where the first HMAC Identifier listed is the one most preferable to the sender . 	231	0
4895	Padding	Padding : 0 or 2 bytes ( unsigned integer ) If the number of HMAC Identifiers is not even , the sender MUST pad the parameter with all zero bytes to make the parameter 32-bit aligned . The Padding MUST be 0 or 2 bytes long and it MUST be ignored by the receiver . 	302	0
4895	HMAC Identifier	HMAC Identifier : 2 bytes ( unsigned integer ) This value is the HMAC Identifier which is not supported . 	231	0
4895	Padding	Padding : 2 bytes ( unsigned integer ) The sender MUST pad the error cause with all zero bytes to make the cause 32-bit aligned . The Padding MUST be 2 bytes long and it MUST be ignored by the receiver . 	302	0
4895	Flags	Flags : 1 byte ( unsigned integer ) SHOULD be set to zero on transmit and MUST be ignored on receipt . 	500	0
4895	Length	Length : 2 bytes ( unsigned integer ) This value holds the length of the HMAC in bytes plus 8 . 	100	0
4895	Shared Key Identifier	Shared Key Identifier : 2 bytes ( unsigned integer ) This value describes which endpoint pair shared key is used . 	231	0
4895	HMAC Identifier	HMAC Identifier : 2 bytes ( unsigned integer ) This value describes which message digest is being used . Table 2 shows the currently defined values . 	231	0
4895	Padding	Padding : 0 , 1 , 2 , or 3 bytes ( unsigned integer ) If the length of the HMAC is not a multiple of 4 bytes , the sender MUST pad the chunk with all zero bytes to make the chunk 32-bit aligned . The Padding MUST NOT be longer than 3 bytes and it MUST be ignored by the receiver . 	302	0
4905	C	Copyright ( C ) The IETF Trust ( 2007 ). 	302	0
4905	B	The ingress router , R1 , SHOULD copy the BECN field from the incoming Frame Relay header into this field . The egress router , R2 , MUST generate a new BECN field based on the value of the B bit . 	400	0
4905	F	The ingress router , R1 , SHOULD copy the FECN field from the incoming Frame Relay header into this field . The egress router , R2 , MUST generate a new FECN field based on the value of the F bit . 	400	0
4905	D	The ingress router , R1 , SHOULD copy the DE field from the incoming Frame Relay header into this field . The egress router , R2 , MUST generate a new DE field based on the value of the D bit . 	400	0
4905	C	The ingress router , R1 , SHOULD copy the C/R bit from the received Frame Relay PDU to the C bit of the control word . The egress router , R2 , MUST copy the C bit into the output frame . 	210	0
4905	T	Bit ( T ) of the control word indicates whether the packet contains an ATM cell or an AAL5 CPCS-SDU . If set , the packet contains an ATM cell , encapsulated according to the ATM cell mode section below; otherwise , it contains an AAL5 CPCS-SDU . The ability to transport an ATM cell in the AAL5 mode is intended to provide a means of enabling Operations and Management ( OAM ) functionality over the AAL5 VC . 	210	0
4905	E	The ingress router , R1 , SHOULD set this bit to 1 if the EFCI bit of the final cell of those that transported the AAL5 CPCS-SDU is set to 1 , or if the EFCI bit of the single ATM cell to be transported in the packet is set to 1 . Otherwise , this bit SHOULD be set to 0 . The egress router , R2 , SHOULD set the EFCI bit of all cells that transport the AAL5 CPCS-SDU to the value contained in this field . 	210	0
4905	L	The ingress router , R1 , SHOULD set this bit to 1 if the CLP bit of any of the ATM cells that transported the AAL5 CPCS-SDU is set to 1 , or if the CLP bit of the single ATM cell to be transported in the packet is set to 1 . Otherwise , this bit SHOULD be set to 0 . The egress router , R2 , SHOULD set the CLP bit of all cells that transport the AAL5 CPCS-SDU to the value contained in this field . 	210	0
4905	C	When FRF.8.1 Frame Relay / ATM PVC Service Interworking [ FRF.8.1 ] traffic is being transported , the CPCS-UU Least Significant Bit ( LSB ) of the AAL5 CPCS-SDU may contain the Frame Relay C/R bit . The ingress router , R1 , SHOULD copy this bit to the C bit of the control word . The egress router , R2 , SHOULD copy the C bit to the CPCS-UU Least Significant Bit ( LSB ) of the AAL5 CPCS PDU . 	400	0
4905	VPI	The ingress router MUST copy the VPI field from the incoming cell into this field . For particular emulated VCs , the egress router MAY generate a new VPI and ignore the VPI contained in this field . 	400	0
4905	VCI	The ingress router MUST copy the VCI field from the incoming ATM cell header into this field . For particular emulated VCs , the egress router MAY generate a new VCI . 	400	0
4905	PTI	The PTI and CLP fields are the PTI and CLP fields of the incoming ATM cells . The cell headers of the cells within the packet are the ATM headers ( without HEC ) of the incoming cell . 	400	0
4905	C	This document is subject to the rights , licenses and restrictions contained in BCP 78 , and except as set forth therein , the authors retain all their rights . 	303	0
4906	C	Copyright ( C ) The IETF Trust ( 2007 ). 	302	0
4906	VC Type	0x0001 Frame Relay DLCI 0x0002 ATM AAL5 VCC transport 0x0003 ATM transparent cell transport 0x0004 Ethernet VLAN 0x0005 Ethernet 0x0006 HDLC 0x0007 PPP 0x8008 CEM [ CEM ] 0x0009 ATM VCC cell transport 0x000A ATM VPC cell transport 	240	0
4906	C	The highest order bit ( C ) of the VC type is used to flag the presence of a control word ( defined in [ RFC4905 ]) as follows : 	231	0
4906	C	This document is subject to the rights , licenses and restrictions contained in BCP 78 , and except as set forth therein , the authors retain all their rights . 	303	0
4907	Application Layer	The transport layer provides indications to the application layer by propagating Internet layer indications ( such as IP address configuration and changes ), as well as providing its own indications , such as connection teardown . 	231	0
4907	Link Layer	The characteristics of wireless links have been found to vary considerably depending on the environment . 	231	0
4907	Application Layer	In " Application-oriented Link Adaptation for IEEE 802.11 " [ Haratcherev2 ], rate information generated by a link layer utilizing improved rate adaptation algorithms is provided to a video application , and used for codec adaptation . Coupling the link and application layers results in major improvements in the Peak Signal to Noise Ratio ( PSNR ). Since this approach assumes that the link represents the path bottleneck bandwidth , it is not universally applicable to use over the Internet . 	400	0
4920	Router ID	The TE Router ID ( TLV type 8 ) or the Router ID ( TLV type 21 ) used to identify the node within the IGP . 	231	0
4920	OSPF Area Identifier	The 4-octet area identifier for the node . This identifies the area where the failure has occurred . 	230	0
4920	Length	Length of the actual ( non-padded ) IS-IS Area Identifier in octets . Valid values are from 2 to 11 inclusive . 	100	0
4920	IS-IS Area Identifier	The variable-length IS-IS area identifier . Padded with trailing zeroes to a four-octet boundary . 	231	0
4920	Autonomous System Number	The AS Number of the associated Autonomous System . Note that if 16-bit AS numbers are in use , the low order bits ( 16 through 31 ) should be used and the high order bits ( 0 through 15 ) should be set to zero . 	302	0
4934	Total Length	Total Length ( 32 bits ): The total length of the EPP data unit measured in octets in network ( big endian ) byte order . The octets contained in this field MUST be included in the total length calculation . 	100	0
4934	EPP XML Instance	EPP XML Instance ( variable length ): The EPP XML instance carried in the data unit . 	400	0
4944	Dispatch	Dispatch 6-bit selector . Identifies the type of header immediately following the Dispatch Header . 	231	0
4944	type-specific header	type-specific header A header determined by the Dispatch Header . 	400	0
4944	V	V : This 1-bit field SHALL be zero if the Originator ( or " Very first ") Address is an IEEE extended 64-bit address ( EUI-64 ), or 1 if it is a short 16-bit addresses . 	210	0
4944	F	F : This 1-bit field SHALL be zero if the Final Destination Address is an IEEE extended 64-bit address ( EUI-64 ), or 1 if it is a short 16-bit addresses . 	210	0
4944	datagram_size	datagram_size : This 11-bit field encodes the size of the entire IP packet before link-layer fragmentation ( but after IP layer fragmentation ). The value of datagram_size SHALL be the same for all link-layer fragments of an IP packet . For IPv6 , this SHALL be 40 octets ( the size of the uncompressed IPv6 header ) more than the value of Payload Length in the IPv6 header [ RFC2460 ] of the packet . Note that this packet may already be fragmented by hosts involved in the communication , i.e ., this field needs to encode a maximum length of 1280 octets ( the IEEE 802.15.4 link MTU , as defined in this document ). 	100	0
4944	datagram_tag	datagram_tag : The value of datagram_tag ( datagram tag ) SHALL be the same for all link fragments of a payload ( e.g ., IPv6 ) datagram . The sender SHALL increment datagram_tag for successive , fragmented datagrams . The incremented value of datagram_tag SHALL wrap from 65535 back to zero . This field is 16 bits long , and its initial value is not defined . 	231	0
4944	datagram_offset	datagram_offset : This field is present only in the second and subsequent link fragments and SHALL specify the offset , in increments of 8 octets , of the fragment from the beginning of the payload datagram . The first octet of the datagram ( e.g ., the start of the IPv6 header ) has an offset of zero; the implicit value of datagram_offset in the first link fragment is zero . This field is 8 bits long . 	110	0
4944	Length	Length : This is the length of this option ( including the type and length fields ) in units of 8 octets . The value of this field is 2 if using EUI-64 addresses , or 1 if using 16-bit short addresses . 	100	0
4944	Length	Length ( bit 2 ): 	100	0
4944	Sequence Number	Sequence Number : This 8-bit field SHALL be incremented by the originator whenever it sends a new mesh broadcast or multicast packet . Full specification of how to handle this field is out of the scope of this document . 	200	0
4951	C	Copyright ( C ) The IETF Trust ( 2007 ). 	302	0
4951	C	This document is subject to the rights , licenses and restrictions contained in BCP 78 , and except as set forth therein , the authors retain all their rights . 	303	0
4960	TSN	o Transmission Sequence Number ( TSN ): A 32-bit sequence number used internally by SCTP . One TSN is attached to each chunk containing user data to permit the receiving SCTP endpoint to acknowledge its receipt and detect duplicate deliveries . 	200	0
4960	Verification Tag	o Verification Tag : A 32-bit unsigned integer that is randomly generated . The Verification Tag provides a key that allows a receiver to verify that the SCTP packet belongs to the current association and is not an old or stale packet from a previous association . 	400	0
4960	TSN	TSN - Transmission Sequence Number 	200	0
4960	Source Port Number	This is the SCTP sender's port number . It can be used by the receiver in combination with the source IP address , the SCTP destination port , and possibly the destination IP address to identify the association to which this packet belongs . The port number 0 MUST NOT be used . 	231	0
4960	Destination Port Number	This is the SCTP port number to which this packet is destined . The receiving host will use this port number to de-multiplex the SCTP packet to the correct receiving endpoint/application . The port number 0 MUST NOT be used . 	231	0
4960	Verification Tag	The receiver of this packet uses the Verification Tag to validate the sender of this SCTP packet . On transmit , the value of this Verification Tag MUST be set to the value of the Initiate Tag received from the peer endpoint during the association initialization , with the following exceptions : 	231	0
4960	Checksum	This field contains the checksum of this SCTP packet . Its calculation is discussed in Section 6.8 . SCTP uses the CRC32c algorithm as described in Appendix B for calculating the checksum . 	301	0
4960	Chunk Type	This field identifies the type of information contained in the Chunk Value field . It takes a value from 0 to 254 . The value of 255 is reserved for future use as an extension field . 	231	0
4960	Chunk Flags	The usage of these bits depends on the Chunk type as given by the Chunk Type field . Unless otherwise specified , they are set to 0 on transmit and are ignored on receipt . 	500	0
4960	Chunk Length	This value represents the size of the chunk in bytes , including the Chunk Type , Chunk Flags , Chunk Length , and Chunk Value fields . Therefore , if the Chunk Value field is zero-length , the Length field will be set to 4 . The Chunk Length field does not count any chunk padding . 	100	0
4960	Chunk Value	The Chunk Value field contains the actual information to be transferred in the chunk . The usage and format of this field is dependent on the Chunk Type . 	400	0
4960	Reserved	Reserved : 5 bits 	500	0
4960	Length	This field indicates the length of the DATA chunk in bytes from the beginning of the type field to the end of the User Data field excluding any padding . A DATA chunk with one byte of user data will have Length set to 17 ( indicating 17 bytes ). 	100	0
4960	TSN	This value represents the TSN for this DATA chunk . The valid range of TSN is from 0 to 4294967295 ( 2**32 - 1 ). TSN wraps back to 0 after reaching 4294967295 . 	110	0
4960	Stream Identifier S	Stream Identifier S : 16 bits ( unsigned integer ) 	231	0
4960	Stream Sequence Number n	This value represents the Stream Sequence Number of the following user data within the stream S . Valid range is 0 to 65535 . 	200	0
4960	Payload Protocol Identifier	This value represents an application ( or upper layer ) specified protocol identifier . This value is passed to SCTP by its upper layer and sent to its peer . This identifier is not used by SCTP but can be used by certain network entities , as well as by the peer application , to identify the type of information being carried in this DATA chunk . This field must be sent even in fragmented DATA chunks ( to make sure it is available for agents in the middle of the network ). Note that this field is NOT touched by an SCTP implementation; therefore , its byte order is NOT necessarily big endian . The upper layer is responsible for any byte order conversions to this field . 	230	0
4960	Initiate Tag	The receiver of the INIT ( the responding end ) records the value of the Initiate Tag parameter . This value MUST be placed into the Verification Tag field of every SCTP packet that the receiver of the INIT transmits within this association . 	230	0
4960	Advertised Receiver Window Credit	Advertised Receiver Window Credit ( a_rwnd ): 32 bits ( unsigned integer ) 	231	0
4960	Number of Outbound Streams	Defines the number of outbound streams the sender of this INIT chunk wishes to create in this association . The value of 0 MUST NOT be used . 	303	0
4960	Number of Inbound Streams	Defines the maximum number of streams the sender of this INIT chunk allows the peer end to create in this association . The value 0 MUST NOT be used . 	200	0
4960	Initial TSN	Defines the initial TSN that the sender will use . The valid range is from 0 to 4294967295 . This field MAY be set to the value of the Initiate Tag field . 	400	0
4960	IPv4 Address	Contains an IPv4 address of the sending endpoint . It is binary encoded . 	230	0
4960	IPv6 Address	Contains an IPv6 [ RFC2460 ] address of the sending endpoint . It is binary encoded . 	230	0
4960	Host Name	This field contains a host name in " host name syntax " per RFC 1123 Section 2.1 [ RFC1123 ]. The method for resolving the host name is out of scope of SCTP . 	231	0
4960	Initiate Tag	The receiver of the INIT ACK records the value of the Initiate Tag parameter . This value MUST be placed into the Verification Tag field of every SCTP packet that the INIT ACK receiver transmits within this association . 	230	0
4960	Advertised Receiver Window Credit	Advertised Receiver Window Credit ( a_rwnd ): 32 bits ( unsigned integer ) 	231	0
4960	Number of Outbound Streams	Defines the number of outbound streams the sender of this INIT ACK chunk wishes to create in this association . The value of 0 MUST 	303	0
4960	Number of Inbound Streams	Defines the maximum number of streams the sender of this INIT ACK chunk allows the peer end to create in this association . The value 0 MUST NOT be used . 	200	0
4960	Initial TSN	Defines the initial TSN that the INIT ACK sender will use . The valid range is from 0 to 4294967295 . This field MAY be set to the value of the Initiate Tag field . 	400	0
4960	Parameter Length	Parameter Length : Variable size , depending on size of Cookie . 	100	0
4960	Parameter Length	Parameter Length : Variable size . 	100	0
4960	Chunk Flags	Chunk Flags : 8 bits 	231	0
4960	Cumulative TSN Ack	This parameter contains the TSN of the last DATA chunk received in sequence before a gap . In the case where no DATA chunk has been received , this value is set to the peer's Initial TSN minus one . 	400	0
4960	Advertised Receiver Window Credit	Advertised Receiver Window Credit ( a_rwnd ): 32 bits ( unsigned integer ) 	231	0
4960	Chunk Flags	Chunk Flags : 8 bits 	231	0
4960	Heartbeat Length	Set to the size of the chunk in bytes , including the chunk header and the Heartbeat Information field . 	100	0
4960	Chunk Flags	Chunk Flags : 8 bits 	231	0
4960	Heartbeat Ack Length	Set to the size of the chunk in bytes , including the chunk header and the Heartbeat Information field . 	100	0
4960	Chunk Flags	Chunk Flags : 8 bits 	231	0
4960	Reserved	Reserved : 7 bits 	500	0
4960	Length	Set to the size of the chunk in bytes , including the chunk header and all the Error Cause fields present . 	100	0
4960	Chunk Flags	Chunk Flags : 8 bits 	231	0
4960	Length	Length : 16 bits ( unsigned integer ) 	100	0
4960	Cumulative TSN Ack	This parameter contains the TSN of the last chunk received in sequence before any gaps . 	201	0
4960	Chunk Flags	Chunk Flags : 8 bits 	231	0
4960	Chunk Flags	Chunk Flags : 8 bits 	231	0
4960	Length	Set to the size of the chunk in bytes , including the chunk header and all the Error Cause fields present . 	100	0
4960	Cause Code	Cause Code : 16 bits ( unsigned integer ) 	231	0
4960	Cause Length	Set to the size of the parameter in bytes , including the Cause Code , Cause Length , and Cause-Specific Information fields . 	100	0
4960	Stream Identifier	Stream Identifier : 16 bits ( unsigned integer ) 	231	0
4960	Reserved	This field is reserved . It is set to all 0's on transmit and ignored on receipt . 	500	0
4960	Unresolvable Address	Unresolvable Address : Indicates that the sender is not able to resolve the specified address parameter ( e.g ., type of address is not supported by the sender ). This is usually sent in combination with or within an ABORT . 	230	0
4960	Unresolvable Address	Unresolvable Address : Indicates that the sender is not able to resolve the specified address parameter ( e.g ., type of address is not supported by the sender ). This is usually sent in combination with or within an ABORT . 	230	0
4960	Unresolvable Address	The Unresolvable Address field contains the complete Type , Length , and Value of the address parameter ( or Host Name parameter ) that contains the unresolvable address or host name . 	230	0
4960	Unrecognized Chunk	The Unrecognized Chunk field contains the unrecognized chunk from the SCTP packet complete with Chunk Type , Chunk Flags , and Chunk Length . 	100	0
4960	Unrecognized Parameters	Unrecognized Parameters : This error cause is returned to the originator of the INIT ACK chunk if the receiver does not recognize one or more Optional TLV parameters in the INIT ACK chunk . 	231	0
4960	Unrecognized Parameters	Unrecognized Parameters : This error cause is returned to the originator of the INIT ACK chunk if the receiver does not recognize one or more Optional TLV parameters in the INIT ACK chunk . 	231	0
4960	Unrecognized Parameters	The Unrecognized Parameters field contains the unrecognized parameters copied from the INIT ACK chunk complete with TLV . This error cause is normally contained in an ERROR chunk bundled with the COOKIE ECHO chunk when responding to the INIT ACK , when the sender of the COOKIE ECHO chunk wishes to report unrecognized parameters . 	400	0
4960	TSN value	The TSN value field contains the TSN of the DATA chunk received with no user data field . 	400	0
4960	Chunk Flags	Chunk Flags : 8 bit 	231	0
4960	Length	Set to the size of the chunk in bytes , including the 4 bytes of the chunk header and the size of the cookie . 	100	0
4960	Cookie	This field must contain the exact cookie received in the State Cookie parameter from the previous INIT ACK . 	400	0
4960	Chunk Flags	Chunk Flags : 8 bits 	231	0
4960	Chunk Flags	Chunk Flags : 8 bits 	231	0
4960	Reserved	Reserved : 7 bits 	500	0
4960	B	B ) " Z " shall respond immediately with an INIT ACK chunk . The destination IP address of the INIT ACK MUST be set to the source IP address of the INIT to which this INIT ACK is responding . In the response , besides filling in other parameters , " Z " must set the Verification Tag field to Tag_A , and also provide its own Verification Tag ( Tag_Z ) in the Initiate Tag field . 	210	0
4960	B	C ) An old State Cookie is received from someone that the receiver is not interested in having an association with and the ABORT chunk was lost . 	500	0
4960	Stream Identifier	Every DATA chunk MUST carry a valid stream identifier . If an endpoint receives a DATA chunk with an invalid stream identifier , it shall acknowledge the reception of the DATA chunk following the normal procedure , immediately send an ERROR chunk with cause set to " Invalid Stream Identifier " ( see Section 3.3.10 ), and discard the DATA chunk . The endpoint may bundle the ERROR chunk in the same packet as the SACK as long as the ERROR follows the SACK . 	303	0
4960	B	C ) Re-enable heartbeat on a specific destination transport address of a given association , and 	400	0
4960	Verification Tag	The Verification Tag rules defined in this section apply when sending or receiving SCTP packets that do not contain an INIT , SHUTDOWN COMPLETE , COOKIE ECHO ( see Section 5.1 ), ABORT , or SHUTDOWN ACK chunk . The rules for sending and receiving SCTP packets containing one of these chunk types are discussed separately in Section 8.5.1 . 	400	0
4960	B	- The endpoint MUST always fill in the Verification Tag field of the outbound packet with the destination endpoint's tag value , if it is known . 	230	0
4960	E	- If the receiver is in COOKIE-ECHOED or COOKIE-WAIT state the procedures in Section 8.4 SHOULD be followed; in other words , it should be treated as an Out Of The Blue packet . 	302	0
4960	B	Format : ASSOCIATE(local SCTP instance name , destination transport addr , outbound stream count ) -> association id [, destination transport addr list ] [, outbound stream count ] 	231	0
4960	Upper Layer Abort Reason	o Upper Layer Abort Reason - reason of the abort to be passed to the peer . 	400	0
4960	E	Format : SEND(association id , buffer address , byte count [, context ] [, stream id ] [, life time ] [, destination transport address ] [, unordered flag ] [, no-bundle flag ] [, payload protocol-id ] ) -> result 	301	0
4960	B	If a message cannot be delivered , SCTP shall invoke this notification on the ULP . 	500	0
4960	E	When SCTP loses communication to an endpoint completely ( e.g ., via Heartbeats ) or detects that the endpoint has performed an abort operation , it shall invoke this notification on the ULP . 	303	0
4960	Upper Layer Abort Reason	o Upper Layer Abort Reason - the abort reason specified in case of a user-initiated abort . 	400	0
4970	Type	Type A 16-bit field set to 1 . 	302	0
4970	Length	Length A 16-bit field that indicates the length of the value portion in octets and will be a multiple of 4 octets dependent on the number of capabilities advertised . Initially , the length will be 4 , denoting 4 octets of informational capability bits . 	100	0
4973	LSP	LSP stands for " Label-Switched Path ". An LSP is a TE circuit path in a packet network . The terms " LSP " and " TE circuit path " are used synonymously in the context of packet networks . 	231	0
4973	TE	A TE node is a node in the traffic engineering ( TE ) network . A TE node has a minimum of one TE link attached to it . Associated with each TE node is a set of supported TE metrics . A TE node may also participate in a native IP network . 	230	0
4973	Router-TE TLVs	o Router-TE TLVs ( Router TLVs ) 	231	0
4973	Link-TE TLVs	o Link-TE TLVs ( Link TLVs ) 	231	0
4973	0x81	The TE-router LSA ( 0x81 ) is modeled after the router LSA and has the same flooding scope as the router LSA . However , the scope is restricted to only the OSPF-xTE nodes within the area . The TE router LSA describes the TE metrics of the router as well as the TE links attached to the router . Below is the format of the TE-router LSA . Unless specified explicitly otherwise , the fields carry the same meaning as they do in a router LSA . Only the differences are explained below . Router-TE flags , Router-TE TLVs , Link-TE options , and Link-TE TLVs are each described in the following sub-sections . 	400	0
4973	Router-TE TLVs	8.1.2 . Router-TE TLVs 	240	0
4973	Link-TE TLVs	8.1.4 . Link-TE TLVs 	240	0
4973	B	Bandwidth is expressed in units of 32 bytes/sec ( 256 bits/sec ). A 32-bit field for bandwidth would permit specification not exceeding 1 terabit/sec . 	400	0
4973	B	Bandwidth is expressed in units of 32 bytes/sec ( 256 bits/sec ). A 32-bit field for bandwidth would permit specification not exceeding 1 terabit/sec . 	400	0
4973	B	Bandwidth is expressed in units of 32 bytes/sec ( 256 bits/sec ). A 32-bit field for bandwidth would permit specification not exceeding 1 terabit/sec . 	400	0
4973	0x8d	A significant difference between a native OSPF network and a TE network is that the latter may be subject to frequent real-time circuit pinning and is likely to undergo TE-state updates . Some links might undergo changes more frequently than others . Flooding the network with TE-router LSAs at the aggregated speed of all link metric changes is simply not desirable . A smaller in size TE - incremental-link-update LSA is designed to advertise only the incremental link updates . 	303	0
4973	Link State ID	This would be exactly the same as would have been specified for Link ID , for a link within the router LSA . 	400	0
4973	Link Data	This specifies the router ID the link belongs to . In majority of cases , this would be same as the advertising router . This choice for Link Data is primarily to facilitate proxy advertisement for incremental link updates . 	230	0
4973	Link State ID	The ID of the far-end router or the far-end link-ID to which the TE circuit path(s ) is being advertised . 	230	0
4973	CktType	CktType - This 4-bit field specifies the circuit type of the Forward Equivalency Class ( FEC ). 	231	0
4973	No . of TE Circuit Paths	This specifies the number of pre-engineered TE circuit paths between the advertising router and the router specified in the Link State ID . 	230	0
4973	Circuit-TE ID	This is the ID of the far-end router for a given TE circuit path segment . 	230	0
4973	Circuit-TE Data	This is the virtual link identifier on the near-end router for a given TE circuit path segment . This can be a private interface or handle the near-end router uses to identify the virtual link . 	230	0
4973	Circuit-TE flags	This lists the zero or more TE-link TLVs that all member elements of the LSP meet . 	400	0
4973	0x83	A TE-Summary network LSA may be used to advertise reachability of TE-networks accessible to areas external to the originating area . The content and the flooding scope of a TE-Summary LSA is different from that of a native Summary LSA . 	231	0
4973	0x84	A TE-Summary router LSA may be used to advertise the availability of area border routers ( ABRs ) and AS border routers ( ASBRs ) that are TE-capable . The TE-Summary router LSAs are originated by the Area Border Routers . The scope of flooding for the TE-Summary router LSA is the non-backbone area the advertising ABR belongs to . 	400	0
4973	Link State ID	The ID of the area border router or the AS border router whose TE capability is being advertised . 	230	0
4973	Advertising Router	The ABR that advertises its TE capabilities ( and the OSPF areas it belongs to ) or the TE capabilities of an ASBR within one of the areas for which the ABR is a border router . 	231	0
4973	No . of Areas	No . of Areas 	400	0
4973	Area-ID	Specifies the OSPF area(s ) the link state ID belongs to . When the link state ID is same as the advertising router ID , the Area-ID lists all the areas the ABR belongs to . In the case the link state ID is an ASBR , the Area-ID simply lists the area the ASBR belongs to . The advertising router is assumed to be the ABR from the same area the ASBR is located in . 	231	0
4973	Router-TE flags	Router-TE flags , Router-TE TLVs 	231	0
4973	Router-TE TLVs	Router-TE flags , Router-TE TLVs 	231	0
4973	0x85	TE-AS-external LSAs are the Type 0x85 LSAs . This is modeled after AS-external LSA format and flooding scope . TE-AS-external LSAs are originated by AS boundary routers with TE extensions , and describe the TE networks and pre-engineered circuit paths external to the AS . As with AS-external LSA , the flooding scope of the TE-AS-external LSA is AS-wide , with the exception of stub areas . 	400	0
4973	Network Mask	The IP address mask for the advertised TE destination . For example , this can be used to specify access to a specific TE node or TE link with an mask of 0xffffffff . This can also be used to specify access to an aggregated set of destinations using a different mask . ex : 0xff000000 . 	230	0
4973	Link-TE flags	The TE attributes of this route . These fields are optional and are provided only when one or more pre-engineered circuits can be specified with the advertisement . Without these fields , the LSA will simply state TE reachability info . 	400	0
4973	Link-TE TLVs	The TE attributes of this route . These fields are optional and are provided only when one or more pre-engineered circuits can be specified with the advertisement . Without these fields , the LSA will simply state TE reachability info . 	400	0
4973	Forwarding address	Data traffic for the advertised destination will be forwarded to this address . If the Forwarding address is set to 0.0.0.0 , data traffic will be forwarded instead to the LSA's originator ( i.e ., the responsible AS boundary router ). 	230	0
4973	External Route Tag	A 32-bit field attached to each external route . This is not used by the OSPF protocol itself . It may be used to communicate information between AS boundary routers; the precise nature of such information is outside the scope of this specification . 	400	0
4973	0x81	The following fields are used to describe each router link ( i.e ., interface ). Each router link is typed ( see the below Type field ). The Type field indicates the kind of link being described . 	240	0
4973	Type	A new link type " Positional-Ring Type " ( value 5 ) is defined . This is essentially a connection to a TDM-Ring . TDM ring network is different from LAN/NBMA transit network in that nodes on the TDM ring do not necessarily have a terminating path between themselves . Second , the order of links is important in determining the circuit path . Third , the protection switching and the number of fibers from a node going into a ring are determined by the ring characteristics , for example , 2-fiber vs . 4-fiber ring and Unidirectional Path Switched Ring ( UPSR ) vs . Bidirectional Line Switched Ring ( BLSR ). 	231	0
4973	Type	Type Description __________________________________________________ 1 Point-to-point connection to another router 2 Connection to a transit network 3 Connection to a stub network 4 Virtual link 5 Positional-Ring type . 	240	0
4973	Link ID	Identifies the object that this router link connects to . Value depends on the link's Type . For a positional-ring type , the Link ID shall be IP Network/Subnet number just as the case with a broadcast transit network . The following table summarizes the updated Link ID values . 	231	0
4973	Type	Type Link ID ______________________________________ 1 Neighboring router's Router ID 2 IP address of Designated Router 3 IP network/subnet number 4 Neighboring router's Router ID 5 IP network/subnet number 	240	0
4973	Link Data	This depends on the link's Type field . For type-5 links , this specifies the router interface's IP address . 	230	0
4973	TDM	TDM , LSC , FSC bits - Same as defined for router TE options . 	231	0
4973	LSC	TDM , LSC , FSC bits - Same as defined for router TE options . 	400	0
4973	0x82	Network LSA is adequate for packet TE networks . A new TE - positional-ring-network LSA is defined to represent type-5 link networks , found in non-packet networks such as SONET/SDH TDM rings . A type-5 ring is a collection of network elements ( NEs ) forming a closed loop . Each NE is connected to two adjacent NEs via a duplex connection to provide redundancy in the ring . The sequence in which the NEs are placed on the Ring is pertinent . The NE that provides the OSPF-xTE functionality is termed the Gateway Network Element ( GNE ). The GNE selection criteria is outside the scope of this document . The GNE is also termed the Designated Router for the ring . 	400	0
4973	Link State ID	This is the IP interface address of the network's Gateway Network Element , which is also the designated router . 	230	0
4973	Advertising Router	Advertising Router 	230	0
4973	Capacity Unit	Capacity Unit 	400	0
4973	Ring capacity	Ring capacity 	302	0
4973	Network Element Node Id	The Router ID of each of the routers in the positional-ring network . The list must start with the designated router as the first element . The Network Elements ( NEs ) must be listed in strict clockwise order as they appear on the ring , starting with the Gateway Network Element ( GNE ). The number of NEs in the ring can be deduced from the LSA header's length field . 	230	0
4973	0x8e	This is a variation to the TE-router LSA in that the TE-router LSA is not advertised by the network element , but rather by a trusted TE - router Proxy . This is typically the scenario in a non-packet TE network , where some of the nodes do not have OSPF functionality and count on a helper node to do the advertisement for them . One such example would be the SONET/SDH Add-Drop Multiplexer ( ADM ) nodes in a TDM ring . The nodes may principally depend upon the GNE ( Gateway Network Element ) to do the advertisement for them . TE-router-Proxy LSA shall not be used to advertise area border routers and/or AS border routers . 	301	0
4973	Type	The OSPF interface type can also be of type " Positional-Ring ". The Positional-Ring type is different from other types ( such as broadcast and NBMA ) in that the exact location of the nodes on the ring is relevant , even though they are all on the same ring . SONET ADM ring is a good example of this . Complete ring positional-ring description may be provided by the GNE on a ring as a TE-network LSA for the ring . 	231	0
4974	C	Copyright ( C ) The IETF Trust ( 2007 ). 	302	0
4974	IPv4	Class = SESSION , Class-Num = 1 , C-Type = 7(IPv4)/8(IPv6 ) 	240	0
4974	Call_ID	A 16-bit identifier used in the SESSION object that remains constant over the life of the Call . The Call_ID value MUST be set to zero when there is no corresponding Call . 	230	0
4974	Tunnel ID	Tunnel ID : 16 bits ( see [ RFC3209 ]) 	231	0
4974	Extended Tunnel ID	Extended Tunnel ID : 32 bits/128 bits ( see [ RFC3209 ]) 	231	0
4974	R	Reflect ( R ): 1 bit - see [ RFC3471 ] Testing ( T ): 1 bit - see [ RFC3471 ] Administratively down ( A ): 1 bit - see [ RFC3471 ] Deletion in progress ( D ): 1 bit - see [ RFC3471 ] Call Management ( C ): 1 bit 	210	0
4974	R	R - to cause the egress to respond C - to indicate that the Notify message is managing a Call . 	210	0
4974	C	This document is subject to the rights , licenses and restrictions contained in BCP 78 , and except as set forth therein , the authors retain all their rights . 	303	0
4988	Type	Flags : See [ rfc3344 ]. The ' S ' and ' B ' flags in [ rfc3344 ] are sent as zero , and ignored on reception . 	500	0
4988	reserved	Lifetime : The number of seconds remaining before the binding expires . This value MUST NOT exceed 10 seconds . 	120	0
4988	Lifetime	Lifetime : The number of seconds remaining before the binding expires . This value MUST NOT exceed 10 seconds . 	120	0
4988	Home Address	Home Address : MUST be either the co-located CoA or the Home Address itself ( in FA-CoA mode ) 	230	0
4988	Home Agent	Care-of Address : The New Access Router's global IP address . Even when a New CoA is provided to the MN ( see Section 5.4 ), NAR's IP address MUST be used for this field . 	230	0
4988	Identification	Identification : a 64-bit number used for matching an FBU with FBack . Identical to usage in [ rfc3344 ] 	231	0
4988	Type	Type : 21 	220	0
4988	Code	0 : FBU Accepted 1 : FBU Accepted , NCoA supplied 128 : FBU Not Accepted , reason unspecified 129 : Administratively prohibited 130 : Insufficient resources 	240	0
4988	reserved	Lifetime : The granted number of seconds remaining before binding expires . 	120	0
4988	Lifetime	Lifetime : The granted number of seconds remaining before binding expires . 	120	0
4988	Home Address	Home Address : either the co-located CoA or the Home Address itself ( in FA-Coa mode ) 	230	0
4988	Home Agent	Identification : a 64-bit number used for matching FBU . Copied from the field in FBU for which this FBack is a reply . 	231	0
4988	Identification	Identification : a 64-bit number used for matching FBU . Copied from the field in FBU for which this FBack is a reply . 	231	0
4988	Code	Checksum : The 16-bit one's complement of the one's complement sum of the ICMP message , starting with the ICMP Type . For computing the checksum , the Checksum and the Reserved fields are set to 0 . See [ rfc1256 ]. 	302	0
4988	Checksum	Checksum : The 16-bit one's complement of the one's complement sum of the ICMP message , starting with the ICMP Type . For computing the checksum , the Checksum and the Reserved fields are set to 0 . See [ rfc1256 ]. 	301	0
4988	Subtype	Reserved : MUST be set to zero by the sender and ignored by the receiver . 	500	0
4988	Reserved	Reserved : MUST be set to zero by the sender and ignored by the receiver . 	500	0
4988	Identifier	Identifier : MUST be set by the sender so that replies can be matched to this Solicitation . 	301	0
4988	Checksum	Checksum : The 16-bit one's complement of the one's complement sum of the ICMP message , starting with the ICMP Type . For computing the checksum , the Checksum and the Reserved fields are set to 0 . See [ rfc1256 ]. 	301	0
4988	Subtype	Reserved : MUST be set to zero by the sender and ignored by the receiver . 	500	0
4988	Reserved	Reserved : MUST be set to zero by the sender and ignored by the receiver . 	500	0
4988	Identifier	Identifier : Copied from Router Solicitation for Proxy Advertisement or set to Zero if unsolicited . 	301	0
4988	Checksum	Checksum : The 16-bit one's complement of the one's complement sum of the ICMP message , starting with the ICMP Type . For computing the checksum , the Checksum and the Reserved fields are set to 0 . See [ rfc1256 ]. 	301	0
4988	Subtype	S : Assigned address configuration flag . When set , this message requests a new CoA to be returned by the destination . May be set when Code = 0 . MUST be 0 when Code = 1 . 	210	0
4988	S	S : Assigned address configuration flag . When set , this message requests a new CoA to be returned by the destination . May be set when Code = 0 . MUST be 0 when Code = 1 . 	210	0
4988	U	U : Buffer flag . When set , the destination SHOULD buffer any packets towards the node indicated in the options of this message . Used when Code = 0 , SHOULD be set to 0 when Code = 1 . 	210	0
4988	Reserved	Reserved : MUST be set to zero by the sender and ignored by the receiver . 	500	0
4988	Identifier	Identifier : MUST be set by the sender so replies can be matched to this message . 	301	0
4988	Checksum	Checksum : The 16-bit one's complement of the one's complement sum of the ICMP message , starting with the ICMP Type . For computing the checksum , the Checksum and the Reserved fields are set to 0 . See [ rfc1256 ]. 	301	0
4988	Subtype	Reserved : MUST be set to zero by the sender and ignored by the receiver . 	500	0
4988	Reserved	Reserved : MUST be set to zero by the sender and ignored by the receiver . 	500	0
4988	Identifier	Identifier : Copied from the corresponding field in the Handover Initiate message this message is in response to . 	230	0
4988	Type	Type : 20 	240	0
4988	Length	Length : The length of the option ( including the Type , Length and Option-Code fields ) in units of 8 octets . 	100	0
4988	Type	Length : The length of the option ( including the Type , Length and Option-Code fields ) in units of 8 octets . 	100	0
4988	Length	Length : The length of the option ( including the Type , Length and Option-Code fields ) in units of 8 octets . 	100	0
4988	Reserved	Reserved : Set to zero . 	500	0
4988	New IPv4 Address	New IPv4 Address : NAR's IPv4 address or the NCoA assigned by NAR . 	230	0
4988	Type	Length : The length of the option ( including the Type , Length and Option-Code fields ) in units of 8 octets . 	100	0
4988	Length	Length : The length of the option ( including the Type , Length and Option-Code fields ) in units of 8 octets . 	100	0
4988	Reserved	Reserved : Set to zero . 	500	0
5003	AII Type	AII Type 1 has been allocated by IANA for use with provisioning models requiring a fixed-length 32-bit value [ L2VPN-SIG ]. This value is unique on the local PE . 	231	0
5003	AII Type	The AII Type 2 structure permits varying levels of AII summarization to take place , thus reducing the scaling burden on the aforementioned AII distribution mechanisms and PE memory . In other words , it no longer becomes necessary to distribute or configure all individual AII values ( which could number in the tens of thousands or more ) on local PEs prior to establishing PWs to remote PEs . The details of how and where the aggregation of AII values is performed and then distributed as AII reachability information are not discussed in this document . 	400	0
5006	Type	Type 8-bit identifier of the RDNSS option type as assigned by the IANA : 25 	231	0
5006	Length	Length 8-bit unsigned integer . The length of the option ( including the Type and Length fields ) is in units of 8 octets . The minimum value is 3 if one IPv6 address is contained in the option . Every additional RDNSS address increases the length by 2 . The Length field is used by the receiver to determine the number of IPv6 addresses in the option . 	100	0
5006	Lifetime	Lifetime 32-bit unsigned integer . The maximum time , in seconds ( relative to the time the packet is sent ), over which this RDNSS address MAY be used for name resolution . Hosts MAY send a Router Solicitation to ensure the RDNSS information is fresh before the interval expires . In order to provide fixed hosts with stable DNS service and allow mobile hosts to prefer local RDNSSes to remote RDNSSes , the value of Lifetime should be at least as long as the Maximum RA Interval ( MaxRtrAdvInterval ) in RFC 4861 , and be at most as long as two times MaxRtrAdvInterval; Lifetime SHOULD be bounded as follows : MaxRtrAdvInterval <= Lifetime <= 2*MaxRtrAdvInterval . A value of all one bits ( 0xffffffff ) represents infinity . A value of zero means that the RDNSS address MUST no longer be used . 	120	0
5007	link-address	link-address A global address that will be used by the server to identify the link to which the query applies , or 0::0 if unspecified . 	230	0
5007	query-type	query-type The query requested ( see below ). 	400	0
5007	link-address	link-address A global address used by the server to identify the link on which the client is located . 	230	0
5007	.	This document is subject to the rights , licenses and restrictions contained in BCP 78 , and except as set forth therein , the authors retain all their rights . 	303	0
5010	Code	Code The suboption code ( 10 ). 	231	0
5010	Length	Length The suboption length , 1 octet . 	100	0
5010	Flags	Flags The Relay Agent flags for this forwarded packet . 	231	0
5010	U	U : UNICAST flag 	302	0
5010	MBZ	MBZ : MUST BE ZERO ( reserved for future use ) 	500	0
5024	Version	Version 	220	0
5024	Flags	Flags 	302	0
5024	Length	Length 	100	0
5026	Option Type	Option Type 	220	0
5026	Option Length	8-bit unsigned integer indicating the length of the option excluding the type and length fields 	100	0
5026	Status	8-bit unsigned integer indicating the result of the dynamic DNS update procedure . This field MUST be set to 0 and ignored by the receiver when the DNS Update mobility option is included in a Binding Update message . When the DNS Update mobility option is included in the Binding Acknowledgement message , values of the Status field less than 128 indicate that the dynamic DNS update was performed successfully by the Home Agent . Values greater than or equal to 128 indicate that the dynamic DNS update was not completed by the HA . The following Status values are currently defined : 	302	0
5026	Reserved	Reserved 	500	0
5026	Reserved	Reserved ( 1 bit ) 	500	0
5026	Attribute Type	Attribute Type ( 15 bits ) 	231	0
5026	Length	Length in octets of Value field ( Home Prefix , Prefix Lifetime and Prefix Length ). This can be 0 or 21 . 	100	0
5026	Prefix Lifetime	Prefix Lifetime ( 4 octets ) 	100	0
5026	Home Prefix	The prefix of the home link through which the Mobile Node may auto-configure its Home Address . 	230	0
5026	Prefix Length	The length in bits of the home prefix specified in the field Home Prefix . 	100	0
5036	FEC TLV	Labels are bound to Forwarding Equivalence Classes ( FECs ). A FEC is a list of one or more FEC elements . The FEC TLV encodes FEC items . 	400	0
5036	Address List TLV	3.4.3 . Address List TLV 	240	0
5036	Address Family	Address Family Address Encoding 	202	0
5036	Status Code	Status Code 32-bit unsigned integer encoding the event being signaled . The structure of a Status Code is : 	231	0
5036	M	Mandatory Parameters Variable length set of required message parameters . Some messages have no required parameters . 	400	0
5036	PVLim	PVLim , Path Vector Limit The configured maximum Path Vector length . MUST be 0 if Loop Detection is disabled ( D = 0 ). If the Loop Detection procedures would require the LSR to send a Path Vector that exceeds this limit , the LSR will behave as if a loop had been detected for the FEC in question . 	400	0
5036	Value	Value Meaning 	240	0
5036	Value	Value Meaning 	240	0
5036	Len	Len DLCI Bits 	231	0
5036	Label TLV	Label TLV variable See below 	231	0
5036	Label TLV	Label TLV variable See below 	231	0
5036	Status Code	Status Code E Status Data Section Title 	231	0
5040	Invalidate STag	Invalidate STag - A mechanism used to prevent the Remote Peer from reusing a previous explicitly Advertised STag , until the Local Peer makes it available through a subsequent explicit Advertisement . The STag cannot be accessed remotely until it is explicitly Advertised again . 	303	0
5040	RDMAP	RDMA Protocol ( RDMAP ) - A wire protocol that supports RDMA Operations to transfer ULP data between a Local Peer and the Remote Peer . 	400	0
5040	Data Sink STag	* Data Sink STag 	302	0
5040	Data Sink Tagged Offset	* When the RDMA Write operation Completes , an indication of the Completion results . 	121	0
5040	Data Sink STag	* Data Sink STag 	301	0
5040	Data Sink Tagged Offset	* When the RDMA Read operation Completes , an indication of the Completion results . 	121	0
5040	Data Sink Tagged Offset	The Data Sink Tagged Offset specifies the starting offset , in octets , from the base of the Data Sink's Tagged Buffer , where the data is to be written by the Data Source . This field is copied from the RDMA Read Request into the corresponding RDMA Read Response and allows the Data Sink to place the returning data . The Data Sink Tagged Offset MAY start at an arbitrary offset . 	110	0
5040	Terminate Control	The Terminate Control field MUST have the format defined in Figure 8 below . 	302	0
5040	Layer	* Layer : 4 bits . 	400	0
5040	EType	Identifies the type of error that caused the Terminate . When the error is detected at the RDMAP layer , the RDMAP layer inserts the Error Type into this field . When the error is detected at an LLP layer , an LLP layer creates the Error Type 	231	0
5040	Error Code	This field identifies the specific error that caused the Terminate . When the error is detected at the RDMAP layer , the RDMAP layer creates the Error Code . When the error is detected at an LLP layer , the LLP layer creates the Error Code , the DDP layer passes it up to the RDMAP layer , and the RDMAP layer inserts it into this field . 	231	0
5040	HdrCt	* HdrCt : 3 bits . 	231	0
5040	Reserved	Reserved : 13 bits . This field MUST be set to zero on transmit , ignored on receive . 	500	0
5040	RDMAP	RDMAP provides several countermeasures for all types of attacks as introduced in [ RDMASEC ]. In the following , this specification lists all security requirements that MUST be implemented by the RNIC . A more detailed discussion of RNIC security requirements can be found in Section 5 of [ RDMASEC ]. 	400	0
5041	ULP	ULP - Upper Layer Protocol . The protocol layer above the protocol layer currently being referenced . The ULP for RDMA/DDP is expected to be an Operating System ( OS ), application , adaptation layer , or proprietary device . The RDMA/DDP documents do not 	231	0
5041	DDP Header	DDP Header - The header present in all DDP Segments . The DDP Header contains control and Placement fields that are used to define the final Placement location for the ULP Payload carried in a DDP Segment . 	400	0
5041	MO	Message Offset ( MO ) - For the DDP Untagged Buffer Model , specifies the offset , in octets , from the start of a DDP Message . 	110	0
5041	MSN	Message Sequence Number ( MSN ) - For the DDP Untagged Buffer Model , specifies a sequence number that is increasing with each DDP Message . 	200	0
5041	QN	Queue Number ( QN ) - For the DDP Untagged Buffer Model , identifies a destination Data Sink queue for a DDP Segment . 	231	0
5041	STag	Tagged Buffer - A buffer that is explicitly Advertised to the Remote Peer through exchange of an STag , Tagged Offset , and length . 	231	0
5041	TO	ULP Buffer - A buffer owned above the DDP layer and Advertised to the DDP layer either as a Tagged Buffer or an Untagged ULP Buffer . 	231	0
5041	T	Specifies the Tagged or Untagged Buffer Model . If set to one , the ULP Payload carried in this DDP Segment MUST be Placed into a Tagged Buffer . 	231	0
5041	L	Specifies whether the DDP Segment is the last segment of a DDP Message . It MUST be set to one on the last DDP Segment of every DDP Message . It MUST NOT be set to one on any other DDP Segment . 	210	0
5041	Rsvd	Reserved for future use by the DDP protocol . This field MUST be set to zero on transmit , and not checked on receive . 	500	0
5041	DV	The version of the DDP Protocol in use . This field MUST be set to one to indicate the version of the specification described in this document . The value of DV MUST be the same for all the DDP Segments transmitted or received on a DDP Stream . 	220	0
5041	RsvdULP	The RsvdULP field is opaque to the DDP protocol and can be structured in any way by the ULP . At the Data Source , DDP MUST set RsvdULP Field to the value specified by the ULP . It is transferred unmodified from the Data Source to the Data Sink . At the Data Sink , DDP MUST provide the RsvdULP field to the ULP when the DDP Message is delivered . Each DDP Segment within a specific DDP Message MUST contain the same value for this field . The Data Source MUST ensure that each DDP Segment within a specific DDP Message contains the same value for this field . 	400	0
5041	STag	The Steering Tag identifies the Data Sink's Tagged Buffer . The STag MUST be valid for this DDP Stream . The STag is associated with the DDP Stream through a mechanism that is outside the scope of the DDP Protocol specification . At the Data Source , DDP MUST set the STag field to the value specified by the ULP . At the Data Sink , the DDP MUST provide the STag field when the ULP Message is delivered . Each DDP Segment within a specific DDP Message MUST contain the same value for this field and MUST be the value supplied by the ULP . The Data Source MUST ensure that each DDP Segment within a specific DDP Message contains the same value for this field . 	231	0
5041	TO	The Tagged Offset specifies the offset , in octets , within the Data Sink's Tagged Buffer , where the Placement of ULP Payload contained in the DDP Segment starts . A DDP Message MAY start at an arbitrary TO within a Tagged Buffer . 	110	0
5041	RsvdULP	The RsvdULP field is opaque to the DDP protocol and can be structured in any way by the ULP . At the Data Source , DDP MUST set RsvdULP Field to the value specified by the ULP . It is transferred unmodified from the Data Source to the Data Sink . At the Data Sink , DDP MUST provide RsvdULP field to the ULP when the ULP Message is Delivered . Each DDP Segment within a specific DDP Message MUST contain the same value for the RsvdULP field . At the Data Sink , the DDP implementation is NOT REQUIRED to verify that the same value is present in the RsvdULP field of each DDP Segment within a specific DDP Message and MAY provide the value from any one of the received DDP Segment to the ULP when the ULP Message is Delivered . 	400	0
5041	QN	The Queue Number identifies the Data Sink's Untagged Buffer queue referenced by this header . Each DDP segment within a specific DDP message MUST contain the same value for this field and MUST be the value supplied by the ULP at the Data Source . The Data Source MUST ensure that each DDP Segment within a specific DDP Message contains the same value for this field . 	230	0
5041	MSN	The Message Sequence Number specifies a sequence number that MUST be increased by one ( modulo 2^32 ) with each DDP Message targeting the specific Queue Number on the DDP Stream associated with this DDP Segment . The initial value for MSN MUST be one . The MSN value MUST wrap to 0 after a value of 0xFFFFFFFF . Each DDP segment within a specific DDP message MUST contain the same value for this field . The Data Source MUST ensure that each DDP Segment within a specific DDP Message contains the same value for this field . 	200	0
5041	MO	The Message Offset specifies the offset , in octets , from the start of the DDP Message represented by the MSN and Queue Number on the DDP Stream associated with this DDP Segment . The MO referencing the first octet of the DDP Message MUST be set to zero by the DDP layer . 	110	0
5043	DDP Segment	DDP Segment - The smallest unit of data transfer for the DDP protocol . It includes a DDP Header and ULP Payload ( if present ). A DDP Segment should be sized to fit within the Lower Layer Protocol MULPDU ( Marker PDU Aligned ( MPA ) Upper Layer PDU ). 	400	0
5043	DDP-SSN	All SCTP Payload Data Chunks used by this adaptation layer include a DDP Source Sequence Number ( DDP-SSN ). The DDP-SSN tracks the sequence in which the messages were submitted to the SCTP layer for the SCTP stream in use . The DDP-SSN MUST have the same value that the SCTP Stream Sequence Number ( SSN ) would have been assigned had ordered SCTP Payload Data Chunks been used rather than unordered . 	400	0
5044	CRC	Delivery - ( Delivered , Delivers ) - For MPA , Delivery is defined as the process of informing DDP that a particular PDU is ordered for use . A PDU is Delivered in the exact order that it was sent by the original sender; MPA uses TCP's byte stream ordering to determine when Delivery is possible . This is specifically different from " passing the PDU to DDP ", which may generally occur in any order , while the order of Delivery is strictly defined . 	301	0
5044	FPDUPTR	FPDU Pointer ( FPDUPTR ) - This field of the Marker is used to indicate the beginning of an FPDU . 	301	0
5044	Private Data	Private Data - A block of data exchanged between MPA endpoints during initial connection setup . 	400	0
5044	ULPDU	ULPDU - Upper Layer Protocol Data Unit . The data record defined by the layer above MPA ( DDP ). ULPDU corresponds to DDP's DDP segment . 	400	0
5044	ULPDU_Length	ULPDU_Length - A field in the FPDU describing the length of the included ULPDU . 	100	0
5044	ULPDU_Length	ULPDU_Length : 16 bits ( unsigned integer ). This is the number of octets of the contained ULPDU . It does not include the length of the FPDU header itself , the pad , the CRC , or of any Markers that fall within the ULPDU . The 16-bit ULPDU Length field is large enough to support the largest IP datagrams for IPv4 or IPv6 . 	100	0
5044	CRC	CRC : 32 bits . When CRCs are enabled , this field contains a CRC32c check value , which is used to verify the entire contents of the FPDU , using CRC32c . See Section 4.4 , CRC Calculation . When CRCs are not enabled , this field is still present , may contain any value , and MUST NOT be checked . 	400	0
5044	RESERVED	RESERVED : The Reserved field MUST be set to zero on transmit and ignored on receive ( except for CRC calculation ). 	500	0
5044	FPDUPTR	FPDUPTR : The FPDU Pointer is a relative pointer , 16 bits long , interpreted as an unsigned integer that indicates the number of octets in the TCP stream from the beginning of the ULPDU Length field to the first octet of the entire Marker . The least significant two bits MUST always be set to zero at the transmitter , and the receivers MUST always treat these as zero for calculations . 	100	0
5044	M	M : This bit declares an endpoint's REQUIRED Marker usage . When this bit is ' 1 ' in an MPA Request Frame , the Initiator declares that Markers are REQUIRED in FPDUs sent from the Responder . When set to ' 1 ' in an MPA Reply Frame , this bit declares that Markers are REQUIRED in FPDUs sent from the Initiator . When in a received MPA Request Frame or MPA Reply Frame and the value is ' 0 ', Markers MUST NOT be added to the data stream by that endpoint . When ' 1 ' Markers MUST be added as described in Section 4.3 , MPA Markers . 	210	0
5044	C	C : This bit declares an endpoint's preferred CRC usage . When this field is ' 0 ' in the MPA Request Frame and the MPA Reply Frame , CRCs MUST not be checked and need not be generated by either endpoint . When this bit is ' 1 ' in either the MPA Request Frame or MPA Reply Frame , CRCs MUST be generated and checked by both endpoints . Note that even when not in use , the CRC field remains present in the FPDU . When CRCs are not in use , the CRC field MUST be considered valid for FPDU checking regardless of its contents . 	210	0
5044	R	R : This bit is set to zero , and not checked on reception in the MPA Request Frame . In the MPA Reply Frame , this bit is the Rejected Connection bit , set by the Responders ULP to indicate acceptance ' 0 ', or rejection ' 1 ', of the connection parameters provided in the Private Data . 	210	0
5044	Res	Res : This field is reserved for future use . It MUST be set to zero when sending , and not checked on reception . 	500	0
5044	Rev	Rev : This field contains the revision of MPA . For this version of the specification , senders MUST set this field to one . MPA receivers compliant with this version of the specification MUST check this field . If the MPA receiver cannot interoperate with the received version , then it MUST close the connection and report an error locally . Otherwise , the MPA receiver should report the received version to the ULP . 	220	0
5044	PD_Length	PD_Length : This field MUST contain the length in octets of the Private Data field . A value of zero indicates that there is no Private Data field present at all . If the receiver detects that the PD_Length field does not match the length of the Private Data field , or if the length of the Private Data field exceeds 512 octets , the receiver MUST close the connection and report an error locally . Otherwise , the MPA receiver should pass the PD_Length value and Private Data to the ULP . 	100	0
5044	Private Data	Private Data : This field may contain any value defined by ULPs or may not be present . The Private Data field MUST be between 0 and 512 octets in length . ULPs define how to size , set , and validate this field within these limits . Private Data usage is further discussed in Section 7.1.4 . 	400	0
5044	C	This document is subject to the rights , licenses and restrictions contained in BCP 78 , and except as set forth therein , the authors retain all their rights . 	303	0
5046	Invalidate STag	Invalidate STag - A mechanism used to prevent the Remote Peer from reusing a previous explicitly Advertised STag , until the iSER layer at the local node makes it available through a subsequent explicit Advertisement . 	400	0
5046	Opcode	Opcode - Operation Code : 4 bits 	231	0
5046	WSV	This flag indicates the validity of the Write STag field of the iSER Header . If set to one , the Write STag field in this iSER Header is valid . If set to zero , the Write STag field in this iSER Header MUST be ignored at the receiver . The Write STag Valid flag is set to one when there is solicited data to be transferred for a SCSI write or bidirectional command , or when there are non-immediate unsolicited and solicited data to be transferred for the referenced task specified in a Task Management Function Request with the TASK REASSIGN function . 	302	0
5046	RSV	This flag indicates the validity of the Read STag field of the iSER Header . If set to one , the Read STag field in this iSER Header is valid . If set to zero , the Read STag field in this iSER Header MUST be ignored at the receiver . The Read STag Valid flag is set to one for a SCSI read or bidirectional command , or for a Task Management Function Request with the TASK REASSIGN function . 	210	0
5046	Write STag	This field contains the Write STag when the Write STag Valid flag is set to one . For a SCSI write or bidirectional command , the Write STag is used to Advertise the initiator's I/O Buffer containing the solicited data . For a Task Management Function Request with the TASK REASSIGN function , the Write STag is used to Advertise the initiator's I/O Buffer containing the non - immediate unsolicited data and solicited data . This Write STag is used as the Data Source STag in the resultant RDMA Read operation(s ). When the Write STag Valid flag is set to zero , this field MUST be set to zero . 	400	0
5046	Read STag	This field contains the Read STag when the Read STag Valid flag is set to one . The Read STag is used to Advertise the initiator's Read I/O Buffer of a SCSI read or bidirectional command , or of a Task Management Function Request with the TASK REASSIGN function . This Read STag is used as the Data Sink STag in the resultant RDMA Write operation(s ). When the Read STag Valid flag is zero , this field MUST be set to zero . 	400	0
5046	MaxVer	This field specifies the maximum version of the iSER protocol supported . It MUST be set to one to indicate the version of the specification described in this document . 	220	0
5046	MinVer	This field specifies the minimum version of the iSER protocol supported . It MUST be set to one to indicate the version of the specification described in this document . 	220	0
5046	Reserved	Reserved fields MUST be set to zero on transmit , and MUST be ignored on reception . 	500	0
5046	Rsvd	Reserved fields MUST be set to zero on transmit , and MUST be ignored on reception . 	500	0
5046	REJ	This flag indicates whether the target is rejecting this connection . If set to one , the target is rejecting the connection . 	210	0
5046	MaxVer	This field specifies the maximum version of the iSER protocol supported . It MUST be set to one to indicate the version of the specification described in this document . 	220	0
5046	CurVer	This field specifies the current version of the iSER protocol supported . It MUST be set to one to indicate the version of the specification described in this document . 	220	0
5046	Reserved	Reserved fields MUST be set to zero on transmit , and MUST be ignored on reception . 	500	0
5046	Rsvd	Reserved fields MUST be set to zero on transmit , and MUST be ignored on reception . 	500	0
5053	Source Block Number	Source Block Number ( SBN ), ( 16 bits ): An integer identifier for the source block that the encoding symbols within the packet relate to . 	230	0
5053	Encoding Symbol ID	Encoding Symbol ID ( ESI ), ( 16 bits ): An integer identifier for the encoding symbols within the packet . 	231	0
5053	Z	- The number of source blocks ( Z ) 	201	0
5053	N	- The number of sub-blocks ( N ) 	202	0
5053	Al	These parameters are all non-negative integers . The encoded Scheme - specific Object Transmission Information is a 4-octet field consisting of the parameters Z ( 2 octets ), N ( 1 octet ), and Al ( 1 octet ) as shown in Figure 3 . 	301	0
5053	Al	- A symbol alignment parameter , Al 	231	0
5053	Z	- The number of source blocks , Z 	201	0
5053	N	- The number of sub-blocks in each source block , N 	400	0
5053	Encoding Symbol ID	Encoding Symbol ID : information that defines the relationship between the symbols of an encoding symbol group and the source symbols . 	231	0
5053	Al	Al denotes a symbol alignment parameter . Symbol and sub-symbol sizes are restricted to be multiples of Al . 	231	0
5053	N	N the number of sub-blocks within a source block 	230	0
5053	Z	Z the number of source blocks , for object delivery 	201	0
5053	Z	( KL , KS , ZL , ZS ) = Partition[Kt , Z ] 	302	0
5053	N	Then , the object MUST be partitioned into Z = ZL + ZS contiguous source blocks , the first ZL source blocks each having length KL*T bytes , and the remaining ZS source blocks each having KS*T bytes . 	400	0
5059	Z	Per Configured or Learned Scope Zone ( Z ): 	231	0
5059	Z	Bootstrap Timer ( BST(Z )) 	122	0
5059	Z	Group-to-RP mapping Expiry Timer ( GET(M,Z )) 	122	0
5059	Z	Scope-Zone Expiry Timer ( SZT(Z )) 	122	0
5059	Z	Group-to-C-RP mapping Expiry Timer ( CGET(M,Z )) 	122	0
5059	Reserved	PIM Version , Reserved , Checksum Described in [ 1 ]. 	220	0
5059	Reserved	PIM Version , Reserved , Checksum Described in [ 1 ]. 	220	0
5061	Sequence Number	This value represents a Sequence Number for the ASCONF Chunk . The valid range of a Sequence Number is from 0 to 4294967295 ( 2**32 - 1 ). Sequence Numbers wrap back to 0 after reaching 4294967295 . 	200	0
5061	Address Parameter	This field contains an address parameter , either IPv6 or IPv4 , from [ RFC4960 ]. The address is an address of the sender of the ASCONF Chunk; the address MUST be considered part of the association by the peer endpoint ( the receiver of the ASCONF Chunk ). This field may be 	230	0
5061	Sequence Number	This value represents the Sequence Number for the received ASCONF Chunk that is acknowledged by this chunk . This value is copied from the received ASCONF Chunk . 	231	0
5061	Address Parameter	This field contains an IPv4 or IPv6 address parameter as described in Section 3.3.2.1 of [ RFC4960 ]. The complete TLV is wrapped within this parameter . It informs the receiver that the address specified is to be added to the existing association . This parameter MUST NOT contain a broadcast or multicast address . If the address 0.0.0.0 or :: 0 is provided , the source address of the packet MUST be added . 	230	0
5061	Address Parameter	This field contains an IPv4 or IPv6 address parameter , as described in Section 3.3.2.1 of [ RFC4960 ]. The complete TLV is wrapped within this parameter . It informs the receiver that the address specified is to be removed from the existing association . This parameter MUST NOT contain a broadcast or multicast address . If the address 0.0.0.0 or :: 0 is provided , all addresses of the peer except the source address of the packet MUST be deleted . 	230	0
5061	Address Parameter	This field contains an IPv4 or IPv6 address parameter as described in Section 3.3.2.1 of [ RFC4960 ]. The complete TLV is wrapped within this parameter . It requests the receiver to mark the specified address as the primary address to send data to ( see Section 5.1.2 of [ RFC4960 ]). The receiver MAY mark this as its primary address upon receiving this request . If the address 0.0.0.0 or :: 0 is provided , the receiver MAY mark the source address of the packet as its primary . 	230	0
5063	T	When set ( 1 ), indicates that the sending node is enabled to send RecoveryPath messages . Absence of the Capability object MUST be treated as if the T-bit is cleared ( 0 ). 	210	0
5063	R	When set ( 1 ), indicates that the sending node desires to receive RecoveryPath messages . Absence of the Capability object MUST be treated as if the R-bit is cleared ( 0 ). 	210	0
5063	S	When set ( 1 ), along with the R-bit , indicates that the sending node is capable of receiving and processing Srefresh messages with the RecoveryPath Flag set ( 1 ) in the MESSAGE_ID LIST object . Absence of the Capability object MUST be treated as if the S-bit is cleared ( 0 ). Related procedures are defined in Section 5.2.1 . 	210	0
5063	S	the RecoveryPath Srefresh Capable ( S ) bit set in the Capability object . When such an indication is found , the neighbor generates one or more Srefresh messages . Each message indicates the Path state that can be represented in a RecoveryPath message . Within such Srefresh messages , the Path state that can be represented in RecoveryPath messages is represented using MESSAGE_ID information , and this information is communicated within MESSAGE_ID LIST objects . To indicate that the MESSAGE_ID LIST object is for recovery purposes , a new flag is set in the MESSAGE_ID LIST object . This flag is called the RecoveryPath Flag and is defined below . 	301	0
5063	T	RecoveryPath Transmit Enabled ( T ): 1 bit RecoveryPath Desired ( R ): 1 bit RecoveryPath Srefresh Capable ( S ): 1 bit 	210	0
5072	Type	Type 	240	0
5072	Length	Length 	100	0
5075	M	o M - Managed Address Configuration Flag [ RFC4861 ] 	231	0
5075	O	o O - Other Configuration Flag [ RFC4861 ] 	231	0
5075	H	o H - Mobile IPv6 Home Agent Flag [ RFC3775 ] 	231	0
5075	Prf	o Prf - Router Selection Preferences [ RFC4191 ] 	100	0
5075	P	o P - Neighbor Discovery Proxy Flag [ RFC4389 ] 	231	0
5075	R	With other protocols in the works ( e.g ., Detecting Network Attachment ) that want to use flags in the NDP messages , it is necessary to define an expansion capability to support new features . 	231	0
5075	Type	o Length - The length MUST be checked when processing the option in order to allow for future expansion of this option . An implementation of this specification MUST set the Length to 1 , MUST ignore any unrecognized data , and MUST be able to recognize the specific length in order to skip over unrecognized bits . 	100	0
5075	Length	o Length - The length MUST be checked when processing the option in order to allow for future expansion of this option . An implementation of this specification MUST set the Length to 1 , MUST ignore any unrecognized data , and MUST be able to recognize the specific length in order to skip over unrecognized bits . 	100	0
5085	CC Types	The VCCV Control Channel ( CC ) Type defines several possible types of control channel that VCCV can support . These control channels can in turn carry several types of protocols defined by the Connectivity Verification ( CV ) Type . VCCV potentially supports multiple CV Types concurrently , but it only supports the use of a single CC Type . The specific type or types of VCCV packets that can be accepted and sent by a router are indicated during capability advertisement as described in Sections 5.3 and 6.3 . The various VCCV CV Types supported are used only when they apply to the context of the PW demultiplexer in use . For example , the LSP Ping CV Type should only be used when MPLS Labels are utilized as PW Demultiplexer . 	231	0
5085	CV Types	The VCCV Control Channel ( CC ) Type defines several possible types of control channel that VCCV can support . These control channels can in turn carry several types of protocols defined by the Connectivity Verification ( CV ) Type . VCCV potentially supports multiple CV Types concurrently , but it only supports the use of a single CC Type . The specific type or types of VCCV packets that can be accepted and sent by a router are indicated during capability advertisement as described in Sections 5.3 and 6.3 . The various VCCV CV Types supported are used only when they apply to the context of the PW demultiplexer in use . For example , the LSP Ping CV Type should only be used when MPLS Labels are utilized as PW Demultiplexer . 	231	0
5086	CESoPSN Control Word	The structure of the CESoPSN Control Word that MUST be used with all combinations of the PSN and demultiplexing mechanisms described in the previous section is shown in Figure 2 below . 	302	0
5086	L	L - if set , indicates some abnormal condition of the attachment circuit . 	302	0
5086	M	M - a 2-bit modifier field . In case of L cleared , this field allows discrimination of signaling packets and carrying RDI of the attachment circuit across the PSN . In case of L set , only the ' 00 ' value is currently defined; other values are reserved for future extensions . L and M bits can be treated as a 3-bit code point space that is described in detail in Table 1 below . 	210	0
5086	R	R - if set by the PSN-bound IWF , indicates that its local CE-bound IWF is in the packet loss state , i.e ., has lost a pre-configured number of consecutive packets . The R bit MUST be cleared by the PSN-bound IWF once its local CE-bound IWF has exited the packet loss state , i.e ., has received a pre-configured number of consecutive packets . 	210	0
5087	RES	RES ( 4 bits ) The first nibble of the control word MUST be set to zero when the PSN is MPLS , in order to ensure that the packet does not alias an IP packet when forwarding devices perform deep packet inspection . For PSNs other than MPLS , the first nibble MAY be set to zero; however , in earlier versions of TDMoIP this field contained a format identifier that was optionally used to specify the payload format . 	302	0
5087	RES	Length ( 6 bits ) is used to indicate the length of the TDMoIP packet ( control word and payload ), in case padding is employed to meet minimum transmission unit requirements of the PSN . It MUST be used if the total packet length ( including PSN , optional RTP , control word , and payload ) is less than 64 bytes , and MUST be set to zero when not used . 	100	0
5087	Length	Length ( 6 bits ) is used to indicate the length of the TDMoIP packet ( control word and payload ), in case padding is employed to meet minimum transmission unit requirements of the PSN . It MUST be used if the total packet length ( including PSN , optional RTP , control word , and payload ) is less than 64 bytes , and MUST be set to zero when not used . 	100	0
5087	IPVER	IPVER ( 4 bits ) is the IP version number , e.g ., IPVER=4 for IPv4 . 	220	0
5087	IHL	IHL ( 4 bits ) is the length in 32-bit words of the IP header , IHL=5 . 	100	0
5087	IP TOS	IP TOS ( 8 bits ) is the IP type of service . 	231	0
5087	Total Length	Identification ( 16 bits ) is the IP fragmentation identification field . 	231	0
5087	Identification	Identification ( 16 bits ) is the IP fragmentation identification field . 	231	0
5087	Flags	Flags ( 3 bits ) are the IP control flags and MUST be set to 2 in order to avoid fragmentation . 	302	0
5087	Fragment Offset	Fragment Offset ( 13 bits ) indicates where in the datagram the fragment belongs and is not used for TDMoIP . 	110	0
5087	Time to Live	Time to Live ( 8 bits ) is the IP time to live field . Datagrams with zero in this field are to be discarded . 	121	0
5087	Protocol	Protocol ( 8 bits ) MUST be set to 0x11 ( 17 ) to signify UDP . 	302	0
5087	IP Header Checksum	IP Header Checksum ( 16 bits ) is a checksum for the IP header . 	301	0
5087	Source IP Address	Destination IP Address ( 32 bits ) is the IP address of the destination . 	230	0
5087	Destination IP Address	Destination IP Address ( 32 bits ) is the IP address of the destination . 	230	0
5087	UDP Length	UDP Checksum ( 16 bits ) is the checksum of UDP/IP header and data . If not computed it MUST be set to zero . 	303	0
5087	UDP Checksum	UDP Checksum ( 16 bits ) is the checksum of UDP/IP header and data . If not computed it MUST be set to zero . 	301	0
5087	Tunnel Label	Tunnel Label ( 20 bits ) is the MPLS label that identifies the MPLS LSP used to tunnel the TDM packets through the MPLS network . The label can be assigned either by manual provisioning or via an MPLS control protocol . While transiting the MPLS network there may be zero , one , or several tunnel label rows . For label stack usage see [ RFC3032 ]. 	231	0
5087	EXP	EXP ( 3 bits ) experimental field , may be used to carry Diffserv classification for tunnel labels . 	400	0
5087	S	S ( 1 bit ) the stacking bit indicates MPLS stack bottom . S=0 for all tunnel labels , and S=1 for the PW label . 	210	0
5087	TTL	PW Label ( 20 bits ) This label MUST be a valid MPLS label , and MAY be configured or signaled . 	231	0
5087	Protocol	Protocol ( 8 bits ) is the IP protocol field . It must be set to 0x73 ( 115 ), the user port number that has been assigned to L2TP by IANA . 	231	0
5087	Destination MAC Address	Destination MAC Address ( 48 bits ) is the globally unique address of a single station that is to receive the packet . The format is defined in [ IEEE802.3 ]. 	230	0
5087	Source MAC Address	Source MAC Address ( 48 bits ) is the globally unique address of the station that originated the packet . The format is defined in [ IEEE802.3 ]. 	230	0
5087	VLP	C ( 1 bit ) the " canonical format indicator " being set , indicates that route descriptors appear; see [ IEEE802.1Q ]. 	210	0
5087	C	C ( 1 bit ) the " canonical format indicator " being set , indicates that route descriptors appear; see [ IEEE802.1Q ]. 	210	0
5087	Ethertype	Ethertype ( 16 bits ) is the protocol identifier , as allocated by the IEEE . The Ethertype SHOULD be set to 0x88D8 ( 35032 ), but MAY be set to 0x8847 ( 34887 ). 	240	0
5087	Frame Check Sequence	Frame Check Sequence ( 32 bits ) is a Cyclic Redundancy Check ( CRC ) error detection field , calculated per [ IEEE802.3 ]. 	200	0
5087	R	Note 1 : this is only required for the optional re-ordering Note 2 : this number is always in the range - 2^15 ... + 2^15 - 1 Note 3 : the playout buffer is emptied by the TDM playout process , which runs asynchronously to the packet arrival processing , and which is not herein specified 	240	0
5087	C	C ( 1 bit ) convergence sublayer indication , its use here is limited to indication of the existence of a pointer ( see below); C=0 means no pointer , C=1 means a pointer is present . 	210	0
5087	SN	SN ( 3 bits ) The AAL1 sequence number increments from PDU to PDU . 	200	0
5087	CRC	CRC ( 3 bits ) is a 3-bit error cyclic redundancy code on C and SN . 	231	0
5087	P	As can be readily inferred , incrementing the sequence number forms an eight-PDU sequence number cycle , the importance of which will become clear shortly . 	200	0
5087	C	C ( 1 bit ) convergence sublayer indication , C=1 for P-format PDUs . 	210	0
5087	SN	SN ( 3 bits ) is an even AAL1 sequence number . 	200	0
5087	CRC	P ( 1 bit ) even byte parity LSB ( least significant bit ) for sequence number byte . 	200	0
5087	P	P ( 1 bit ) even byte parity LSB ( least significant bit ) for sequence number byte . 	200	0
5087	E	E ( 1 bit ) even byte parity MSB for pointer byte . 	302	0
5087	pointer	Since P-format PDUs have 46 bytes of payload and the next PDU has 47 bytes , viewed as a single entity the pointer needs to indicate one of 93 bytes . If P=0 it is understood that the structure commences with the following byte ( i.e ., the first byte in the payload belongs to the lowest numbered channel ). P=93 means that the last byte of the second PDU is the final byte of the structure , and the following PDU commences with a new structure . The special value P=127 indicates that there is no structure boundary to be indicated ( needed when extremely large structures are being transported ). 	302	0
5087	CID	CID ( 8 bits ) channel identifier is an identifier that must be unique for the PW . The values 0-7 are reserved for special purposes , ( and if interworking with VoDSL is required , so are values 8 through 15 as specified in [ LES ]), thus leaving 248 ( 240 ) CIDs per PW . The mapping of CID values to channels MAY be manually configured manually or signaled . 	231	0
5087	UUI	UUI ( 5 bits ) user-to-user indication is the higher layer ( application ) identifier and counter . For voice data , the UUI will always be in the range 0-15 , and SHOULD be incremented modulo 16 each time a channel buffer is sent . The receiver MAY monitor this sequence . UUI is set to 24 for CAS signaling packets . 	231	0
5087	HEC	Payload - voice A block of length indicated by LI of voice samples are placed as - is into the AAL2 packet . 	100	0
5087	RED	RED ( 2 bits ) is the triple redundancy counter . For the first packet it takes the value 00 , for the second 01 and for the third 10 . RED=11 means non-redundant information , and is used when triple redundancy is not employed , and for periodic refresh messages . 	210	0
5087	Timestamp	Timestamp ( 14 bits ) The timestamp is optional and in particular is not needed if RTP is employed . If not used , the timestamp MUST be set to zero . When used with triple redundancy , it MUST be the same for all three redundant transmissions . 	302	0
5087	RES	RES ( 4 bits ) is reserved and MUST be set to zero . 	500	0
5087	ABCD	ABCD ( 4 bits ) are the CAS signaling bits . 	231	0
5087	type	type ( 6 bits ) for CAS signaling this is 000011 . 	231	0
5087	L	L , R , and M are identical to those of the PW being tested . 	301	0
5087	R	L , R , and M are identical to those of the PW being tested . 	301	0
5087	M	L , R , and M are identical to those of the PW being tested . 	301	0
5087	Length	OAM Sequence Number ( 16 bits ) is used to uniquely identify the message . Its value is unrelated to the sequence number of the TDMoIP data packets for the PW in question . It is incremented in query messages , and replicated without change in replies . 	200	0
5087	OAM Sequence Number	OAM Sequence Number ( 16 bits ) is used to uniquely identify the message . Its value is unrelated to the sequence number of the TDMoIP data packets for the PW in question . It is incremented in query messages , and replicated without change in replies . 	200	0
5087	Service specific information	Service specific information ( 16 bits ) is a field that can be used to exchange configuration information between IWFs . If it is not used , this field MUST contain zero . Its interpretation depends on the payload type . At present , the following is defined for AAL1 payloads . 	400	0
5087	Number of TSs	Number of TSs ( 8 bits ) is the number of channels being transported , e.g ., 24 for full T1 . 	231	0
5087	Number of SFs	Number of SFs ( 8 bits ) is the number of 48-byte AAL1 PDUs per packet , e.g ., 8 when packing 8 PDUs per packet . 	400	0
5087	Forward PW label	Forward PW label ( 16 bits ) is the PW label used for TDMoIP traffic from the source to destination IWF . 	231	0
5087	Reverse PW label	Reverse PW label ( 16 bits ) is the PW label used for TDMoIP traffic from the destination to source IWF . 	231	0
5087	Source Transmit Timestamp	Source Transmit Timestamp ( 32 bits ) represents the time the PSN - bound IWF transmitted the query message . This field and the following ones only appear if delay is being measured . All time units are derived from a clock of preconfigured frequency , the default being 100 microseconds . 	121	0
5087	Destination Receive Timestamp	Destination Receive Timestamp ( 32 bits ) represents the time the destination IWF received the query message . 	121	0
5087	Destination Transmit Timestamp	Destination Transmit Timestamp ( 32 bits ) represents the time the destination IWF transmitted the reply message . 	121	0
5087	PW label	PW label ( for UDP and Ethernet the label MUST be manually configured ) 	231	0
5087	C	This document is subject to the rights , licenses and restrictions contained in BCP 78 , and except as set forth therein , the authors retain all their rights . 	303	0
5088	Type	Type : 6 Length : Variable Value : This comprises one or more sub-TLVs 	100	0
5088	Type	Type : 1 Length : 8 ( IPv4 ) or 20 ( IPv6 ) 	100	0
5088	Reserved	Reserved : SHOULD be set to zero on transmission and MUST be ignored on receipt . 	500	0
5088	Type	Type : 2 Length : 4 Value : This comprises a 2-octet flags field where each bit represents a supported path scope , as well as four preference fields used to specify PCE preferences . 	400	0
5088	Res	The L , R , S , and Y bits are set when the PCE can act as a PCE for intra-area , inter-area , inter-AS , or inter-layer TE LSP computation , respectively . These bits are non-exclusive . 	210	0
5088	Type	Type : 3 Length : 8 	100	0
5088	Domain ID	Domain ID : With the domain-type set to 1 , this indicates the 32-bit Area ID of an area where the PCE has visibility and can compute paths . With domain-type set to 2 , this indicates an AS number of an AS where the PCE has visibility and can compute paths . When the AS number is coded in two octets , the AS Number field MUST have its first two octets set to 0 . 	210	0
5088	Type	Type : 4 Length : 8 	100	0
5088	Domain ID	Domain ID : With the domain-type set to 1 , this indicates the 32-bit Area ID of a neighbor area toward which the PCE can compute paths . With domain-type set to 2 , this indicates the AS number of 	240	0
5088	Type	Type : 5 Length : Multiple of 4 octets Value : This contains an array of units of 32-bit flags numbered from the most significant as bit zero , where each bit represents one PCE capability . 	100	0
5093	BT	block type ( BT ): 8 bits 	400	0
5093	reserved	These fields are reserved for future definition . In the absence of such a definition , the bits in these fields MUST be set to zero and MUST be ignored by the receiver . 	500	0
5093	begin_seq	begin_seq : 16 bits 	400	0
5093	end_seq	end_seq : 16 bits 	200	0
5093	vmaxdiff	Largest IPDV difference seen to date within a single RTCP measurement cycle , measured in RTP timestamp units . If the measured value exceeds 0xFFFE , the value 0xFFFF should be reported to indicate an over-range measurement . 	200	0
5093	vrange	Largest IPDV difference over the lifetime of the RTP flow to date , measured in RTP timestamp units . If the measured value exceeds 0xFFFE , the value 0xFFFF should be reported to indicate an over - range measurement . 	200	0
5093	vsum	Sum of the peak IPDV difference values within each RTCP cycle , summed over RTCP cycles over the lifetime of the RTP flow to date . If the measured value exceeds 0xFFFFFFFE , the value 0xFFFFFFFF should be reported to indicate an over-range measurement . 	200	0
5093	c	Number of RTCP cycles over which vsum was accumulated . If the measured value exceeds 0xFFFE , the value 0xFFFF should be reported to indicate an over-range measurement . 	200	0
5093	jbevents	Cumulative number of jitter buffer adaptation events over the lifetime of the RTP flow to date . If the measured value exceeds 0xFFFE , the value 0xFFFF should be reported to indicate an over - range measurement . 	200	0
5093	tdegnet	The total time in sample periods affected either by packets unavailable due to network loss , or late delivery of packets , since the start of transmission . If the measured value exceeds 0xFFFFFE , the value 0xFFFFFF should be reported to indicate an over-range measurement . 	122	0
5093	tdegjit	The total time in sample periods degraded by jitter buffer adaptation events , e.g ., where the jitter buffer either plays out a sample sequence not originating at the transmitter , repeats samples , or chooses not to play out a sample sequence that was sent by the transmitter . If the measured value exceeds 0xFFFFFE , the value 0xFFFFFF should be reported to indicate an over-range measurement . 	122	0
5093	es	cumulative seconds affected by " unavailable packet " events over the lifetime of this ephemeral , to date . If the measured value exceeds 0xFFFFFE , the value 0xFFFFFF should be reported to indicate an over-range measurement . 	120	0
5093	ses	cumulative seconds affected by severe " unavailable packet " events over the lifetime of this ephemeral , to date . If the measured value exceeds 0xFFFFFE , the value 0xFFFFFF should be reported to indicate an over-range measurement . 	120	0
5094	Type	An 8-bit field indicating that it is a Vendor-Specific mobility option . 	231	0
5094	Length	An 8-bit field indicating the length of the option in octets excluding the Type and the Length fields . All other fields are included . 	100	0
5094	Vendor ID	The SMI Network Management Private Enterprise Code of the IANA - maintained Private Enterprise Numbers registry [ 5 ]. 	231	0
5096	Type	Type 	240	0
5096	Length	An 8-bit field indicating the length of the option in octets excluding the Type and Length fields . 	100	0
5101	Information Element	An Information Element is a protocol and encoding-independent description of an attribute that may appear in an IPFIX Record . The IPFIX information model [ RFC5102 ] defines the base set of Information Elements for IPFIX . The type associated with an Information Element indicates constraints on what it may contain and also determines the valid encoding mechanisms for use in IPFIX . 	400	0
5101	Length	Total length of the IPFIX Message , measured in octets , including Message Header and Set(s ). 	100	0
5101	Export Time	Time , in seconds , since 0000 UTC Jan 1 , 1970 , at which the IPFIX Message Header leaves the Exporter . 	121	0
5101	Sequence Number	Incremental sequence counter modulo 2^32 of all IPFIX Data Records sent on this PR-SCTP stream from the current Observation Domain by the Exporting Process . Check the specific meaning of this field in the subsections of Section 10 when UDP or TCP is selected as the transport protocol . This value SHOULD be used by the Collecting Process to identify whether any IPFIX Data Records have been missed . Template and Options Template Records do not increase the Sequence Number . 	200	0
5101	Observation Domain ID	A 32-bit identifier of the Observation Domain that is locally unique to the Exporting Process . The Exporting Process uses the Observation Domain ID to uniquely identify to the Collecting Process the Observation Domain that metered the Flows . It is RECOMMENDED that this identifier also be unique per IPFIX Device . Collecting Processes SHOULD use the Transport Session and the Observation Domain ID field to separate different export streams originating from the same Exporting Process . The Observation Domain ID SHOULD be 0 when no specific Observation Domain ID is relevant for the entire IPFIX Message , for example , when exporting the Exporting Process Statistics , or in case of a hierarchy of Collectors when aggregated Data Records are exported . 	230	0
5101	E	Enterprise bit . This is the first bit of the Field Specifier . If this bit is zero , the Information Element Identifier identifies an IETF-specified Information Element , and the four-octet Enterprise Number field MUST NOT be present . If this bit is one , the Information Element identifier identifies an enterprise-specific Information Element , and the Enterprise Number filed MUST be present . 	231	0
5101	Field Length	The length of the corresponding encoded Information Element , in octets . Refer to [ RFC5102 ]. The field length may be smaller than the definition in [ RFC5102 ] if the reduced size encoding is used ( see Section 6.2 ). The value 65535 is reserved for variable - length Information Elements ( see Section 7 ). 	100	0
5101	Enterprise Number	IANA enterprise number [ PEN ] of the authority defining the Information Element identifier in this Template Record . 	230	0
5101	Padding	The Exporting Process MAY insert some padding octets , so that the subsequent Set starts at an aligned boundary . For security reasons , the padding octet(s ) MUST be composed of zero ( 0 ) valued octets . The padding length MUST be shorter than any allowable record in this Set . If padding of the IPFIX Message is desired in combination with very short records , then the padding Information Element ' paddingOctets ' [ RFC5102 ] can be used for padding records such that their length is increased to a multiple of 4 or 8 octets . Because Template Sets are always 4-octet aligned by definition , padding is only needed in case of other alignments e.g ., on 8-octet boundaries . 	302	0
5101	Set ID	Set ID value identifies the Set . A value of 2 is reserved for the Template Set . A value of 3 is reserved for the Option Template Set . All other values from 4 to 255 are reserved for future use . Values above 255 are used for Data Sets . The Set ID values of 0 and 1 are not used for historical reasons [ RFC3954 ]. 	500	0
5101	Length	Total length of the Set , in octets , including the Set Header , all records , and the optional padding . Because an individual Set MAY contain multiple records , the Length value MUST be used to determine the position of the next Set . 	100	0
5101	Field Count	Field Count 	240	0
5101	Field Count	Number of all fields in this Options Template Record , including the Scope Fields . 	100	0
5101	Scope Field Count	Number of scope fields in this Options Template Record . The Scope Fields are normal Fields except that they are interpreted as scope at the Collector . The Scope Field Count MUST NOT be zero . 	400	0
5102	Label	Label : Label Value , 20 bits Exp : Experimental Use , 3 bits S : Bottom of Stack , 1 bit 	240	0
5102	Label	Exp : Experimental Use , 3 bits S : Bottom of Stack , 1 bit </ artwork > </ description > < reference > < paragraph > See RFC 3032 . </ paragraph > </ reference > </ field > 	240	0
5102	Exp	Exp : Experimental Use , 3 bits S : Bottom of Stack , 1 bit </ artwork > </ description > < reference > < paragraph > See RFC 3032 . </ paragraph > </ reference > </ field > 	240	0
5104	SSRC	SSRC ( 32 bits ): The SSRC value of the media sender that is requested to obey the new maximum bit rate . 	231	0
5104	MxTBR Exp	MxTBR Exp ( 6 bits ): The exponential scaling of the mantissa for the maximum total media bit rate value . The value is an unsigned integer [ 0..63 ]. 	110	0
5104	MxTBR Mantissa	MxTBR Mantissa ( 17 bits ): The mantissa of the maximum total media bit rate value as an unsigned integer . 	231	0
5104	Measured Overhead	Measured Overhead ( 9 bits ): The measured average packet overhead value in bytes . The measurement SHALL be done according to the description in section 4.2.1.2 . The value is an unsigned integer [ 0..511 ]. 	200	0
5104	SSRC	MxTBR Exp ( 6 bits ): The exponential scaling of the mantissa for the maximum total media bit rate value . The value is an unsigned integer [ 0..63 ]. 	110	0
5104	MxTBR Exp	MxTBR Exp ( 6 bits ): The exponential scaling of the mantissa for the maximum total media bit rate value . The value is an unsigned integer [ 0..63 ]. 	110	0
5104	MxTBR Mantissa	MxTBR Mantissa ( 17 bits ): The mantissa of the maximum total media bit rate value as an unsigned integer . 	231	0
5104	Measured Overhead	Measured Overhead ( 9 bits ): The measured average packet overhead value in bytes represented as an unsigned integer [ 0..511 ]. 	100	0
5104	SSRC	SSRC ( 32 bits ): The SSRC value of the media sender that is requested to send a decoder refresh point . 	230	0
5104	Seq nr .	Seq nr . ( 8 bits ): Command sequence number . The sequence number space is unique for each pairing of the SSRC of command source and the SSRC of the command target . The sequence number SHALL be increased by 1 modulo 256 for each new command . A repetition SHALL NOT increase the sequence number . The initial value is arbitrary . 	200	0
5104	Reserved	Reserved ( 24 bits ): All bits SHALL be set to 0 by the sender and SHALL be ignored on reception . 	500	0
5104	SSRC	SSRC ( 32 bits ): The SSRC of the media sender that is requested to apply the trade-off value given in Index . 	230	0
5104	Seq nr .	Seq nr . ( 8 bits ): Request sequence number . The sequence number space is unique for pairing of the SSRC of request source and the SSRC of the request target . The sequence number SHALL be increased by 1 modulo 256 for each new command . A repetition SHALL NOT increase the sequence number . The initial value is arbitrary . 	200	0
5104	Reserved	Reserved ( 19 bits ): All bits SHALL be set to 0 by the sender and SHALL be ignored on reception . 	500	0
5104	Index	Index ( 5 bits ): An integer value between 0 and 31 that indicates the relative trade-off that is requested . An index value of 0 indicates the highest possible spatial quality , while 31 indicates the highest possible temporal resolution . 	302	0
5104	SSRC	SSRC ( 32 bits ): The SSRC of the source of the TSTR that resulted in this Notification . 	230	0
5104	Seq nr .	Seq nr . ( 8 bits ): The sequence number value from the TSTR that is being acknowledged . 	200	0
5104	Reserved	Reserved ( 19 bits ): All bits SHALL be set to 0 by the sender and SHALL be ignored on reception . 	500	0
5104	Index	Index ( 5 bits ): The trade-off value the media sender is using henceforth . 	231	0
5104	SSRC	SSRC ( 32 bits ): The SSRC value of the media sender that is requested to instruct its encoder to react to the VBCM . 	230	0
5104	Seq nr .	Seq nr . ( 8 bits ): Command sequence number . The sequence number space is unique for pairing of the SSRC of the command source and the SSRC of the command target . The sequence number SHALL be increased by 1 modulo 256 for each new command . A repetition SHALL NOT increase the sequence number . The initial value is arbitrary . 	200	0
5104	Payload Type	Payload Type ( 7 bits ): The RTP payload type for which the VBCM bit stream must be interpreted . 	400	0
5104	Length	Length ( 16 bits ): The length of the VBCM octet string in octets exclusive of any padding octets . 	100	0
5104	Padding	Padding ( variable length ): Bits set to 0 to make up a 32-bit boundary . 	302	0
5109	E	E : 0 [ this specification ] L : 0 [ short 16-bit mask ] P rec .: 0 [ 0 XOR 0 XOR 0 XOR 0 ] X rec .: 0 [ 0 XOR 0 XOR 0 XOR 0 ] CC rec .: 0 [ 0 XOR 0 XOR 0 XOR 0 ] M rec .: 0 [ 1 XOR 0 XOR 1 XOR 0 ] PT rec .: 0 [ 11 XOR 18 XOR 11 XOR 18 ] SN base : 8 [ min(8,9,10,11 )] TS rec .: 8 [ 3 XOR 5 XOR 7 XOR 9 ] len . rec .: 372 [ 200 XOR 140 XOR 100 XOR 340 ] 	210	0
5109	L	L0 : 340 [ the longest of 200 , 140 , 100 , and 340 ] mask : 61440 [ with Bits 1 , 2 , 3 , and 4 marked accordingly for Packets 8 , 9 , 10 , and 11 ] 	100	0
5109	E	E : 0 [ this specification ] L : 0 [ short 16-bit mask ] P rec .: 0 [ 0 XOR 0 XOR 0 XOR 0 ] X rec .: 0 [ 0 XOR 0 XOR 0 XOR 0 ] CC rec .: 0 [ 0 XOR 0 XOR 0 XOR 0 ] M rec .: 0 [ 1 XOR 0 XOR 1 XOR 0 ] PT rec .: 25 [ 11 XOR 18 ] SN base : 8 [ min(8,9 )] TS rec .: 6 [ 3 XOR 5 ] len . rec .: 68 [ 200 XOR 140 ] 	210	0
5109	L	L0 : 70 mask : 49152 [ with Bits 1 and 2 marked accordingly for Packets 8 and 9 ] 	301	0
5109	E	E : 0 [ this specification ] L : 0 [ short 16-bit mask ] P rec .: 0 [ 0 XOR 0 XOR 0 XOR 0 ] X rec .: 0 [ 0 XOR 0 XOR 0 XOR 0 ] CC rec .: 0 [ 0 XOR 0 XOR 0 XOR 0 ] M rec .: 0 [ 1 XOR 0 XOR 1 XOR 0 ] PT rec .: 25 [ 11 XOR 18 ] SN base : 8 [ min(8,9,10,11 )] TS rec .: 14 [ 7 XOR 9 ] len . rec .: 304 [ 100 XOR 340 ] 	210	0
5109	L	L0 : 70 mask : 12288 [ with Bits 3 and 4 marked accordingly for Packets 10 and 11 ] 	110	0
5109	L	L1 : 90 mask : 61440 [ with Bits 1 , 2 , 3 , and 4 marked accordingly for Packets 8 , 9 , 10 , and 11 ] 	301	0
5142	# of Addresses	An 8-bit unsigned integer indicating the number of IPv6 home agent addresses in the message . If set to zero , the mobile node MUST perform home agent discovery . 	303	0
5142	Reserved	An 8-bit field reserved for future use . The value MUST be initialized to zero by the sender , and MUST be ignored by the receiver . 	500	0
5142	Home Agent Addresses	A list of alternate home agent addresses for the mobile node . The number of addresses present in the list is indicated by the "# of Addresses " field in the Home Agent Switch message . 	230	0
5142	Mobility Options	A Variable-length field of such length that the complete Mobility Header is an integer multiple of 8 octets long . This field contains zero or more TLV-encoded mobility options . The encoding and format of defined options MUST follow the format specified in Section 6.2 of [ RFC3775 ]. The receiver MUST ignore and skip any options that it does not understand . 	400	0
5143	D	D-bit : This bit signals DBA Mode . It MUST be set to zero for normal operation , and it MUST be set to one if CEM is currently in DBA mode . DBA is an optional mode during which trivial SPEs are not transmitted into the packet network . See Table 1 and sections 7 and 8 for further details . 	210	0
5143	Rvd	Sequence Number : This is a packet sequence number , which MUST continuously cycle from 0 to 1023 . It SHOULD begin at zero when a CEM LSP ( Label Switched Path ) is created . 	200	0
5143	Structure Pointer	Structure Pointer : The Structure Pointer MUST contain the offset of the J1 byte within the CEM payload . The value is from 0 to 1,022 , where 0 means the first byte after the CEM header . The Structure Pointer MUST be set to 0x3FF ( 1,023 ) if a packet does not carry the J1 byte . See [ T1.105 ], [ G.707 ], and [ GR-253 ] for more information On the J1 byte and the SONET/SDH payload pointer . 	301	0
5143	N	ECC-6 : An Error Correction Code to protect the CEM header . This offers the ability to correct single bit errors and detect up to two bit errors . The ECC algorithm is described in Appendix B . The ECC-6 can be optionally disabled at provisioning time . If the ECC-6 is not utilized , it MUST be set to zero . 	231	0
5155	Flags	The Flags field contains 8 one-bit flags that can be used to indicate different processing . All undefined flags must be zero . The only flag defined by this specification is the Opt-Out flag . 	231	0
5155	Iterations	The Iterations field defines the number of additional times the hash function has been performed . More iterations result in greater resiliency of the hash value against dictionary attacks , but at a higher computational cost for both the server and resolver . See Section 5 for details of the use of this field , and Section 10.3 for limitations on the value . 	100	0
5155	Salt Length	The Salt Length field defines the length of the Salt field in octets , ranging in value from 0 to 255 . 	100	0
5155	Salt	The Salt field is appended to the original owner name before hashing in order to defend against pre-calculated dictionary attacks . See Section 5 for details on how the salt is used . 	231	0
5155	Hash Length	The Hash Length field defines the length of the Next Hashed Owner Name field , ranging in value from 1 to 255 octets . 	100	0
5155	Next Hashed Owner Name	The Next Hashed Owner Name field contains the next hashed owner name in hash order . This value is in binary format . Given the ordered set of all hashed owner names , the Next Hashed Owner Name field contains the hash of an owner name that immediately follows the owner name of the given NSEC3 RR . The value of the Next Hashed Owner Name field in the last NSEC3 RR in the zone is the same as the hashed owner name of the first NSEC3 RR in the zone in hash order . Note that , unlike the owner name of the NSEC3 RR , the value of this field does not contain the appended zone name . 	400	0
5155	Type Bit Maps	The Type Bit Maps field identifies the RRSet types that exist at the original owner name of the NSEC3 RR . 	231	0
5155	Salt	Salt , if present , is encoded as a sequence of binary octets . The length of this field is determined by the preceding Salt Length field . 	400	0
5155	Iterations	The Iterations field defines the number of additional times the hash is performed . 	120	0
5155	Salt Length	The Salt Length field defines the length of the salt in octets , ranging in value from 0 to 255 . 	100	0
5155	Salt	4.1.5 . Salt 	240	0
5155	Salt	Salt , if present , is encoded as a sequence of binary octets . The length of this field is determined by the preceding Salt Length field . 	400	0
5155	Iterations	Setting the number of iterations used allows the zone owner to choose the cost of computing a hash , and therefore the cost of generating a dictionary . Note that this is distinct from the effect of salt , which prevents the use of a single precomputed dictionary for all time . 	302	0
5163	E	Encapsulator : A network device [ RFC4259 ] that receives PDUs and formats these into Payload Units ( known here as SNDUs ) for output in DVB-S or the Generic Mode of DVB-S2 . 	400	0
5163	S	SI Table : Service Information Table [ ISO-MPEG2 ]. In this document , this term describes a table that is been defined by another standards body to convey information about the services carried on a DVB Multiplex . 	231	0
5170	G	o G : an integer between 1 ( default ) and 31 , inclusive , indicating the number of encoding symbols per group ( i.e ., per packet ). The default value is 1 , meaning that each packet contains exactly one symbol . Values greater than 1 can also be defined , as explained in Section 5.3 . 	210	0
5170	PRNG seed	o PRNG seed : the seed is a 32-bit unsigned integer between 1 and 0x7FFFFFFE ( i.e ., 2^^31-2 ) inclusive . This value is used to initialize the Pseudo-Random Number Generator ( Section 5.7 ). 	301	0
5171	Ver	Ver ( 3 bits ): 0x01 : UDLD PDU version number 	220	0
5171	Opcode	Opcode ( 5 bits ): 0x00 : Reserved 0x01 : Probe message 0x02 : Echo message 0x03 : Flush message 0x04-0x1F : Reserved for future use 	240	0
5171	Flags	Flags ( 8 bits ): bit 0 : Recommended timeout flag ( RT ) bit 1 : ReSynch flag ( RSY ) bit 2-7 : Reserved for future use 	240	0
5172	IPv6-Compression-Protocol	This Configuration Option provides a way to negotiate the use of a specific IPv6 packet compression protocol . The IPv6-Compression - Protocol Configuration Option is used to indicate the ability to receive compressed packets . Each end of the link MUST separately request this option if bidirectional compression is desired . By default , compression is not enabled . 	231	0
5172	Type	Type 	240	0
5172	Length	Length 	100	0
5172	IPv6-Compression-Protocol	The IPv6-Compression-Protocol field is two octets and indicates the compression protocol desired . Values for this field are always the same as the PPP Data Link Layer Protocol field values for that same compression protocol . 	231	0
5175	M	o M - Managed Address Configuration Flag [ RFC4861 ] 	231	0
5175	O	o O - Other Configuration Flag [ RFC4861 ] 	231	0
5175	H	o H - Mobile IPv6 Home Agent Flag [ RFC3775 ] 	231	0
5175	Prf	o Prf - Router Selection Preferences [ RFC4191 ] 	231	0
5175	P	o P - Neighbor Discovery Proxy Flag [ RFC4389 ] 	231	0
5175	R	With other protocols in the works ( e.g ., Detecting Network Attachment ) that want to use flags in the NDP messages , it is necessary to define an expansion capability to support new features . 	231	0
5175	Type	o Length - The length MUST be checked when processing the option in order to allow for future expansion of this option . An implementation of this specification MUST set the Length to 1 , MUST ignore any unrecognized data , and MUST be able to recognize the specific length in order to skip over unrecognized bits . 	100	0
5175	Length	o Length - The length MUST be checked when processing the option in order to allow for future expansion of this option . An implementation of this specification MUST set the Length to 1 , MUST ignore any unrecognized data , and MUST be able to recognize the specific length in order to skip over unrecognized bits . 	100	0
5176	Code	The Code field is one octet , and identifies the type of RADIUS packet . Packets received with an invalid Code field MUST be silently discarded . RADIUS codes ( decimal ) for this extension are assigned as follows : 	231	0
5176	Identifier	The Identifier field is one octet , and aids in matching requests and replies . A Dynamic Authorization Server implementing this specification MUST be capable of detecting a duplicate request if it has the same source IP address , source UDP port , and Identifier within a short span of time . 	301	0
5176	Length	The Length field is two octets . It indicates the length of the packet including the Code , Identifier , Length , Authenticator , and Attribute fields . Octets outside the range of the Length field MUST be treated as padding and ignored on reception . If the packet is shorter than the Length field indicates , it MUST be silently discarded . The minimum length is 20 and maximum length is 4096 . 	100	0
5176	Authenticator	The Authenticator field is sixteen ( 16 ) octets . The most significant octet is transmitted first . This value is used to authenticate packets between the Dynamic Authorization Client and the Dynamic Authorization Server . 	301	0
5176	Type	Type 	240	0
5176	Length	Length 	100	0
5176	Value	The Value field is four octets , containing an integer specifying the cause of the error . Values 0-199 and 300-399 are reserved . Values 200-299 represent successful completion , so that these 	301	0
5191	Sequence Number	PANA uses sequence numbers to provide ordered and reliable delivery of messages . 	200	0
5191	Session Identifier	* Session Identifier 	202	0
5191	Reserved	This 16-bit field is reserved for future use . It MUST be set to zero and ignored by the receiver . 	500	0
5191	Message Length	The Message Length field is two octets and indicates the length of the PANA message including the header fields . 	100	0
5191	Flags	Flags 	302	0
5191	Message Type	The Message Type field is two octets , and it is used in order to communicate the message type with the message . Message Type allocation is managed by IANA [ IANAWEB ]. 	301	0
5191	Session Identifier	Session Identifier 	202	0
5191	Sequence Number	Sequence Number 	200	0
5191	AVP Code	The AVP Code , together with the optional Vendor-Id field , identifies an attribute that follows . If the V-bit is not set , then the Vendor-Id is not present and the AVP Code refers to an IETF attribute . 	231	0
5191	AVP Flags	AVP Flags 	301	0
5191	AVP Length	The AVP Length field is two octets , and indicates the number of octets in the Value field . The length of the AVP Code , AVP Length , AVP Flags , Reserved and Vendor-Id fields are not counted in the AVP Length value . 	100	0
5191	Reserved	This two-octet field is reserved for future use . It MUST be set to zero and ignored by the receiver . 	500	0
5191	Message Type	The Message Type namespace is used to identify PANA messages . Message Type 0 is not used and is not assigned by IANA . The range of values 1 - 65,519 are for permanent , standard message types , allocated by IETF Consensus [ IANA ]. This document defines the range of values 1 - 4 . The same Message Type is used for both the request and the answer messages , except for type 1 . The Request bit distinguishes requests from answers . See Section 7 for the assignment of the namespace in this specification . 	231	0
5191	Flags	There are 16 bits in the Flags field of the PANA message header . This document assigns bit 0 (' R '), 1 (' S '), 2 (' C '), 3 (' A '), 4 (' P '), and 5 (' I ') in Section 6.2 . The remaining bits MUST only be assigned via a Standards Action [ IANA ]. 	240	0
5191	AVP Code	The 16-bit AVP code namespace is used to identify attributes . There are multiple namespaces . Vendors can have their own AVP codes namespace , which will be identified by their Vendor-Id ( also known as Enterprise-Number ), and they control the assignments of their vendor-specific AVP codes within their own namespace . The absence of a Vendor-Id identifies the IETF IANA controlled AVP codes namespace . The AVP codes , and sometimes also possible values in an AVP , are controlled and maintained by IANA . 	231	0
5191	Flags	There are 16 bits in the AVP Flags field of the AVP header , defined in Section 6.3 . This document assigns bit 0 (' V '). The remaining bits should only be assigned via a Standards Action . 	231	0
5192	PAA IPv4 Address	PAA IPv4 Address : IPv4 address of a PAA for the client to use . The PAAs are listed in the order of preference for use by the client . 	230	0
5192	PAA IPv6 Address	PAA IPv6 Address : IPv6 address of a PAA for the client to use . The PAAs are listed in the order of preference for use by the client . 	230	0
5201	Checksum	Since the checksum covers the source and destination addresses in the IP header , it must be recomputed on HIP-aware NAT devices . 	230	0
5201	A	A - Anonymous : If this is set , the sender's HI in this packet is anonymous , i.e ., one not listed in a directory . Anonymous HIs SHOULD NOT be stored . This control is set in packets R1 and/or I2 . The peer receiving an anonymous HI may choose to refuse it . 	303	0
5201	HIP Parameters	The HIP Parameters are used to carry the public key associated with the sender's HIT , together with related security and other information . They consist of ordered parameters , encoded in TLV format . 	400	0
5201	Type	Type Type code for the parameter . 16 bits long , C-bit being part of the Type code . C Critical . One if this parameter is critical , and MUST be recognized by the recipient , zero otherwise . The C bit is considered to be a part of the Type field . Consequently , critical parameters are always odd and non-critical ones have an even value . Length Length of the Contents , in bytes . Contents Parameter specific , defined by Type Padding Padding , 0-7 bytes , added if needed 	231	0
5201	Type	Type 128 Length 12 R1 generation counter The current generation of valid puzzles 	100	0
5201	Type	Type 257 Length 12 K K is the number of verified bits Lifetime puzzle lifetime 2^(value-32 ) seconds Opaque data set by the Responder , indexing the puzzle Random #I random number 	100	0
5201	Type	Type 321 Length 20 K K is the number of verified bits Reserved zero when sent , ignored when received Opaque copied unmodified from the received PUZZLE parameter Random #I random number Puzzle solution #J random number 	100	0
5201	Type	Type 513 Length length in octets , excluding Type , Length , and padding Group ID defines values for p and g Public Value length of the following Public Value in octets Length Public Value the sender's public Diffie-Hellman key 	100	0
5201	Type	Type 577 Length length in octets , excluding Type , Length , and padding Suite ID defines the HIP Suite to be used 	100	0
5201	Type	Type 705 Length length in octets , excluding Type , Length , and Padding HI Length length of the Host Identity in octets DI-type type of the following Domain Identifier field DI Length length of the FQDN or NAI in octets Host Identity actual Host Identity Domain Identifier the identifier of the sender 	100	0
5201	Type	Type Value none included 0 FQDN 1 NAI 2 	240	0
5201	Type	Type 61505 Length length in octets , excluding Type , Length , and Padding HMAC HMAC computed over the HIP packet , excluding the HMAC parameter and any following parameters , such as HIP_SIGNATURE , HIP_SIGNATURE_2 , ECHO_REQUEST_UNSIGNED , or ECHO_RESPONSE_UNSIGNED . The checksum field MUST be set to zero and the HIP header length in the HIP common header MUST be calculated not to cover any excluded parameters when the HMAC is calculated . The size of the HMAC is the natural size of the hash computation output depending on the used hash function . 	100	0
5201	Type	Type 61569 Length length in octets , excluding Type , Length , and Padding HMAC HMAC computed over the HIP packet , excluding the HMAC parameter and any following parameters such as HIP_SIGNATURE , HIP_SIGNATURE_2 , ECHO_REQUEST_UNSIGNED , or ECHO_RESPONSE_UNSIGNED , and including an additional sender's HOST_ID parameter during the HMAC calculation . The checksum field MUST be set to zero and the HIP header length in the HIP common header MUST be calculated not to cover any excluded parameters when the HMAC is calculated . The size of the HMAC is the natural size of the hash computation output depending on the used hash function . 	100	0
5201	Type	Type 61697 Length length in octets , excluding Type , Length , and Padding SIG alg signature algorithm Signature the signature is calculated over the HIP packet , excluding the HIP_SIGNATURE parameter and any parameters that follow the HIP_SIGNATURE parameter . The checksum field MUST be set to zero , and the HIP header length in the HIP common header MUST be calculated only to the beginning of the HIP_SIGNATURE parameter when the signature is calculated . 	100	0
5201	Type	Type 61633 Length length in octets , excluding Type , Length , and Padding SIG alg signature algorithm Signature Within the R1 packet that contains the HIP_SIGNATURE_2 parameter , the Initiator's HIT , the checksum field , and the Opaque and Random #I fields in the PUZZLE parameter MUST be set to zero while computing the HIP_SIGNATURE_2 signature . Further , the HIP packet length in the HIP header MUST be adjusted as if the HIP_SIGNATURE_2 was not in the packet during the signature calculation , i.e ., the HIP packet length points to the beginning of the HIP_SIGNATURE_2 parameter during signing and verification . 	100	0
5201	Type	Type 385 Length 4 Update ID 32-bit sequence number 	100	0
5201	Type	Type 449 Length variable ( multiple of 4 ) peer Update ID 32-bit sequence number corresponding to the Update ID being ACKed . 	100	0
5201	Type	Type 641 Length length in octets , excluding Type , Length , and Padding Reserved zero when sent , ignored when received IV Initialization vector , if needed , otherwise nonexistent . The length of the IV is inferred from the HIP transform . Encrypted The data is encrypted using an encryption algorithm data as defined in HIP transform . 	100	0
5201	Type	Type 832 Length length in octets , excluding Type , Length , and Padding Reserved zero when sent , ignored when received Notify Message specifies the type of notification Type Notification informational or error data transmitted in addition Data to the Notify Message Type . Values for this field are type specific ( see below ). Padding any Padding , if necessary , to make the parameter a multiple of 8 bytes . 	100	0
5201	Type	Type 897 Length variable Opaque data opaque data , supposed to be meaningful only to the node that sends ECHO_REQUEST_SIGNED and receives a corresponding ECHO_RESPONSE_SIGNED or ECHO_RESPONSE_UNSIGNED . 	400	0
5201	Type	Type 63661 Length variable Opaque data opaque data , supposed to be meaningful only to the node that sends ECHO_REQUEST_UNSIGNED and receives a corresponding ECHO_RESPONSE_UNSIGNED . 	400	0
5201	Type	Type 961 Length variable Opaque data opaque data , copied unmodified from the ECHO_REQUEST_SIGNED or ECHO_REQUEST_UNSIGNED parameter that triggered this response . 	400	0
5201	Type	Type 63425 Length variable Opaque data opaque data , copied unmodified from the ECHO_REQUEST_SIGNED or ECHO_REQUEST_UNSIGNED parameter that triggered this response . 	100	0
5201	Packet Type	The 7-bit Packet Type field in a HIP protocol packet describes the type of a HIP protocol message . It is defined in Section 5.1 . The current values are defined in Sections 5.3.1 through 5.3.8 . 	231	0
5201	Group ID	The eight-bit Group ID values appear in the DIFFIE_HELLMAN parameter and are defined in Section 5.2.6 . New values either from the reserved or unassigned space are assigned through IETF Consensus . 	231	0
5201	Notify Message Type	The 16-bit Notify Message Type values in a NOTIFICATION parameter are defined in Section 5.2.16 . 	231	0
5201	C	This document is subject to the rights , licenses and restrictions contained in BCP 78 , and except as set forth therein , the authors retain all their rights . 	303	0
5202	Type	Type 65 Length 12 KEYMAT Index Index , in bytes , where to continue to draw ESP keys from KEYMAT . If the packet includes a new Diffie-Hellman key and the ESP_INFO is sent in an UPDATE packet , the field MUST be zero . If the ESP_INFO is included in base exchange messages , the KEYMAT Index must have the index value of the point from where the ESP SA keys are drawn . Note that the length of this field limits the amount of keying material that can be drawn from KEYMAT . If that amount is exceeded , the packet MUST contain a new Diffie-Hellman key . OLD SPI old SPI for data sent to address(es ) associated with this SA . If this is an initial SA setup , the OLD SPI value is zero . 	100	0
5202	NEW SPI	NEW SPI new SPI for data sent to address(es ) associated with this SA . 	400	0
5202	Type	Type 4095 Length length in octets , excluding Type , Length , and padding Reserved zero when sent , ignored when received Suite ID defines the ESP Suite to be used 	100	0
5203	Type	Type 930 Length Length in octets , excluding Type , Length , and Padding . Min Lifetime Minimum registration lifetime . Max Lifetime Maximum registration lifetime . Reg Type The registration types offered by the registrar . 	100	0
5203	Type	Type 932 Length Length in octets , excluding Type , Length , and Padding . Lifetime Requested registration lifetime . Reg Type The preferred registration types in order of preference . 	100	0
5203	Type	Type 934 Length Length in octets , excluding Type , Length , and Padding . Lifetime Granted registration lifetime . Reg Type The granted registration types in order of preference . 	100	0
5203	Type	Type 936 Length Length in octets , excluding Type , Length , and Padding . Failure Type Reason for failure . Reg Type The registration types that failed with the specified reason . 	100	0
5204	Type	Type 65500 Length Variable . Length in octets , excluding Type , Length , and Padding . HMAC HMAC computed over the HIP packet , excluding the RVS_HMAC parameter and any following parameters . The HMAC is keyed with the appropriate HIP integrity key ( HIP-lg or HIP-gl ) established when rendezvous registration happened . The HIP " checksum " field MUST be set to zero , and the HIP header length in the HIP common header MUST be calculated not to cover any excluded parameter when the HMAC is calculated . The size of the HMAC is the natural size of the hash computation output depending on the used hash function . 	100	0
5204	Type	Type 65498 Length 16 Address An IPv6 address or an IPv4-in-IPv6 format IPv4 address . 	100	0
5204	Type	Type 65502 Length Variable Address An IPv6 address or an IPv4-in-IPv6 format IPv4 address . 	100	0
5205	HIT	For any HIP node , its Host Identity ( HI ), the associated Host Identity Tag ( HIT ), and the FQDN of its possible RVSs can be stored in a DNS HIP RR . Any conforming implementation may store a Host Identity ( HI ) and its associated Host Identity Tag ( HIT ) in a DNS HIP RDATA format . HI and HIT are defined in Section 3 of the HIP specification [ RFC5201 ]. 	303	0
5205	HIT	www.example.com . IN HIP ( 2 200100107B1A74DF365639CC39F1D578 AwEAAbdxyhNuSutc5EMzxTs9LBPCIkOFH8cIvM4p 9+LrV4e19WzK00+CI6zBCQTdtWsuxKbWIy87UOoJTwkUs7lBu+Upr1gsNrut79ryra+bSRGQ b1slImA8YVJyuIDsj7kwzG7jnERNqnWxZ48AWkskmdHaVDP4BcelrTI3rMXdXF5D rvs.example.com . ) 	240	0
5205	HIT	www.example.com . IN HIP ( 2 200100107B1A74DF365639CC39F1D578 AwEAAbdxyhNuSutc5EMzxTs9LBPCIkOFH8cIvM4p 9+LrV4e19WzK00+CI6zBCQTdtWsuxKbWIy87UOoJTwkUs7lBu+Upr1gsNrut79ryra+bSRGQ b1slImA8YVJyuIDsj7kwzG7jnERNqnWxZ48AWkskmdHaVDP4BcelrTI3rMXdXF5D rvs1.example.com . rvs2.example.com . ) 	240	0
5206	Locator	This document defines a generalization of an address called a " locator ". A locator specifies a point-of-attachment to the network but may also include additional end-to-end tunneling or per-host demultiplexing context that affects how packets are handled below the logical HIP sublayer of the stack . This generalization is useful because IP addresses alone may not be sufficient to describe how packets should be handled below HIP . For example , in a host multihoming context , certain IP addresses may need to be associated with certain ESP SPIs to avoid violating the ESP anti-replay window . Addresses may also be affiliated with transport ports in certain tunneling scenarios . Locators may simply be traditional network addresses . The format of the locator fields in the LOCATOR parameter is defined in Section 4 . 	230	0
5206	Type	Length : Length in octets , excluding Type and Length fields , and excluding padding . 	100	0
5206	Length	Length : Length in octets , excluding Type and Length fields , and excluding padding . 	100	0
5206	Traffic Type	Traffic Type : Defines whether the locator pertains to HIP signaling , user data , or both . 	400	0
5206	Locator Type	Locator Length : Defines the length of the Locator field , in units of 4-byte words ( Locators up to a maximum of 4*255 octets are supported ). 	100	0
5206	Locator Length	Locator Length : Defines the length of the Locator field , in units of 4-byte words ( Locators up to a maximum of 4*255 octets are supported ). 	100	0
5206	Reserved	P : Preferred locator . Set to one if the locator is preferred for that Traffic Type; otherwise , set to zero . 	210	0
5206	P	P : Preferred locator . Set to one if the locator is preferred for that Traffic Type; otherwise , set to zero . 	210	0
5206	Locator Lifetime	Locator : The locator whose semantics and encoding are indicated by the Locator Type field . All Locator sub-fields are integral multiples of four octets in length . 	230	0
5206	Locator	Locator : The locator whose semantics and encoding are indicated by the Locator Type field . All Locator sub-fields are integral multiples of four octets in length . 	230	0
5206	Traffic Type	4.1 . Traffic Type and Preferred Locator 	240	0
5206	Locator Type	The following Locator Type values are defined , along with the associated semantics of the Locator field : 	231	0
5206	Locator	The following Locator Type values are defined , along with the associated semantics of the Locator field : 	231	0
5213	P	A new flag ( P ) is included in the Binding Update message to indicate to the local mobility anchor that the Binding Update message is a proxy registration . The flag MUST be set to the value of 1 for proxy registrations and MUST be set to 0 for direct registrations sent by a mobile node . 	210	0
5213	H	Handoff Indicator option 	231	0
5213	P	A new flag ( P ) is included in the Binding Acknowledgement message to indicate that the local mobility anchor that processed the corresponding Proxy Binding Update message supports proxy registrations . The flag is set to a value of 1 only if the corresponding Proxy Binding Update had the Proxy Registration Flag ( P ) set to value of 1 . 	210	0
5213	H	Handoff Indicator option 	231	0
5213	Status	An 8-bit unsigned integer indicating the disposition of the Proxy Binding Update . Values of the Status field less than 128 indicate that the Proxy Binding Update was accepted by the local mobility anchor . Values greater than or equal to 128 indicate that the Proxy Binding Update message was rejected by the local mobility anchor . Section 8.9 defines the Status values that can used in Proxy Binding Acknowledgement message . 	110	0
5213	Length	8-bit unsigned integer indicating the length of the option in octets , excluding the type and length fields . This field MUST be set to 18 . 	100	0
5213	Reserved	This 8-bit field is unused for now . The value MUST be initialized to 0 by the sender and MUST be ignored by the receiver . 	500	0
5213	R	This 8-bit field is unused for now . The value MUST be initialized to 0 by the sender and MUST be ignored by the receiver . 	500	0
5213	Prefix Length	8-bit unsigned integer indicating the prefix length of the IPv6 prefix contained in the option . 	100	0
5213	Home Network Prefix	A sixteen-byte field containing the mobile node's IPv6 Home Network Prefix . 	400	0
5213	H	A new option , Handoff Indicator option is defined for use with the Proxy Binding Update and Proxy Binding Acknowledgement messages exchanged between a local mobility anchor and a mobile access gateway . This option is used for exchanging the mobile node's handoff-related hints . 	231	0
5213	Length	8-bit unsigned integer indicating the length of the option in octets , excluding the type and length fields . This field MUST be set to 2 . 	100	0
5213	Reserved	This 8-bit field is unused for now . The value MUST be initialized to 0 by the sender and MUST be ignored by the receiver . 	500	0
5213	R	This 8-bit field is unused for now . The value MUST be initialized to 0 by the sender and MUST be ignored by the receiver . 	500	0
5213	H	An 8-bit field that specifies the type of handoff . The values ( 0 - 255 ) will be allocated and managed by IANA . The following values are currently defined . 	231	0
5213	HI	An 8-bit field that specifies the type of handoff . The values ( 0 - 255 ) will be allocated and managed by IANA . The following values are currently defined . 	231	0
5213	Length	8-bit unsigned integer indicating the length of the option in octets , excluding the type and length fields . This field MUST be set to 2 . 	100	0
5213	Reserved	This 8-bit field is unused for now . The value MUST be initialized to 0 by the sender and MUST be ignored by the receiver . 	500	0
5213	R	This 8-bit field is unused for now . The value MUST be initialized to 0 by the sender and MUST be ignored by the receiver . 	500	0
5213	ATT	An 8-bit field that specifies the access technology through which the mobile node is connected to the access link on the mobile access gateway . 	230	0
5213	Reserved	This field is unused for now . The value MUST be initialized to 0 by the sender and MUST be ignored by the receiver . 	500	0
5213	Length	8-bit unsigned integer indicating the length of the option in octets , excluding the type and length fields . This field MUST be set to 16 . 	100	0
5213	Link-local Address	Link-local Address 	230	0
5213	Length	8-bit unsigned integer indicating the length in octets of the option , excluding the type and length fields . The value for this field MUST be set to 8 . 	100	0
5213	Timestamp	A 64-bit unsigned integer field containing a timestamp . The value indicates the number of seconds since January 1 , 1970 , 00:00 UTC , by using a fixed point format . In this format , the integer number of seconds is contained in the first 48 bits of the field , and the remaining 16 bits indicate the number of 1/65536 fractions of a second . 	122	0
5213	A	( A ) 0x8000 [ RFC3775 ] 	302	0
5213	H	( H ) 0x4000 [ RFC3775 ] 	302	0
5213	L	( L ) 0x2000 [ RFC3775 ] 	302	0
5213	K	( K ) 0x1000 [ RFC3775 ] 	302	0
5213	M	( M ) 0x0800 [ RFC4140 ] 	302	0
5213	R	( R ) 0x0400 [ RFC3963 ] 	302	0
5213	P	This document reserves a new flag ( P ) as follows : 	231	0
5213	P	The rest of the values in the 16-bit field are reserved . New values can be assigned by Standards Action or IESG approval . 	231	0
5213	K	( K ) 0x80 [ RFC3775 ] 	240	0
5213	R	( R ) 0x40 [ RFC3963 ] 	240	0
5213	P	This document reserves a new flag ( P ) as follows : 	231	0
5213	P	The rest of the values in the 8-bit field are reserved . New values can be assigned by Standards Action or IESG approval . 	231	0
5215	V	This field identifies the version of RTP . The version used by this specification is two ( 2 ). 	220	0
5215	P	Padding MAY be used with this payload format according to Section 5.1 of [ RFC3550 ]. 	400	0
5215	X	Extension ( X ): 1 bit 	400	0
5215	CC	CSRC count ( CC ): 4 bits 	400	0
5215	M	Set to zero . Audio silence suppression is not used . This conforms to Section 4.1 of [ VORBIS-SPEC-REF ]. 	500	0
5215	PT	An RTP profile for a class of applications is expected to assign a payload type for this format , or a dynamically allocated payload type SHOULD be chosen that designates the payload as Vorbis . 	231	0
5215	Ident	This 24-bit field is used to associate the Vorbis data to a decoding Configuration . It is stored as a network byte order integer . 	400	0
5215	F	Fragment type ( F ): 2 bits 	400	0
5215	VDT	This field specifies the kind of Vorbis data stored in this RTP packet . There are currently three different types of Vorbis payloads . Each packet MUST contain only a single type of Vorbis packet ( e.g ., you must not aggregate configuration and comment packets in the same RTP payload ). 	231	0
5216	Code	Code 	231	0
5216	Identifier	The Identifier field is one octet and aids in matching responses with requests . The Identifier field MUST be changed on each Request packet . 	301	0
5216	Length	The Length field is two octets and indicates the length of the EAP packet including the Code , Identifier , Length , Type , and Data fields . Octets outside the range of the Length field should be treated as Data Link Layer padding and MUST be ignored on reception . 	100	0
5216	Type	Type 	240	0
5216	Flags	Flags 	202	0
5216	TLS Message Length	The TLS Message Length field is four octets , and is present only if the L bit is set . This field provides the total length of the TLS message or set of messages that is being fragmented . 	100	0
5216	Code	Code 	231	0
5216	Identifier	The Identifier field is one octet and MUST match the Identifier field from the corresponding request . 	231	0
5216	Length	The Length field is two octets and indicates the length of the EAP packet including the Code , Identifier , Length , Type , and Data fields . Octets outside the range of the Length field should be treated as Data Link Layer padding and MUST be ignored on reception . 	100	0
5216	Type	Type 	240	0
5216	Flags	Flags 	202	0
5216	TLS Message Length	The TLS Message Length field is four octets , and is present only if the L bit is set . This field provides the total length of the TLS message or set of messages that is being fragmented . 	100	0
5216	2	[ 3 ] Section 5 of BCP 86 [ RFC3766 ] offers advice on the required RSA or Diffie-Hellman ( DH ) module and Digital Signature Algorithm ( DSA ) subgroup size in bits , for a given level of attack resistance in bits . For example , a 2048-bit RSA key is recommended to provide 128-bit equivalent key strength . The National Institute of Standards and Technology ( NIST ) also offers advice on appropriate key sizes in [ SP800-57 ]. 	400	0
5219	0	( This particular pattern has the property that any loss of up to four consecutive ADUs in the interleaved stream will lead to a deinterleaved stream with no gaps greater than one .) This produces the following sequence of ISNs : 	400	0
5219	C	This document is subject to the rights , licenses and restrictions contained in BCP 78 , and except as set forth therein , the authors retain all their rights . 	303	0
5247	EAP	Extensible Authentication Protocol ( EAP ) Key Management Framework 	400	0
5247	EAP	EAP-AKA is defined in [ RFC4187 ]. The EAP-AKA Session-Id is the concatenation of the EAP Type Code ( 0x17 ) with the contents of the RAND field from the AT_RAND attribute , followed by the contents of the AUTN field in the AT_AUTN attribute : 	231	0
5247	EAP	EAP-SIM is defined in [ RFC4186 ]. The EAP-SIM Session-Id is the concatenation of the EAP Type Code ( 0x12 ) with the contents of the RAND field from the AT_RAND attribute , followed by the contents of the NONCE_MT field in the AT_NONCE_MT attribute : 	231	0
5247	EAP	EAP-PSK is defined in [ RFC4764 ]. The EAP-PSK Session-Id is the concatenation of the EAP Type Code ( 0x2F ) with the peer ( RAND_P ) and server ( RAND_S ) nonces : 	231	0
5247	EAP	EAP-SAKE is defined in [ RFC4763 ]. The EAP-SAKE Session-Id is the concatenation of the EAP Type Code ( 0x30 ) with the contents of the RAND_S field from the AT_RAND_S attribute , followed by the contents of the RAND_P field in the AT_RAND_P attribute : 	231	0
5265	Type	Type 149 	220	0
5265	Length	Length 2 	100	0
5265	Sub-Type	Sub-Type 0 	231	0
5265	Reserved	Reserved Set to 0 when sending , ignored when receiving 	500	0
5268	H	Handover : A process of terminating existing connectivity and obtaining new IP connectivity . 	302	0
5268	H	Handover Initiate ( HI ): A message from the PAR to the NAR regarding an MN's handover . 	230	0
5268	H	Handover Acknowledge ( HAck ): A message from the NAR to the PAR as a response to HI . 	231	0
5268	H	The MN expects a PrRtAdv in response to its RtSolPr message . If the MN does not receive a PrRtAdv message even after RTSOLPR_RETRIES , it must assume that the PAR does not support the fast handover protocol and stop sending any more RtSolPr messages . 	302	0
5268	Type	Type : 154 	220	0
5268	Code	Code : 0 	500	0
5268	Checksum	Checksum : The ICMPv6 checksum . 	301	0
5268	Subtype	Reserved : MUST be set to zero by the sender and ignored by the receiver . 	500	0
5268	Reserved	Reserved : MUST be set to zero by the sender and ignored by the receiver . 	500	0
5268	Identifier	Identifier : MUST be set by the sender so that replies can be matched to this Solicitation . 	301	0
5268	Type	Type : 154 	220	0
5268	Checksum	Checksum : The ICMPv6 checksum . 	301	0
5268	Subtype	Reserved : MUST be set to zero by the sender and ignored by the receiver . 	500	0
5268	Reserved	Reserved : MUST be set to zero by the sender and ignored by the receiver . 	500	0
5268	Identifier	Identifier : Copied from Router Solicitation for Proxy Advertisement or set to zero if unsolicited . 	500	0
5268	H	The Handover Initiate ( HI ) is an ICMPv6 message sent by an Access Router ( typically PAR ) to another access router ( typically NAR ) to initiate the process of an MN's handover . 	230	0
5268	Type	Type : 154 	220	0
5268	Checksum	Checksum : The ICMPv6 checksum . 	301	0
5268	Subtype	' S ' flag : Assigned address configuration flag . When set , this message requests a new CoA to be returned by the destination . May be set when Code = 0 . MUST be 0 when Code = 1 . 	210	0
5268	Reserved	Reserved : MUST be set to zero by the sender and ignored by the receiver . 	500	0
5268	Identifier	Identifier : MUST be set by the sender so replies can be matched to this message . 	301	0
5268	H	The Handover Acknowledgment message is a new ICMPv6 message that MUST be sent ( typically by the NAR to the PAR ) as a reply to the Handover Initiate message . 	301	0
5268	Type	Type : 154 	220	0
5268	Checksum	Checksum : The ICMPv6 checksum . 	301	0
5268	Subtype	Reserved : MUST be set to zero by the sender and ignored by the receiver . 	500	0
5268	Reserved	Reserved : MUST be set to zero by the sender and ignored by the receiver . 	500	0
5268	Identifier	Identifier : Copied from the corresponding field in the Handover Initiate message to which this message is a response . 	230	0
5268	Reserved	Reserved : This field is unused . MUST be set to zero . 	500	0
5268	Lifetime	Lifetime : The requested time in seconds for which the sender wishes to have a binding . 	120	0
5268	Status	Status : 8-bit unsigned integer indicating the disposition of the Fast Binding Update . Values of the Status field that are less than 128 indicate that the Binding Update was accepted by the receiving node . The following such Status values are currently defined : 	230	0
5268	Reserved	Sequence Number : Copied from the FBU message for use by the MN in matching this acknowledgment with an outstanding FBU . 	200	0
5268	Lifetime	Lifetime : The granted lifetime in seconds for which the sender of this message will retain a binding for traffic redirection . 	120	0
5268	Type	Length : The size of this option in 8 octets including the Type , Option-Code , and Length fields . 	100	0
5268	Length	Length : The size of this option in 8 octets including the Type , Option-Code , and Length fields . 	100	0
5268	Prefix Length	Prefix Length : 8-bit unsigned integer that indicates the length of the IPv6 Address Prefix . The value ranges from 0 to 128 . 	100	0
5268	Reserved	Reserved : MUST be set to zero by the sender and MUST be ignored by the receiver . 	500	0
5268	Type	Length : The size of this option in 8 octets including the Type , Option-Code , and Length fields . 	100	0
5268	Length	Length : The size of this option in 8 octets including the Type , Option-Code , and Length fields . 	100	0
5268	Type	Length : The size of this option in octets not including the Type and Length fields . 	100	0
5268	Length	Length : The size of this option in octets not including the Type and Length fields . 	100	0
5268	Type	Type : 21 	220	0
5268	Option Length	SPI : Security Parameter Index . SPI = 0 is reserved for the Authenticator computed using SEND-based handover keys . 	231	0
5268	SPI	SPI : Security Parameter Index . SPI = 0 is reserved for the Authenticator computed using SEND-based handover keys . 	231	0
5268	Authenticator	Authenticator : Same as in RFC 3775 , with " correspondent " replaced by the PAR's IP address , and Kbm replaced by the shared key between the MN and the PAR . 	301	0
5268	Type	Type : 20 	240	0
5268	Length	The length is 1 when a new CoA is not supplied . The length is 3 when a new CoA is present ( immediately following the Reserved field ) 	100	0
5268	Status	Status : 8-bit unsigned integer indicating the disposition of the Unsolicited Neighbor Advertisement message . The following Status values are currently defined : 	231	0
5268	Reserved	Reserved : MUST be set to zero by the sender and MUST be ignored by the receiver . 	500	0
5269	Type	Type : 27 	220	0
5269	Length	Length : The length of the option in units of 8 octets , including the Type and Length fields . The value 0 is invalid . The receiver MUST discard a message that contains this value . 	100	0
5269	Pad Length	Pad Length : The number of padding octets beyond the end of the Handover Key Encryption Public Key field but within the length specified by the Length field . Padding octets MUST be set to zero by senders and ignored by receivers . 	100	0
5269	AT	AT : A 4-bit algorithm type field describing the algorithm used by FMIPv6 to calculate the authenticator . See [ FMIP ] for details . 	231	0
5269	Resrvd .	Resrvd .: A 4-bit field reserved for future use . The value MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
5269	Padding	Padding : A variable-length field making the option length a multiple of 8 , containing as many octets as specified in the Pad Length field . 	100	0
5269	Type	Type : 28 	220	0
5269	Length	Length : The length of the option in units of 8 octets , including the Type and Length fields . The value 0 is invalid . The receiver MUST discard a message that contains this value . 	100	0
5269	Pad Length	Pad Length : The number of padding octets beyond the end of the Encrypted Handover Key field but within the length specified by the Length field . Padding octets MUST be set to zero by senders and ignored by receivers . 	100	0
5269	AT	AT : A 4-bit algorithm type field describing the algorithm used by FMIPv6 to calculate the authenticator . See [ FMIP ] for details . 	231	0
5269	Resrvd .	Resrvd .: A 4-bit field reserved for future use . The value MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
5269	Key Lifetime	Key Lifetime : Lifetime of the handover key , HK-LIFETIME , in seconds . 	100	0
5269	Padding	Padding : A variable-length field making the option length a multiple of 8 , containing as many octets as specified in the Pad Length field . 	100	0
5271	H	If the lower layer information of the new point of attachment is not represented as the link-layer address , the following option SHOULD be used . The primary purpose of this option is to convey the handover assist information described in Section 4 . 	230	0
5271	Type	Type 29 	220	0
5271	Length	Length The size of this option in 8 octets including the Type , Length , Option-Code , and HAI-Length ( Handover Assist Information-Length ) fields . 	100	0
5271	HAI-Length	HAI-Length The size of the HAI-Value field in octets . 	100	0
5271	Type	Type 30 	240	0
5271	Length	Length The size of this option is in 8 octets including the Type , Length , and Option-Code . 	100	0
5281	Flags	Flags 0 1 2 3 4 5 6 7 +---+---+---+---+---+---+---+---+ | L | M | S | R | R | V | +---+---+---+---+---+---+---+---+ 	231	0
5281	AVP Length	The AVP Length field is three octets and indicates the length of this AVP including the AVP Code , AVP Length , AVP Flags , Vendor-ID ( if present ), and Data . 	100	0
5284	Type	An 8-bit number assigned by the ( sub-)organization indicated by the Enterprise Number and Sub Org fields of the USER_ERROR_SPEC object . 	231	0
5284	Length	The Length contains the total length of the subobject in bytes , including the Type and Length fields . The Length MUST be at least 4 , and MUST be a multiple of 4 . 	100	0
5287	Parameter ID	Parameter ID Identifies the TDM PW Options interface parameter , 0x0B . 	231	0
5287	Length	Length 4 , 8 , or 12 ( see below ). 	100	0
5287	F	F , X Reserved for future extensions . MUST be cleared when distributed and MUST be ignored upon reception . 	500	0
5287	X	F , X Reserved for future extensions . MUST be cleared when distributed and MUST be ignored upon reception . 	500	0
5287	RSVD-1	RSVD-1 and RSVD-2 Reserved bits , which MUST be set to 0 by the PW endpoint distributing this FEC and MUST be ignored by the receiver . 	500	0
5287	PT	PT Indicates the value of Payload Type in the RTP header expected by the PW endpoint distributing this FEC . A value of 0 means that the PT value check will not be used for detecting malformed packets . 	302	0
5287	FREQ	FREQ Frequency of timestamping clock in units of 8 kHz . 	121	0
5287	SSRC	SSRC Indicates the value of the Synchronization source ID ( SSRC ID ) in the RTP header expected by the PW endpoint distributing this FEC . A value of 0 means that the SSRC ID value check will not be used for detecting misconnections . Alternatively , Length can be set to 8 in this case . 	302	0
5296	Code	Code 	231	0
5296	Identifier	The Identifier field is one octet . The Identifier field MUST be the same if an EAP-Initiate packet is retransmitted due to a timeout while waiting for a Finish message . Any new ( non-retransmission ) Initiate message MUST use a new Identifier field . 	301	0
5296	Type	This field indicates that this is an ERP exchange . Two type values are defined in this document for this purpose -- Re-auth-Start ( assigned Type 1 ) and Re-auth ( assigned Type 2 ). 	231	0
5296	Reserved	Reserved , MUST be zero . Set to zero on transmission and ignored on reception . 	500	0
5296	SEQ	SEQ : A 16-bit sequence number is used for replay protection . The SEQ number field is initialized to 0 every time a new rRK is derived . 	201	0
5296	Authentication Tag	Authentication Tag : This field contains the integrity checksum over the ERP packet , excluding the authentication tag field itself . The length of the field is indicated by the Cryptosuite . 	400	0
5296	SEQ	SEQ : A 16-bit sequence number is used for replay protection . The SEQ number field is initialized to 0 every time a new rRK is derived . 	201	0
5296	Authentication Tag	Authentication Tag : This field contains the integrity checksum over the ERP packet , excluding the authentication tag field itself . The length of the field is indicated by the Cryptosuite . 	400	0
5320	A	A ( 1 ) the " Acknowledgement Requested " bit . Set to 1 if the ITE wishes to receive an explicit acknowledgement from the ETE . 	231	0
5320	R	R ( 1 ) the " Report Fragmentation " bit . Set to 1 if the ITE wishes to receive a report from the ETE if any IPv4 fragmentation occurs . 	231	0
5320	M	M ( 1 ) the " More Segments " bit . Set to 1 if this SEAL protocol packet contains a non-final segment of a multi-segment mid-layer packet . 	231	0
5320	RSV	RSV ( 2 ) a 2-bit field reserved for future use . Must be set to 0 for the purpose of this specification . 	500	0
5320	SEG	SEG ( 3 ) a 3-bit segment number . Encodes a segment number between 0 - 7 . 	201	0
5329	Type	Type A 16-bit field set to 3 . Length A 16-bit field that indicates the length of the value portion in octets . For this TLV , it is always 16 . Value A stable and routable IPv6 address . 	100	0
5329	18	19 - Local Interface IPv6 Address ( 16N octets , where N is the number of IPv6 addresses ) 	230	0
5329	Type	Type A 16-bit field set to 18 . Length A 16-bit field that indicates the length of the value portion in octets . For this sub-TLV , it is always 8 . Value The neighbor's Interface ID and Router ID . 	100	0
5329	Type	Type A 16-bit field set to 19 . Length A 16-bit field that indicates the length of the value portion in octets . For this sub-TLV , it MUST always be a multiple of 16 octets dependent on the number of IPv6 global addresses advertised . Value A list of one or more local IPv6 interface addresses each consuming 16 octets . 	100	0
5329	Type	Type A 16-bit field set to 20 . Length A 16-bit field that indicates the length of the value portion in octets . For this sub-TLV , it MUST be a multiple of 16 octets dependent on the number of IPv6 global addresses advertised . Value A variable-length Remote Interface IPv6 Address list . 	100	0
5352	H	Handlespace : A cohesive structure of Pool Handles and relations that may be queried by an internal or external agent . 	400	0
5352	R	When set to ' 1 ', this flag indicates that the ENRP server sending this message has rejected the registration . Otherwise , when this flag is set to ' 0 ', this indicates the registration has been granted . 	210	0
5352	Operational Error Parameter	Operational Error Parameter ( optional ): 	231	0
5352	H	When set to ' 1 ', indicates that the ENRP server that sends this message wants to be the Home ENRP server of the receiver of this message . 	210	0
5352	Server Identifier	Server Identifier : 32 bits ( unsigned integer ) 	231	0
5352	Server Identifier	Server Identifier : 32 bits ( unsigned integer ) 	231	0
5352	H	At any time , a PE or PU may wish to resolve a handle . This usually will occur when an ASAP Endpoint sends a Pool Handle ( Section 6.5.1 ) to its Home ENRP server or requests a cache population ( Section 6.3 ). It may also occur for other reasons ( e.g ., the internal ASAP PE wishes to know its peers to send a message to all of them ). When an ASAP Endpoint ( PE or PU ) wishes to resolve a pool handle to a list of accessible transport addresses of the member PEs of the pool , it MUST take the following actions : 	302	0
5352	H	Three types of failure may occur when the ASAP Endpoint at either the PE or PU tries to communicate with an ENRP server : 	400	0
5352	A	A ) SCTP send failure 	302	0
5352	0	The ASAP Endpoint , in response , looks up the pool " new-handle " in its local cache , but fails to find it . 	302	0
5352	0	The ASAP Endpoint , in response , looks up the pool " new-handle " in its local cache and finds the mapping information . 	230	0
5353	Sending Server's ID	Sending Server's ID : 32 bits ( unsigned integer ) 	231	0
5353	Receiving Server's ID	This is the ID of the ENRP server to which this message is intended . If the message is not intended for an individual server ( e.g ., the message is group-casted to a group of servers ), this field MUST be sent with all 0s . If the message is sent point-to-point , this field MAY be sent with all 0s . 	230	0
5353	W	Set to ' 1 ' if the sender of this message is only requesting information about the PEs owned by the message receiver . Otherwise , set to ' 0 '. 	210	0
5353	M	Set to ' 1 ' if the sender of this message has more pool entries to send in subsequent ENRP_HANDLE_TABLE_RESPONSE messages . Otherwise , set to ' 0 '. 	210	0
5353	R	MUST be set to ' 1 ' if the sender of this message is rejecting a handlespace request . In this case , pool entries MUST NOT be included . This might happen if the sender of this message is in the middle of initializing its database or is under high load . 	210	0
5353	Message Length	Indicates the entire length of the message , including the header , in number of octets . 	100	0
5353	Message Length	Indicates the entire length of the message , including the header , in number of octets . 	100	0
5353	Update Action	This field indicates the requested action of the specified PE . The field MUST be set to one of the following values : 	400	0
5353	R	This flag MUST be set to ' 1 ' if the sender of this message is rejecting a PEER_LIST_REQUEST message . If this case occurs , the message MUST NOT include any Server Information Parameters . 	210	0
5353	Message Length	Message Length : 16 bits ( unsigned integer ) 	100	0
5353	Targeting Server's ID	This is the ID of the peer ENRP that is the target of this takeover attempt . 	230	0
5354	Parameter Type	Parameter Type : 16 bits ( unsigned integer ) The Type field is a 16-bit identifier of the type of parameter . It takes a value of 0 to 65534 . The value of 65535 is reserved for IETF-defined extensions . Values , other than those defined in the specific ENRP parameter description , are reserved by IETF . ( Additional types , when needed , will be defined in the future through appropriate IETF/ IANA procedures .) The Parameter Types are encoded such that the two bits of the highest-order specify the action that must be taken if the processing endpoint does not recognize the Parameter Type . 	231	0
5354	Parameter Length	Parameter Length : 16 bits ( unsigned integer ) The Parameter Length field contains the size of the parameter in bytes , including the Parameter Type , Parameter Length , and Parameter Value fields . Thus , a parameter with a zero-length Parameter Value field would have a Length field of 4 . The total length of a parameter ( including Type , Parameter Length and Value fields ) MUST be a multiple of 4 bytes . If the length of the parameter is not a multiple of 4 bytes , the sender MUST pad the parameter at the end ( i.e ., after the Parameter Value field ) with all zero bytes . The length of this padding is not included in the Parameter Length field . A sender MUST NOT pad with more than 3 bytes . The receiver MUST ignore the padding bytes . 	100	0
5354	IPv4 Address	IPv4 Address : 32 bits ( unsigned integer ) Contains an IPv4 address . It is binary encoded . 	230	0
5354	IPv6 Address	IPv6 Address : 128 bits ( unsigned integer ) Contains an IPv6 address . It is binary encoded . 	230	0
5354	DCCP Port	DCCP Port : 16 bits ( unsigned integer ) The DCCP port number signed to this DCCP user transport . 	231	0
5354	DCCP Service Code	DCCP Service Code : 32 bits ( unsigned integer ) The DCCP service code signed to this DCCP user transport . 	231	0
5354	SCTP Port	SCTP Port : 16 bits ( unsigned integer ) The SCTP port number signed to this SCTP user transport . 	231	0
5354	Transport Use	Transport Use : 16 bits ( unsigned integer ) This field represents how the pool element intends this transport address to be used . The field MUST be populated with one of the following values : 	230	0
5354	IPv4 or IPv6 Address #1	IPv4 or IPv6 Address #1 - #n Each indicates an IPv4 or IPv6 address parameter ( as defined above in Section 3.1 and Section 3.2 ) assigned to this SCTP user transport . An SCTP Transport parameter may have a mixed list of IPv4 and IPv6 addresses and at least one IP address parameter MUST be present in an SCTP Transport parameter . 	230	0
5354	TCP Port	TCP Port : 16 bits ( unsigned integer ) The TCP port number signed to this TCP user transport . 	231	0
5354	UDP Port	UDP Port : 16 bits ( unsigned integer ) The UDP port number signed to this UDP user transport . 	231	0
5354	UDP Port	UDP Port : 16 bits ( unsigned integer ) The UDP-Lite port number signed to this UDP-Lite user transport . 	231	0
5354	Policy Type	Policy Type : 32 bits ( unsigned integer ) Specifies the type of selection policy . The values are defined in [ RFC5356 ]. 	231	0
5354	PE Identifier	PE Identifier : 32 bits ( unsigned integer ) Uniquely identifies the PE in the pool . The PE picks its identifier when it starts up . 	231	0
5354	Home ENRP Server Identifier	Home ENRP Server Identifier : 32 bits ( unsigned integer ) Indicates the current Home ENRP server of this PE . Set to all 0s if the PE's Home ENRP server is undetermined . 	303	0
5354	Registration Life	Registration Life : 32 bits ( signed integer ) Indicates the lifetime of the registration in number of seconds . A value of - 1 indicates infinite lifetime . 	100	0
5354	Server ID	Server ID : 32 bits ( unsigned integer ) This is the ID of the ENRP server , as defined in [ RFC5353 ]. 	230	0
5354	Server Transport	Server Transport : This is an SCTP Transport Parameter , as defined in Section 3.4 , that contains the network access address(es ), SCTP port number , etc . of the ENRP server . 	230	0
5354	Cause Code	Cause Code : 16 bits ( unsigned integer ) Defines the type of error condition being reported . 	231	0
5354	Cause Length	Cause Length : 16 bits ( unsigned integer ) Set to the size of the parameter in bytes , including the Cause Code , Cause Length , and Cause-Specific Information fields , but not including any padding at the end of this error cause TLV . 	100	0
5354	Cookie	Cookie : variable length The Cookie is an arbitrary byte string of ( Length - 4 ) bytes . 	400	0
5354	PE Identifier	PE Identifier : 32 bits ( unsigned integer ) Uniquely identifies the PE in the pool . The PE picks its identifier when it starts up . See [ RFC5352 ] for recommendations on PE identifier generation . 	231	0
5354	PE Checksum	PE Checksum : 16 bits ( unsigned integer ) An overall checksum of all PEs in the current handlespace owned by an ENRP server ( which is normally the sender of this TLV ). The definition and calculation of this checksum is defined in [ RFC5353 ]. 	301	0
5354	Opaque Transport Data	Opaque Transport Data : variable length The Opaque Transport Data is an arbitrary byte string of ( Length - 4 ) bytes . 	400	0
5354	Message Type	Message Type : 8 bits ( unsigned integer ) This field identifies the type of information contained in the Message Value field . It takes a value from 0 to 254 . The value of 255 is reserved for future use as an extension field . Message Types are encoded such that the two bits of the highest order specify the action that must be taken if the message receiver does not recognize the Message Type . 	231	0
5354	Message Length	Message Length : 16 bits ( unsigned integer ) This value represents the size of the message in bytes , including the Message Type , Message Flags , Message Length , and Message Value fields . Therefore , if the Message Value field is zero length , the Length field will be set to 4 . Note , the value in the Message Length field will NOT cover any padding at the end of this message . 	100	0
5354	Message Value	Message Value : variable length The Message Value field contains the actual information to be transferred in the message . The usage and format of this field is dependent on the Message Type . The total length of a message ( including Type , Length , and Value fields ) MUST be a multiple of 4 bytes . If the length of the message is not a multiple of 4 bytes , the sender MUST pad the 	400	0
5356	Load	The term load is a value specifying how much a pool element's resources are currently utilized . 0x00000000 states that the pool element is not utilized ( 0 %); 0xffffffff states that it is fully utilized ( 100 %). Defining what utilization means is application - dependent and out of the scope of RSerPool . However , it is required that all pool elements of the same pool using load information have the same definition of load . 	240	0
5356	Weight	Weight defines a pool element's service capacity relative to other pool elements of the same pool . Theoretically , there is no upper limit for weight values ( although limited by datatype size ). Defining what value weights compare is application-dependent and out of the scope of RSerPool . However , it is required that all pool elements of the same pool using weight information have the same definition of weight . 	231	0
5356	Weight	o Weight ( 32 bits , unsigned integer ): Weight constant for the WRR process . 	100	0
5356	Weight	o Weight ( 32 bits , unsigned integer ): Weight constant for the WRAND process . 	100	0
5356	Priority	o Priority ( 32 bits , unsigned integer ): Larger numbers mean higher priorities . 	231	0
5356	Load	o Load ( 32 bits , unsigned integer ): Current load of the pool element . 	231	0
5356	Load	o Load ( 32 bits , unsigned integer ): Current load of the pool element . 	231	0
5356	Load Degradation	o Load Degradation ( 32 bits , unsigned integer ): Load Degradation constant of the pool element . 	231	0
5356	Load	o Load ( 32 bits , unsigned integer ): Current load of the pool element . 	231	0
5356	Load Degradation	o Load Degradation ( 32 bits , unsigned integer ): Load Degradation constant of the pool element . 	231	0
5356	Load	o Load ( 32 bits , unsigned integer ): Current load of the pool element . 	231	0
5356	X	o X : If set to 1 , the policy is user defined and not standardized . All standards policies reserved by the IETF use X=0 . 	210	0
5356	A	o A : If set to 1 , the policy is adaptive . Otherwise , it is non - adaptive . 	210	0
5356	Policy Number	Nine initial policy types have been assigned and are maintained in a new table , " RSerPool Policy Types ": 	231	0
5371	tp	This field indicates how a JPEG 2000 image is scanned ( progressive or interlace ). 	302	0
5371	MHF	MHF indicates whether a main header or packet of a main header is in the RTP packet . 	210	0
5371	mh_id	Main header identification value . This is used for JPEG 2000 main header recovery . 	400	0
5371	T	The T bit indicates whether the tile number field is valid or invalid . A sender MUST set the T bit to 1 when invalid and 0 when valid . 	210	0
5371	priority	The priority field indicates the importance of the JPEG 2000 packet included in the payload . Typically , a higher priority value is set in the packets containing JPEG 2000 packets that contain the lower sub-bands . 	231	0
5371	tile number	This field shows the tile number of the payload . This field is only valid when the T bit is 0 . If the T bit is set to 1 , the receiver MUST ignore this field . 	302	0
5371	fragment offset	This value MUST be set to the byte offset of the current payload in relation to the very beginning of each JPEG 2000 codestream ( JPEG 2000 frame ). 	110	0
5371	.	This document is subject to the rights , licenses and restrictions contained in BCP 78 , and except as set forth therein , the authors retain all their rights . 	303	0
5372	mh_id	Main header identification value . This is used for JPEG 2000 main header recovery . 	400	0
5372	priority	The priority field indicates the importance of the JPEG 2000 packet included in the payload . Typically , a higher priority value is set in the packets containing JPEG 2000 packets containing the lower sub-bands . 	231	0
5380	M	M 	240	0
5380	Type	Type 	240	0
5380	Length	8-bit unsigned integer . The length of the option and MUST be set to 3 . 	100	0
5380	Dist	A 4-bit unsigned integer identifying the distance between MAP and the receiver of the advertisement , measure in the number of hops and starting from 1 if the MAP is on the same link as the mobile node . A distance value of zero MUST NOT be used . 	230	0
5380	Pref	The preference field , used as an indicator of operator preference . A 4-bit unsigned integer . A decimal value of 15 indicates the highest preference . When comparing two potential MAPs , the mobile node SHOULD inspect this field as a tie-breaker for MAPs that have equal Dist values . 	231	0
5380	R	When set to 1 , it indicates that the mobile node is allocated the RCoA by the MAP based on Section 9 of [ RFC4877 ]. 	302	0
5380	Valid Lifetime	The minimum value ( in seconds ) of both the valid lifetime of the prefix used to form the MAP's address and that used to form the RCoA . This value indicates the validity of the MAP's address and the RCoA . 	120	0
5404	F	F ( 1 bit ): If set to 1 , indicates that this ToC entry is followed by another ToC entry; if set to zero , indicates that this ToC entry is the last one in the ToC . 	210	0
5404	L	L ( 5 bits ): A field that gives the frame length of each individual frame within the frame-block . 	100	0
5404	L	L length(bytes ) ============================ 0 0 NO_DATA 1-7 N/A ( reserved ) 8-22 80+10*(L-8 ) 23-27 240+20*(L-23 ) 28-31 N/A ( reserved ) 	240	0
5404	L	L Bytes Codec Bitrate(kbps ) =================================== 8 80 32 9 90 36 10 100 40 12 120 48 16 160 64 22 220 88 23 240 96 25 280 112 27 320 128 	240	0
5404	R	R ( 2 bits ): Reserved bits . SHALL be set to zero on sending and SHALL be ignored on reception . 	500	0
5404	Padd	Padd ( 4 bits ): To ensure octet alignment , 4 padding bits SHALL be included at the end of the ToC entry in case there is an odd number of frame-blocks in the group referenced by this ToC entry . These bits SHALL be set to zero and SHALL be ignored by the receiver . If a group containing an even number of frames is referenced by this ToC entry , these padding bits SHALL NOT be included in the payload . 	400	0
5412	Echo Request	Echo Request : The WTP receives an Echo Request message ( Section 6.5 ), to which it MUST respond with an Echo Response ( see Section 6.6 ). 	301	0
5412	Length	The 16-bit length field contains the number of bytes in the Payload . The field is encoded as an unsigned number . If the LWAPP packet is encrypted , the length field includes the Advanced Encryption Standard Counter with CBC-MAC ( AES-CCM ) MIC ( see Section 10.2 for more information ). 	100	0
5412	Status	The interpretation of this 16-bit field is binding-specific . Refer to the transport portion of the binding for a wireless technology for the specification . 	231	0
5412	Frag ID	3.3.3.3 . Frag ID 	240	0
5412	Discovery	Discovery : LWAPP Discovery messages are used to identify potential ACs , their load and capabilities . 	231	0
5412	Message Type	The Message Type field identifies the function of the LWAPP control message . The valid values for a Message Type are the following : 	231	0
5412	Session ID	The Session ID is a 32-bit unsigned integer that is used to identify the security context for encrypted exchanges between the WTP and the AC . Note that a Session ID is a random value that MUST be unique between a given AC and any of the WTPs with which it may be communicating . 	230	0
5412	Type	Type : 104 for Vendor Specific 	231	0
5412	Length	Length : >= 7 	100	0
5412	Vendor Identifier	Vendor Identifier : A 32-bit value containing the IANA-assigned " SMI Network Management Private Enterprise Codes " [ 13 ]. 	231	0
5412	Element ID	Element ID : A 16-bit Element Identifier that is managed by the vendor . 	230	0
5412	Discovery Type	The Discovery message element is used to configure a WTP to operate in a specific mode . 	231	0
5412	Type	Type : 58 for Discovery Type 	231	0
5412	Length	Length : 1 	100	0
5412	Discovery Type	Discovery Type : An 8-bit value indicating how the AC was discovered . The following values are supported : 	240	0
5412	Type	Type : 3 for WTP Descriptor 	231	0
5412	Length	Length : 16 	100	0
5412	Hardware Version	Hardware Version : A 32-bit integer representing the WTP's hardware version number . 	220	0
5412	Software Version	Software Version : A 32-bit integer representing the WTP's Firmware version number . 	220	0
5412	Boot Version	Boot Version : A 32-bit integer representing the WTP's boot loader's version number . 	220	0
5412	Max Radios	Max Radios : An 8-bit value representing the number of radios ( where each radio is identified via the RID field ) supported by the WTP . 	231	0
5412	Encryption Capabilities	Encryption Capabilities : This 16-bit field is used by the WTP to communicate its capabilities to the AC . Since most WTPs support link-layer encryption , the AC may make use of these services . There are binding-dependent encryption capabilites . A WTP that does not have any encryption capabilities would set this field to zero ( 0 ). Refer to the specific binding for the specification . 	400	0
5412	Type	Type : 4 for WTP Radio Information 	231	0
5412	Length	Length : 2 	100	0
5412	Radio ID	Radio ID : The Radio Identifier , typically refers to some interface index on the WTP . 	231	0
5412	Radio Type	Radio Type : The type of radio present . The following values are supported : 	231	0
5412	Type	Type : 2 for AC Address 	231	0
5412	Length	Length : 7 	100	0
5412	Reserved	Reserved : MUST be set to zero 	500	0
5412	MAC Address	MAC Address : The MAC address of the AC 	230	0
5412	Type	Type : 6 for AC Descriptor 	231	0
5412	Length	Length : 17 	100	0
5412	Reserved	Reserved : MUST be set to zero 	500	0
5412	Hardware Version	Hardware Version : A 32-bit integer representing the AC's hardware version number . 	220	0
5412	Software Version	Software Version : A 32-bit integer representing the AC's Firmware version number . 	220	0
5412	Stations	Stations : A 16-bit integer representing the number of mobile stations currently associated with the AC . 	231	0
5412	Limit	Limit : A 16-bit integer representing the maximum number of stations supported by the AC . 	231	0
5412	Radios	Radios : A 16-bit integer representing the number of WTPs currently attached to the AC . 	231	0
5412	Max Radio	Max Radio : A 16-bit integer representing the maximum number of WTPs supported by the AC . 	231	0
5412	Security	Security : An 8-bit bitmask specifying the security schemes supported by the AC . The following values are supported ( see Section 10 ): 	400	0
5412	Type	Type : 31 for AC Name 	231	0
5412	Length	Length : > 0 	100	0
5412	Type	Type : 99 for WTP Manager Control IPv4 Address 	400	0
5412	Length	Length : 6 	100	0
5412	IP Address	IP Address : The IP address of an interface . 	230	0
5412	WTP Count	WTP Count : The number of WTPs currently connected to the interface . 	231	0
5412	Type	Type : 137 for WTP Manager Control IPv6 Address 	400	0
5412	Length	Length : 6 	100	0
5412	IP Address	IP Address : The IP address of an interface . 	230	0
5412	WTP Count	WTP Count : The number of WTPs currently connected to the interface . 	231	0
5412	Discovery Type	5.3.1 . Discovery Type 	240	0
5412	Type	Type : 5 for WTP Name 	220	0
5412	Length	Length : > 0 	100	0
5412	Type	Type : 35 for Location Data 	400	0
5412	Length	Length : > 0 	100	0
5412	Type	Type : 44 for Certificate 	220	0
5412	Length	Length : > 0 	100	0
5412	Session ID	The Session ID message element value contains a randomly generated [ 4 ] unsigned 32-bit integer . 	301	0
5412	Type	Type : 45 for Session ID 	231	0
5412	Length	Length : 4 	100	0
5412	Session ID	Session ID : 32-bit random session identifier . 	202	0
5412	Type	Type : 18 for Test 	231	0
5412	Length	Length : > 0 	100	0
5412	Type	Type : 111 for XNonce 	231	0
5412	Length	Length : 16 	100	0
5412	Nonce	Nonce : 1 16-octet random nonce . 	302	0
5412	Result Code	The Result Code message element value is a 32-bit integer value , indicating the result of the request operation corresponding to the sequence number in the message . The Result Code is included in a successful Join Response . 	231	0
5412	Type	Type : 2 for Result Code 	231	0
5412	Length	Length : 4 	100	0
5412	Result Code	Result Code : The following values are defined : 	231	0
5412	Status	The Status message element is sent by the AC to the WTP in a non - successful Join Response message . This message element is used to indicate the reason for the failure and should only be accompanied with a Result Code message element that indicates a failure . 	210	0
5412	Type	Type : 60 for Status 	231	0
5412	Length	Length : 1 	100	0
5412	Status	Status : The Status field indicates the reason for an LWAPP failure . The following values are supported : 	240	0
5412	Type	Type : 138 for WTP Manager Data IPv4 Address 	230	0
5412	Length	Length : 4 	100	0
5412	IP Address	IP Address : The IP address of an interface . 	230	0
5412	Type	Type : 139 for WTP Manager Data IPv6 Address 	230	0
5412	Length	Length : 4 	100	0
5412	IP Address	IP Address : The IP address of an interface . 	230	0
5412	Type	Type : 59 for AC List 	220	0
5412	Length	Length : >= 4 	100	0
5412	Type	Type : 141 for AC List 	231	0
5412	Length	Length : >= 4 	100	0
5412	Type	Type : 108 for ANonce 	231	0
5412	Length	Length : 16 	100	0
5412	Nonce	Nonce : An encrypted , 16-octet random nonce . 	303	0
5412	Type	Type : 109 for PSK-MIC 	220	0
5412	Length	Length : > 1 	100	0
5412	SPI	SPI : The Security Parameter Index ( SPI ) field specifies the cryptographic algorithm used to create the message integrity check . The following values are supported : 	231	0
5412	Session ID	6.3.1 . Session ID 	240	0
5412	Type	Type : 107 for WNonce 	220	0
5412	Length	Length : 16 	100	0
5412	Nonce	Nonce : An encrypted , 16-octet random nonce . 	303	0
5412	Session ID	6.4.1 . Session ID 	240	0
5412	Echo Request	The Echo Request message is a keepalive mechanism for the LWAPP control message . 	231	0
5412	Session ID	6.7.1 . Session ID 	202	0
5412	Session ID	6.8.1 . Session ID 	240	0
5412	Session ID	6.11.1 . Session ID 	202	0
5412	Type	Type : 27 for Administrative State 	231	0
5412	Length	Length : 2 	100	0
5412	Radio ID	Radio ID : An 8-bit value representing the radio to configure . The Radio ID field may also include the value of 0xff , which is used to identify the WTP itself . Therefore , if an AC wishes to change the administrative state of a WTP , it would include 0xff in the Radio ID field . 	231	0
5412	Admin State	Admin State : An 8-bit value representing the administrative state of the radio . The following values are supported : 	231	0
5412	Type	Type : 90 for AC Name with Index 	231	0
5412	Length	Length : 5 	100	0
5412	Index	Index : The index of the preferred server ( e.g ., 1=primary , 2=secondary ). 	240	0
5412	Type	Type : 50 for WTP Board Data 	220	0
5412	Length	Length : 26 	100	0
5412	Card ID	Card ID : A hardware identifier . 	231	0
5412	Card Revision	Card Revision : 4-byte Revision of the card . 	400	0
5412	WTP Model	WTP Model : 8-byte WTP Model Number . 	220	0
5412	Reserved	Reserved : A 4-byte reserved field that MUST be set to zero ( 0 ). 	500	0
5412	Ethernet MAC Address	Ethernet MAC Address : MAC address of the WTP's Ethernet interface . 	230	0
5412	Statistics Timer	The Statistics Timer message element value is used by the AC to inform the WTP of the frequency that it expects to receive updated statistics . 	121	0
5412	Type	Type : 37 for Statistics Timer 	220	0
5412	Length	Length : 2 	100	0
5412	Statistics Timer	Statistics Timer : A 16-bit unsigned integer indicating the time , in seconds . 	121	0
5412	Type	Type : 82 for WTP Static IP Address Information 	400	0
5412	Length	Length : 13 	100	0
5412	IP Address	IP Address : The IP address to assign to the WTP . 	230	0
5412	Netmask	Netmask : The IP Netmask . 	230	0
5412	Gateway	Gateway : The IP address of the gateway . 	230	0
5412	Netmask	Netmask : The IP Netmask . 	230	0
5412	Static	Static : An 8-bit Boolean stating whether or not the WTP should use a static IP address . A value of zero disables the static IP address , while a value of one enables it . 	301	0
5412	Type	Type : 67 for WTP Reboot Statistics 	231	0
5412	Length	Length : 7 	100	0
5412	Crash Count	Crash Count : The number of reboots that have occurred due to a WTP crash . 	231	0
5412	LWAPP Initiated Count	LWAPP Initiated Count : The number of reboots that have occurred at the request of some LWAPP message , such as a change in configuration that required a reboot or an explicit LWAPP reset request . 	100	0
5412	Link Failure Count	Link Failure Count : The number of times that an LWAPP connection with an AC has failed . 	100	0
5412	Failure Type	Failure Type : The last WTP failure . The following values are supported : 	301	0
5412	Type	Type : 38 for Decryption Error Report Period 	231	0
5412	Length	Length : 3 	100	0
5412	Radio ID	Radio ID : The Radio Identifier : typically refers to some interface index on the WTP . 	231	0
5412	Report Interval	Report Interval : A 16-bit , unsigned integer indicating the time , in seconds . 	121	0
5412	Type	Type : 26 for Change State Event 	302	0
5412	Length	Length : 3 	100	0
5412	Radio ID	Radio ID : The Radio Identifier : typically refers to some interface index on the WTP . 	231	0
5412	State	State : An 8-bit Boolean value representing the state of the radio . A value of one disables the radio , while a value of two enables it . 	230	0
5412	Cause	Cause : In the event of a radio being inoperable , the Cause field would contain the reason the radio is out of service . The following values are supported : 	240	0
5412	Type	Type : 68 for LWAPP Timers 	220	0
5412	Length	Length : 2 	100	0
5412	Discovery	Discovery : The number of seconds between LWAPP Discovery packets when the WTP is in the discovery mode . 	120	0
5412	Echo Request	Echo Request : The number of seconds between WTP Echo Request LWAPP messages . 	120	0
5412	Type	Type : 91 for WTP Fallback 	220	0
5412	Length	Length : 1 	100	0
5412	Mode	Mode : The 8-bit Boolean value indicates the status of automatic LWAPP fallback on the WTP . A value of zero disables the fallback feature , while a value of one enables it . When enabled , if the WTP detects that its primary AC is available , and it is not connected to it , it SHOULD automatically disconnect from its current AC and reconnect to its primary . If disabled , the WTP will only reconnect to its primary through manual intervention ( e.g ., through the Reset Request command ). 	301	0
5412	Type	Type : 97 for Idle Timeout 	231	0
5412	Length	Length : 4 	100	0
5412	Timeout	Timeout : The current idle timeout to be enforced by the WTP . 	121	0
5412	Statistics Timer	7.4.4 . Statistics Timer 	240	0
5412	Type	Type : 65 for Add Blacklist Entry 	231	0
5412	Length	Length : >= 7 	100	0
5412	Num of Entries	Num of Entries : The number of MAC addresses in the array . 	230	0
5412	MAC Address	MAC Address : An array of MAC addresses to add to the blacklist entry . 	230	0
5412	Type	Type : 66 for Delete Blacklist Entry 	301	0
5412	Length	Length : >= 7 	100	0
5412	Num of Entries	Num of Entries : The number of MAC addresses in the array . 	230	0
5412	MAC Address	MAC Address : An array of MAC addresses to delete from the blacklist entry . 	230	0
5412	Type	Type : 70 for Delete Blacklist Entry 	301	0
5412	Length	Length : >= 7 	100	0
5412	Num of Entries	Num of Entries : The number of MAC addresses in the array . 	230	0
5412	MAC Address	MAC Address : An array of MAC addresses to add to the permanent blacklist entry . 	230	0
5412	Type	Type : 71 for Delete Blacklist Entry 	301	0
5412	Length	Length : >= 7 	100	0
5412	Num of Entries	Num of Entries : The number of MAC addresses in the array . 	230	0
5412	MAC Address	MAC Address : An array of MAC addresses to delete from the static blacklist entry . 	230	0
5412	Result Code	7.5.1 . Result Code 	302	0
5412	Image Data	The Image Data message element is present when sent by the AC and contains the following fields . 	400	0
5412	Type	Type : 33 for Image Data 	400	0
5412	Length	Length : >= 5 	100	0
5412	Opcode	Opcode : An 8-bit value representing the transfer opcode . The following values are supported : 	231	0
5412	Checksum	Checksum : A 16-bit value containing a checksum of the Image Data that follows . 	301	0
5412	Image Data	Image Data : The Image Data field contains 1024 characters , unless the payload being sent is the last one ( end of file ). 	400	0
5412	Type	Type : 39 for Decryption Error Report 	231	0
5412	Length	Length : >= 8 	100	0
5412	Radio ID	Radio ID : The Radio Identifier , typically refers to some interface index on the WTP . 	231	0
5412	Num Of Entries	Num Of Entries : An 8-bit unsigned integer indicating the number of mobile MAC addresses . 	231	0
5412	Mobile MAC Address	Mobile MAC Address : An array of mobile station MAC addresses that have caused decryption errors . 	230	0
5412	Type	Type : 77 for Duplicate IPv4 Address 	231	0
5412	Length	Length : 10 	100	0
5412	IP Address	IP Address : The IP address currently used by the WTP . 	230	0
5412	MAC Address	MAC Address : The MAC address of the offending device . 	230	0
5412	Type	Type : 77 for Duplicate IPv6 Address 	231	0
5412	Length	Length : 10 	100	0
5412	IP Address	IP Address : The IP address currently used by the WTP . 	230	0
5412	MAC Address	MAC Address : The MAC address of the offending device . 	230	0
5412	Type	Type : 52 for Data Transfer Mode 	400	0
5412	Length	Length : 1 	100	0
5412	Data Type	Data Type : An 8-bit value describing the type of information being requested . The following values are supported : 	231	0
5412	Type	Type : 53 for Data Transfer Data 	400	0
5412	Length	Length : >= 3 	100	0
5412	Data Type	Data Type : An 8-bit value describing the type of information being sent . The following values are supported : 	231	0
5412	Data Length	Data Length : Length of data field . 	100	0
5412	Type	Type : 30 for Delete Mobile 	231	0
5412	Length	Length : 7 	100	0
5412	Radio ID	Radio ID : An 8-bit value representing the radio 	231	0
5412	MAC Address	MAC Address : The mobile station's MAC address 	230	0
5412	Result Code	9.2.1 . Result Code 	231	0
5412	E	o E-x{Kpub , M } - RSA encryption of M using X's public key . 	301	0
5412	Status	The interpretation of this 16-bit field depends on the direction of transmission of the packet . Refer to the figure in Section 3.1 . 	200	0
5412	Status	When an LWAPP packet is transmitted from a WTP to an AC , this field is called the Status field and indicates radio resource information associated with the frame . When the message is an LWAPP control message this field is transmitted as zero . 	210	0
5412	RSSI	RSSI : RSSI is a signed , 8-bit value . It is the received signal strength indication , in dBm . 	231	0
5412	SNR	SNR : SNR is a signed , 8-bit value . It is the signal-to-noise ratio of the received IEEE 802.11 frame , in dB . 	231	0
5412	Type	Type : 29 for Add Mobile 	231	0
5412	Length	Length : 36 	100	0
5412	Radio ID	Radio ID : An 8-bit value representing the radio . 	231	0
5412	Association ID	Association ID : A 16-bit value specifying the 802.11 Association Identifier . 	231	0
5412	MAC Address	MAC Address : The mobile station's MAC address . 	230	0
5412	E	E : The 1-bit field is set by the AC to inform the WTP that it MUST NOT accept any 802.11 data frames , other than 802.1X frames . This is the equivalent of the WTP's 802.1X port for the mobile station to be in the closed state . When set , the WTP MUST drop any non-802.1X packets it receives from the mobile station . 	201	0
5412	C	C : The 1-bit field is set by the AC to inform the WTP that encryption services will be provided by the AC . When set , the WTP SHOULD police frames received from stations to ensure that they comply to the stated encryption policy , but does not need to take specific cryptographic action on the frame . Similarly , for transmitted frames , the WTP only needs to forward already encrypted frames . 	201	0
5412	Encryption Policy	Encryption Policy : The policy field informs the WTP how to handle packets from/to the mobile station . The following values are supported : 	400	0
5412	Capabilities	Capabilities : A 16-bit field containing the 802.11 capabilities to use with the mobile . 	400	0
5412	WLAN ID	WLAN ID : An 8-bit value specifying the WLAN Identifier . 	230	0
5412	WME Mode	WME Mode : An 8-bit Boolean used to identify whether the station is WME capable . A value of zero is used to indicate that the station is not Wireless Multimedia Extension ( WME ) capable , while a value of one means that the station is WME capable . 	210	0
5412	QoS	QoS : An 8-bit value specifying the QoS policy to enforce for the station . The following values are supported : PRC : TO CHECK 	240	0
5412	Supported Rates	Supported Rates : The supported rates to be used with the mobile station . 	231	0
5412	Type	Type : 105 for IEEE 802.11 Mobile Session Key 	231	0
5412	Length	Length : >= 11 	100	0
5412	MAC Address	Encryption Policy : The policy field informs the WTP how to handle packets from/to the mobile station . The following values are supported : 	230	0
5412	Encryption Policy	Encryption Policy : The policy field informs the WTP how to handle packets from/to the mobile station . The following values are supported : 	400	0
5412	Type	Type : 140 for IEEE 802.11 Station QoS Profile 	231	0
5412	Length	Length : 12 	100	0
5412	MAC Address	MAC Address : The mobile station's MAC address . 	230	0
5412	Type	Type : 106 for IEEE 802.11 Update Mobile QoS 	220	0
5412	Length	Length : 14 	100	0
5412	Radio ID	Radio ID : The Radio Identifier , typically refers to some interface index on the WTP . 	231	0
5412	Association ID	Association ID : The 802.11 Association Identifier . 	231	0
5412	MAC Address	MAC Address : The mobile station's MAC address . 	230	0
5412	QoS Profile	QoS Profile : An 8-bit value specifying the QoS policy to enforce for the station . The following values are supported : 	400	0
5412	DSCP Tag	DSCP Tag : The DSCP label to use if packets are to be DSCP tagged . 	231	0
5412	Type	Type : 38 for Statistics 	231	0
5412	Length	Length : 57 	100	0
5412	Radio ID	Radio ID : An 8-bit value representing the radio . 	231	0
5412	Tx Fragment Count	Tx Fragment Count : A 32-bit value representing the number of fragmented frames transmitted . 	110	0
5412	Multicast Tx Count	Multicast Tx Count : A 32-bit value representing the number of multicast frames transmitted . 	100	0
5412	Failed Count	Failed Count : A 32-bit value representing the transmit excessive retries . 	231	0
5412	Retry Count	Retry Count : A 32-bit value representing the number of transmit retries . 	231	0
5412	Multiple Retry Count	Multiple Retry Count : A 32-bit value representing the number of transmits that required more than one retry . 	100	0
5412	Frame Duplicate Count	Frame Duplicate Count : A 32-bit value representing the duplicate frames received . 	231	0
5412	RTS Success Count	RTS Success Count : A 32-bit value representing the number of successfully transmitted Ready To Send ( RTS ). 	120	0
5412	RTS Failure Count	RTS Failure Count : A 32-bit value representing the failed transmitted RTS . 	201	0
5412	ACK Failure Count	ACK Failure Count : A 32-bit value representing the number of failed acknowledgements . 	231	0
5412	Rx Fragment Count	Rx Fragment Count : A 32-bit value representing the number of fragmented frames received . 	110	0
5412	Multicast RX Count	Multicast RX Count : A 32-bit value representing the number of multicast frames received . 	100	0
5412	FCS Error Count	FCS Error Count : A 32-bit value representing the number of Frame Check Sequence ( FCS ) failures . 	231	0
5412	Decryption Errors	Decryption Errors : A 32-bit value representing the number of Decryption errors that occurred on the WTP . Note that this field is only valid in cases where the WTP provides encryption/ decryption services . 	231	0
5412	Type	Type : 7 for IEEE 802.11 Add WLAN 	400	0
5412	Length	Length : >= 298 	100	0
5412	Radio ID	Radio ID : An 8-bit value representing the radio . 	231	0
5412	WLAN Capability	WLAN Capability : A 16-bit value containing the capabilities to be advertised by the WTP within the Probe and Beacon messages . 	230	0
5412	WLAN ID	WLAN ID : A 16-bit value specifying the WLAN Identifier . 	230	0
5412	Encryption Policy	Encryption Policy : A 32-bit value specifying the encryption scheme to apply to traffic to and from the mobile station . 	400	0
5412	Shared Key	Shared Key : A 1-byte Boolean that specifies whether the key included in the Key field is a shared WEP key . A value of zero is used to state that the key is not a shared WEP key , while a value of one is used to state that the key is a shared WEP key . 	210	0
5412	WPA Data Len	WPA Data Len : Length of the WPA Information Element ( IE ). 	100	0
5412	RSN Data Len	RSN Data Len : Length of the Robust Security Network ( RSN ) IE . 	100	0
5412	Reserved	Reserved : A 49-byte reserved field , which MUST be set to zero ( 0 ). 	500	0
5412	WME Data Len	WME Data Len : Length of the WME IE . 	100	0
5412	Auth Type	Auth Type : An 8-bit value specifying the station's authentication type . 	231	0
5412	Broadcast SSID	Broadcast SSID : A Boolean indicating whether the SSID is to be broadcast by the WTP . A value of zero disables SSID broadcast , while a value of one enables it . 	302	0
5412	Reserved	Reserved : A 40-byte reserved field . 	400	0
5412	Type	Type : 28 for IEEE 802.11 Delete WLAN 	231	0
5412	Length	Length : 3 	100	0
5412	Radio ID	Radio ID : An 8-bit value representing the radio 	231	0
5412	WLAN ID	WLAN ID : A 16-bit value specifying the WLAN Identifier 	230	0
5412	Type	Type : 34 for IEEE 802.11 Update WLAN 	220	0
5412	Length	Length : 43 	100	0
5412	Radio ID	Radio ID : An 8-bit value representing the radio . 	231	0
5412	WLAN ID	WLAN ID : A 16-bit value specifying the WLAN Identifier . 	230	0
5412	Encryption Policy	Encryption Policy : A 32-bit value specifying the encryption scheme to apply to traffic to and from the mobile station . 	400	0
5412	Shared Key	Shared Key : A 1-byte Boolean that specifies whether the key included in the Key field is a shared WEP key . A value of zero means that the key is not a shared WEP key , while a value of one is used to state that the key is a shared WEP key . 	301	0
5412	WLAN Capability	WLAN Capability : A 16-bit value containing the capabilities to be advertised by the WTP within the Probe and Beacon messages . 	230	0
5412	Type	Type : 61 for IEEE 802.11 MIC Countermeasures 	231	0
5412	Length	Length : 8 	100	0
5412	Radio ID	Radio ID : The Radio Identifier , typically refers to some interface index on the WTP . 	231	0
5412	WLAN ID	WLAN ID : This 8-bit unsigned integer includes the WLAN Identifier , on which the MIC failure occurred . 	230	0
5412	MAC Address	MAC Address : The MAC address of the mobile station that caused the MIC failure . 	230	0
5412	Type	Type : 95 for WTP Radio Fail Alarm Indication 	231	0
5412	Length	Length : 4 	100	0
5412	Radio ID	Radio ID : The Radio Identifier , typically refers to some interface index on the WTP . 	231	0
5412	Type	Type : The type of radio failure detected . The following values are supported : 	231	0
5412	Status	Status : An 8-bit Boolean indicating whether the radio failure is being reported or cleared . A value of zero is used to clear the event , while a value of one is used to report the event . 	210	0
5412	Pad	Pad : Reserved field MUST be set to zero ( 0 ). 	500	0
5412	Type	Type : 8 for IEEE 802.11 WTP WLAN Radio Configuration 	400	0
5412	Length	Length : 20 	100	0
5412	Radio ID	Radio ID : An 8-bit value representing the radio to configure . 	230	0
5412	Reserved	Reserved : MUST be set to zero 	500	0
5412	Occupancy Limit	Occupancy Limit : This attribute indicates the maximum amount of time , in Time Units ( TUs ), that a point coordinator MAY control the usage of the wireless medium without relinquishing control for long enough to allow at least one instance of Distributed Coordination Function ( DCF ) access to the medium . The default value of this attribute SHOULD be 100 , and the maximum value SHOULD be 1000 . 	120	0
5412	CFP Maximum Duration	CFP Maximum Duration : The attribute describes the maximum duration of the CFP in TU that MAY be generated by the Point Coordination Function ( PCF ). 	100	0
5412	BSSID	BSSID : The WLAN Radio's base MAC address . For WTPs that support more than a single WLAN , the value of the WLAN Identifier is added to the last octet of the BSSID . Therefore , a WTP that supports 16 WLANs MUST have 16 MAC addresses reserved for it , and the last nibble is used to represent the WLAN ID . 	230	0
5412	Beacon Period	Beacon Period : This attribute specifies the number of TUs that a station uses for scheduling Beacon transmissions . This value is transmitted in Beacon and Probe Response frames . 	110	0
5412	Type	Type : 16 for IEEE 802.11 Rate Set 	400	0
5412	Length	Length : 4 	100	0
5412	Radio ID	Radio ID : An 8-bit value representing the radio to configure . 	230	0
5412	Rate Set	Rate Set : The AC generates the Rate Set that the WTP is to include in its Beacon and Probe messages . 	400	0
5412	Type	Type : 10 for IEEE 802.11 Multi-Domain Capability 	231	0
5412	Length	Length : 8 	100	0
5412	Radio ID	Radio ID : An 8-bit value representing the radio to configure . 	230	0
5412	Reserved	Reserved : MUST be set to zero 	500	0
5412	First Channel #	First Channel #: This attribute indicates the value of the lowest channel number in the subband for the associated domain country string . 	231	0
5412	Number of Channels	Number of Channels : This attribute indicates the value of the total number of channels allowed in the subband for the associated domain country string . 	231	0
5412	Max Tx Power Level	Max Tx Power Level : This attribute indicates the maximum transmit power , in dBm , allowed in the subband for the associated domain country string . 	231	0
5412	Type	Type : 11 for IEEE 802.11 MAC Operation 	231	0
5412	Length	Length : 16 	100	0
5412	Radio ID	Radio ID : An 8-bit value representing the radio to configure . 	230	0
5412	Reserved	Reserved : MUST be set to zero 	500	0
5412	RTS Threshold	RTS Threshold : This attribute indicates the number of octets in a Management Protocol Data Unit ( MPDU ), below which an RTS/CTS ( clear to send ) handshake MUST NOT be performed . An RTS/CTS handshake MUST be performed at the beginning of any frame exchange sequence where the MPDU is of type Data or Management , the MPDU has an individual address in the Address1 field , and the length of the MPDU is greater than this threshold . Setting this attribute to be larger than the maximum MAC Service Data Unit ( MSDU ) size MUST have the effect of turning off the RTS/CTS handshake for frames of Data or Management type transmitted by this Station ( STA ). Setting this attribute to zero MUST have the effect of 	400	0
5412	Short Retry	Short Retry : This attribute indicates the maximum number of transmission attempts of a frame , the length of which is less than or equal to RTSThreshold , that MUST be made before a failure condition is indicated . The default value of this attribute MUST be 7 . 	110	0
5412	Long Retry	Long Retry : This attribute indicates the maximum number of transmission attempts of a frame , the length of which is greater than dot11RTSThreshold , that MUST be made before a failure condition is indicated . The default value of this attribute MUST be 4 . 	110	0
5412	Fragmentation Threshold	Fragmentation Threshold : This attribute specifies the current maximum size , in octets , of the MPDU that MAY be delivered to the PHY . An MSDU MUST be broken into fragments if its size exceeds the value of this attribute after adding MAC headers and trailers . An MSDU or MAC Management Protocol Data Unit ( MMPDU ) MUST be fragmented when the resulting frame has an individual address in the Address1 field , and the length of the frame is larger than this threshold . The default value for this attribute MUST be the lesser of 2346 or the aMPDUMaxLength of the attached PHY and MUST never exceed the lesser of 2346 or the aMPDUMaxLength of the attached PHY . The value of this attribute MUST never be less than 256 . 	100	0
5412	Tx MSDU Lifetime	Tx MSDU Lifetime : This attribute specifies the elapsed time in TU , after the initial transmission of an MSDU , after which , further attempts to transmit the MSDU MUST be terminated . The default value of this attribute MUST be 512 . 	120	0
5412	Rx MSDU Lifetime	Rx MSDU Lifetime : This attribute specifies the elapsed time , in TU , after the initial reception of a fragmented MMPDU or MSDU , after which , further attempts to reassemble the MMPDU or MSDU MUST be terminated . The default value MUST be 512 . 	121	0
5412	Type	Type : 12 for IEEE 802.11 Tx Power 	231	0
5412	Length	Length : 4 	100	0
5412	Radio ID	Radio ID : An 8-bit value representing the radio to configure . 	230	0
5412	Reserved	Reserved : MUST be set to zero 	500	0
5412	Current Tx Power	Current Tx Power : This attribute contains the transmit output power in mW . 	230	0
5412	Type	Type : 13 for IEEE 802.11 Tx Power Level 	231	0
5412	Length	Length : >= 4 	100	0
5412	Radio ID	Radio ID : An 8-bit value representing the radio to configure . 	230	0
5412	Num Levels	Num Levels : The number of power level attributes . 	231	0
5412	Type	Type : 14 for IEEE 802.11 Direct Sequence Control 	231	0
5412	Length	Length : 8 	100	0
5412	Radio ID	Radio ID : An 8-bit value representing the radio to configure . 	230	0
5412	Reserved	Reserved : MUST be set to zero 	500	0
5412	Current CCA	Current CCA : The current Controlled Channel Access ( CCA ) method in operation . Valid values are : 	231	0
5412	Energy Detect Threshold	Energy Detect Threshold : The current Energy Detect Threshold being used by the DSSS PHY . 	231	0
5412	Type	Type : 15 for IEEE 802.11 OFDM Control 	231	0
5412	Length	Length : 8 	100	0
5412	Radio ID	Radio ID : An 8-bit value representing the radio to configure . 	230	0
5412	Reserved	Reserved : MUST be set to zero 	500	0
5412	TI Threshold	TI Threshold : The threshold being used to detect a busy medium ( frequency ). CCA MUST report a busy medium upon detecting the RSSI above this threshold . 	231	0
5412	Type	Type : 41 for IEEE 802.11 Antenna 	231	0
5412	Length	Length : >= 8 	100	0
5412	Radio ID	Radio ID : An 8-bit value representing the radio to configure . 	230	0
5412	Diversity	Diversity : An 8-bit value specifying whether the antenna is to provide receive diversity . The following values are supported : 	231	0
5412	0	1 - Enabled ( may only be true if the antenna can be used as a receive antenna ) 	240	0
5412	Combiner	Combiner : An 8-bit value specifying the combiner selection . The following values are supported : 	400	0
5412	Type	Type : 16 for IEEE 802.11 Supported Rates 	231	0
5412	Length	Length : 4 	100	0
5412	Radio ID	Radio ID : An 8-bit value representing the radio . 	231	0
5412	Supported Rates	Supported Rates : The WTP includes the Supported Rates that its hardware supports . The format is identical to the Rate Set message element . 	231	0
5412	Type	Type : 48 for IEEE 802.11 CFP Status 	231	0
5412	Length	Length : 2 	100	0
5412	Radio ID	Radio ID : The Radio Identifier , typically refers to some interface index on the WTP . 	231	0
5412	Status	Status : An 8-bit Boolean containing the status of the CF Polling feature . A value of zero disables CFP Status , while a value of one enables it . 	230	0
5412	Type	The WTP Mode and Type message element is used to configure a WTP to operate in a specific mode . 	301	0
5412	Type	Type : 54 for IEEE 802.11 WTP Mode and Type 	400	0
5412	Length	Length : 2 	100	0
5412	Mode	Mode : An 8-bit value describing the type of information being sent . The following values are supported : 	231	0
5412	Type	Type : The type field is not currently used . 	231	0
5412	Type	Type : 51 for IEEE 802.11 Broadcast Probe Mode 	400	0
5412	Length	Length : 1 	100	0
5412	Status	Status : An 8-bit Boolean indicating the status of whether a WTP shall respond to a NULL SSID Probe request . A value of zero disables the NULL SSID Probe response , while a value of one enables it . 	302	0
5412	Type	Type : 57 for IEEE 802.11 WTP Quality of Service 	231	0
5412	Length	Length : 12 	100	0
5412	Radio ID	Radio ID : The Radio Identifier , typically refers to some interface index on the WTP . 	231	0
5412	Tag Packets	Tag Packets : A value indicating whether LWAPP packets should be tagged for QoS purposes . The following values are currently supported : 	231	0
5412	Queue Depth	Queue Depth : The number of packets that can be on the specific QoS transmit queue at any given time . 	100	0
5412	CWMin	CWMin : The Contention Window minimum value for the QoS transmit queue . 	231	0
5412	CWMax	CWMax : The Contention Window maximum value for the QoS transmit queue . 	231	0
5412	AIFS	AIFS : The Arbitration Inter Frame Spacing to use for the QoS transmit queue . 	400	0
5412	CBR	CBR : The Constant Bit Rate ( CBR ) value to observe for the QoS transmit queue . 	231	0
5412	Dot1P Tag	Dot1P Tag : The 802.1P precedence value to use if packets are to be 802.1P tagged . 	230	0
5412	DSCP Tag	DSCP Tag : The DSCP label to use if packets are to be DSCP tagged . 	231	0
5412	Type	Type : 79 for IEEE 802.11 MIC Error Report From Mobile 	231	0
5412	Length	Length : 14 	100	0
5412	Client MAC Address	Client MAC Address : The Client MAC address of the station reporting the MIC failure . 	230	0
5412	BSSID	BSSID : The BSSID on which the MIC failure is being reported . 	400	0
5412	Radio ID	Radio ID : The Radio Identifier , typically refers to some interface index on the WTP . 	231	0
5412	WLAN ID	WLAN ID : The WLAN ID on which the MIC failure is being reported . 	230	0
5413	Maj	Maj ( 4 bits ): the major number of the SLAPP version 	220	0
5413	Min	Min ( 4 bits ): the minor number of the SLAPP version 	220	0
5413	Type	Length ( two octets ): the length of the SLAPP message , including the entire SLAPP header 	100	0
5413	Length	Length ( two octets ): the length of the SLAPP message , including the entire SLAPP header 	100	0
5413	Transaction ID	The transaction ID is a randomly generated , 32-bit number that is maintained during one phase of the SLAPP discovery process . It is generated by a WTP starting a discovery process . When one discovery method fails to find an AC and the WTP attempts another discovery 	301	0
5413	WTP Identifier	This field allows the WTP to specify a unique identifier for itself . This MAY be , for instance , its 48-bit MAC address or it could be any other string such as a serial number . 	231	0
5413	Flags	The Flags field is used to indicate certain things about the discover request . For example , bit 0 in the Flags field indicates whether the discover request packet is being sent to the AC , if unicast , based on a configuration at the WTP or based on some other means of discovery . This bit should always be set to the discover mode if the SLAPP discover request packet is being sent to either a broadcast or multicast address . Here are the valid values for various bits in the Flags field . 	210	0
5413	WTP Vendor ID	This 32-bit field is the WTP vendor's Structure of Management Information ( SMI ) enterprise code in network octet order ( these enterprise codes can be obtained from , and registered with , IANA ). 	231	0
5413	WTP HW Version	This 32-bit field indicates the version of hardware present in the WTP . This is a number that is totally left to the WTP vendor to choose . 	220	0
5413	WTP SW Version	This 32-bit field indicates the version of software present in the WTP . This is a number that is totally left to the WTP vendor to choose . 	220	0
5413	Transaction ID	The value of the Transaction ID field should be identical to its value in the SLAPP discover request packet sent by the WTP . 	231	0
5413	WTP Identifier	The WTP Identifier that was sent in the corresponding SLAPP discover request frame . 	230	0
5413	Flags	This field is unused by this version of SLAPP . It MUST be set to zero ( 0 ) on transmission and ignored upon receipt . 	500	0
5413	AC HW Version	If the value of the Status field is 1 , then this 32-bit field contains the value of the AC's hardware version . This value is chosen by the AC vendor . If the value of the Status field is not 1 , then this field should be set to 0 by the AC and ignored by the WTP . 	210	0
5413	AC SW Version	If the value of the Status field is 1 , then this 32-bit field contains the value of the AC's software version . This value is chosen by the AC vendor . If the value of the Status field is not 1 , then this field should be set to 0 by the AC and ignored by the WTP . 	210	0
5413	3	4 : De-Registration Response - sent by the recipient of the corresponding request 	240	0
5413	Information Elements	Information elements ( IEs ) are used to communicate capability , configuration , status , and statistics information between the AC and the WTP . 	400	0
5413	Element ID	Element ID : 1 	240	0
5413	Length	Length : 1 	100	0
5413	Element ID	Element ID : 2 	202	0
5413	Length	Length : 1 	100	0
5413	Element ID	Element ID : 3 	202	0
5413	Length	Length : 1 	100	0
5413	Element ID	Element ID : 4 	202	0
5413	Length	Length : 4 	100	0
5413	Element ID	Element ID : 5 	202	0
5413	Length	Length : 4 	100	0
5413	Element ID	Element ID : 6 	202	0
5413	Length	Length : 4 	100	0
5413	Element ID	Element ID : 7 	202	0
5413	Length	Length : Variable 	100	0
5413	Element ID	Element ID : 8 	202	0
5413	Length	Length : 1 	100	0
5413	Element ID	Element ID : 9 	202	0
5413	Length	Length : 4 	100	0
5413	Element ID	Element ID : 10 	202	0
5413	Length	Length : 4 	100	0
5413	Element ID	Element ID : 10 	202	0
5413	Length	Length : 4 	100	0
5413	Element ID	Element ID : 11 	202	0
5413	Length	Value : The number of BSSIDs that the WLAN interface is capable of supporting . 	400	0
5413	Element ID	Element ID : 12 	202	0
5413	Length	Length : 1 	100	0
5413	Element ID	Element ID : 13 	202	0
5413	Length	Length : Variable , between 0 and 32 both inclusive . 	100	0
5413	Element ID	Element ID : 14 	202	0
5413	Length	Length : 1 	100	0
5413	Element ID	Element ID : 15 	202	0
5413	Length	Length : 2 	100	0
5413	Element ID	Element ID : 16 	202	0
5413	Length	Length : 2 	100	0
5413	Element ID	Element ID : 17 	202	0
5413	Length	Value : Each of the bits in the following list is interpreted as follows . If the bit is set , then that particular rate is to be configured as a basic rate . If the bit is reset , then the rate is not to be configured as a basic rate . 	210	0
5413	Element ID	Element ID : 18 	202	0
5413	Length	Value : Each of the bits in the following list is interpreted as follows . If the bit is set , then that particular rate is to be configured as a supported rate . If the bit is reset , then the rate is not to be configured as a supported rate . 	210	0
5413	Element ID	Element ID : 19 	202	0
5413	Length	Length : 2 	100	0
5413	Element ID	Element ID : 20 	202	0
5413	Length	Value : Valid values for the fragmentation threshold as allowed by IEEE 802.11 . 	110	0
5413	Element ID	Element ID : 21 	202	0
5413	Length	Length : 2 	100	0
5413	Element ID	Element ID : 22 	202	0
5413	Length	Length : 1 	100	0
5413	Element ID	Element ID : 23 	202	0
5413	Length	Length : 2 	100	0
5413	SLAPP Registration ID	A successful registration response from an AC to a WTP MUST contain this element . It is used in messages between the WTP and the AC on all other messages during the duration for which the registration is active . 	400	0
5413	Element ID	Element ID : 24 	202	0
5413	Length	Length : 4 	100	0
5413	Element ID	Element ID : 25 	202	0
5413	Length	Length : Variable , between 0 and 64 both inclusive 	100	0
5413	Element ID	Element ID : 26 	202	0
5413	Length	Length : 4 	100	0
5413	Element ID	Element ID : 27 	202	0
5413	Length	Length : 1 	100	0
5413	Element ID	Element ID : 28 	202	0
5413	Length	Length : 4 	100	0
5413	Element ID	Element ID : 29 	202	0
5413	Length	Length : 32 	100	0
5413	Element ID	Element ID : 30 	202	0
5413	Length	Length : 112 octets 	100	0
5413	Element ID	Element ID : 31 	202	0
5413	Length	Length : 108 octets 	100	0
5413	Element ID	Element ID : 32 	202	0
5413	Length	Length : Variable 	100	0
5413	Element ID	Element ID : 33 	202	0
5413	Length	Length : 2 octets 	100	0
5413	Element ID	Element ID : 34 	202	0
5413	Length	Length : 4 octets 	100	0
5413	Element ID	Element ID : 35 	202	0
5413	Length	Length : 10 octets 	100	0
5413	Element ID	Element ID : 36 	202	0
5413	Length	Length : 14 octets 	100	0
5413	Element ID	Element ID : 37 	202	0
5413	Length	Length : 10 octets 	100	0
5413	Element ID	Element ID : 252 	202	0
5413	Length	Length : Variable 	100	0
5413	Element ID	Element ID : 253 	202	0
5413	Length	Value : This variable-length element starts with a 3-octet Organizationally Unique Identifier ( OUI ), followed by a series of octets that are specific to the vendor represented by the OUI . 	301	0
5413	Element ID	Element ID : 254 	202	0
5413	Length	Value : A variable length element that contains a set of one or more elements defined in this section . 	400	0
5413	Element ID	Element ID : 255 	202	0
5413	Length	Value : A variable-length element that MUST be filled with all 0s at the source and MUST be ignored at the destination . 	500	0
5413	Flags	Transaction ID : A 32-bit random number chosen by the WTP at the start of a new registration phase . This number is used in the registration response by the AC to match the response to the corresponding request . 	200	0
5413	Transaction ID	Transaction ID : A 32-bit random number chosen by the WTP at the start of a new registration phase . This number is used in the registration response by the AC to match the response to the corresponding request . 	200	0
5413	9	The following information elements may be optionally included in the registration request : 	400	0
5413	Transaction ID	Transaction ID : A 32-bit random number chosen by the WTP at the start of a new registration phase . This number is used in the registration response by the AC to match the response to the corresponding request . 	200	0
5413	Flags	SLAPP Registration ID : The registration ID assigned by the AC upon successful registration . 	231	0
5413	SLAPP Registration ID	SLAPP Registration ID : The registration ID assigned by the AC upon successful registration . 	230	0
5413	Reason Code	Reason Code : The following are valid values : 	231	0
5413	Flags	SLAPP Registration ID : The registration ID assigned by the AC upon successful registration . 	231	0
5413	SLAPP Registration ID	SLAPP Registration ID : The registration ID assigned by the AC upon successful registration . 	230	0
5413	Reason Code	Reason Code : The same reason code used in the corresponding request . 	231	0
5413	RESERVED	RESERVED : Unused in this version of SLAPP , MUST be zero ( 0 ) on transmission and ignored upon receipt . 	500	0
5413	M	M : The " More " bit indicating that the current packet is not the final one . 	210	0
5413	R	R : The " Request " bit . This bit MUST be set to one ( 1 ) when the packet is the response to a request and zero ( 0 ) otherwise . 	210	0
5413	packet sequence number	packet sequence number : A monotonically increasing counter that assigns a unique number to each slice of the image . 	200	0
5413	image data slice	image data slice : A portion of the bootable image . 	400	0
5413	RESERVED	RESERVED : Unused in this version of SLAPP , MUST be zero on transmission and ignored upon receipt . 	500	0
5413	M	M : The " More " bit . This MUST be equal to the one ( 1 ) when negatively acknowledging a missed packet and set to zero ( 0 ) when indicating the end of the Image Download protocol . 	210	0
5413	R	packet sequence number : The packet sequence number of the missing image data slice . 	200	0
5413	packet sequence number	packet sequence number : The packet sequence number of the missing image data slice . 	200	0
5415	Echo Request	Echo Request : The WTP sends an Echo Request message ( Section 7.1 ) or receives the corresponding Echo Response message , ( see Section 7.2 ) from the AC . When the WTP receives the Echo Response , it resets its EchoInterval timer ( see Section 4.7.7 ). 	301	0
5415	Echo Request	Echo Request : The AC receives an Echo Request message ( see Section 7.1 ), to which it MUST respond with an Echo Response message ( see Section 7.2 ). 	400	0
5415	CAPWAP Preamble	The CAPWAP preamble is common to all CAPWAP transport headers and is used to identify the header type that immediately follows . The reason for this preamble is to avoid needing to perform byte comparisons in order to guess whether or not the frame is DTLS encrypted . It also provides an extensibility framework that can be used to support additional transport types . The format of the preamble is as follows : 	231	0
5415	Version	Version : A 4-bit field that contains the version of CAPWAP used in this packet . The value for this specification is zero ( 0 ). 	220	0
5415	Type	Type : A 4-bit field that specifies the payload type that follows the UDP header . The following values are supported : 	231	0
5415	CAPWAP Preamble	CAPWAP Preamble : The CAPWAP Preamble is defined in Section 4.1 . The CAPWAP Preamble's Payload Type field MUST be set to one ( 1 ). 	302	0
5415	Reserved	Reserved : The 24-bit field is reserved for future use . All implementations complying with this protocol MUST set to zero any bits that are reserved in the version of the protocol supported by that implementation . Receivers MUST ignore all bits not defined for the version of the protocol they support . 	500	0
5415	CAPWAP Preamble	CAPWAP Preamble : The CAPWAP Preamble is defined in Section 4.1 . The CAPWAP Preamble's Payload Type field MUST be set to zero ( 0 ). If the CAPWAP DTLS Header is present , the version number in both CAPWAP Preambles MUST match . The reason for this duplicate field is to avoid any possible tampering of the version field in the preamble that is not encrypted or authenticated . 	302	0
5415	HLEN	HLEN : A 5-bit field containing the length of the CAPWAP transport header in 4-byte words ( similar to IP header length ). This length includes the optional headers . 	100	0
5415	RID	RID : A 5-bit field that contains the Radio ID number for this packet , whose value is between one ( 1 ) and 31 . Given that MAC Addresses are not necessarily unique across physical radios in a WTP , the Radio Identifier ( RID ) field is used to indicate with which physical radio the message is associated . 	230	0
5415	WBID	WBID : A 5-bit field that is the wireless binding identifier . The identifier will indicate the type of wireless packet associated with the radio . The following values are defined : 	231	0
5415	T	T : The Type ' T ' bit indicates the format of the frame being transported in the payload . When this bit is set to one ( 1 ), the payload has the native frame format indicated by the WBID field . When this bit is zero ( 0 ), the payload is an IEEE 802.3 frame . 	210	0
5415	F	F : The Fragment ' F ' bit indicates whether this packet is a fragment . When this bit is one ( 1 ), the packet is a fragment and MUST be combined with the other corresponding fragments to reassemble the complete information exchanged between the WTP and AC . 	210	0
5415	L	L : The Last ' L ' bit is valid only if the ' F ' bit is set and indicates whether the packet contains the last fragment of a fragmented exchange between WTP and AC . When this bit is one ( 1 ), the packet is the last fragment . When this bit is ( zero ) 0 , the packet is not the last fragment . 	210	0
5415	W	W : The Wireless ' W ' bit is used to specify whether the optional Wireless Specific Information field is present in the header . A value of one ( 1 ) is used to represent the fact that the optional header is present . 	210	0
5415	M	M : The Radio MAC ' M ' bit is used to indicate that the Radio MAC Address optional header is present . This is used to communicate the MAC address of the receiving radio . 	210	0
5415	K	K : The Keep-Alive ' K ' bit indicates the packet is a Data Channel Keep-Alive packet . This packet is used to map the data channel to the control channel for the specified Session ID and to maintain freshness of the data channel . The ' K ' bit MUST NOT be set for data packets containing user data . 	210	0
5415	Flags	Flags : A set of reserved bits for future flags in the CAPWAP Header . All implementations complying with this protocol MUST set to zero any bits that are reserved in the version of the protocol supported by that implementation . Receivers MUST ignore all bits not defined for the version of the protocol they support . 	500	0
5415	Fragment ID	Fragment ID : A 16-bit field whose value is assigned to each group of fragments making up a complete set . The Fragment ID space is managed individually for each direction for every WTP/AC pair . The value of Fragment ID is incremented with each new set of fragments . The Fragment ID wraps to zero after the maximum value has been used to identify a set of fragments . 	201	0
5415	Reserved	Reserved : The 3-bit field is reserved for future use . All implementations complying with this protocol MUST set to zero any bits that are reserved in the version of the protocol supported by that implementation . Receivers MUST ignore all bits not defined for the version of the protocol they support . 	500	0
5415	Length	Length : The length of the MAC address field . The formats and lengths specified in [ EUI-48 ] and [ EUI-64 ] are supported . 	100	0
5415	MAC Address	Wireless Specific Information : This optional field contains technology-specific information that may be used to carry per - packet wireless information . This field is only present if the ' W ' bit is set . The WBID field in the CAPWAP Header is used to identify the format of the Wireless-Specific Information optional field . The HLEN field assumes 4-byte alignment , and this field MUST be padded with zeroes ( 0x00 ) if it is not 4-byte aligned . 	400	0
5415	Length	Length : The 8-bit field contains the length of the data field , with a maximum size of 255 . 	100	0
5415	Message Element Length	Message Element Length : The 16-bit Length field indicates the number of bytes following the CAPWAP Header , with a maximum size of 65535 . 	100	0
5415	Session ID	Session ID , see Section 4.6.37 . 	302	0
5415	Discovery	Discovery : CAPWAP Discovery messages are used to identify potential ACs , their load and capabilities . 	400	0
5415	Message Type	The Message Type field identifies the function of the CAPWAP Control message . To provide extensibility , the Message Type field is comprised of an IANA Enterprise Number [ RFC3232 ] and an enterprise - specific message type number . The first three octets contain the IANA Enterprise Number in network byte order , with zero used for CAPWAP base protocol ( this specification ) defined message types . The last octet is the enterprise-specific message type number , which has a range from 0 to 255 . 	231	0
5415	Message Element Length	The Length field indicates the number of bytes following the Sequence Number field . 	100	0
5415	Flags	4.5.1.4 . Flags 	240	0
5415	Reserved	Reserved 43 WTP MAC Type 44 WTP Name 45 Unused/Reserved 46 WTP Radio Statistics 47 WTP Reboot Statistics 48 WTP Static IP Address Information 49 	240	0
5415	Type	Type : 1 for AC Descriptor 	231	0
5415	Length	Length : >= 12 	100	0
5415	Stations	Stations : The number of stations currently served by the AC 	231	0
5415	Limit	Limit : The maximum number of stations supported by the AC 	400	0
5415	Active WTPs	Active WTPs : The number of WTPs currently attached to the AC 	231	0
5415	Max WTPs	Max WTPs : The maximum number of WTPs supported by the AC 	231	0
5415	Security	Security : An 8-bit mask specifying the authentication credential type supported by the AC ( see Section 2.4.4 ). The field has the following format : 	400	0
5415	Reserved	Reserved : A set of reserved bits for future use . All implementations complying with this protocol MUST set to zero any bits that are reserved in the version of the protocol supported by that implementation . Receivers MUST ignore all bits not defined for the version of the protocol they support . 	500	0
5415	S	S : The AC supports the pre-shared secret authentication , as described in Section 12.6 . 	301	0
5415	X	X : The AC supports X.509 Certificate authentication , as described in Section 12.7 . 	400	0
5415	R	R : A reserved bit for future use . All implementations complying with this protocol MUST set to zero any bits that are reserved in the version of the protocol supported by that implementation . Receivers MUST ignore all bits not defined for the version of the protocol they support . 	500	0
5415	R	R-MAC Field : The AC supports the optional Radio MAC Address field in the CAPWAP transport header ( see Section 4.3 ). The following enumerated values are supported : 	231	0
5415	Reserved	Reserved : A set of reserved bits for future use . All implementations complying with this protocol MUST set to zero any bits that are reserved in the version of the protocol supported by that implementation . Receivers MUST ignore all bits not defined for the version of the protocol they support . 	500	0
5415	DTLS Policy	DTLS Policy : The AC communicates its policy on the use of DTLS for the CAPWAP data channel . The AC MAY communicate more than one supported option , represented by the bit field below . The WTP MUST abide by one of the options communicated by AC . The field has the following format : 	303	0
5415	Reserved	Reserved : A set of reserved bits for future use . All implementations complying with this protocol MUST set to zero any bits that are reserved in the version of the protocol supported by that implementation . Receivers MUST ignore all bits not defined for the version of the protocol they support . 	500	0
5415	D	D : DTLS-Enabled Data Channel Supported 	400	0
5415	C	C : Clear Text Data Channel Supported 	400	0
5415	R	R : A reserved bit for future use . All implementations complying with this protocol MUST set to zero any bits that are reserved in the version of the protocol supported by that implementation . Receivers MUST ignore all bits not defined for the version of the protocol they support . 	500	0
5415	AC Information Vendor Identifier	AC Information Vendor Identifier : A 32-bit value containing the IANA-assigned " Structure of Management Information ( SMI ) Network Management Private Enterprise Codes ". 	231	0
5415	AC Information Type	AC Information Type : Vendor-specific encoding of AC information in the UTF-8 format [ RFC3629 ]. The following enumerated values are supported . Both the Hardware and Software Version sub - elements MUST be included in the AC Descriptor message element . The values listed below are used in conjunction with the AC Information Vendor Identifier field , whose value MUST be set to zero ( 0 ). This field , combined with the AC Information Vendor Identifier set to a non-zero ( 0 ) value , allows vendors to use a private namespace . 	231	0
5415	AC Information Length	AC Information Length : Length of vendor-specific encoding of AC information , with a maximum size of 1024 . 	100	0
5415	Type	Type : 2 for AC IPv4 List 	231	0
5415	Length	Length : >= 4 	100	0
5415	Type	Type : 3 for AC IPV6 List 	231	0
5415	Length	Length : >= 16 	100	0
5415	Type	Type : 4 for AC Name 	231	0
5415	Length	Length : >= 1 	100	0
5415	Type	Type : 5 for AC Name with Priority 	231	0
5415	Length	Length : >= 2 	100	0
5415	Priority	Priority : A value between 1 and 255 specifying the priority order of the preferred AC . For instance , the value of one ( 1 ) is used to set the primary AC , the value of two ( 2 ) is used to set the secondary , etc . 	210	0
5415	Type	Type : 6 for AC Timestamp 	302	0
5415	Length	Length : 4 	100	0
5415	Timestamp	Timestamp : The AC's current time , allowing all of the WTPs to be time synchronized in the format defined by Network Time Protocol ( NTP ) in RFC 1305 [ RFC1305 ]. Only the most significant 32 bits of the NTP time are included in this field . 	121	0
5415	Type	Type : 7 for Add MAC ACL Entry 	400	0
5415	Length	Length : >= 8 	100	0
5415	Num of Entries	Num of Entries : The number of instances of the Length/MAC Address fields in the array . This value MUST NOT exceed 255 . 	100	0
5415	Length	Length : The length of the MAC Address field . The formats and lengths specified in [ EUI-48 ] and [ EUI-64 ] are supported . 	100	0
5415	MAC Address	MAC Address : MAC addresses to add to the ACL . 	230	0
5415	Type	Type : 8 for Add Station 	231	0
5415	Length	Length : >= 8 	100	0
5415	Radio ID	Radio ID : An 8-bit value representing the radio , whose value is between one ( 1 ) and 31 . 	230	0
5415	Length	Length : The length of the MAC Address field . The formats and lengths specified in [ EUI-48 ] and [ EUI-64 ] are supported . 	100	0
5415	MAC Address	MAC Address : The station's MAC address . 	230	0
5415	Type	Type : 10 for CAPWAP Control IPv4 Address 	400	0
5415	Length	Length : 6 	100	0
5415	IP Address	IP Address : The IP address of an interface . 	230	0
5415	WTP Count	WTP Count : The number of WTPs currently connected to the interface , with a maximum value of 65535 . 	100	0
5415	Type	Type : 11 for CAPWAP Control IPv6 Address 	400	0
5415	Length	Length : 18 	100	0
5415	IP Address	IP Address : The IP address of an interface . 	230	0
5415	WTP Count	WTP Count : The number of WTPs currently connected to the interface , with a maximum value of 65535 . 	100	0
5415	Type	Type : 30 for CAPWAP Local IPv4 Address 	231	0
5415	Length	Length : 4 	100	0
5415	IP Address	IP Address : The IP address of the sender . 	230	0
5415	Type	Type : 50 for CAPWAP Local IPv6 Address 	400	0
5415	Length	Length : 16 	100	0
5415	IP Address	IP Address : The IP address of the sender . 	230	0
5415	Type	Type : 12 for CAPWAP Timers 	220	0
5415	Length	Length : 2 	100	0
5415	Discovery	Discovery : The number of seconds between CAPWAP Discovery messages , when the WTP is in the Discovery phase . This value is used to configure the MaxDiscoveryInterval timer ( see Section 4.7.10 ). 	120	0
5415	Echo Request	Echo Request : The number of seconds between WTP Echo Request CAPWAP messages . This value is used to configure the EchoInterval timer ( see Section 4.7.7 ). The AC sets its EchoInterval timer to this value , plus the maximum retransmission time as described in Section 4.5.3 . 	120	0
5415	Type	Type : 51 for CAPWAP Transport Protocol 	220	0
5415	Length	Length : 1 	100	0
5415	Transport	Transport : The transport to use for the CAPWAP Data channel . The following enumerated values are supported : 	400	0
5415	Type	Type : 13 for Data Transfer Data 	400	0
5415	Length	Length : >= 5 	100	0
5415	Data Type	Data Type : An 8-bit value representing the transfer Data Type . The following enumerated values are supported : 	231	0
5415	Data Mode	Data Mode : An 8-bit value describing the type of information being transmitted . The following enumerated values are supported : 	231	0
5415	Data Length	Data Length : Length of data field , with a maximum size of 65535 . 	100	0
5415	Type	Type : 14 for Data Transfer Mode 	400	0
5415	Length	Length : 1 	100	0
5415	Data Mode	Data Mode : An 8-bit value describing the type of information being requested . The following enumerated values are supported : 	231	0
5415	Type	Type : 15 for Decryption Error Report 	231	0
5415	Length	Length : >= 9 	100	0
5415	Radio ID	Radio ID : The Radio Identifier refers to an interface index on the WTP , whose value is between one ( 1 ) and 31 . 	230	0
5415	Num of Entries	Num of Entries : The number of instances of the Length/MAC Address fields in the array . This field MUST NOT exceed the value of 255 . 	100	0
5415	Length	Length : The length of the MAC Address field . The formats and lengths specified in [ EUI-48 ] and [ EUI-64 ] are supported . 	100	0
5415	MAC Address	MAC Address : MAC address of the station that has caused decryption errors . 	230	0
5415	Type	Type : 16 for Decryption Error Report Period 	231	0
5415	Length	Length : 3 	100	0
5415	Radio ID	Radio ID : The Radio Identifier refers to an interface index on the WTP , whose value is between one ( 1 ) and 31 . 	230	0
5415	Report Interval	Report Interval : A 16-bit unsigned integer indicating the time , in seconds . The default value for this message element can be found in Section 4.7.11 . 	121	0
5415	Type	Type : 17 for Delete MAC ACL Entry 	301	0
5415	Length	Length : >= 8 	100	0
5415	Num of Entries	Num of Entries : The number of instances of the Length/MAC Address fields in the array . This field MUST NOT exceed the value of 255 . 	100	0
5415	Length	Length : The length of the MAC Address field . The formats and lengths specified in [ EUI-48 ] and [ EUI-64 ] are supported . 	100	0
5415	MAC Address	MAC Address : An array of MAC addresses to delete from the ACL . 	230	0
5415	Type	Type : 18 for Delete Station 	231	0
5415	Length	Length : >= 8 	100	0
5415	Radio ID	Radio ID : An 8-bit value representing the radio , whose value is between one ( 1 ) and 31 . 	230	0
5415	Length	Length : The length of the MAC Address field . The formats and lengths specified in [ EUI-48 ] and [ EUI-64 ] are supported . 	100	0
5415	MAC Address	MAC Address : The station's MAC address . 	230	0
5415	Discovery Type	The Discovery Type message element is used by the WTP to indicate how it has come to know about the existence of the AC to which it is sending the Discovery Request message . 	301	0
5415	Type	Type : 20 for Discovery Type 	231	0
5415	Length	Length : 1 	100	0
5415	Discovery Type	Discovery Type : An 8-bit value indicating how the WTP discovered the AC . The following enumerated values are supported : 	240	0
5415	Type	Type : 21 for Duplicate IPv4 Address 	400	0
5415	Length	Length : >= 12 	100	0
5415	IP Address	IP Address : The IP address currently used by the WTP . 	230	0
5415	Status	Status : The status of the duplicate IP address . The value MUST be set to 1 when a duplicate address is detected , and 0 when the duplicate address has been cleared . 	210	0
5415	Length	Length : The length of the MAC Address field . The formats and lengths specified in [ EUI-48 ] and [ EUI-64 ] are supported . 	100	0
5415	MAC Address	MAC Address : The MAC address of the offending device . 	230	0
5415	Type	Type : 22 for Duplicate IPv6 Address 	400	0
5415	Length	Length : >= 24 	100	0
5415	IP Address	IP Address : The IP address currently used by the WTP . 	230	0
5415	Status	Status : The status of the duplicate IP address . The value MUST be set to 1 when a duplicate address is detected , and 0 when the duplicate address has been cleared . 	210	0
5415	Length	Length : The length of the MAC Address field . The formats and lengths specified in [ EUI-48 ] and [ EUI-64 ] are supported . 	100	0
5415	MAC Address	MAC Address : The MAC address of the offending device . 	230	0
5415	Type	Type : 23 for Idle Timeout 	301	0
5415	Length	Length : 4 	100	0
5415	Timeout	Timeout : The current Idle Timeout , in seconds , to be enforced by the WTP . The default value for this message element is specified in Section 4.7.8 . 	121	0
5415	ECN Support	The ECN Support message element is sent by both the WTP and the AC to indicate their support for the Explicit Congestion Notification ( ECN ) bits , as defined in [ RFC3168 ]. 	301	0
5415	Type	Type : 53 for ECN Support 	231	0
5415	Length	Length : 1 	100	0
5415	ECN Support	ECN Support : An 8-bit value representing the sender's support for ECN , as defined in [ RFC3168 ]. All CAPWAP Implementations MUST support the Limited ECN Support mode . Full ECN Support is used if both the WTP and AC advertise the capability for " Full and Limited ECN " Support; otherwise , Limited ECN Support is used . 	400	0
5415	Type	Type : 24 for Image Data 	400	0
5415	Length	Length : >= 1 	100	0
5415	Data Type	Data Type : An 8-bit value representing the image Data Type . The following enumerated values are supported : 	240	0
5415	Type	Type : 25 for Image Identifier 	231	0
5415	Length	Length : >= 5 	100	0
5415	Vendor Identifier	Vendor Identifier : A 32-bit value containing the IANA-assigned " SMI Network Management Private Enterprise Codes ". 	231	0
5415	Type	Type : 26 for Image Information 	231	0
5415	Length	Length : 20 	100	0
5415	File Size	File Size : A 32-bit value containing the size of the file , in bytes , that will be transferred by the AC to the WTP . 	100	0
5415	Hash	Hash : A 16-octet MD5 hash of the image using the procedures defined in [ RFC1321 ]. 	231	0
5415	Type	Type : 27 for Initiate Download 	231	0
5415	Length	Length : 0 	100	0
5415	Type	Type : 28 for Location Data 	400	0
5415	Length	Length : >= 1 	100	0
5415	Maximum Message Length	The Maximum Message Length message element is included in the Join Request message by the WTP to indicate the maximum CAPWAP message length that it supports to the AC . The Maximum Message Length message element is optionally included in Join Response message by the AC to indicate the maximum CAPWAP message length that it supports to the WTP . 	100	0
5415	Type	Type : 29 for Maximum Message Length 	100	0
5415	Length	Length : 2 	100	0
5415	Maximum Message Length	Maximum Message Length A 16-bit unsigned integer indicating the maximum message length . 	100	0
5415	Type	Type : 52 for MTU Discovery Padding 	231	0
5415	Length	Length : Variable 	100	0
5415	Type	Type : 31 for Radio Administrative State 	231	0
5415	Length	Length : 2 	100	0
5415	Radio ID	Radio ID : An 8-bit value representing the radio to configure , whose value is between one ( 1 ) and 31 . The Radio ID field MAY also include the value of 0xff , which is used to identify the WTP . If an AC wishes to change the administrative state of a WTP , it includes 0xff in the Radio ID field . 	210	0
5415	Admin State	Admin State : An 8-bit value representing the administrative state of the radio . The default value for the Admin State field is listed in Section 4.8.1 . The following enumerated values are supported : 	231	0
5415	Type	Type : 32 for Radio Operational State 	231	0
5415	Length	Length : 3 	100	0
5415	Radio ID	Radio ID : The Radio Identifier refers to an interface index on the WTP , whose value is between one ( 1 ) and 31 . A value of 0xFF is invalid , as it is not possible to change the WTP's operational state . 	230	0
5415	State	State : An 8-bit Boolean value representing the state of the radio . The following enumerated values are supported : 	231	0
5415	Cause	Cause : When a radio is inoperable , the cause field contains the reason the radio is out of service . The following enumerated values are supported : 	240	0
5415	Result Code	The Result Code message element value is a 32-bit integer value , indicating the result of the Request message corresponding to the sequence number included in the Response message . 	301	0
5415	Type	Type : 33 for Result Code 	231	0
5415	Length	Length : 4 	100	0
5415	Result Code	Result Code : The following enumerated values are defined : 	231	0
5415	Type	Type : 34 for Returned Message Element 	231	0
5415	Length	Length : >= 6 	100	0
5415	Reason	Reason : The reason the configuration in the offending message element could not be applied by the WTP . The following enumerated values are supported : 	231	0
5415	Length	Length : The length of the Message Element field , which MUST NOT exceed 255 octets . 	100	0
5415	Session ID	The Session ID message element value contains a randomly generated unsigned 128-bit integer . 	301	0
5415	Type	Type : 35 for Session ID 	231	0
5415	Length	Length : 16 	100	0
5415	Session ID	Session ID : A 128-bit unsigned integer used as a random session identifier 	202	0
5415	Statistics Timer	The Statistics Timer message element value is used by the AC to inform the WTP of the frequency with which it expects to receive updated statistics . 	121	0
5415	Type	Type : 36 for Statistics Timer 	302	0
5415	Length	Length : 2 	100	0
5415	Statistics Timer	Statistics Timer : A 16-bit unsigned integer indicating the time , in seconds . The default value for this timer is specified in Section 4.7.14 . 	121	0
5415	Type	Type : 37 for Vendor Specific Payload 	231	0
5415	Length	Length : >= 7 	100	0
5415	Vendor Identifier	Vendor Identifier : A 32-bit value containing the IANA-assigned " SMI Network Management Private Enterprise Codes " [ RFC3232 ]. 	231	0
5415	Element ID	Element ID : A 16-bit Element Identifier that is managed by the vendor . 	230	0
5415	Type	Type : 38 for WTP Board Data 	220	0
5415	Length	Length : >= 14 	100	0
5415	Vendor Identifier	Vendor Identifier : A 32-bit value containing the IANA-assigned " SMI Network Management Private Enterprise Codes ", identifying the WTP hardware manufacturer . The Vendor Identifier field MUST NOT be set to zero . 	231	0
5415	Board Data Type	Board Data Type : The Board Data Type field identifies the data being encoded . The CAPWAP protocol defines the following values , and each of these types identify whether their presence is mandatory or optional : 	231	0
5415	Board Data Length	Board Data Length : The length of the data in the Board Data Value field , whose length MUST NOT exceed 1024 octets . 	100	0
5415	Type	Type : 39 for WTP Descriptor 	231	0
5415	Length	Length : >= 33 	100	0
5415	Max Radios	Max Radios : An 8-bit value representing the number of radios ( where each radio is identified via the Radio ID field ) supported by the WTP . 	231	0
5415	Radios in use	Radios in use : An 8-bit value representing the number of radios in use in the WTP . 	231	0
5415	Num Encrypt	Num Encrypt : The number of 3-byte Encryption sub-elements that follow this field . The value of the Num Encrypt field MUST be between one ( 1 ) and 255 . 	400	0
5415	Resvd	Resvd : The 3-bit field is reserved for future use . All implementations complying with this protocol MUST set to zero any bits that are reserved in the version of the protocol supported by that implementation . Receivers MUST ignore all bits not defined for the version of the protocol they support . 	500	0
5415	WBID	WBID : A 5-bit field that is the wireless binding identifier . The identifier will indicate the type of wireless packet associated with the radio . The WBIDs defined in this specification can be found in Section 4.3 . 	231	0
5415	Encryption Capabilities	Encryption Capabilities : This 16-bit field is used by the WTP to communicate its capabilities to the AC . A WTP that does not have any encryption capabilities sets this field to zero ( 0 ). Refer to the specific wireless binding for further specification of the Encryption Capabilities field . 	303	0
5415	Descriptor Vendor Identifier	Descriptor Vendor Identifier : A 32-bit value containing the IANA-assigned " SMI Network Management Private Enterprise Codes ". 	231	0
5415	Descriptor Type	Descriptor Type : The Descriptor Type field identifies the data being encoded . The format of the data is vendor-specific encoded in the UTF-8 format [ RFC3629 ]. The CAPWAP protocol defines the following values , and each of these types identify whether their presence is mandatory or optional . The values listed below are used in conjunction with the Descriptor Vendor Identifier field , whose value MUST be set to zero ( 0 ). This field , combined with the Descriptor Vendor Identifier set to a non-zero ( 0 ) value , allows vendors to use a private namespace . 	231	0
5415	Descriptor Length	Descriptor Length : Length of the vendor-specific encoding of the Descriptor Data field , whose length MUST NOT exceed 1024 octets . 	100	0
5415	Type	Type : 40 for WTP Fallback 	220	0
5415	Length	Length : 1 	100	0
5415	Mode	Mode : The 8-bit value indicates the status of automatic CAPWAP fallback on the WTP . When enabled , if the WTP detects that its primary AC is available , and that the WTP is not connected to the primary AC , the WTP SHOULD automatically disconnect from its current AC and reconnect to its primary AC . If disabled , the WTP will only reconnect to its primary AC through manual intervention ( e.g ., through the Reset Request message ). The default value for this field is specified in Section 4.8.9 . The following enumerated values are supported : 	210	0
5415	Type	Type : 41 for WTP Frame Tunnel Mode 	220	0
5415	Length	Length : 1 	100	0
5415	Reservd	Reservd : A set of reserved bits for future use . All implementations complying with this protocol MUST set to zero any bits that are reserved in the version of the protocol supported by that implementation . Receivers MUST ignore all bits not defined for the version of the protocol they support . 	500	0
5415	N	N : Native Frame Tunnel mode requires the WTP and AC to encapsulate all user payloads as native wireless frames , as defined by the wireless binding ( see for example Section 4.4 ) 	400	0
5415	E	E : The 802.3 Frame Tunnel Mode requires the WTP and AC to encapsulate all user payload as native IEEE 802.3 frames ( see Section 4.4 ). All user traffic is tunneled to the AC . This value MUST NOT be used when the WTP MAC Type is set to Split MAC . 	400	0
5415	L	L : When Local Bridging is used , the WTP does not tunnel user traffic to the AC; all user traffic is locally bridged . This value MUST NOT be used when the WTP MAC Type is set to Split MAC . 	210	0
5415	R	R : A reserved bit for future use . All implementations complying with this protocol MUST set to zero any bits that are reserved in the version of the protocol supported by that implementation . Receivers MUST ignore all bits not defined for the version of the protocol they support . 	500	0
5415	Type	Type : 44 for WTP MAC Type 	231	0
5415	Length	Length : 1 	100	0
5415	MAC Type	MAC Type : The MAC mode of operation supported by the WTP . The following enumerated values are supported : 	231	0
5415	Type	Type : 45 for WTP Name 	220	0
5415	Length	Length : >= 1 	100	0
5415	Type	Type : 47 for WTP Radio Statistics 	220	0
5415	Length	Length : 20 	100	0
5415	Radio ID	Radio ID : The radio ID of the radio to which the statistics apply , whose value is between one ( 1 ) and 31 . 	230	0
5415	Last Failure Type	Last Failure Type : The last WTP failure . The following enumerated values are supported : 	240	0
5415	Reset Count	Reset Count : The number of times that the radio has been reset . 	120	0
5415	SW Failure Count	SW Failure Count : The number of times that the radio has failed due to software-related reasons . 	100	0
5415	HW Failure Count	HW Failure Count : The number of times that the radio has failed due to hardware-related reasons . 	100	0
5415	Other Failure Count	Other Failure Count : The number of times that the radio has failed due to known reasons , other than software or hardware failure . 	100	0
5415	Unknown Failure Count	Unknown Failure Count : The number of times that the radio has failed for unknown reasons . 	100	0
5415	Config Update Count	Config Update Count : The number of times that the radio configuration has been updated . 	120	0
5415	Channel Change Count	Channel Change Count : The number of times that the radio channel has been changed . 	100	0
5415	Current Noise Floor	Current Noise Floor : A signed integer that indicates the noise floor of the radio receiver in units of dBm . 	100	0
5415	Type	Type : 48 for WTP Reboot Statistics 	231	0
5415	Length	Length : 15 	100	0
5415	Reboot Count	Reboot Count : The number of reboots that have occurred due to a WTP crash . A value of 65535 implies that this information is not available on the WTP . 	122	0
5415	AC Initiated Count	AC Initiated Count : The number of reboots that have occurred at the request of a CAPWAP protocol message , such as a change in configuration that required a reboot or an explicit CAPWAP protocol reset request . A value of 65535 implies that this information is not available on the WTP . 	231	0
5415	Link Failure Count	Link Failure Count : The number of times that a CAPWAP protocol connection with an AC has failed due to link failure . 	100	0
5415	SW Failure Count	SW Failure Count : The number of times that a CAPWAP protocol connection with an AC has failed due to software-related reasons . 	100	0
5415	HW Failure Count	HW Failure Count : The number of times that a CAPWAP protocol connection with an AC has failed due to hardware-related reasons . 	100	0
5415	Other Failure Count	Other Failure Count : The number of times that a CAPWAP protocol connection with an AC has failed due to known reasons , other than AC initiated , link , SW or HW failure . 	100	0
5415	Unknown Failure Count	Unknown Failure Count : The number of times that a CAPWAP protocol connection with an AC has failed for unknown reasons . 	100	0
5415	Last Failure Type	Last Failure Type : The failure type of the most recent WTP failure . The following enumerated values are supported : 	231	0
5415	Type	Type : 49 for WTP Static IP Address Information 	400	0
5415	Length	Length : 13 	100	0
5415	IP Address	IP Address : The IP address to assign to the WTP . This field is only valid if the static field is set to one . 	230	0
5415	Netmask	Netmask : The IP Netmask . This field is only valid if the static field is set to one . 	400	0
5415	Gateway	Gateway : The IP address of the gateway . This field is only valid if the static field is set to one . 	230	0
5415	Static	Static : An 8-bit Boolean stating whether or not the WTP should use a static IP address . A value of zero disables the static IP address , while a value of one enables it . 	301	0
5415	Discovery Type	o Discovery Type , see Section 4.6.21 	220	0
5415	Discovery Type	o Discovery Type , see Section 4.6.21 	220	0
5415	Session ID	o Session ID , see Section 4.6.37 	202	0
5415	ECN Support	At least one of the following message element MUST be included in the Join Request message . 	231	0
5415	Maximum Message Length	o Maximum Message Length , see Section 4.6.31 	100	0
5415	Result Code	o Result Code , see Section 4.6.35 	231	0
5415	ECN Support	One of the following message elements MUST be included in the Join Response Message : 	231	0
5415	Maximum Message Length	o Maximum Message Length , see Section 4.6.31 	100	0
5415	Echo Request	The Echo Request message is a keep-alive mechanism for CAPWAP control messages . 	301	0
5415	Statistics Timer	o Statistics Timer , see Section 4.6.38 	302	0
5415	Statistics Timer	o Statistics Timer , see Section 4.6.38 	302	0
5415	Result Code	The following message elements MAY be present in the Configuration Update Response message . 	231	0
5415	Result Code	One or more of the following message elements MAY be present in the Change State Event Request message : 	231	0
5415	Result Code	The following message element MAY be included in the Clear Configuration Request message : 	231	0
5415	Result Code	The following message element MAY be included in the Image Data Response message : 	400	0
5415	Result Code	o Result Code , see Section 4.6.35 	231	0
5415	Result Code	The following message element MAY be included in the Data Transfer Response message : 	400	0
5415	Result Code	The following message element MAY be included in the Station Configuration Response message : 	231	0
5415	AC Information Type	The Information Type field in the AC Descriptor message element ( see Section 4.6.1 ) is used to represent information about the AC . The namespace is 16 bits ( 0-65535 ), where the value of zero ( 0 ) is reserved and must not be assigned . This field , combined with the AC Information Vendor ID , allows vendors to use a private namespace . This specification defines the AC Information Type namespace when the AC Information Vendor ID is set to zero ( 0 ), for which the values four ( 4 ) and five ( 5 ) are allocated in this specification , and can be found in Section 4.6.1 . This namespace is managed by IANA and assignments require an Expert Review . IANA created the AC Information Type registry , whose format is : 	301	0
5415	AC Information Type	AC Information Type Type Value Reference 	240	0
5415	ECN Support	The ECN Support field in the ECN Support message element ( see Section 4.6.25 ) is used by the WTP to represent its ECN Support . The namespace is 8 bits ( 0-255 ). The values zero ( 0 ) and one ( 1 ) are allocated in this specification , and can be found in Section 4.6.25 . This namespace is managed by IANA and assignments require an Expert Review . IANA created the ECN Support registry , whose format is : 	210	0
5415	ECN Support	ECN Support Type Value Reference 	400	0
5415	Result Code	The Result Code field in the Result Code message element ( see Section 4.6.35 ) is used to indicate the success or failure of a CAPWAP Control message . The namespace is 32 bits ( 0-4294967295 ), where the value of zero ( 0 ) through 22 are allocated in this specification , and can be found in Section 4.6.35 . This namespace is managed by IANA and assignments require an Expert Review . IANA created the Result Code registry , whose format is : 	231	0
5415	Result Code	Result Code Type Value Reference 	231	0
5416	RSSI	RSSI : Received Signal Strength Indication ( RSSI ) is a signed , 8-bit value . It is the received signal strength indication , in dBm . 	231	0
5416	SNR	SNR : SNR is a signed , 8-bit value . It is the signal-to-noise ratio of the received IEEE 802.11 frame , in dB . 	231	0
5416	Data Rate	Data Rate : The data rate field is a 16-bit unsigned value . The data rate field is a 16-bit unsigned value expressing the data rate of the packets received by the WTP in units of 0.1 Mbps . For instance , a packet received at 5.5 Mbps would be set to 55 , while 11 Mbps would be set to 110 . 	231	0
5416	WLAN ID bitmap	WLAN ID bitmap : This bit field indicates the WLAN ID ( see Section 6.1 ) on which the WTP will transmit the included frame . For instance , if a multicast packet is to be transmitted on WLANs 1 and 3 , the bits for WLAN 1 and 3 of this field would be enabled . WLAN 1 is represented by bit 15 in the figure above , or the least significant bit , while WLAN 16 would be represented by bit zero ( 0 ), or the most significant bit , in the figure . This field is to be set to all zeroes for unicast packets and is unused if the WTP is not providing IEEE 802.11 encryption . 	210	0
5416	Reserved	Reserved : All implementations complying with this protocol MUST set to zero any bits that are reserved in the version of the protocol supported by that implementation . Receivers MUST ignore all bits not defined for the version of the protocol they support . 	500	0
5416	Type	Type : 1024 for IEEE 802.11 Add WLAN 	400	0
5416	Radio ID	Radio ID : An 8-bit value representing the radio , whose value is between one ( 1 ) and 31 . 	230	0
5416	WLAN ID	WLAN ID : An 8-bit value specifying the WLAN Identifier . The value MUST be between one ( 1 ) and 16 . 	230	0
5416	Capability	Capability : A 16-bit value containing the Capability information field to be advertised by the WTP in the Probe Request and Beacon frames . Each bit of the Capability field represents a different WTP capability , which are described in detail in [ IEEE.802-11.2007 ]. The format of the field is : 	231	0
5416	E	E ( ESS ): The AC MUST set the Extended Service Set ( ESS ) subfield to 1 . 	302	0
5416	I	I ( IBSS ): The AC MUST set the Independent Basic Service Set ( IBSS ) subfield to 0 . 	302	0
5416	C	C ( CF-Pollable ): The AC sets the Contention Free Pollable ( CF - Pollable ) subfield based on the table found in [ IEEE.802-11.2007 ]. 	231	0
5416	F	F ( CF-Poll Request ): The AC sets the CF-Poll Request subfield based on the table found in [ IEEE.802-11.2007 ]. 	231	0
5416	P	P ( Privacy ): The AC sets the Privacy subfield based on the confidentiality requirements of the WLAN , as defined in [ IEEE.802-11.2007 ]. 	231	0
5416	S	S ( Short Preamble ): The AC sets the Short Preamble subfield based on whether the use of short preambles is permitted on the WLAN , as defined in [ IEEE.802-11.2007 ]. 	231	0
5416	Short Preamble	S ( Short Preamble ): The AC sets the Short Preamble subfield based on whether the use of short preambles is permitted on the WLAN , as defined in [ IEEE.802-11.2007 ]. 	231	0
5416	B	B ( PBCC ): The AC sets the Packet Binary Convolutional Code ( PBCC ) modulation option subfield based on whether the use of PBCC is permitted on the WLAN , as defined in [ IEEE.802-11.2007 ]. 	231	0
5416	A	A ( Channel Agility ): The AC sets the Channel Agility subfield based on whether the WTP is capable of supporting the High Rate Direct Sequence Spread Spectrum ( HR/DSSS ), as defined in [ IEEE.802-11.2007 ]. 	231	0
5416	M	M ( Spectrum Management ): The AC sets the Spectrum Management subfield according to the value of the dot11SpectrumManagementRequired MIB variable , as defined in [ IEEE.802-11.2007 ]. 	231	0
5416	Q	Q ( QoS ): The AC sets the Quality of Service ( QoS ) subfield based on the table found in [ IEEE.802-11.2007 ]. 	231	0
5416	QoS	Q ( QoS ): The AC sets the Quality of Service ( QoS ) subfield based on the table found in [ IEEE.802-11.2007 ]. 	231	0
5416	T	T ( Short Slot Time ): The AC sets the Short Slot Time subfield according to the value of the WTP's currently used slot time value , as defined in [ IEEE.802-11.2007 ]. 	110	0
5416	D	D ( APSD ): The AC sets the Automatic Power Save Delivery ( APSD ) subfield according to the value of the dot11APSDOptionImplemented Management Information Base ( MIB ) variable , as defined in [ IEEE.802-11.2007 ]. 	231	0
5416	V	V ( Reserved ): The AC sets the Reserved subfield to zero , as defined in [ IEEE.802-11.2007 ]. 	302	0
5416	Reserved	V ( Reserved ): The AC sets the Reserved subfield to zero , as defined in [ IEEE.802-11.2007 ]. 	302	0
5416	O	O ( DSSS-OFDM ): The AC sets the DSSS-OFDM subfield to indicate the use of Direct Sequence Spread Spectrum with Orthogonal Frequency Division Multiplexing ( DSSS-OFDM ), as defined in [ IEEE.802-11.2007 ]. 	231	0
5416	K	K ( Delayed Block ACK ): The AC sets the Delayed Block ACK subfield according to the value of the dot11DelayedBlockAckOptionImplemented MIB variable , as defined in [ IEEE.802-11.2007 ]. 	301	0
5416	L	L ( Immediate Block ACK ): The AC sets the Delayed Block ACK subfield according to the value of the dot11ImmediateBlockAckOptionImplemented MIB variable , as defined in [ IEEE.802-11.2007 ]. 	301	0
5416	Key Status	Key Status : A 1-byte value that specifies the state and usage of the key that has been included . Note this field is ignored if the Key Length field is set to zero ( 0 ). The following values describe the key usage and its status : 	240	0
5416	Key Length	Key Length : A 16-bit value representing the length of the Key field . 	100	0
5416	Group TSC	Group TSC : A 48-bit value containing the Transmit Sequence Counter ( TSC ) for the updated group key . The WTP will set the TSC for broadcast/multicast frames to this value for the updated group key . 	200	0
5416	QoS	QoS : An 8-bit value specifying the default QoS policy for the WTP to apply to network traffic received for a non-WMM enabled STA . 	231	0
5416	Auth Type	Auth Type : An 8-bit value specifying the supported authentication type . 	231	0
5416	1	MAC Mode : This field specifies whether the WTP should support the WLAN in Local or Split MAC mode . Note that the AC MUST NOT request a mode of operation that was not advertised by the WTP during the discovery process ( see Section 4.6.43 in [ RFC5415 ]). The following enumerated values are supported : 	400	0
5416	MAC Mode	MAC Mode : This field specifies whether the WTP should support the WLAN in Local or Split MAC mode . Note that the AC MUST NOT request a mode of operation that was not advertised by the WTP during the discovery process ( see Section 4.6.43 in [ RFC5415 ]). The following enumerated values are supported : 	400	0
5416	Tunnel Mode	Tunnel Mode : This field specifies the frame tunneling type to be used for 802.11 data frames from all stations associated with the WLAN . The AC MUST NOT request a mode of operation that was not advertised by the WTP during the discovery process ( see Section 4.6.42 in [ RFC5415 ]). All IEEE 802.11 management frames MUST be tunneled using 802.11 Tunnel mode . The following enumerated values are supported : 	231	0
5416	Suppress SSID	Suppress SSID : A boolean indicating whether the SSID is to be advertised by the WTP . A value of zero suppresses the SSID in the 802.11 Beacon and Probe Response frames , while a value of one will cause the WTP to populate the field . 	302	0
5416	Type	Type : 1025 for IEEE 802.11 Antenna 	231	0
5416	Radio ID	Radio ID : An 8-bit value representing the radio to configure , whose value is between one ( 1 ) and 31 . 	230	0
5416	Diversity	Diversity : An 8-bit value specifying whether the antenna is to provide receiver diversity . The value of this field is the same as the IEEE 802.11 dot11DiversitySelectionRx MIB element , see [ IEEE.802-11.2007 ]. The following enumerated values are supported : 	231	0
5416	Combiner	Combiner : An 8-bit value specifying the combiner selection . The following enumerated values are supported : 	231	0
5416	Type	Type : 1026 for IEEE 802.11 Assigned WTP BSSID 	231	0
5416	Radio ID	Radio ID : An 8-bit value representing the radio , whose value is between one ( 1 ) and 31 . 	230	0
5416	WLAN ID	WLAN ID : An 8-bit value specifying the WLAN Identifier . The value MUST be between one ( 1 ) and 16 . 	230	0
5416	BSSID	BSSID : The BSSID assigned by the WTP for the WLAN created as a result of receiving an IEEE 802.11 Add WLAN . 	231	0
5416	Type	Type : 1027 for IEEE 802.11 Delete WLAN 	400	0
5416	Radio ID	Radio ID : An 8-bit value representing the radio , whose value is between one ( 1 ) and 31 . 	230	0
5416	WLAN ID	WLAN ID : An 8-bit value specifying the WLAN Identifier . The value MUST be between one ( 1 ) and 16 . 	230	0
5416	Type	Type : 1028 for IEEE 802.11 Direct Sequence Control 	231	0
5416	Radio ID	Radio ID : An 8-bit value representing the radio to configure , whose value is between one ( 1 ) and 31 . 	230	0
5416	Reserved	Reserved : All implementations complying with this protocol MUST set to zero any bits that are reserved in the version of the protocol supported by that implementation . Receivers MUST ignore all bits not defined for the version of the protocol they support . 	500	0
5416	Current CCA	Current CCA : The current Clear Channel Assessment ( CCA ) method in operation , whose value can be found in the IEEE 802.11 dot11CCAModeSupported MIB element ( see [ IEEE.802-11.2007 ]). Valid values are : 	400	0
5416	Energy Detect Threshold	Energy Detect Threshold : The current Energy Detect Threshold being used by the DSSS PHY . The value can be found in the IEEE 802.11 dot11EDThreshold MIB element ( see [ IEEE.802-11.2007 ]). 	231	0
5416	Type	Type : 1029 for IEEE 802.11 Information Element 	231	0
5416	Radio ID	Radio ID : An 8-bit value representing the radio , whose value is between one ( 1 ) and 31 . 	230	0
5416	WLAN ID	WLAN ID : An 8-bit value specifying the WLAN Identifier . The value MUST be between one ( 1 ) and 16 . 	230	0
5416	B	B : When set , the WTP is to include the Information Element in IEEE 802.11 Beacons associated with the WLAN . 	400	0
5416	P	P : When set , the WTP is to include the Information Element in Probe Responses associated with the WLAN . 	400	0
5416	Reserved	Reserved : All implementations complying with this protocol MUST set to zero any bits that are reserved in the version of the protocol supported by that implementation . Receivers MUST ignore all bits not defined for the version of the protocol they support . 	500	0
5416	Type	Type : 1030 for IEEE 802.11 MAC Operation 	231	0
5416	Radio ID	Radio ID : An 8-bit value representing the radio to configure , whose value is between one ( 1 ) and 31 . 	230	0
5416	Reserved	Reserved : All implementations complying with this protocol MUST set to zero any bits that are reserved in the version of the protocol supported by that implementation . Receivers MUST ignore all bits not defined for the version of the protocol they support . 	500	0
5416	RTS Threshold	RTS Threshold : This attribute indicates the number of octets in an MAC Protocol Data Unit ( MPDU ), below which a Request To Send/Clear To Send ( RTS/CTS ) handshake MUST NOT be performed . An RTS/CTS handshake MUST be performed at the beginning of any frame exchange sequence where the MPDU is of type Data or Management , the MPDU has an individual address in the Address1 field , and the length of the MPDU is greater than this threshold . Setting this attribute to be larger than the maximum MSDU size MUST have the effect of turning off the RTS/CTS handshake for frames of Data or Management type transmitted by this STA . Setting this attribute to zero MUST have the effect of turning on the RTS/CTS handshake for all frames of Data or Management type transmitted by this STA . The default value of this attribute MUST be 2347 . The value of this field comes from the IEEE 802.11 dot11RTSThreshold MIB element , ( see [ IEEE.802-11.2007 ]). 	100	0
5416	Short Retry	Short Retry : This attribute indicates the maximum number of transmission attempts of a frame , the length of which is less than or equal to RTSThreshold , that MUST be made before a failure condition is indicated . The default value of this attribute MUST be 7 . The value of this field comes from the IEEE 802.11 dot11ShortRetryLimit MIB element , ( see [ IEEE.802-11.2007 ]). 	110	0
5416	Long Retry	Long Retry : This attribute indicates the maximum number of transmission attempts of a frame , the length of which is greater than dot11RTSThreshold , that MUST be made before a failure condition is indicated . The default value of this attribute MUST be 4 . The value of this field comes from the IEEE 802.11 dot11LongRetryLimit MIB element , ( see [ IEEE.802-11.2007 ]). 	110	0
5416	Fragmentation Threshold	Fragmentation Threshold : This attribute specifies the current maximum size , in octets , of the MPDU that MAY be delivered to the PHY . A MAC Service Data Unit ( MSDU ) MUST be broken into fragments if its size exceeds the value of this attribute after adding MAC headers and trailers . An MSDU or MAC Management Protocol Data Unit ( MMPDU ) MUST be fragmented when the resulting frame has an individual address in the Address1 field , and the length of the frame is larger than this threshold . The default value for this attribute MUST be the lesser of 2346 or the aMPDUMaxLength of the attached PHY and MUST never exceed the lesser of 2346 or the 	231	0
5416	Tx MSDU Lifetime	Tx MSDU Lifetime : This attribute specifies the elapsed time in Time Units ( TUs ), after the initial transmission of an MSDU , after which further attempts to transmit the MSDU MUST be terminated . The default value of this attribute MUST be 512 . The value of this field comes from the IEEE 802.11 dot11MaxTransmitMSDULifetime MIB element , ( see [ IEEE.802-11.2007 ]). 	120	0
5416	Rx MSDU Lifetime	Rx MSDU Lifetime : This attribute specifies the elapsed time in TU , after the initial reception of a fragmented MMPDU or MSDU , after which further attempts to reassemble the MMPDU or MSDU MUST be terminated . The default value MUST be 512 . The value of this field comes from the IEEE 802.11 dot11MaxReceiveLifetime MIB element , ( see [ IEEE.802-11.2007 ]). 	121	0
5416	Type	Type : 1031 for IEEE 802.11 MIC Countermeasures 	231	0
5416	Radio ID	Radio ID : The Radio Identifier , whose value is between one ( 1 ) and 31 , typically refers to some interface index on the WTP . 	230	0
5416	WLAN ID	WLAN ID : This 8-bit unsigned integer includes the WLAN Identifier , on which the MIC failure occurred . The value MUST be between one ( 1 ) and 16 . 	230	0
5416	MAC Address	MAC Address : The MAC Address of the station that caused the MIC failure . 	230	0
5416	Type	Type : 1032 for IEEE 802.11 Multi-Domain Capability 	231	0
5416	Radio ID	Radio ID : An 8-bit value representing the radio to configure , whose value is between one ( 1 ) and 31 . 	230	0
5416	Reserved	Reserved : All implementations complying with this protocol MUST set to zero any bits that are reserved in the version of the protocol supported by that implementation . Receivers MUST ignore all bits not defined for the version of the protocol they support . 	500	0
5416	First Channel #	First Channel #: This attribute indicates the value of the lowest channel number in the sub-band for the associated domain country string . The value of this field comes from the IEEE 802.11 dot11FirstChannelNumber MIB element ( see [ IEEE.802-11.2007 ]). 	231	0
5416	Number of Channels	Number of Channels : This attribute indicates the value of the total number of channels allowed in the sub-band for the associated domain country string ( see Section 6.23 ). The value of this field comes from the IEEE 802.11 dot11NumberofChannels MIB element ( see [ IEEE.802-11.2007 ]). 	231	0
5416	Max Tx Power Level	Max Tx Power Level : This attribute indicates the maximum transmit power , in dBm , allowed in the sub-band for the associated domain country string ( see Section 6.23 ). The value of this field comes from the IEEE 802.11 dot11MaximumTransmitPowerLevel MIB element ( see [ IEEE.802-11.2007 ]). 	231	0
5416	Type	Type : 1033 for IEEE 802.11 OFDM Control 	231	0
5416	Radio ID	Radio ID : An 8-bit value representing the radio to configure , whose value is between one ( 1 ) and 31 . 	230	0
5416	Reserved	Reserved : All implementations complying with this protocol MUST set to zero any bits that are reserved in the version of the protocol supported by that implementation . Receivers MUST ignore all bits not defined for the version of the protocol they support . 	500	0
5416	B	Band Supported : The capability of the OFDM PHY implementation to operate in the three Unlicensed National Information Infrastructure ( U-NII ) bands . The value of this field comes from the IEEE 802.11 dot11FrequencyBandsSupported MIB element ( see [ IEEE.802-11.2007 ]), coded as a bit field , whose values are : 	400	0
5416	TI Threshold	TI Threshold : The threshold being used to detect a busy medium ( frequency ). CCA MUST report a busy medium upon detecting the RSSI above this threshold . The value of this field comes from the IEEE 802.11 dot11TIThreshold MIB element ( see [ IEEE.802-11.2007 ]). 	231	0
5416	Type	Type : 1034 for IEEE 802.11 Rate Set 	231	0
5416	Radio ID	Radio ID : An 8-bit value representing the radio to configure , whose value is between one ( 1 ) and 31 . 	230	0
5416	Type	Type : 1035 for IEEE 802.11 RSNA Error Report From Station 	231	0
5416	Client MAC Address	Client MAC Address : The Client MAC Address of the station . 	230	0
5416	BSSID	BSSID : The BSSID on which the failures are being reported . 	400	0
5416	Radio ID	Radio ID : The Radio Identifier , whose value is between one ( 1 ) and 31 , typically refers to some interface index on the WTP . 	230	0
5416	WLAN ID	WLAN ID : The WLAN ID on which the RSNA failures are being reported . The value MUST be between one ( 1 ) and 16 . 	230	0
5416	Reserved	Reserved : All implementations complying with this protocol MUST set to zero any bits that are reserved in the version of the protocol supported by that implementation . Receivers MUST ignore all bits not defined for the version of the protocol they support . 	500	0
5416	TKIP ICV Errors	TKIP ICV Errors : A 32-bit value representing the number of Temporal Key Integrity Protocol ( TKIP ) ( as defined in [ IEEE.802-11.2007 ]) ICV errors encountered when decrypting packets from the station . The value of this field comes from the IEEE 802.11 dot11RSNAStatsTKIPICVErrors MIB element ( see [ IEEE.802-11.2007 ]). 	231	0
5416	TKIP Local MIC Failures	TKIP Local MIC Failures : A 32-bit value representing the number of MIC failures encountered when checking the integrity of packets received from the station . The value of this field comes from the IEEE 802.11 dot11RSNAStatsTKIPLocalMICFailures MIB element ( see [ IEEE.802-11.2007 ]). 	231	0
5416	TKIP Remote MIC Failures	TKIP Remote MIC Failures : A 32-bit value representing the number of MIC failures reported by the station encountered ( possibly via the EAPOL-Key frame ). The value of this field comes from the IEEE 802.11 dot11RSNAStatsTKIPRemoteMICFailures MIB element ( see [ IEEE.802-11.2007 ]). 	231	0
5416	CCMP Replays	CCMP Replays : A 32-bit value representing the number of CCMP MPDUs discarded by the replay detection mechanism . The value of this field comes from the IEEE 802.11 dot11RSNACCMPReplays MIB element ( see [ IEEE.802-11.2007 ]). 	231	0
5416	CCMP Decrypt Errors	CCMP Decrypt Errors : A 32-bit value representing the number of CCMP MDPUs discarded by the decryption algorithm . The value of this field comes from the IEEE 802.11 dot11RSNACCMPDecryptErrors MIB element ( see [ IEEE.802-11.2007 ]). 	231	0
5416	TKIP Replays	TKIP Replays : A 32-bit value representing the number of TKIP Replays detected in frames received from the station . The value of this field comes from the IEEE 802.11 dot11RSNAStatsTKIPReplays MIB element ( see [ IEEE.802-11.2007 ]). 	200	0
5416	Type	Type : 1036 for IEEE 802.11 Station 	231	0
5416	Radio ID	Radio ID : An 8-bit value representing the radio , whose value is between one ( 1 ) and 31 . 	230	0
5416	Association ID	Association ID : A 16-bit value specifying the IEEE 802.11 Association Identifier . 	231	0
5416	Flags	Flags : All implementations complying with this protocol MUST set to zero any bits that are reserved in the version of the protocol supported by that implementation . Receivers MUST ignore all bits not defined for the version of the protocol they support . 	500	0
5416	MAC Address	MAC Address : The station's MAC Address 	230	0
5416	Capabilities	Capabilities : A 16-bit field containing the IEEE 802.11 Capabilities Information Field to use with the station . 	400	0
5416	WLAN ID	WLAN ID : An 8-bit value specifying the WLAN Identifier . The value MUST be between one ( 1 ) and 16 . 	230	0
5416	Supported Rates	Supported Rates : The variable-length field containing the supported rates to be used with the station , as found in the IEEE 802.11 dot11OperationalRateSet MIB element ( see [ IEEE.802-11.2007 ]). This field MUST NOT exceed 126 octets and specifies the set of data rates at which the station may transmit data , where each octet represents a data rate . 	400	0
5416	Type	Type : 1037 for IEEE 802.11 Station QoS Profile 	231	0
5416	MAC Address	MAC Address : The station's MAC Address 	230	0
5416	Reserved	Reserved : All implementations complying with this protocol MUST set to zero any bits that are reserved in the version of the protocol supported by that implementation . Receivers MUST ignore all bits not defined for the version of the protocol they support . 	500	0
5416	Type	Type : 1038 for IEEE 802.11 Station Session Key 	400	0
5416	MAC Address	MAC Address : The station's MAC Address 	230	0
5416	Flags	Flags : All implementations complying with this protocol MUST set to zero any bits that are reserved in the version of the protocol supported by that implementation . Receivers MUST ignore all bits not defined for the version of the protocol they support . The following bits are defined : 	220	0
5416	A	A : The 1-bit AKM-Only field is set by the AC to inform the WTP that is MUST NOT accept any 802.11 Data Frames other than AKM frames . This is the equivalent of the WTP's IEEE 802.1X port for the station to be in the closed state . When set , the WTP MUST drop any non-IEEE 802.1X packets it receives from the station . 	301	0
5416	C	C : The 1-bit field is set by the AC to inform the WTP that encryption services will be provided by the AC . When set , the WTP SHOULD police frames received from stations to ensure that they are properly encrypted as specified in the RSN Information Element , but does not need to take specific cryptographic action on the frame . Similarly , for transmitted frames , the WTP only needs to forward already encrypted frames . Since packets received by the WTP will be encrypted , the WTP cannot modify the contents of the packets , including modifying the DSCP markings of the encapsulated packet . In this case , this function would be the responsibility of the AC . 	201	0
5416	Pairwise TSC	Pairwise TSC : The 6-byte Transmit Sequence Counter ( TSC ) field to use for unicast packets transmitted to the station . 	400	0
5416	Pairwise RSC	Pairwise RSC : The 6-byte Receive Sequence Counter ( RSC ) to use for unicast packets received from the station . 	400	0
5416	Type	Type : 1039 for IEEE 802.11 Statistics 	231	0
5416	Radio ID	Radio ID : An 8-bit value representing the radio , whose value is between one ( 1 ) and 31 . 	230	0
5416	Reserved	Reserved : All implementations complying with this protocol MUST set to zero any bits that are reserved in the version of the protocol supported by that implementation . Receivers MUST ignore all bits not defined for the version of the protocol they support . 	500	0
5416	Tx Fragment Count	Tx Fragment Count : A 32-bit value representing the number of fragmented frames transmitted . The value of this field comes from the IEEE 802.11 dot11TransmittedFragmentCount MIB element ( see [ IEEE.802-11.2007 ]). 	200	0
5416	Multicast Tx Count	Multicast Tx Count : A 32-bit value representing the number of multicast frames transmitted . The value of this field comes from the IEEE 802.11 dot11MulticastTransmittedFrameCount MIB element ( see [ IEEE.802-11.2007 ]). 	200	0
5416	Failed Count	Failed Count : A 32-bit value representing the transmit excessive retries . The value of this field comes from the IEEE 802.11 dot11FailedCount MIB element ( see [ IEEE.802-11.2007 ]). 	231	0
5416	Retry Count	Retry Count : A 32-bit value representing the number of transmit retries . The value of this field comes from the IEEE 802.11 dot11RetryCount MIB element ( see [ IEEE.802-11.2007 ]). 	231	0
5416	Multiple Retry Count	Multiple Retry Count : A 32-bit value representing the number of transmits that required more than one retry . The value of this field comes from the IEEE 802.11 dot11MultipleRetryCount MIB element ( see [ IEEE.802-11.2007 ]). 	231	0
5416	Frame Duplicate Count	Frame Duplicate Count : A 32-bit value representing the duplicate frames received . The value of this field comes from the IEEE 802.11 dot11FrameDuplicateCount MIB element ( see [ IEEE.802-11.2007 ]). 	231	0
5416	RTS Success Count	RTS Success Count : A 32-bit value representing the number of successfully transmitted Ready To Send ( RTS ). The value of this field comes from the IEEE 802.11 dot11RTSSuccessCount MIB element ( see [ IEEE.802-11.2007 ]). 	231	0
5416	RTS Failure Count	RTS Failure Count : A 32-bit value representing the failed transmitted RTS . The value of this field comes from the IEEE 802.11 dot11RTSFailureCount MIB element ( see [ IEEE.802-11.2007 ]). 	231	0
5416	ACK Failure Count	ACK Failure Count : A 32-bit value representing the number of failed acknowledgements . The value of this field comes from the IEEE 802.11 dot11ACKFailureCount MIB element ( see [ IEEE.802-11.2007 ]). 	231	0
5416	Rx Fragment Count	Rx Fragment Count : A 32-bit value representing the number of fragmented frames received . The value of this field comes from the IEEE 802.11 dot11ReceivedFragmentCount MIB element ( see [ IEEE.802-11.2007 ]). 	200	0
5416	Multicast RX Count	Multicast RX Count : A 32-bit value representing the number of multicast frames received . The value of this field comes from the IEEE 802.11 dot11MulticastReceivedFrameCount MIB element ( see [ IEEE.802-11.2007 ]). 	200	0
5416	FCS Error Count	FCS Error Count : A 32-bit value representing the number of FCS failures . The value of this field comes from the IEEE 802.11 dot11FCSErrorCount MIB element ( see [ IEEE.802-11.2007 ]). 	231	0
5416	Decryption Errors	Decryption Errors : A 32-bit value representing the number of Decryption errors that occurred on the WTP . Note that this field is only valid in cases where the WTP provides encryption/ decryption services . The value of this field comes from the IEEE 802.11 dot11WEPUndecryptableCount MIB element ( see [ IEEE.802-11.2007 ]). 	231	0
5416	Discarded QoS Fragment Count	Discarded QoS Fragment Count : A 32-bit value representing the number of discarded QoS fragments received . The value of this field comes from the IEEE 802.11 dot11QoSDiscardedFragmentCount MIB element ( see [ IEEE.802-11.2007 ]). 	301	0
5416	Associated Station Count	Associated Station Count : A 32-bit value representing the number of number of associated stations . The value of this field comes from the IEEE 802.11 dot11AssociatedStationCount MIB element ( see [ IEEE.802-11.2007 ]). 	231	0
5416	QoS CF Polls Received Count	QoS CF Polls Received Count : A 32-bit value representing the number of (+) CF-Polls received . The value of this field comes from the IEEE 802.11 dot11QosCFPollsReceivedCount MIB element ( see [ IEEE.802-11.2007 ]). 	231	0
5416	QoS CF Polls Unused Count	QoS CF Polls Unused Count : A 32-bit value representing the number of (+) CF-Polls that have been received , but not used . The value of this field comes from the IEEE 802.11 dot11QosCFPollsUnusedCount MIB element ( see [ IEEE.802-11.2007 ]). 	231	0
5416	QoS CF Polls Unusable Count	QoS CF Polls Unusable Count : A 32-bit value representing the number of (+) CF-Polls that have been received , but could not be used due to the Transmission Opportunity ( TXOP ) size being smaller than the time that is required for one frame exchange sequence . The value of this field comes from the IEEE 802.11 dot11QosCFPollsUnusableCount MIB element ( see [ IEEE.802-11.2007 ]). 	231	0
5416	Type	Type : 1040 for IEEE 802.11 Supported Rates 	231	0
5416	Radio ID	Radio ID : An 8-bit value representing the radio , whose value is between one ( 1 ) and 31 . 	230	0
5416	Supported Rates	Supported Rates : The WTP includes the Supported Rates that its hardware supports . The format is identical to the Rate Set message element and is between 2 and 8 bytes in length . 	231	0
5416	Type	Type : 1041 for IEEE 802.11 Tx Power 	231	0
5416	Radio ID	Radio ID : An 8-bit value representing the radio to configure , whose value is between one ( 1 ) and 31 . 	230	0
5416	Reserved	Reserved : All implementations complying with this protocol MUST set to zero any bits that are reserved in the version of the protocol supported by that implementation . Receivers MUST ignore all bits not defined for the version of the protocol they support . 	500	0
5416	Current Tx Power	Current Tx Power : This attribute contains the current transmit output power in mW , as described in the dot11CurrentTxPowerLevel MIB variable , see [ IEEE.802-11.2007 ]. 	230	0
5416	Type	Type : 1042 for IEEE 802.11 Tx Power Level 	231	0
5416	Radio ID	Radio ID : An 8-bit value representing the radio to configure , whose value is between one ( 1 ) and 31 . 	230	0
5416	Num Levels	Num Levels : The number of power level attributes . The value of this field comes from the IEEE 802.11 dot11NumberSupportedPowerLevels MIB element ( see [ IEEE.802-11.2007 ]). 	231	0
5416	Type	Type : 1043 for IEEE 802.11 Update Station QoS 	231	0
5416	Radio ID	Radio ID : The Radio Identifier , whose value is between one ( 1 ) and 31 , typically refers to some interface index on the WTP . 	230	0
5416	MAC Address	MAC Address : The station's MAC Address . 	230	0
5416	Reserved	Reserved : All implementations complying with this protocol MUST set to zero any bits that are reserved in the version of the protocol supported by that implementation . Receivers MUST ignore all bits not defined for the version of the protocol they support . 	500	0
5416	RSV	RSV : All implementations complying with this protocol MUST set to zero any bits that are reserved in the version of the protocol supported by that implementation . Receivers MUST ignore all bits not defined for the version of the protocol they support . 	500	0
5416	DSCP Tag	DSCP Tag : The 6-bit DSCP label to use if packets are eligible to be DSCP tagged , specifically an IPv4 or IPv6 packet ( see [ RFC2474 ]). This field is used only if the ' D ' bit in the WTP Quality of Service message element was set; otherwise , its contents MUST be ignored . 	210	0
5416	Type	Type : 1044 for IEEE 802.11 Update WLAN 	231	0
5416	Radio ID	Radio ID : An 8-bit value representing the radio , whose value is between one ( 1 ) and 31 . 	230	0
5416	WLAN ID	WLAN ID : An 8-bit value specifying the WLAN Identifier . The value MUST be between one ( 1 ) and 16 . 	230	0
5416	Capability	Capability : A 16-bit value containing the Capability information field to be advertised by the WTP in the Probe Request and Beacon frames . Each bit of the Capability field represents a different WTP capability , which are described in detail in [ IEEE.802-11.2007 ]. The format of the field is : 	231	0
5416	E	E ( ESS ): The AC MUST set the Extended Service Set ( ESS ) subfield to 1 . 	302	0
5416	I	I ( IBSS ): The AC MUST set the Independent Basic Service Set ( IBSS ) subfield to 0 . 	302	0
5416	C	C ( CF-Pollable ): The AC sets the Contention Free Pollable ( CF - Pollable ) subfield based on the table found in [ IEEE.802-11.2007 ]. 	231	0
5416	F	F ( CF-Poll Request ): The AC sets the CF-Poll Request subfield based on the table found in [ IEEE.802-11.2007 ]. 	231	0
5416	P	P ( Privacy ): The AC sets the Privacy subfield based on the confidentiality requirements of the WLAN , as defined in [ IEEE.802-11.2007 ]. 	231	0
5416	S	S ( Short Preamble ): The AC sets the Short Preamble subfield based on whether the use of short preambles are permitted on the WLAN , as defined in [ IEEE.802-11.2007 ]. 	231	0
5416	Short Preamble	S ( Short Preamble ): The AC sets the Short Preamble subfield based on whether the use of short preambles are permitted on the WLAN , as defined in [ IEEE.802-11.2007 ]. 	231	0
5416	B	B ( PBCC ): The AC sets the Packet Binary Convolutional Code ( PBCC ) modulation option subfield based on whether the use of PBCC is permitted on the WLAN , as defined in [ IEEE.802-11.2007 ]. 	231	0
5416	A	A ( Channel Agility ): The AC sets the Channel Agility subfield based on whether the WTP is capable of supporting the High Rate Direct Sequence Spread Spectrum ( HR/DSSS ), as defined in [ IEEE.802-11.2007 ]. 	231	0
5416	M	M ( Spectrum Management ): The AC sets the Spectrum Management subfield according to the value of the dot11SpectrumManagementRequired MIB variable , as defined in [ IEEE.802-11.2007 ]. 	231	0
5416	Q	Q ( QoS ): The AC sets the Quality of Service ( QoS ) subfield based on the table found in [ IEEE.802-11.2007 ]. 	231	0
5416	QoS	Q ( QoS ): The AC sets the Quality of Service ( QoS ) subfield based on the table found in [ IEEE.802-11.2007 ]. 	231	0
5416	T	T ( Short Slot Time ): The AC sets the Short Slot Time subfield according to the value of the WTP's currently used slot time value , as defined in [ IEEE.802-11.2007 ]. 	110	0
5416	D	D ( APSD ): The AC sets the APSD subfield according to the value of the dot11APSDOptionImplemented Management Information Base ( MIB ) variable , as defined in [ IEEE.802-11.2007 ]. 	231	0
5416	V	V ( Reserved ): The AC sets the Reserved subfield to zero , as defined in [ IEEE.802-11.2007 ]. 	302	0
5416	Reserved	V ( Reserved ): The AC sets the Reserved subfield to zero , as defined in [ IEEE.802-11.2007 ]. 	302	0
5416	O	O ( DSSS-OFDM ): The AC sets the DSSS-OFDM subfield to indicate the use of Direct Sequence Spread Spectrum with Orthogonal Frequency Division Multiplexing ( DSSS-OFDM ), as defined in [ IEEE.802-11.2007 ]. 	231	0
5416	K	K ( Delayed Block ACK ): The AC sets the Delayed Block ACK subfield according to the value of the dot11DelayedBlockAckOptionImplemented MIB variable , as defined in [ IEEE.802-11.2007 ]. 	301	0
5416	L	L ( Immediate Block ACK ): The AC sets the Delayed Block ACK subfield according to the value of the dot11ImmediateBlockAckOptionImplemented MIB variable , as defined in [ IEEE.802-11.2007 ]. 	301	0
5416	Key Status	Key Status : A 1-byte value that specifies the state and usage of the key that has been included . The following values describe the key usage and its status : 	230	0
5416	Key Length	Key Length : A 16-bit value representing the length of the Key field . 	100	0
5416	Type	Type : 1045 for IEEE 802.11 WTP Quality of Service 	231	0
5416	Radio ID	Radio ID : The Radio Identifier , whose value is between one ( 1 ) and 31 , typically refers to some interface index on the WTP . 	230	0
5416	Tagging Policy	Tagging Policy : A bit field indicating how the WTP is to mark packets for QoS purposes . The required WTP behavior is defined in Section 2.6.1 . The field has the following format : 	400	0
5416	Rsvd	Rsvd : A set of reserved bits for future use . All implementations complying with this protocol MUST set to zero any bits that are reserved in the version of the protocol supported by that implementation . Receivers MUST ignore all bits not defined for the version of the protocol they support . 	500	0
5416	P	P : When set , the WTP is to employ the 802.1p QoS mechanism ( see Section 2.6.1.1 ), and the WTP is to use the ' Q ' bit . 	210	0
5416	Q	Q : When the ' P ' bit is set , the ' Q ' bit is used by the AC to communicate to the WTP how 802.1p QoS is to be enforced . Details on the behavior of the ' Q ' bit are specified in Section 2.6.1.1 . 	210	0
5416	D	D : When set , the WTP is to employ the DSCP QoS mechanism ( see Section 2.6.1.2 ), and the WTP is to use the ' O ' and ' I ' bits . 	210	0
5416	O	O : When the ' D ' bit is set , the ' O ' bit is used by the AC to communicate to the WTP how DSCP QoS is to be enforced on the outer ( tunneled ) header . Details on the behavior of the ' O ' bit are specified in Section 2.6.1.2 . 	210	0
5416	I	I : When the ' D ' bit is set , the ' I ' bit is used by the AC to communicate to the WTP how DSCP QoS is to be enforced on the station's packet ( inner ) header . Details on the behavior of the ' I ' bit are specified in Section 2.6.1.2 . 	210	0
5416	Queue Depth	Queue Depth : The number of packets that can be on the specific QoS transmit queue at any given time . 	100	0
5416	CWMin	CWMin : The Contention Window minimum ( CWmin ) value for the QoS transmit queue . The value of this field comes from the IEEE 802.11 dot11EDCATableCWMin MIB element ( see [ IEEE.802-11.2007 ]). 	231	0
5416	CWMax	CWMax : The Contention Window maximum ( CWmax ) value for the QoS transmit queue . The value of this field comes from the IEEE 802.11 dot11EDCATableCWMax MIB element ( see [ IEEE.802-11.2007 ]). 	231	0
5416	AIFS	AIFS : The Arbitration Inter Frame Spacing ( AIFS ) to use for the QoS transmit queue . The value of this field comes from the IEEE 802.11 dot11EDCATableAIFSN MIB element ( see [ IEEE.802-11.2007 ]). 	231	0
5416	Reserved	Reserved : All implementations complying with this protocol MUST set to zero any bits that are reserved in the version of the protocol supported by that implementation . Receivers MUST ignore all bits not defined for the version of the protocol they support . 	500	0
5416	RSV	RSV : All implementations complying with this protocol MUST set to zero any bits that are reserved in the version of the protocol supported by that implementation . Receivers MUST ignore all bits not defined for the version of the protocol they support . 	500	0
5416	DSCP Tag	DSCP Tag : The 6-bit DSCP label to use if packets are eligible to be DSCP tagged , specifically an IPv4 or IPv6 packet ( see [ RFC2474 ]). This field is used only if the ' D ' bit is set; otherwise , its contents MUST be ignored . 	210	0
5416	Type	Type : 1046 for IEEE 802.11 WTP WLAN Radio Configuration 	231	0
5416	Radio ID	Radio ID : An 8-bit value representing the radio to configure , whose value is between one ( 1 ) and 31 . 	230	0
5416	Short Preamble	Short Preamble : An 8-bit value indicating whether short preamble is supported . The following enumerated values are currently supported : 	231	0
5416	BSSID	BSSID : The WLAN Radio's base MAC Address . 	230	0
5416	DTIM Period	DTIM Period : This attribute specifies the number of Beacon intervals that elapse between transmission of Beacons frames containing a Traffic Indication Map ( TIM ) element whose Delivery Traffic Indication Message ( DTIM ) Count field is 0 . This value is transmitted in the DTIM Period field of Beacon frames . The value of this field comes from the IEEE 802.11 dot11DTIMPeriod MIB element ( see [ IEEE.802-11.2007 ]). 	120	0
5416	Beacon Period	Beacon Period : This attribute specifies the number of Time Unit ( TU ) that a station uses for scheduling Beacon transmissions . This value is transmitted in Beacon and Probe Response frames . The value of this field comes from the IEEE 802.11 dot11BeaconPeriod MIB element ( see [ IEEE.802-11.2007 ]). 	120	0
5416	Country String	Country String : This attribute identifies the country in which the station is operating . The value of this field comes from the IEEE 802.11 dot11CountryString MIB element ( see [ IEEE.802-11.2007 ]). Some regulatory domains do not allow WTPs to have user configurable country string , and require that it be a fixed value during the manufacturing process . Therefore , WTP vendors that wish to allow for the configuration of this field will need to validate this behavior during its radio certification process . Other WTP vendors may simply wish to treat this WTP configuration parameter as read-only . The country strings can be found in [ ISO.3166-1 ]. 	231	0
5416	Type	Type : 1047 for IEEE 802.11 WTP Radio Fail Alarm Indication 	231	0
5416	Radio ID	Radio ID : The Radio Identifier , whose value is between one ( 1 ) and 31 , typically refers to some interface index on the WTP . 	230	0
5416	Type	Type : The type of radio failure detected . The following enumerated values are supported : 	231	0
5416	Status	Status : An 8-bit boolean indicating whether the radio failure is being reported or cleared . A value of zero is used to clear the event , while a value of one is used to report the event . 	210	0
5416	Pad	Pad : All implementations complying with version zero of this protocol MUST set these bits to zero . Receivers MUST ignore all bits not defined for the version of the protocol they support . 	500	0
5416	Type	Type : 1048 for IEEE 802.11 WTP Radio Information 	231	0
5416	Radio ID	Radio ID : The Radio Identifier , whose value is between one ( 1 ) and 31 , which typically refers to an interface index on the WTP . 	230	0
5416	Radio Type	Radio Type : The type of radio present . Note this is a bit field that is used to specify support for more than a single type of PHY/MAC . The field has the following format : 	231	0
5416	Reservd	Reservd : A set of reserved bits for future use . All implementations complying with this protocol MUST set to zero any bits that are reserved in the version of the protocol supported by that implementation . Receivers MUST ignore all bits not defined for the version of the protocol they support . 	500	0
5416	N	N : An IEEE 802.11n radio . 	231	0
5416	G	G : An IEEE 802.11g radio . 	231	0
5416	A	A : An IEEE 802.11a radio . 	400	0
5416	B	B : An IEEE 802.11b radio . 	400	0
5416	A	A : WTP supports AES-CCMP , as defined in [ IEEE.802-11.2007 ]. 	400	0
5416	T	T : WTP supports TKIP and Michael , as defined in [ IEEE.802-11.2007 ] and [ WPA ], respectively . 	400	0
5417	AC IPv4 Address	AC IPv4 Address : IPv4 address of a CAPWAP AC that the WTP may use . The ACs are listed in the order of preference for use by the WTP . 	230	0
5417	AC IPv6 Address	AC IPv6 Address : IPv6 address of a CAPWAP AC that the WTP may use . The ACs are listed in the order of preference for use by the WTP . 	230	0
5420	Type	Type 	240	0
5420	Length	Indicates the total length of the TLV in octets . That is , the combined length of the Type , Length , and Value fields , i.e ., four plus the length of the Value field in octets . 	100	0
5420	Type	Type 	240	0
5420	Length	The Length contains the total length of the subobject in bytes , including the Type and Length fields . This length must be a multiple of four and must be at least eight . 	100	0
5422	M	M 	240	0
5422	R	R 	302	0
5422	TLV Type	TLV Type 	231	0
5422	Length	Two octets containing the length of the PAC attributes field in octets . 	100	0
5422	Type	The Type field is two octets , denoting the attribute type . Allocated Types include : 	231	0
5422	Length	Length 	100	0
5422	Type	Type 	240	0
5422	Length	Length 	100	0
5422	Key	Key 	302	0
5422	Type	Type 	240	0
5422	Length	The Length filed is two octets , which contains the length of the Value field in octets . 	100	0
5422	Type	Type 	240	0
5422	Length	2-octet Length field containing the length of the attributes field in octets . 	100	0
5422	Type	Type 	240	0
5422	Length	Length 	100	0
5422	Result	Result 	302	0
5422	Type	Type 	240	0
5422	Length	Length 	100	0
5422	PAC Type	This 2-octet field defines the type of PAC being requested or provisioned . The following values are defined : 	231	0
5422	M	M 	240	0
5422	R	R 	302	0
5422	TLV Type	TLV Type 	231	0
5422	Length	Length 	100	0
5422	Credential-Format	Credential-Format 	231	0
5422	M	M 	240	0
5422	R	R 	302	0
5422	TLV Type	TLV Type 	231	0
5422	Length	Length 	100	0
5440	Ver	Ver ( Version - 3 bits ): PCEP version number . Current version is version 1 . 	220	0
5440	Flags	Flags ( 5 bits ): No flags are currently defined . Unassigned bits are considered as reserved . They MUST be set to zero on transmission and MUST be ignored on receipt . 	500	0
5440	OT	OT ( Object-Type - 4 bits ): identifies the PCEP object type . 	231	0
5440	Ver	Flags ( 5 bits ): No flags are currently defined . Unassigned bits are considered as reserved . They MUST be set to zero on transmission and MUST be ignored on receipt . 	500	0
5440	Flags	Flags ( 5 bits ): No flags are currently defined . Unassigned bits are considered as reserved . They MUST be set to zero on transmission and MUST be ignored on receipt . 	500	0
5440	Keepalive	Keepalive ( 8 bits ): maximum period of time ( in seconds ) between two consecutive PCEP messages sent by the sender of this message . The minimum value for the Keepalive is 1 second . When set to 0 , once the session is established , no further Keepalive messages are sent to the remote peer . A RECOMMENDED value for the keepalive frequency is 30 seconds . 	120	0
5440	DeadTimer	DeadTimer ( 8 bits ): specifies the amount of time after the expiration of which the PCEP peer can declare the session with the sender of the Open message to be down if no PCEP message has been received . The DeadTimer SHOULD be set to 0 and MUST be ignored if the Keepalive is set to 0 . A RECOMMENDED value for the DeadTimer is 4 times the value of the Keepalive . 	120	0
5440	SID	SID ( PCEP session ID - 8 bits ): unsigned PCEP session number that identifies the current session . The SID MUST be incremented each time a new PCEP session is established . It is used for logging and troubleshooting purposes . Each increment SHOULD have a value of 1 and may cause a wrap back to zero . 	201	0
5440	Flags	Flags ( 32 bits ) 	301	0
5440	Pri	o Pri ( Priority - 3 bits ): the Priority field may be used by the requesting PCC to specify to the PCE the request's priority from 1 to 7 . The decision of which priority should be used for a specific request is a local matter; it MUST be set to 0 when unused . Furthermore , the use of the path computation request priority by the PCE's scheduler is implementation specific and out of the scope of this document . Note that it is not required for a PCE to support the priority field : in this case , it is RECOMMENDED that the PCC set the priority field to 0 in the RP object . If the PCE does not take into account the request priority , it is RECOMMENDED to set the priority field to 0 in the RP object carried within the corresponding PCRep message , regardless of the priority value contained in the RP object carried within the corresponding PCReq message . A higher numerical value of the priority field reflects a higher priority . Note that it is the responsibility of the network administrator to make use of the priority values in a consistent manner across the various PCCs . The ability of a PCE to support request prioritization MAY be dynamically discovered by the PCCs by means of PCE capability discovery . If not advertised by the PCE , a PCC may decide to set the request priority and will learn the ability of the PCE to support request prioritization by observing the Priority field of the RP object received in the PCRep message . If the value of the Pri field is set to 0 , this means that the PCE does not support 	230	0
5440	R	o R ( Reoptimization - 1 bit ): when set , the requesting PCC specifies that the PCReq message relates to the reoptimization of an existing TE LSP . For all TE LSPs except zero-bandwidth LSPs , when the R bit is set , an RRO ( see Section 7.10 ) MUST be included in the PCReq message to show the path of the existing TE LSP . Also , for all TE LSPs except zero-bandwidth LSPs , when the R bit is set , the existing bandwidth of the TE LSP to be reoptimized MUST be supplied in a BANDWIDTH object ( see Section 7.7 ). This BANDWIDTH object is in addition to the instance of that object used to describe the desired bandwidth of the reoptimized LSP . For zero - bandwidth LSPs , the RRO and BANDWIDTH objects that report the characteristics of the existing TE LSP are optional . 	210	0
5440	B	o B ( Bi-directional - 1 bit ): when set , the PCC specifies that the path computation request relates to a bi-directional TE LSP that has the same traffic engineering requirements including fate sharing , protection and restoration , LSRs , TE links , and resource requirements ( e.g ., latency and jitter ) in each direction . When cleared , the TE LSP is unidirectional . 	210	0
5440	O	o O ( strict/loose - 1 bit ): when set , in a PCReq message , this indicates that a loose path is acceptable . Otherwise , when cleared , this indicates to the PCE that a path exclusively made of strict hops is required . In a PCRep message , when the O bit is set this indicates that the returned path is a loose path; otherwise ( when the O bit is cleared ), the returned path is made of strict hops . 	210	0
5440	Flags	Flags ( 16 bits ). 	301	0
5440	Reserved	Reserved ( 8 bits ): This field MUST be set to zero on transmission and MUST be ignored on receipt . 	500	0
5440	B	o Bandwidth of an existing TE LSP for which a reoptimization is requested . BANDWIDTH Object-Type is 2 . 	240	0
5440	B	Bandwidth ( 32 bits ): The requested bandwidth is encoded in 32 bits in IEEE floating point format ( see [ IEEE.754.1985 ]), expressed in bytes per second . Refer to Section 3.1.2 of [ RFC3471 ] for a table of commonly used values . 	400	0
5440	Reserved	Reserved ( 16 bits ): This field MUST be set to zero on transmission and MUST be ignored on receipt . 	500	0
5440	T	Three values are currently defined : * T=1 : IGP metric * T=2 : TE metric * T=3 : Hop Counts 	240	0
5440	Flags	* B ( Bound - 1 bit ): When set in a PCReq message , the metric - value indicates a bound ( a maximum ) for the path metric that must not be exceeded for the PCC to consider the computed path as acceptable . The path metric must be less than or equal to the value specified in the metric-value field . When the B flag is cleared , the metric-value field is not used to reflect a bound constraint . 	210	0
5440	B	* B ( Bound - 1 bit ): When set in a PCReq message , the metric - value indicates a bound ( a maximum ) for the path metric that must not be exceeded for the PCC to consider the computed path as acceptable . The path metric must be less than or equal to the value specified in the metric-value field . When the B flag is cleared , the metric-value field is not used to reflect a bound constraint . 	210	0
5440	C	* C ( Computed Metric - 1 bit ): When set in a PCReq message , this indicates that the PCE MUST provide the computed path metric value ( should a path satisfying the constraints be found ) in the PCRep message for the corresponding metric . 	210	0
5440	Setup Prio	Setup Prio ( Setup Priority - 8 bits ): The priority of the TE LSP with respect to taking resources , in the range of 0 to 7 . The value 0 is the highest priority . The Setup Priority is used in deciding whether this session can preempt another session . 	301	0
5440	Holding Prio	Holding Prio ( Holding Priority - 8 bits ): The priority of the TE LSP with respect to holding resources , in the range of 0 to 7 . The value 0 is the highest priority . Holding Priority is used in deciding whether this session can be preempted by another session . 	110	0
5440	Flags	L flag : Corresponds to the " Local Protection Desired " bit ([ RFC3209 ]) of the SESSION-ATTRIBUTE Object . When set , this means that the computed path must include links protected with Fast Reroute as defined in [ RFC4090 ]. 	231	0
5440	Reserved	Reserved ( 8 bits ): This field MUST be set to zero on transmission and MUST be ignored on receipt . 	500	0
5440	Reserved	Reserved ( 8 bits ): This field MUST be set to zero on transmission and MUST be ignored on receipt . 	500	0
5440	Flags	Flags ( 24 bits ): Defines the potential dependency between the set of path computation requests . 	231	0
5440	L	* L ( Link diverse ) bit : when set , this indicates that the computed paths corresponding to the requests specified by the following RP objects MUST NOT have any link in common . 	210	0
5440	N	* N ( Node diverse ) bit : when set , this indicates that the computed paths corresponding to the requests specified by the following RP objects MUST NOT have any node in common . 	210	0
5440	S	* S ( SRLG diverse ) bit : when set , this indicates that the computed paths corresponding to the requests specified by the following RP objects MUST NOT share any SRLG ( Shared Risk Link Group ). 	210	0
5440	Reserved	Reserved ( 8 bits ): This field MUST be set to zero on transmission and MUST be ignored on receipt . 	500	0
5440	Flags	Flags ( 8 bits ): No flags are currently defined . Unassigned flags MUST be set to zero on transmission and MUST be ignored on receipt . 	500	0
5440	NT	NT ( Notification Type - 8 bits ): The Notification-type specifies the class of notification . 	231	0
5440	NV	NV ( Notification Value - 8 bits ): The Notification-value provides addition information related to the nature of the notification . 	231	0
5440	Reserved	Reserved ( 8 bits ): This field MUST be set to zero on transmission and MUST be ignored on receipt . 	500	0
5440	Flags	Flags ( 8 bits ): no flag is currently defined . This flag MUST be set to zero on transmission and MUST be ignored on receipt . 	500	0
5440	Reserved	Reserved ( 16 bits ): This field MUST be set to zero on transmission and MUST be ignored on receipt . 	500	0
5440	Flags	Flags ( 8 bits ): No flag is currently defined . The Flags field MUST be set to zero on transmission and MUST be ignored on receipt . 	500	0
5440	Reserved	Reserved ( 16 bits ): This field MUST be set to zero on transmission and MUST be ignored on receipt . 	500	0
5440	Flags	Flags ( 8 bits ): No flags are currently defined . The Flag field MUST be set to zero on transmission and MUST be ignored on receipt . 	500	0
5440	Reason	Reason ( 8 bits ): specifies the reason for closing the PCEP session . The setting of this field is optional . IANA manages the codespace of the Reason field . The following values are currently defined : 	231	0
5440	OpenWait	OpenWait : the timer that corresponds to the amount of time a PCEP peer will wait to receive an Open message from the PCEP peer after the expiration of which the system releases the PCEP resource and goes back to the Idle state . The OpenWait timer has a fixed value of 60 seconds . 	121	0
5440	KeepWait	KeepWait : the timer that corresponds to the amount of time a PCEP peer will wait to receive a Keepalive or a PCErr message from the PCEP peer after the expiration of which the system releases the PCEP resource and goes back to the Idle state . The KeepWait timer has a fixed value of 60 seconds . 	121	0
5440	DeadTimer	DeadTimer : period of timer after the expiration of which a PCEP peer declares the session down if no PCEP message has been received . 	121	0
5444	TLV	o A generalized type-length-value ( TLV ) format representing attributes . Each TLV can be associated with a packet , a message , or one or more addresses or address prefixes in a single Address Block . Multiple TLVs can be included , each associated with a packet , a message , and the same , different , or overlapping sets of addresses or address prefixes . 	400	0
5444	Message	Message - The fundamental entity carrying protocol information , in the form of address objects and TLVs . 	230	0
5444	TLV	TLV - A type-length-value structure . This is a generic way in which an attribute can be represented and correctly parsed without the parser having to understand the attribute . 	400	0
5444	Message	This section illustrates possible options for the < message > element . These are differentiated by their second ( flags ) octet . The length of the Message Body is determined using the Message Size field , which is the combined length of all the fields shown . The field labeled MAL defines the length of all addresses ( including the Originator Address , if present , and all addresses in Address Blocks ) in octets , as one more than the value in the field . 	400	0
5444	Message Body	This section illustrates the format of a Message Body ( the < message > element excluding its initial < msg-header > element ). The Message Body includes one Message TLV Block ( containing zero or more TLVs ) and may include any number ( zero or more ) of Address Block and Address Block TLV Block pairs . 	400	0
5444	Address Block	This section illustrates possible options for the < addr-block > element . These are differentiated by their second ( flags ) octet . The number of Mid elements is equal to the number of addresses ( except when mid-length is zero , when there are no Mid elements ). Where a variable number of prefix length fields is shown , their number is equal to the number of addresses . 	231	0
5444	TLV	This section illustrates possible options for the < tlv > element . These are differentiated by their second ( flags ) octet . If there are no Index fields , then this may be a Packet TLV , Message TLV , or Address Block TLV; if there are one or two Index fields , then this must be an Address Block TLV . The Length field gives the length of the Value field ( in octets ). 	231	0
5445	FEC Instance ID	Transfer-Length : a non-negative integer less than 2^^48 , indicating the length of the object in octets . 	100	0
5445	Length	Length ( 1 octet ): an unsigned integer that specifies the length of the Scheme-Specific FEC OTI in four-octet words ( including this length field ), except that the value zero indicates that no Instance-specific FEC OTI Information is provided . When the Length is zero , three padding bytes containing value zero SHALL follow the Length field to maintain 4-octet alignment . 	100	0
5445	FEC Instance ID	Transfer-Length : a non-negative integer less than 2^^48 , indicating the length of the object in octets . 	100	0
5448	AT_KDF_INPUT	3.1 . AT_KDF_INPUT 	240	0
5448	AT_KDF_INPUT	AT_KDF_INPUT 	302	0
5448	Length	The length of the attribute , calculated as defined in [ RFC4187 ], Section 8.1 . 	100	0
5448	Actual Network Name Length	This is a 2 byte actual length field , needed due to the requirement that the previous field is expressed in multiples of 4 bytes per the usual EAP-AKA rules . The Actual Network Name Length field provides the length of the network name in bytes . 	100	0
5448	Network Name	This field contains the network name of the access network for which the authentication is being performed . The name does not include any terminating null characters . Because the length of the entire attribute must be a multiple of 4 bytes , the sender pads the name with 1 , 2 , or 3 bytes of all zero bits when necessary . 	230	0
5448	AT_KDF	AT_KDF is an attribute that the server uses to reference a specific key derivation function . It offers a negotiation capability that can be useful for future evolution of the key derivation functions . 	231	0
5448	AT_KDF	AT_KDF 	302	0
5448	Length	Length 	100	0
5448	Key Derivation Function	An enumerated value representing the key derivation function that the server ( or peer ) wishes to use . Value 1 represents the default key derivation function for EAP-AKA ', i.e ., employing CK ' and IK ' as defined in Section 3.3 . 	210	0
5448	AT_CHECKCODE	When used within EAP-AKA ', the AT_CHECKCODE attribute is changed as follows . First , a 32-byte value is needed to accommodate a 256-bit hash output : 	400	0
5448	AT_BIDDING	AT_BIDDING 	202	0
5448	Length	Length 	100	0
5448	D	This bit is set to 1 if the sender supports EAP-AKA ', is willing to use it , and prefers it over EAP-AKA . Otherwise , it should be set to zero . 	210	0
5448	Reserved	Reserved 	500	0
5449	Willingness	Willingness - is an 8-bit unsigned integer field that specifies the willingness of the router to flood link-state information on behalf of other routers . It can be set to any integer value from 1 to 6 . By default , a router SHOULD advertise a willingness of WILL_DEFAULT = 3 . 	231	0
5449	Reserved	Reserved - is an 8-bit field that SHOULD be cleared (' 0 ') on transmission and SHOULD be ignored on reception . 	500	0
5449	Reserved	Reserved - is a 14-bit field that SHOULD be cleared (' 0 ') on transmission and SHOULD be ignored on reception . 	500	0
5449	R	R - is a binary flag , cleared (' 0 ') if the costs advertised in the TLV are direct ( i.e ., the costs of the links from the router to the neighbors ), or set (' 1 ') if the costs advertised are reverse ( i.e ., the costs of the links from the neighbors to the router ). By default , R is cleared (' 0 '). 	210	0
5449	U	U - is a binary flag , cleared (' 0 ') if the cost for each link from the sending router and to each advertised neighbor is explicitly included ( shown in Figure 3 ), or set (' 1 ') if a single metric value is included that applies to all links ( shown in Figure 4 ). 	210	0
5449	Cost n	Cost n - is an 8-bit unsigned integer field that specifies the cost of the link , in the direction specified by the R flag , between this router and the neighbor listed at the n-th position in the Hello packet when counting from the beginning of the Hello packet and with the first neighbor being at position 0 . 	100	0
5449	Padding	Padding - is a 16-bit field that SHOULD be cleared (' 0 ') on transmission and SHOULD be ignored on reception . Padding is included in order that the TLV is 32-bit aligned . Padding MUST be included when the TLV contains an even number of Cost fields and MUST NOT be included otherwise . 	500	0
5449	Reserved	Reserved - is a 6-bit field that SHOULD be cleared (' 0 ') on transmission and SHOULD be ignored on reception . 	500	0
5449	U	U - is a binary flag , cleared (' 0 ') if the cost for each link from each advertised neighbor in the PMPR TLV and to the sending router is explicitly included ( as shown in Figure 6 ), or set (' 1 ') if a single metric value is included that applies to all links ( as shown in Figure 7 ). 	210	0
5449	S	S - is a binary flag , cleared (' 0 ') if the router brings up adjacencies only with neighbors in its MPR set and MPR-selector set , as per Section 5.3 , or set (' 1 ') if the router brings up adjacencies with all MANET neighbors as a Synch router , as per Section 5.6 . 	210	0
5449	Neighbor ID	Neighbor ID - is a 32-bit field that specifies the router ID of a symmetric 1-hop neighbor of an OSPFv3 MANET interface of the router . 	230	0
5449	Cost n	Cost n - is a 16-bit unsigned integer field that specifies the cost of the link in the direction from the n-th listed advertised neighbor in the PMPR TLV and towards this router . A default value of 0xFFFF ( i.e ., infinity ) MUST be advertised unless information received via Hello packets from the neighbor specifies otherwise , in which case the received information MUST be advertised . If a neighbor is reachable via more than one interface , the cost advertised MUST be the minimum of the costs by which that neighbor can be reached . 	303	0
5449	Padding	Padding - is a 16-bit field that SHOULD be cleared (' 0 ') on transmission and SHOULD be ignored on reception . Padding is included in order that the PMPR TLV is 32-bit aligned . Padding MUST be included when the TLV contains an odd number of Cost fields and MUST NOT be included otherwise . 	500	0
5454	Type	Type 	240	0
5454	Length	Length 	100	0
5454	Subtype	Subtype 	231	0
5454	Prefix Length	A sixteen-byte field containing the Mobile IPv6 Network Prefix; all insignificant ( low-order ) bits ( beyond the Prefix Length ) MUST be set to 0 by the originator of the option and ignored by the receiver . 	500	0
5454	Mobile IPv6 Network Prefix	Mobile IPv6 Network Prefix 	400	0
5454	Type	Type 	240	0
5454	Length	Length 	100	0
5454	Subtype	Subtype 	231	0
5454	Code	A value indicating the result of the registration request with respect to the IPv6 home prefix registration . See below for currently defined Codes . 	231	0
5454	Prefix Length	Indicates the prefix length of the prefix included in the Mobile IPv6 Network Prefix field . A value of 255 indicates that a link - local address is included in the Mobile IPv6 Network Prefix field . 	100	0
5454	Reserved	Reserved 	500	0
5454	Mobile IPv6 Network Prefix	A sixteen-byte field containing the Mobile IPv6 Network Prefix; all insignificant ( low-order ) bits ( beyond the Prefix Length ) MUST be set to 0 by the originator of the option and ignored by the receiver . 	500	0
5454	Type	Type 	240	0
5454	Length	Length 	100	0
5454	Subtype	Subtype 	231	0
5454	Reserved	Reserved 	500	0
5455	CT	CT ( Class-Type ): A set of Traffic Trunks governed by a set of bandwidth constraints . Used for the purpose of link bandwidth allocation , constraint-based routing and admission control . A given Traffic Trunk belongs to the same CT on all links . 	231	0
5455	CT	CT : 3-bit field that indicates the Class-Type . Values allowed are 1 , 2 , ... , 7 . The value of 0 is Reserved . 	240	0
5455	Reserved	Reserved : 29-bit reserved field . It MUST be set to zero on transmission and MUST be ignored on receipt . 	500	0
5456	IE	Information Element ( IE ): A discrete data unit appended to an IAX frame that specifies user - or call-specific data . 	400	0
5456	Source call number	This 15-bit value specifies the call number the transmitting client uses to identify this call . The source call number for an active call MUST NOT be in use by another call on the same client . Call numbers MAY be reused once a call is no longer active , i.e ., either when there is positive acknowledgment that the call has been destroyed or when all possible timeouts for the call have expired . 	230	0
5456	OSeqno	The 8-bit OSeqno field is the outbound stream sequence number . Upon initialization of a call , its value is 0 . It increases incrementally as Full Frames are sent . When the counter overflows , it silently resets to 0 . 	201	0
5456	ISeqno	The 8-bit ISeqno field is the inbound stream sequence number . Upon initialization of a call , its value is 0 . It increases incrementally as Full Frames are received . At any time , the ISeqno of a call represents the next expected inbound stream sequence number . When the counter overflows , it silently resets to 0 . 	201	0
5456	Source call number	The source call number is the number that is used by the transmitting peer to identify the current call . 	230	0
5456	time-stamp	Mini frames carry a 16-bit time-stamp , which is the lower 16 bits of the transmitting peer's full 32-bit time-stamp for the call . The time-stamp allows synchronization of incoming frames so that they MAY be processed in chronological order instead of the ( possibly different ) order in which they are received . The 16-bit time-stamp wraps after 65.536 seconds , at which point a full frame SHOULD be sent to notify the remote peer that its time-stamp has been reset . A call MUST continue to send mini frames starting with time-stamp 0 even if acknowledgment of the resynchronization is not received . 	231	0
5456	Meta Indicator	The meta indicator is a 15-bit field of all zeroes , used to indicate that the frame is a Meta Frame . Meta Frames are identifiable because the first 16 bits will always be zero in any Meta Frame , whereas Full or Mini Frames will have either the ' F ' bit set or some ( nonzero ) value for the source call number ( or both ). 	201	0
5456	Source call number	The call number that is used by the transmitting peer to identify this video call . 	230	0
5456	time-stamp	Meta video frames carry a 16-bit time-stamp , which is the lower 16 bits of the transmitting peer's full 32-bit time-stamp for the call . When this time-stamp wraps , a Full Frame SHOULD be sent to notify the remote peer that the time-stamp has been reset to 0 . 	121	0
5456	Meta Indicator	The meta indicator is a 15-bit field of all zeroes , used to indicate that the frame is a Meta Frame . Meta Frames are identifiable because the first 16 bits will always be zero in any Meta Frame , whereas Full or Mini Frames will have either the ' F ' bit set or some ( nonzero ) value for the source call number ( or both ). 	201	0
5456	Data	This 8-bit field specifies flags for options that apply to a trunked call . The least significant bit of the field is the ' trunk time-stamps ' flag . A value of 0 indicates that the calls in the trunk do not include their individual time-stamps . A value of 1 indicates that the calls do each include their own time - stamp . All other bits are reserved for future use . 	231	0
5456	time-stamp	Meta trunk frames carry a 32-bit time-stamp , which represents the actual time of transmission of the trunk frame . This is distinct from the time-stamps of the calls included in the trunk . 	121	0
5462	TC	This three-bit field is used to carry traffic class information , and the change of the name is applicable to all places it occurs in IETF RFCs and other IETF documents . 	231	0
5462	Label	Label : Label Value , 20 bits Exp : Experimental Use , 3 bits S : Bottom of Stack , 1 bit TTL : Time to Live , 8 bits 	240	0
5462	Label	Label : Label Value , 20 bits TC : Traffic Class field , 3 bits S : Bottom of Stack , 1 bit TTL : Time to Live , 8 bits 	240	0
5462	TC	TC Traffic Class ( replaces the term EXP ) 	231	0
5484	hours	hours ( 5 bits ) -- 0 to 23; the values 24-31 are reserved 	500	0
5484	minutes	minutes ( 6 bits ) -- 0 to 59; 60-63 are reserved 	120	0
5484	seconds	seconds ( 6 bits ) -- 0 to 59; 60-63 are reserved 	500	0
5484	frames	Note that these fields are larger than the provision in SMPTE 12M , where BCD ( binary-coded decimal ) is used ( and notably , where only two bits are provided for the tens digit of the frame-count , so frame numbers above 39 cannot be represented ). 	200	0
5510	max_n	max_n the maximum number of encoding symbols generated for any source block . 	400	0
5510	m	m the length of the elements in the finite field , in bits . In this document , m belongs to { 2..16 }. 	100	0
5510	G	G the number of encoding symbols per group , i.e ., the number of symbols sent in the same packet . 	231	0
5510	G	o G : a non-negative integer indicating the number of encoding symbols per group used for the object . The default value is 1 , meaning that each packet contains exactly one symbol . When no G parameter is communicated to the decoder , then the latter MUST assume that G = 1 . 	210	0
5510	m	o m : The m parameter is the length of the finite field elements , in bits . It also characterizes the number of elements in the finite field : q = 2^^m elements . The default value is m = 8 . When no finite field size parameter is communicated to the decoder , then the latter MUST assume that m = 8 . 	231	0
5510	max_n	o FEC-OTI-Max-Number-of-Encoding-Symbols ( max_n ) 	231	0
5510	max_n	o FEC-OTI-Max-Number-of-Encoding-Symbols ( max_n ) 	231	0
5510	m	The finite field size parameter , m , defines the number of non-zero elements in this field , which is equal to : q - 1 = 2^^m - 1 . Note that q - 1 is also the theoretical maximum number of encoding symbols that can be produced for a source block . For instance , when m = 8 ( default ) there is a maximum of 2^^8 - 1 = 255 encoding symbols . 	400	0
5510	max_n	max_n : Maximum number of encoding symbols generated for any source block . 	400	0
5510	n	n : Number of encoding symbols generated for this source block . 	200	0
5510	max_n	max_n : Extracted from the received FEC OTI . 	231	0
5510	n	n 	302	0
5512	Tunnel Type	* Tunnel Type ( 2 octets ): identifies the type of tunneling technology being signaled . This document defines the following types : 	231	0
5512	Value	* Value ( variable ): comprised of multiple sub-TLVs . Each sub-TLV consists of three fields : a 1-octet type , 1-octet length , and zero or more octets of value . The sub-TLV is structured as follows : 	400	0
5520	L	The L bit SHOULD NOT be set , so that the subobject represents a strict hop in the explicit route . 	302	0
5520	Type	Type 	240	0
5520	Length	The Length contains the total length of the subobject in bytes , including the Type and Length fields . The Length is always 8 . 	100	0
5520	L	L 	240	0
5520	Type	Type 	240	0
5520	Length	The Length contains the total length of the subobject in bytes , including the Type and Length fields . The Length is always 20 . 	100	0
5521	Reserved	Reserved : 16 bits - MUST be set to zero on transmission and SHOULD be ignored on receipt . 	500	0
5521	Flags	F ( Fail - 1 bit ): when set , the requesting PCC requires the computation of a new path for an existing TE LSP that has failed . If the F bit is set , the path of the existing TE LSP MUST be provided in the PCReq message by means of a Record Route Object ( RRO ) defined in [ RFC5440 ]. This allows the path computation to take into account the previous path and reserved resources to avoid double bandwidth booking should the Traffic Engineering Database ( TED ) have not yet been updated or the corresponding resources not be yet been released . This will usually be used in conjunction with the exclusion from the path computation of the failed resource that caused the LSP to fail . 	210	0
5521	F	F ( Fail - 1 bit ): when set , the requesting PCC requires the computation of a new path for an existing TE LSP that has failed . If the F bit is set , the path of the existing TE LSP MUST be provided in the PCReq message by means of a Record Route Object ( RRO ) defined in [ RFC5440 ]. This allows the path computation to take into account the previous path and reserved resources to avoid double bandwidth booking should the Traffic Engineering Database ( TED ) have not yet been updated or the corresponding resources not be yet been released . This will usually be used in conjunction with the exclusion from the path computation of the failed resource that caused the LSP to fail . 	210	0
5523	LS age	LS age 	220	0
5523	LS type	As defined in [ RFC5340 ]. The U-bit MUST be set to 1 , and the S1 and S2 bits MUST be set to indicate either area or Autonomous System ( AS ) scoping . The LSA Function Code portion of this field MUST be set to 14 , i.e ., the OSPFv3 L1VPN LSA . 	210	0
5523	Advertising Router	Advertising Router 	230	0
5523	LS checksum	LS checksum 	301	0
5523	L1VPN TLV Type	L1VPN TLV Type 	231	0
5523	Link-Local Identifier	This field is used to support unnumbered links . When an unnumbered PE TE link is represented , this field MUST contain a value advertised by the LSA originator per [ RFC5340 ] in a Router LSA . When a numbered link is represented , this field MUST be set to zero ( 0 ). 	400	0
5523	Padding	A field of variable length and of sufficient size to ensure that the TLV is aligned on a 4-byte boundary . This field is only required when the L1VPN Auto-Discovery Information field is not 4-byte aligned . This field MUST be less than 4 bytes long , and MUST NOT be present when the size of L1VPN Auto-Discovery Information field is 4-byte aligned . 	400	0
5533	Next Header	Next Header : The payload that follows this header . 	400	0
5533	Hdr Ext Len	Hdr Ext Len : 8-bit unsigned integer . Length of the Shim6 header in 8-octet units , not including the first 8 octets . 	100	0
5533	P	P : A single bit to distinguish Shim6 Payload Extension headers from control messages . 	231	0
5533	Next Header	Next Header : The payload that follows this header . 	400	0
5533	Hdr Ext Len	Hdr Ext Len : 0 ( since the header is 8 octets ). 	302	0
5533	P	P : Set to one . A single bit to distinguish this from the Shim6 control messages . 	231	0
5533	Receiver Context Tag	Receiver Context Tag : 47-bit unsigned integer . Allocated by the receiver to identify the context . 	231	0
5533	Next Header	Next Header : 8-bit selector . Normally set to NO_NXT_HDR ( 59 ). 	231	0
5533	Hdr Ext Len	Hdr Ext Len : 8-bit unsigned integer . Length of the Shim6 header in 8-octet units , not including the first 8 octets . 	100	0
5533	P	P : Set to zero . A single bit to distinguish this from the Shim6 Payload Extension header . 	231	0
5533	Type	Type : 7-bit unsigned integer . Identifies the actual message from the table below . Type codes 0-63 will not trigger R1bis messages on a missing context , while codes 64-127 will trigger R1bis . 	231	0
5533	S	S : A single bit set to zero that allows Shim6 and HIP to have a common header format yet still distinguishes between Shim6 and HIP messages . 	302	0
5533	Checksum	Checksum : 16-bit unsigned integer . The checksum is the 16-bit one's complement of the one's complement sum of the entire Shim6 header message , starting with the Shim6 	301	0
5533	Type	Type-specific : Part of the message that is different for different message types . 	231	0
5533	Next Header	Next Header : NO_NXT_HDR ( 59 ). 	110	0
5533	Hdr Ext Len	Hdr Ext Len : At least 1 , since the header is 16 octets when there are no options . 	302	0
5533	Type	Type : 1 	240	0
5533	R	R : 1-bit field . Reserved for future use . Zero on transmit . MUST be ignored on receipt . 	500	0
5533	Initiator Context Tag	Initiator Context Tag : 47-bit field . The Context Tag that the initiator has allocated for the context . 	400	0
5533	Initiator Nonce	Initiator Nonce : 32-bit unsigned integer . A random number picked by the initiator , which the responder will return in the R1 message . 	400	0
5533	Forked Instance Identifier	Forked Instance Identifier : When another instance of an existent context with the same ULID pair is being created , a Forked Instance Identifier option MUST be included to distinguish this new instance from the existent one . 	230	0
5533	Next Header	Next Header : NO_NXT_HDR ( 59 ). 	110	0
5533	Hdr Ext Len	Hdr Ext Len : At least 1 , since the header is 16 octets when there are no options . 	302	0
5533	Type	Type : 2 	240	0
5533	Initiator Nonce	Initiator Nonce : 32-bit unsigned integer . Copied from the I1 message . 	400	0
5533	Responder Nonce	Responder Nonce : 32-bit unsigned integer . A number picked by the responder , which the initiator will return in the I2 message . 	400	0
5533	Next Header	Next Header : NO_NXT_HDR ( 59 ). 	302	0
5533	Hdr Ext Len	Hdr Ext Len : At least 2 , since the header is 24 octets when there are no options . 	302	0
5533	Type	Type : 3 	240	0
5533	R	R : 1-bit field . Reserved for future use . Zero on transmit . MUST be ignored on receipt . 	500	0
5533	Initiator Context Tag	Initiator Context Tag : 47-bit field . The Context Tag that the initiator has allocated for the context . 	400	0
5533	Initiator Nonce	Initiator Nonce : 32-bit unsigned integer . A random number picked by the initiator , which the responder will return in the R2 message . 	400	0
5533	Responder Nonce	Responder Nonce : 32-bit unsigned integer . Copied from the R1 message . 	231	0
5533	Forked Instance Identifier	Forked Instance Identifier : When another instance of an existent context with the same ULID pair is being created , a Forked Instance Identifier option MUST be included to distinguish this new instance from the existent one . 	230	0
5533	CGA Parameter Data Structure	CGA Parameter Data Structure : This option MUST be included in the I2 message when the locator list is included so the receiver can verify the locator list . 	400	0
5533	CGA Signature	CGA Signature : This option MUST be included in the I2 message when some of the locators in the list use CGA ( and not HBA ) for verification . 	231	0
5533	Next Header	Next Header : NO_NXT_HDR ( 59 ). 	302	0
5533	Hdr Ext Len	Hdr Ext Len : At least 1 , since the header is 16 octets when there are no options . 	302	0
5533	Type	Type : 4 	240	0
5533	R	R : 1-bit field . Reserved for future use . Zero on transmit . MUST be ignored on receipt . 	500	0
5533	Responder Context Tag	Responder Context Tag : 47-bit field . The Context Tag that the responder has allocated for the context . 	400	0
5533	Initiator Nonce	Initiator Nonce : 32-bit unsigned integer . Copied from the I2 message . 	400	0
5533	CGA Parameter Data Structure	CGA Parameter Data Structure : Included when the locator list is included so the receiver can verify the locator list . 	400	0
5533	CGA Signature	CGA Signature : Included when some of the locators in the list use CGA ( and not HBA ) for verification . 	400	0
5533	Next Header	Next Header : NO_NXT_HDR ( 59 ). 	110	0
5533	Hdr Ext Len	Hdr Ext Len : At least 1 , since the header is 16 octets when there are no options . 	302	0
5533	Type	Type : 5 	240	0
5533	R	R : 1-bit field . Reserved for future use . Zero on transmit . MUST be ignored on receipt . 	500	0
5533	Packet Context Tag	Packet Context Tag : 47-bit unsigned integer . The Context Tag contained in the received packet that triggered the generation of the R1bis message . 	231	0
5533	Responder Nonce	Responder Nonce : 32-bit unsigned integer . A number picked by the responder which the initiator will return in the I2bis message . 	400	0
5533	Next Header	Next Header : NO_NXT_HDR ( 59 ). 	302	0
5533	Hdr Ext Len	Hdr Ext Len : At least 3 , since the header is 32 octets when there are no options . 	302	0
5533	Type	Type : 6 	240	0
5533	R	R : 1-bit field . Reserved for future use . Zero on transmit . MUST be ignored on receipt . 	500	0
5533	Initiator Context Tag	Initiator Context Tag : 47-bit field . The Context Tag that the initiator has allocated for the context . 	400	0
5533	Initiator Nonce	Initiator Nonce : 32-bit unsigned integer . A random number picked by the initiator , which the responder will return in the R2 message . 	400	0
5533	Responder Nonce	Responder Nonce : 32-bit unsigned integer . Copied from the R1bis message . 	231	0
5533	Packet Context Tag	Packet Context Tag : 47-bit unsigned integer . Copied from the Packet Context Tag field contained in the received R1bis . 	231	0
5533	Forked Instance Identifier	Forked Instance Identifier : When another instance of an existent context with the same ULID pair is being created , a Forked Instance Identifier option is included to distinguish this new instance from the existent one . 	230	0
5533	CGA Parameter Data Structure	CGA Parameter Data Structure : Included when the locator list is included so the receiver can verify the locator list . 	400	0
5533	CGA Signature	CGA Signature : Included when some of the locators in the list use CGA ( and not HBA ) for verification . 	400	0
5533	Next Header	Next Header : NO_NXT_HDR ( 59 ). 	302	0
5533	Hdr Ext Len	Hdr Ext Len : At least 1 , since the header is 16 octets when there are no options . 	302	0
5533	Type	Type : 64 	231	0
5533	R	R : 1-bit field . Reserved for future use . Zero on transmit . MUST be ignored on receipt . 	500	0
5533	Receiver Context Tag	Receiver Context Tag : 47-bit field . The Context Tag that the receiver has allocated for the context . 	400	0
5533	Request Nonce	Request Nonce : 32-bit unsigned integer . A random number picked by the initiator , which the peer will return in the Update Acknowledgement message . 	400	0
5533	CGA Parameter Data Structure	CGA Parameter Data Structure ( PDS ): Included when the locator list is included and the PDS was not included in the I2/ I2bis/R2 messages , so the receiver can verify the locator list . 	400	0
5533	CGA Signature	CGA Signature : Included when some of the locators in the list use CGA ( and not HBA ) for verification . 	400	0
5533	Next Header	Next Header : NO_NXT_HDR ( 59 ). 	302	0
5533	Hdr Ext Len	Hdr Ext Len : At least 1 , since the header is 16 octets when there are no options . 	302	0
5533	Type	Type : 65 	220	0
5533	R	R : 1-bit field . Reserved for future use . Zero on transmit . MUST be ignored on receipt . 	500	0
5533	Receiver Context Tag	Receiver Context Tag : 47-bit field . The Context Tag the receiver has allocated for the context . 	400	0
5533	Request Nonce	Request Nonce : 32-bit unsigned integer . Copied from the Update Request message . 	231	0
5533	Next Header	Next Header : NO_NXT_HDR ( 59 ). 	302	0
5533	Hdr Ext Len	Hdr Ext Len : At least 1 , since the header is 16 octets . Depends on the specific Error Data . 	302	0
5533	Type	Type : 68 	220	0
5533	Error Code	Error Code : 7-bit field describing the error that generated the Error message . See Error Code list below . 	231	0
5533	Pointer	Pointer : 16-bit field . Identifies the octet offset within the invoking packet where the error was detected . 	231	0
5533	Packet in error	Packet in error : As much of invoking packet as possible without the Error message packet exceeding the minimum IPv6 MTU . 	400	0
5533	Type	Type : 15-bit identifier of the type of option . The options defined in this document are below . 	231	0
5533	C	C : Critical . One , if this parameter is critical and MUST be recognized by the recipient; zero otherwise . An implementation might view the C-bit as part of the Type field by multiplying the type values in this specification by two . 	210	0
5533	Length	Length : Length of the Contents , in bytes . 	100	0
5533	Contents	Contents : Parameter-specific , defined by Type . 	400	0
5533	Padding	Padding : Padding , 0-7 bytes , added if needed . 	400	0
5533	Validator	Validator : Variable length content whose interpretation is local to the responder . 	400	0
5533	Padding	Padding : Padding , 0-7 bytes , added if needed . See Section 5.15 . 	400	0
5533	Locator List Generation	Locator List Generation : 32-bit unsigned integer . Indicates a generation number that is increased by one for each new locator list . This is used to ensure that the index in the Locator Preferences refers to the right version of the locator list . 	220	0
5533	Num Locators	Num Locators : 8-bit unsigned integer . The number of locators that are included in the option . We call this number " N " below . 	231	0
5533	Padding	Padding : Padding , 0-7 bytes , added if needed so that the Locators start on a multiple-of-8-octet boundary . Note that for this option , there is never a need to pad at the end since the Locators are a multiple-of-8 - octets in length . This internal padding is included in the Length field . 	302	0
5533	Locator List Generation	Locator List Generation : 32-bit unsigned integer . Indicates a generation number for the locator list to which the elements should apply . 	231	0
5533	Element Len	Element Len : 8-bit unsigned integer . The length in octets of each element . This specification defines the cases when the length is 1 , 2 , or 3 . 	100	0
5533	Padding	Padding : Padding , 0-7 bytes , added if needed . See Section 5.15 . 	400	0
5533	CGA Parameter Data Structure	CGA Parameter Data Structure : Variable length content . Content defined in [ 2 ] and [ 3 ]. 	400	0
5533	Padding	Padding : Padding , 0-7 bytes , added if needed . See Section 5.15 . 	400	0
5533	CGA Signature	CGA Signature : A variable-length field containing a PKCS#1 v1.5 signature , constructed by using the sender's private key over the following sequence of octets : 	400	0
5533	Padding	Padding : Padding , 0-7 bytes , added if needed . See Section 5.15 . 	400	0
5533	Sender ULID	Sender ULID : A 128-bit IPv6 address . 	230	0
5533	Receiver ULID	Receiver ULID : A 128-bit IPv6 address . 	230	0
5533	Forked Instance Identifier	Forked Instance Identifier : 32-bit field containing the identifier of the particular forked instance . 	230	0
5534	Sta	Sta ( State ) This 2-bit State field is used to inform the peer about the state of the sender . It has three legal values : 	231	0
5534	Keepalive Timeout	Upon a timeout on the Keepalive Timer , the node sends one last Keepalive message . This can only happen in the Operational state . 	201	0
5541	OF Code	OF Code ( 2 bytes ): Objective Function code point identifier . IANA manages the " PCE Objective Function " code point registry ( see Section 6 ). 	231	0
5541	OF Code	OF Code ( 2 bytes ): The identifier of the objective function . IANA manages the " PCE Objective Function " code point registry ( see Section 6 ). 	231	0
5541	Reserved	Reserved ( 2 bytes ): This field MUST be set to zero on transmission and MUST be ignored on receipt . 	500	0
5553	L	The L bit SHOULD NOT be set , so that the subobject represents a strict hop in the explicit route . 	302	0
5553	Type	Subobject Type for a Path Key with a 32-bit PCE-ID as assigned by IANA . 	231	0
5553	Length	The Length contains the total length of the subobject in bytes , including the Type and Length fields . The Length is always 8 . 	100	0
5553	L	L 	240	0
5553	Type	Subobject Type for a Path Key with a 128-bit PCE-ID as assigned by IANA . 	231	0
5553	Length	The Length contains the total length of the subobject in bytes , including the Type and Length fields . The Length is always 20 . 	100	0
5555	Type	Type 	240	0
5555	Length	Length 	100	0
5555	Prefix-len	The length of the prefix allocated to the mobile node . If only a single address is allocated , this field MUST be set to 32 . In the first binding update requesting a prefix , the field contains the prefix length requested . However , in the following binding updates , this field must contain the length of the prefix allocated . A value of zero is invalid and MUST be considered an error . 	100	0
5555	P	A flag indicating , when set , that the mobile node requests a mobile network prefix . This flag is only relevant for new requests , and must be ignored for binding refreshes . 	303	0
5555	Reserved	This field is reserved for future use . It MUST be set to zero by the sender and ignored by the receiver . 	500	0
5555	Type	Type 	240	0
5555	Length	Length 	100	0
5555	Reserved	Reserved 	500	0
5555	F	When set , this flag indicates a request for forcing UDP encapsulation regardless of whether a NAT is present on the path between the mobile node and the home agent . This flag may be set by the mobile node if it is required to use UDP encapsulation regardless of the presence of a NAT . This flag SHOULD NOT be set when the mobile node is configured with an IPv6 care-of address -- with the exception of the scenario mentioned in Section 4.4.1 . 	210	0
5555	Type	Type 	240	0
5555	Length	Length 	100	0
5555	Status	Indicates success or failure for the IPv4 home address binding . Values from 0 to 127 indicate success . Higher values indicate failure . 	302	0
5555	Pref-len	The prefix length of the address allocated . This field is only valid in case of success and MUST be set to zero and ignored in case of failure . This field overrides what the mobile node requested ( if not equal to the requested length ). 	100	0
5555	Res	This field is reserved for future use . It MUST be set to zero by the sender and ignored by the receiver 	500	0
5555	Type	Type 	240	0
5555	Length	Length 	100	0
5555	F	This flag indicates to the mobile node that UDP encapsulation is required . When set , this flag indicates that the mobile node MUST use UDP encapsulation even if a NAT is not located between the mobile node and home agent . This flag SHOULD NOT be set when the mobile node is assigned an IPv6 care-of address -- with the exception of accommodating the scenarios discussed in Section 4.4.1 . 	210	0
5555	Reserved	This field is reserved for future use . It MUST be set to zero by the sender and ignored by the receiver . 	500	0
5555	H	After the mobile node detects movement , it configures a new care-of address . If the mobile node is in an IPv4-only network , it removes binding update list entries for correspondent nodes , since route optimisation cannot be supported . This may cause inbound packet losses , as remote correspondent nodes are unaware of such movement . To avoid confusion in the correspondent node , the mobile node SHOULD deregister its binding with each correspondent node by sending a deregistration binding update . The deregistration binding update message is tunnelled to the home agent and onto the correspondent node . This is done after the mobile node updates the home agent with its new location as discussed below . 	230	0
5557	Type	Type : 5 Length : Variable 	100	0
5557	Delete Order	Delete Order : 32-bit integer that indicates the order in which the old TE LSP should be removed . 	231	0
5557	Setup Order	Setup Order : 32-bit integer that indicates the order in which the new TE LSP should be setup . 	110	0
5557	MH	MH ( Max Hop : 8 bits ): 8-bit integer that indicates the maximum hop count for all the TE LSPs . 	231	0
5557	MU	MU ( Max Utilization Percentage : 8 bits ) : 8-bit integer that indicates the upper-bound utilization percentage by which all links should be bound . Utilization = ( Link Capacity - Allocated Bandwidth on the Link)/ Link Capacity . MU is intended to be an integer that can only be between 0 and 100 . 	231	0
5557	mU	mU ( minimum Utilization Percentage : 8 bits ) : 8-bit integer that indicates the lower-bound utilization percentage by which all links should be bound . mU is intended to be an integer that can only be between 0 and 100 . 	231	0
5557	OB	OB ( Over Booking factor Percentage : 8 bits ) : 8-bit integer that indicates the overbooking percentage that allows the reserved bandwidth to be overbooked on each link beyond its physical capacity limit . The value , for example , 10% means that 110 Mbps can be reserved on a 100 Mbps link . 	231	0
5561	U	U-bit : Unknown TLV bit , as described in [ RFC5036 ]. The value could be either 0 or 1 as specified in the Capability document associated with the given capability . 	210	0
5561	F	F-bit : Forward unknown TLV bit , as described in [ RFC5036 ]. The value of this bit MUST be 0 since a Capability Parameter TLV is sent only in Initialization and Capability messages , which are not forwarded . 	302	0
5561	TLV Code Point	TLV Code Point : The TLV type that identifies a specific capability . This is an IANA-assigned code point ( from TLV Type namespace ) for a given capability as requested in the associated capability document . 	231	0
5561	S	S-bit : The State Bit . It indicates whether the sender is advertising or withdrawing the capability corresponding to the TLV code point . The State Bit value is used as follows : 	210	0
5563	Type	Type 	240	0
5563	Sub-Type	Sub-Type 	231	0
5563	Length	Length 	100	0
5563	Method	An 8-bit field that specifies the authentication type for protecting the signaling messages . 	231	0
5563	Type	Type 	240	0
5563	Length	The length of the extension in octets , excluding Type and Length fields . 	100	0
5563	Sub-Type	Sub-Type 	231	0
5563	Type	Type 	240	0
5563	Length	The length of the extension in octets , excluding Type and Length fields . 	100	0
5563	Sub-Type	Sub-Type 	231	0
5563	ID-Type	ID-Type 	240	0
5563	Type	Type 	240	0
5563	Length	The length of the extension in octets , excluding Type and Length fields . 	100	0
5563	Sub-Type	Sub-Type 	231	0
5563	ID-Type	ID-Type 	240	0
5563	Type	Type 	240	0
5563	Length	Length 	100	0
5563	Sub-Type	Sub-Type 	231	0
5563	Tech-Type	An 8-bit field that specifies the access technology through which the mobile device is connected to the access network . 	230	0
5568	H	Handover : A process of terminating existing connectivity and obtaining new IP connectivity . 	302	0
5568	H	Handover Initiate ( HI ): A message from the PAR to the NAR regarding an MN's handover . 	230	0
5568	H	Handover Acknowledge ( HAck ): A message from the NAR to the PAR as a response to HI . 	231	0
5568	H	The MN expects a PrRtAdv in response to its RtSolPr message . If the MN does not receive a PrRtAdv message even after RTSOLPR_RETRIES , it must assume that the PAR does not support the fast handover protocol and stop sending any more RtSolPr messages . 	302	0
5568	Type	Type : 154 	220	0
5568	Code	Code : 0 	500	0
5568	Checksum	Checksum : The ICMPv6 checksum . 	301	0
5568	Subtype	Reserved : MUST be set to zero by the sender and ignored by the receiver . 	500	0
5568	Reserved	Reserved : MUST be set to zero by the sender and ignored by the receiver . 	500	0
5568	Identifier	Identifier : MUST be set by the sender so that replies can be matched to this Solicitation . 	301	0
5568	Type	Type : 154 	220	0
5568	Checksum	Checksum : The ICMPv6 checksum . 	301	0
5568	Subtype	Reserved : MUST be set to zero by the sender and ignored by the receiver . 	500	0
5568	Reserved	Reserved : MUST be set to zero by the sender and ignored by the receiver . 	500	0
5568	Identifier	Identifier : Copied from the Router Solicitation for Proxy Advertisement or set to zero if unsolicited . 	500	0
5568	H	The Handover Initiate ( HI ) is a Mobility Header message sent by an Access Router ( typically a PAR ) to another access router ( typically a NAR ) to initiate the process of an MN's handover . 	230	0
5568	Sequence #	Sequence #: MUST be set by the sender so replies can be matched to this message . 	301	0
5568	Reserved	Reserved : MUST be set to zero by the sender and ignored by the receiver . 	500	0
5568	H	The Handover Acknowledge message is a new Mobility Header message that MUST be sent ( typically by the NAR to the PAR ) as a reply to the Handover Initiate message . 	301	0
5568	Sequence #	Sequence #: Copied from the corresponding field in the HI message to which this message is a response , to enable the receiver to match this HAck message with an outstanding HI message . 	200	0
5568	Reserved	Reserved : MUST be set to zero by the sender and ignored by the receiver . 	500	0
5568	Reserved	Reserved : This field is unused . MUST be set to zero . 	500	0
5568	Lifetime	Lifetime : The requested time in seconds for which the sender wishes to have a binding . 	120	0
5568	Status	Status : 8-bit unsigned integer indicating the disposition of the Fast Binding Update . Values of the Status field that are less than 128 indicate that the Binding Update was accepted by the receiving node . The following such Status values are currently defined : 	230	0
5568	Reserved	Sequence Number : Copied from the FBU message for use by the MN in matching this acknowledgment with an outstanding FBU . 	200	0
5568	Lifetime	Lifetime : The granted lifetime in seconds for which the sender of this message will retain a binding for traffic redirection . 	120	0
5568	Type	Length : The size of this option in 8 octets including the Type , Option-Code , and Length fields . 	100	0
5568	Length	Length : The size of this option in 8 octets including the Type , Option-Code , and Length fields . 	100	0
5568	Prefix Length	Prefix Length : 8-bit unsigned integer that indicates the length of the IPv6 Address Prefix . The value ranges from 0 to 128 . 	100	0
5568	Reserved	Reserved : MUST be set to zero by the sender and MUST be ignored by the receiver . 	500	0
5568	Type	Length : The size of this option in octets excluding the Type and Length fields . 	100	0
5568	Length	Length : The size of this option in octets excluding the Type and Length fields . 	100	0
5568	Prefix Length	Prefix Length : 8-bit unsigned integer that indicates the length of the IPv6 Address Prefix . The value ranges from 0 to 128 . 	100	0
5568	Type	Length : The size of this option in 8 octets including the Type , Option-Code , and Length fields . 	100	0
5568	Length	Length : The size of this option in 8 octets including the Type , Option-Code , and Length fields . 	100	0
5568	Type	Length : The size of this option in octets not including the Type and Length fields . 	100	0
5568	Length	Length : The size of this option in octets not including the Type and Length fields . 	100	0
5568	Type	Type : 21 	220	0
5568	Option Length	SPI : Security Parameter Index . SPI = 0 is reserved for the Authenticator computed using SEND-based handover keys . 	231	0
5568	SPI	SPI : Security Parameter Index . SPI = 0 is reserved for the Authenticator computed using SEND-based handover keys . 	231	0
5568	Authenticator	Authenticator : Same as in RFC 3775 , with " correspondent " replaced by the PAR's IP address , and Kbm ( binding management key ) replaced by the shared key between the MN and the PAR . 	301	0
5568	Type	Length : 8-bit unsigned integer . Length of the option , in 8 octets . The length is 1 when a new CoA is not supplied . The length is 3 when a new CoA is present ( immediately following the Reserved field ) 	100	0
5568	Length	Length : 8-bit unsigned integer . Length of the option , in 8 octets . The length is 1 when a new CoA is not supplied . The length is 3 when a new CoA is present ( immediately following the Reserved field ) 	100	0
5568	Status	Status : 8-bit unsigned integer indicating the disposition of the Unsolicited Neighbor Advertisement message . The following Status values are currently defined : 	231	0
5568	Reserved	Reserved : MUST be set to zero by the sender and MUST be ignored by the receiver . 	500	0
5572	Sequence Number	Sequence Number : 28-bit field . Set by the tunnel client . Value is increased by one for every new packet sent to the tunnel broker . The return packet from the broker contains the unaltered sequence number . 	200	0
5572	Timestamp	Timestamp : 32-bit field . Set by the tunnel client . Generated from the client local-time value . The return packet from the broker contains the unaltered timestamp . 	121	0
5578	BCN	BCN Backward Credit Notification . The BCN represents the number of remaining credits at the local node that were granted by peer node . The local node uses these credits to transmit payload back to the peer node . BCN ranges from 0-65535 . 	100	0
5578	FCN	FCN Forward Credit Notification . The FCN represents the credits that the local node is granting to the peer node . The peer node uses these granted credits to transmit payload back to the local node . FCN ranges from 0-65535 . 	240	0
5578	Resources	Resources - a percentage , 0-100 , representing the amount of remaining or available resources , such as battery power . If resources cannot be calculated , a value of 100 should be reported . 	302	0
5578	RLQ	Relative Link Quality ( RLQ ) - a non-dimensional number , 0-100 , representing the relative link quality . A value of 100 represents a link of the highest quality . If the RLQ cannot be calculated , a value of 100 should be reported . 	231	0
5578	Reserved	Reserved - reserved fields are zeroed unless otherwise specified . 	500	0
5578	CD	CD Scale : 00 == kbit/s ( default ) 01 == Mbit/s 10 == Gbit/s 11 == Tbit/s 	240	0
5578	MD	MD Scale : 00 == kbit/s ( default ) 01 == Mbit/s 10 == Gbit/s 11 == Tbit/s 	240	0
5578	Current Datarate	Current Datarate - the Current Datarate , in un-scaled units per second , achieved on the RLP link . If the Radio makes no distinction between Maximum Datarate and Current Datarate , Current Datarate should equal the Maximum Datarate . When metrics are reported , the Current Datarate must be reported . The Current Datarate must be less than or equal to the Maximum Datarate . 	231	0
5578	Maximum Datarate	Maximum Datarate - the maximum theoretical data rate , in un-scaled units per second , that the RLP link is capable of providing . When metrics are reported , the Maximum Datarate must be reported . 	400	0
5580	Index	The 16-bit unsigned integer value allows this attribute to provide information relating to the information included in the Location - Data Attribute to which it refers ( via the Index ). 	230	0
5580	Code	This field indicates the content of the location profile carried in the Location-Data Attribute . Two profiles are defined in this document -- namely , a civic location profile ( see Section 4.3.1 ) that uses value ( 0 ) and a geospatial location profile ( see Section 4.3.2 ) that uses the value ( 1 ). 	400	0
5580	Entity	This field encodes which location this attribute refers to as an unsigned 8-bit integer value . Location information can refer to different entities . This document registers two entity values , namely : 	230	0
5580	Sighting Time	This field indicates when the location information was accurate . The data type of this field is a string , and the content is expressed in the 64-bit Network Time Protocol ( NTP ) timestamp format [ RFC1305 ]. 	301	0
5580	Time-to-Live	This field gives a hint regarding for how long location information should be considered current . The data type of this field is a string and the content is expressed in the 64-bit Network Time Protocol ( NTP ) timestamp format [ RFC1305 ]. Note that the Time-to-Live field is different than the Retention Expires field used in the Basic-Location-Policy-Rules Attribute , see Section 4.4 . The Retention Expires field indicates the time the recipient is no longer permitted to possess the location information . 	231	0
5580	Index	The 16-bit unsigned integer value allows this attribute to associate the Location-Data Attribute with the Location - Information Attributes . 	231	0
5580	Flags	The Flags field is a bit mask . Only the first bit ( R ) is defined in this document , and it corresponds to the Retransmission Allowed field : 	231	0
5580	Retention Expires	This field specifies an absolute date at which time the Recipient is no longer permitted to possess the location information . The data type of this field is a string and the format is a 64-bit NTP timestamp [ RFC1305 ]. 	121	0
5584	V	Version(V ): 2 bits Set to 2 . 	302	0
5584	P	Padding(P ): 1 bit If the padding bit is set , the packet contains one or more additional padding octets at the end , which are not part of the payload . The last octet of the padding contains a count of how many padding octets should be ignored , including itself . Padding may be needed by some encryption algorithms with fixed block sizes or for carrying several RTP packets in a lower-layer protocol data unit ( see [ 1 ]). 	231	0
5584	X	Extension(X ): 1 bit Defined by the RTP profile used . 	400	0
5584	CC	CSRC count(CC ): 4 bits See RFC 3550 [ 1 ]. 	231	0
5584	M	Marker ( M ): 1 bit Set to 1 if the packet is the first packet after a silence period; otherwise , it MUST be set to 0 . 	210	0
5584	PT	Payload Type ( PT ): 7 bits The assignment of an RTP payload type for this packet format is outside the scope of this document; it is specified by the RTP profile under which this payload format is used , or signaled dynamically out-of-band ( e.g ., using the Session Description Protocol ( SDP )). 	400	0
5584	sequence number	sequence number : 16 bits A sequential number for the RTP packet . It ranges from 0 to 65535 and repeats itself periodically . 	100	0
5584	C	Continuation Flag ( C ) : 1 bit The packet that corresponds to the last part of the audio frame data in a fragmentation MUST have this bit set to 0; otherwise , it's set to 1 . 	210	0
5584	FrgNo	Fragment Number ( FrgNo ): 3 bits In the event of data fragmentation , this value is one for the first packet , and increases sequentially for the remaining fragmented data 	201	0
5584	NFrames	Number of Frames ( NFrames ): 4 bits The number of audio frames in this packet are field value + 1 . This allows for a maximum of 16 ATRAC-encoded audio frames per packet , with 0 indicating one audio frame . Each audio frame MUST be complete in the packet if fragmentation is not applied . In the case of fragmentation , the data for only one audio frame is allowed to be fragmented , and this value MUST be 0 . 	200	0
5584	E	Layer Type Flag ( E ): 1 bit Set to 1 if the corresponding ATRAC frame is from an enhancement layer . 0 indicates a base layer encoded frame . 	210	0
5584	ATRAC frame	ATRAC frame : The encoded ATRAC audio data . 	400	0
5584	C	o transition from one to zero of the Continuation bit ( C ) 	210	0
5584	channelID	channelID : Indicates the number of channels and channel layout according to the table1 in Section 7.4 . Note that this layout is different from that proposed in RFC 3551 [ 3 ]. However , as channelID = 0 defines an ambiguous channel layout , the channel mapping defined in Section 4.1 of [ 3 ] could be used . Permissible values are 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 . 	231	0
5584	channelID	channelID : Indicates the number of channels and channel layout according to the table1 in Section 7.4 . Note that this layout is different from that proposed in RFC 3551 [ 3 ]. However , as channelID = 0 defines an ambiguous channel layout , the channel mapping defined in Section 4.1 of [ 3 ] could be used in this case . Permissible values are 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 . 	231	0
5586	ACH	ACH : Associated Channel Header 	231	0
5586	GAL	G-ACh packet : Any packet containing a message belonging to a protocol that is carried on a PW , LSP , or MPLS Section associated control channel . Examples include maintenance protocols such as OAM functions , signaling communications , or management communications . 	400	0
5586	ACH TLV Header	The ACH TLV Header defines the length of the set of ACH TLVs that follow . 	100	0
5607	Type	Type 	240	0
5607	Length	Length 	100	0
5607	Value	Value 	400	0
5607	Type	Type 	240	0
5607	Length	Length 	100	0
5607	Value	Value 	400	0
5607	Type	Type 	240	0
5607	Length	Length 	100	0
5607	Type	Type 	240	0
5607	Length	Length 	100	0
5607	Value	The Value field is a four-octet Integer , denoting a management privilege level . 	231	0
5614	Type	o Type : Set to 14 . 	302	0
5614	Length	o Hello Sequence Number : A circular two-octet unsigned integer indicating the current HSN for the transmitting interface . The HSN for the interface is incremented by 1 ( modulo 2^16 ) every time a ( differential or full ) Hello is sent on the interface . 	200	0
5614	Hello Sequence Number	o Hello Sequence Number : A circular two-octet unsigned integer indicating the current HSN for the transmitting interface . The HSN for the interface is incremented by 1 ( modulo 2^16 ) every time a ( differential or full ) Hello is sent on the interface . 	200	0
5614	Reserved	o Reserved : Set to 0 . Reserved for future use . 	500	0
5614	A	o D ( 1 bit ): Set to 1 for a differential Hello and 0 for a full Hello . 	210	0
5614	D	o D ( 1 bit ): Set to 1 for a differential Hello and 0 for a full Hello . 	210	0
5614	N1	o N1 ( 8 bits ): The number of neighbors listed in the Hello that are in state Down . N1 is zero if the Hello is not differential . 	301	0
5614	N2	o N2 ( 8 bits ): The number of neighbors listed in the Hello that are in state Init . 	231	0
5614	N3	o N3 ( 8 bits ): The number of neighbors listed in the Hello that are Dependent . 	231	0
5614	N4	o N4 ( 8 bits ): The number of neighbors listed in the Hello that are Selected Advertised Neighbors . 	231	0
5614	Type	o Type : Set to 15 . 	302	0
5614	Length	o DR : The same Router ID that is included in the DR field of a Hello sent by the router ( see Section A.3 ). 	230	0
5614	DR	o DR : The same Router ID that is included in the DR field of a Hello sent by the router ( see Section A.3 ). 	230	0
5614	Backup DR	o Backup DR : The same Router ID that is included in the Backup DR field of a Hello sent by the router ( see Section A.3 ). 	230	0
5614	Type	o Length : Set to 4 + 6*N if the I bit is 1 , and to 4 + 2*N if the I bit is 0 , where N is the number of neighbors included in the TLV . 	210	0
5614	Length	o Length : Set to 4 + 6*N if the I bit is 1 , and to 4 + 2*N if the I bit is 0 , where N is the number of neighbors included in the TLV . 	100	0
5614	Default Metric	o Default Metric : If the I bit is 1 , this is the link metric that applies to every bidirectional neighbor listed in the body of the Hello whose RID is not listed in the Metric TLV . 	210	0
5614	DR	o DR : This field is the router's Parent , or is 0.0.0.0 if the Parent is null . The Parent of an MDR is always the router's own RID . 	210	0
5614	Backup DR	o Backup DR : This field is the router's Backup Parent , or is 0.0.0.0 if the Backup Parent is null . The Backup Parent of a BMDR is always the router's own RID . 	210	0
5641	R	An alarm or fault has occurred at the local Attachment Circuit such that it is unable to receive traffic . It can still transmit traffic . 	302	0
5641	T	A fault has occurred at the local Attachment Circuit such that it is unable to transmit traffic . It can still receive traffic . 	302	0
5641	I	A fault has occurred in the receive direction between the local endpoint and the remote L2TP endpoint . 	302	0
5641	E	A fault has occurred in the transmit direction between the local endpoint and the remote L2TP endpoint . 	302	0
5641	S	The pseudowire has been placed into a Standby mode , which means that although it was signaled ( during setup of the PW ) and is operational , it is NOT switching user traffic . Any received user traffic SHOULD be dropped . User traffic MUST NOT be transmitted . 	303	0
5641	A	o The ( A ) bit MUST NOT be set until all fault status bits are cleared . This behavior allows an endpoint to be backwards compatible with a remote endpoint that does not understand these new status bits . 	210	0
5641	S	o The ( S ) bit can be set in conjunction with any other bit , including ( A ). A pseudowire endpoint in Standby ( S bit set ) can be up/active/ready ( A bit set ) or experiencing a fault ( A bit cleared and one or more of the fault status bits ( R , T , I , E ) set . 	210	0
5641	A	o The ( S ) bit can be set in conjunction with any other bit , including ( A ). A pseudowire endpoint in Standby ( S bit set ) can be up/active/ready ( A bit set ) or experiencing a fault ( A bit cleared and one or more of the fault status bits ( R , T , I , E ) set . 	210	0
5641	S	o Leaving Standby mode is indicated by the clearing of the ( S ) bit . 	210	0
5641	N	o The usage of the ( N ) bit has been deprecated . 	500	0
5642	Type	Type Dynamic Hostname TLV Type ( 7 ; see Section 6 ) 	231	0
5642	Length	Length Total length of the hostname ( Value field ) in octets , not including the optional padding . 	100	0
5648	O	When this flag is set , all the binding cache entries for a mobile node are replaced by new entries registering with this Binding Update message . This flag is only used when the BID mobility option is carried with the Binding Update . 	210	0
5648	Reserved	Reserved 	500	0
5648	Length	8-bit unsigned integer . Length of the option , in octets , excluding the Type and Length fields . It MUST be set to either 4 , 8 , or 20 depending on the Care-of Address field . When the care-of address is not carried by this option , the length value MUST be set to 4 . If the IPv4 care-of address is stored in the Care-of Address field , the length MUST be 8 . Otherwise , the length value MUST be set to 20 for IPv6 care-of addresses . 	100	0
5648	Status	The Status field is an 8-bit unsigned integer . When the Binding Identifier mobility option is included in a Binding Acknowledgement , this field overwrites the Status field in the Binding Acknowledgement only for this BID . If this field is set to zero , the receiver ignores this field and uses the registration status stored in the Binding Acknowledgement message . The receiver MUST ignore this field if the Binding Identifier mobility option is not carried within either the Binding Acknowledgement or the Care-of Test messages . The possible status codes are the same as the status codes of the Binding Acknowledgement . This Status field is also used to carry error information related to the care-of address test in the Care-of Test message . 	231	0
5648	H	This flag indicates that the mobile node registers multiple bindings to the home agent while it is attached to the home link . This flag is valid only for a Binding Update sent to the home agent . 	302	0
5648	Reserved	7-bit Reserved field . The value MUST be initialized to zero by the sender , and SHOULD be ignored by the receiver . 	500	0
5651	V	Indicates the LCT version number . The LCT version number for this specification is 1 . 	220	0
5651	C	C=0 indicates the Congestion Control Information ( CCI ) field is 32 bits in length . C=1 indicates the CCI field is 64 bits in length . C=2 indicates the CCI field is 96 bits in length . C=3 indicates the CCI field is 128 bits in length . 	240	0
5651	S	This is the number of full 32-bit words in the TSI field . The TSI field is 32*S + 16*H bits in length , i.e ., the length is either 0 bits , 16 bits , 32 bits , or 48 bits . 	231	0
5651	O	This is the number of full 32-bit words in the TOI field . The TOI field is 32*O + 16*H bits in length , i.e ., the length is either 0 bits , 16 bits , 32 bits , 48 bits , 64 bits , 80 bits , 96 bits , or 112 bits . 	231	0
5651	Res	These bits are reserved . In this version of the specification , they MUST be set to zero by senders and MUST be ignored by receivers . 	500	0
5651	A	Normally , A is set to 0 . The sender MAY set A to 1 when termination of transmission of packets for the session is imminent . A MAY be set to 1 in just the last packet transmitted for the session , or A MAY be set to 1 in the last few seconds of packets transmitted for the session . Once the sender sets A to 1 in one packet , the sender SHOULD set A to 1 in all subsequent packets until termination of transmission of packets for the session . A received packet with A set to 1 indicates to a receiver that the sender will immediately stop sending packets for the session . When a receiver receives a packet with A set to 1 , the receiver SHOULD assume that no more packets will be sent to the session . 	210	0
5651	B	Normally , B is set to 0 . The sender MAY set B to 1 when termination of transmission of packets for an object is imminent . If the TOI field is in use and B is set to 1 , then termination of transmission for the object identified by the TOI field is 	210	0
5651	HDR_LEN	Total length of the LCT header in units of 32-bit words . The length of the LCT header MUST be a multiple of 32 bits . This field can be used to directly access the portion of the packet beyond the LCT header , i.e ., to the first other header if it exists , or to the packet payload if it exists and there is no other header , or to the end of the packet if there are no other headers or packet payload . 	100	0
5651	HEL	The length of the whole Header Extension field , expressed in multiples of 32-bit words . This field MUST be present for variable-length extensions ( HETs between 0 and 127 ) and MUST NOT be present for fixed-length extensions ( HETs between 128 and 255 ). 	100	0
5655	Version Number	Version Number : The IPFIX Version Number MUST be 10 , while the NetFlow V9 Version Number MUST be 9 . 	220	0
5655	Sequence Number	Sequence Number : The NetFlow V9 Sequence Number counts packets , while the IPFIX Sequence Number counts records in Data Sets . Both are scoped to Observation Domain . 	200	0
5655	Observation Domain ID	Observation Domain ID : Similarly , the NetFlow V9 sourceID has become the IPFIX Observation Domain ID . 	231	0
5678	Option Code	Option Code 	231	0
5678	Length	An 8-bit field indicating the length of the option excluding the ' Option Code ' and the ' Length ' fields 	100	0
5678	Option Code	Option Code 	231	0
5678	Length	An 8-bit field indicating the length of the option excluding the ' Option Code ' and the ' Length ' fields 	100	0
5678	Option Code	Option Code 	231	0
5678	Length	A 16-bit field indicating the length of the option excluding the ' Option Code ' and the ' Length ' fields . 	100	0
5678	Option Code	Option Code 	231	0
5678	Length	A 16-bit field indicating the length of the option excluding the ' Option Code ' and the ' Length ' fields 	100	0
5686	MX	Mixing information field . This field is only relevant when Topo - RTCP-terminating-MCUs are utilized to interpret these fields . See Section 3.3.1.1 for details of the fields . 	400	0
5686	C1	Validity flag of V1 and PW1 . This bit being " 1 " indicates that both parameters are valid , and " 0 " indicates that the parameters should be ignored . If any of these parameters is invalid , this bit should be set to " 0 ". This flag is mainly intended for a UEMCLIP-conscious Topo-RTCP-terminating-MCU . This flag should be set to " 0 " in case of upward transcoding from G.711 ( see Section 4 ). 	210	0
5686	R1	Reserved bit #1 ( R1 ): 1 bit 	210	0
5686	V1	Voice activity detection flag of the current frame , designed to be used for MCU operations . This flag being " 1 " indicates that the frame is an active ( voice ) segment , and " 0 " indicates that it is an inactive ( non-voice ) or a silent segment . This flag is specifically designed for mixing information . DTX judgment based this flag is not recommended . 	210	0
5686	PW1	Signal power code of the current frame . The code is obtained by calculating a root mean square ( RMS ) of " Layer a " and encoding this RMS using G.711 u-law [ ITU-T-G.711 ]. Denoting the encoded RMS as R , then PW1 is obtained by PW1 = ((~ R)>>2 ) & 0x1F , where "~", ">>", "&" are one's complement arithmetic , right SHIFT , and bitwise AND operators , respectively . 	200	0
5686	C2	Validity flag of V2 , K , U1 , P1 , U2 , P2 , and PW2 . If the flag is " 1 ", it means that all these parameters are valid , and " 0 " means that the parameters should be ignored . If any of these parameters is invalid , this bit should be set to " 0 ". Similarly to C1 , this flag should be set to " 0 " in case of upward transcoding from G.711 ( see Section 4 ). 	210	0
5686	K	Validity flag of V2 , K , U1 , P1 , U2 , P2 , and PW2 . If the flag is " 1 ", it means that all these parameters are valid , and " 0 " means that the parameters should be ignored . If any of these parameters is invalid , this bit should be set to " 0 ". Similarly to C1 , this flag should be set to " 0 " in case of upward transcoding from G.711 ( see Section 4 ). 	210	0
5686	U1	Validity flag of V2 , K , U1 , P1 , U2 , P2 , and PW2 . If the flag is " 1 ", it means that all these parameters are valid , and " 0 " means that the parameters should be ignored . If any of these parameters is invalid , this bit should be set to " 0 ". Similarly to C1 , this flag should be set to " 0 " in case of upward transcoding from G.711 ( see Section 4 ). 	210	0
5686	P1	Validity flag of V2 , K , U1 , P1 , U2 , P2 , and PW2 . If the flag is " 1 ", it means that all these parameters are valid , and " 0 " means that the parameters should be ignored . If any of these parameters is invalid , this bit should be set to " 0 ". Similarly to C1 , this flag should be set to " 0 " in case of upward transcoding from G.711 ( see Section 4 ). 	210	0
5686	U2	Validity flag of V2 , K , U1 , P1 , U2 , P2 , and PW2 . If the flag is " 1 ", it means that all these parameters are valid , and " 0 " means that the parameters should be ignored . If any of these parameters is invalid , this bit should be set to " 0 ". Similarly to C1 , this flag should be set to " 0 " in case of upward transcoding from G.711 ( see Section 4 ). 	210	0
5686	P2	Validity flag of V2 , K , U1 , P1 , U2 , P2 , and PW2 . If the flag is " 1 ", it means that all these parameters are valid , and " 0 " means that the parameters should be ignored . If any of these parameters is invalid , this bit should be set to " 0 ". Similarly to C1 , this flag should be set to " 0 " in case of upward transcoding from G.711 ( see Section 4 ). 	210	0
5686	R2	Reserved bit #2 ( R2 ): 2 bits 	500	0
5686	V2	Voice activity detection flag of the current frame , designed to be used for packet-loss concealment . This might not be the same as V1 in the mixing information , and might not be synchronous to the marker bit in the RTP header . DTX judgment based this flag is not recommended . 	231	0
5686	K	This value indicates the frame offset of U2 , P2 , and PW2 . Since it is a better idea to carry the speech feature parameters as PLC information in a different frame to maintain the speech quality , this frame offset value gives with which frame the parameters are to be associated . The value ranges between " 0 " and " 15 ". If the current frame number is N , for example , the value K indicates that U2 , P2 , and PW2 are associated with the frame of N-K . The frame indicator is equal to the difference in the RTP sequence number when one UEMCLIP frame is contained in a single RTP packet . 	110	0
5686	P2	This value indicates the frame offset of U2 , P2 , and PW2 . Since it is a better idea to carry the speech feature parameters as PLC information in a different frame to maintain the speech quality , this frame offset value gives with which frame the parameters are to be associated . The value ranges between " 0 " and " 15 ". If the current frame number is N , for example , the value K indicates that U2 , P2 , and PW2 are associated with the frame of N-K . The frame indicator is equal to the difference in the RTP sequence number when one UEMCLIP frame is contained in a single RTP packet . 	110	0
5686	U1	Voiced/Unvoiced signal indicator of the current frame . This flag being " 0 " indicates that the frame is a voiced signal segment , and " 1 " indicates that it is an unvoiced signal segment . 	210	0
5686	P1	Pitch code of the current frame . The actual pitch lag is calculated as P1+20 samples in 8-kHz sampling rate . Pitch lag must be 20 <= pitch length <= 120 . Codes ranging between " 0x65 " and " 0x7F " are not used . To obtain the pitch lag , any pitch estimation method can be used , such as the one used in G.711 Appendix I [ ITU-T-G.711Appendix1 ]. 	200	0
5686	U2	Voiced/Unvoiced signal indicator of the offset frame . This flag being " 0 " indicates that the frame is a voiced signal segment , and " 1 " indicates that it is an unvoiced signal segment . The offset value is defined as K . 	210	0
5686	P2	Pitch code of the offset frame . The offset value is defined as K . The calculation method is identical to " P1 ", except that it is based on the signal of offset frame . 	110	0
5686	PW2	Signal power code of the offset frame . The offset value is defined as K . 	110	0
5686	R3	Reserved bits #3 ( R3 ): 8 bits 	231	0
5686	CI	Indicates the channel number . For all modes given in Table 2 , this should be " 0 ". The detail is given in Table 3 . 	302	0
5686	FI	Indicates the frequency number . " 0 " means that the layer is in the base frequency band , higher number means that the layer is in respective frequency band . The detail is given in Table 3 . 	231	0
5686	QI	Indicates the quality layer number . " 0 " means that the layer is in the base layer , and higher number means that the layer is in respective quality layer . The detail is given in Table 3 . 	231	0
5686	R4	Reserved #4 ( R4 ): 2 bits 	500	0
5686	C1	o The reserved bits ( R1 to R3 ) in MH are set to respective default values . 	302	0
5686	C2	o The reserved bits ( R1 to R3 ) in MH are set to respective default values . 	302	0
5686	FI	o All CI , FI , QI , and R4 MUST be 0 . 	500	0
5686	QI	o All CI , FI , QI , and R4 MUST be 0 . 	500	0
5686	SB	o Sub-layer size ( SB ) MUST be 160 for a 20-ms frame . 	200	0
5725	BT	o block type ( BT ): 8 bits A Post-repair Loss RLE Report Block is identified by the constant 10 . 	231	0
5725	rsvd .	o rsvd .: 4 bits This field is reserved for future definition . In the absence of such definition , the bits in this field MUST be set to zero and MUST be ignored by the receiver . 	500	0
5725	T	o thinning ( T ): 4 bits The amount of thinning performed on the sequence-number space . Only those packets with sequence numbers 0 mod 2^T are reported by this block . A value of 0 indicates that there is no thinning and all packets are reported . The maximum thinning is one packet in every 32,768 ( amounting to two packets within each 16-bit sequence space ). 	302	0
5725	block length	o block length : 16 bits The length of this report block , including the header , in 32-bit words minus one . 	100	0
5725	SSRC of source	o SSRC of source : 32 bits The SSRC of the RTP data packet source being reported upon by this report block . 	230	0
5725	begin_seq	o begin_seq : 16 bits The first sequence number that this block reports on . 	200	0
5725	end_seq	o end_seq : 16 bits The last sequence number that this block reports on plus one . 	200	0
5726	Pseudo Home Address	o Pseudo Home Address ( pHoA ): A unicast IPv6 address formed to replace the real home address used in certain Mobile IPv6 signaling or data packets . Without explicit indication , the pseudo home address looks like a regular IPv6 address [ 5 ]. 	230	0
5726	Encrypted Home Address	o Encrypted Home Address ( eHoA ): The output when applying an encryption algorithm to the real home address or the pseudo home address with additional inputs , e.g ., a key . The real home address can be recovered from the encrypted home address by using a decryption algorithm . 	303	0
5726	Option Type	A type for identifying the use of the encrypted home address in this option . Implementations of this RFC can use the value 0xFE . This value is reserved in RFC 4727 for all experiments involving IPv6 destination options . 	303	0
5726	Encrypted Home Address	The encrypted home address generated from a either real or pseudo home address . 	303	0
5726	Routing Type	A type for identifying the use of the encrypted home address in this option . Implementations of this RFC can use the value 0xFE . This value is reserved in RFC 4727 for all experiments involving IPv6 routing header . 	303	0
5726	Encrypted Home Address	The encrypted home address generated from a either real or pseudo home address . 	303	0
5726	Type	A unique type ( together with the ' A ' bit in the Reserved field ) for identifying the Pseudo Home Address Acknowledgement mobility option . For experimental purpose , the value of this type is 18 as reserved in RFC 5096 . 	231	0
5726	Length	The length of the Pseudo Home Address mobility option excluding the Type field and the Length field . It MUST be 2 when the Pseudo Home Address field is not present; otherwise , it MUST be 18 . 	100	0
5726	Pseudo Home Address	If present , the field contains a pseudo home address that the mobile node wants to use for location privacy protection or zero if the mobile node requests a pseudo home address from the home agent . This field is not present if the mobile node only intends to discover whether the home agent supports the location privacy solutions . The Length field is used to detect whether the Pseudo Home Address field is present in the Pseudo Home Address mobility option . 	303	0
5726	Type	A unique type ( together with the ' A ' bit in the Reserved field ) for identifying the Pseudo Home Address Acknowledgement mobility option . For experimental purpose , the value of this type is 18 as reserved in RFC 5096 . 	231	0
5726	Length	The length of the Pseudo Home Address Acknowledgement mobility option excluding the Type field and the Length field . It MUST be 4 when the Pseudo Home Address field is not present; otherwise , it MUST be 20 . 	100	0
5726	Reserved	The ' A ' bit , which MUST be set to one to indicate that this is a Pseudo Home Address Acknowledgement mobility option . The rest of bits MUST be set as zero by the sender and ignored by the receiver . 	500	0
5726	Status	It indicates the status of the pseudo home address registration . Values from 0 to 127 indicate success . Higher values indicate failure . The following values are reserved : 	240	0
5726	Reserved	This field is reserved for future use . It MUST be set to zero by the sender and ignored by the receiver . 	500	0
5726	Pseudo Home Address	If present , the field contains a pseudo home address that the home agent registers for the mobile node to use for location privacy protection . This field is not present when the home agent only needs to indicate that it supports the location privacy solutions as a response to the query from the mobile node . The Length field is used to detect whether the Pseudo Home Address field is present in the Pseudo Home Address Acknowledgement mobility option . 	303	0
5734	Total Length	Total Length ( 32 bits ): The total length of the EPP data unit measured in octets in network ( big endian ) byte order . The octets contained in this field MUST be included in the total length calculation . 	100	0
5734	EPP XML Instance	EPP XML Instance ( variable length ): The EPP XML instance carried in the data unit . 	400	0
5739	IKEv2 Link ID	o IKEv2 Link ID ( variable length ) - The Link ID ( may be empty when the client does not yet know the Link ID ). The Link ID is selected by the VPN gateway and is treated as an opaque octet string by the client . 	230	0
5739	Prefix	o Prefix ( 16 octets ) - An IPv6 prefix assigned to the virtual link . The low-order bits of the prefix field that are not part of the prefix MUST be set to zero by the sender and MUST be ignored by the receiver . 	500	0
5739	Prefix Length	o Prefix Length ( 1 octet ) - The length of the prefix in bits; usually 64 . 	100	0
5760	SSRC	SSRC : Synchronization source as defined in [ 1 ]. This 32-bit value uniquely identifies each member in a session . 	230	0
5760	Length	Length : 16 bits As defined in [ 1 ], the length of the RTCP packet in 32-bit words minus one , including the header and any padding . 	100	0
5760	SSRC	SSRC : 32 bits The SSRC of the Distribution Source . 	230	0
5760	Summarized SSRC	Summarized SSRC : 32 bits The SSRC ( of the Media Sender ) of which this report contains a summary . 	400	0
5760	SRBT	SRBT : 8 bits Sub-Report Block Type . The sub-report block type identifier . The values for the sub-report block types are defined in Section 5 . 	231	0
5760	Length	Length : 8 bits The length of the sub-report in 32-bit words . 	100	0
5760	SRBT	SRBT-specific data : < length * 4 - 2 > octets This field may contain type-specific information based upon the SRBT value . 	400	0
5760	NDB	Number of distribution buckets ( NDB ): 12 bits The number of distribution buckets of data . The size of each bucket can be calculated using the formula (( length * 4 ) - 12 ) * 8 / NDB number of bits . The calculation is based on the length of the whole sub-report block in octets ( length * 4 ) minus the header of 12 octets . Providing 12 bits for the NDB field enables bucket sizes as small as 2 bits for a full - length packet of MTU 1500 bytes . The bucket size in bits must always be divisible by 2 to ensure proper byte alignment . A bucket size of 2 bits is fairly restrictive , however , and it is expected that larger bucket sizes will be more practical for most distributions . 	400	0
5760	MF	Multiplicative Factor ( MF ): 4 bits 2^MF indicates the multiplicative factor to be applied to each distribution bucket value . Possible values of MF are 0 - 15 , creating a range of values from MF = 1 , 2 , 4 ... 32768 . Appendix B gives an example of the use of the multiplicative factor; it is meant to provide more " bits " without having them -- the bucket values get scaled up by the MF . 	240	0
5760	Length	Length : 8 bits The length field tells the receiver the full length of the sub - report block in 32-bit words ( i.e ., length * 4 bytes ) and enables the receiver to identify the bucket size . For example , given no MTU restrictions , the data portion of a distribution packet may be only as large as 1008 bytes ( 255 * 4 - 12 ), providing up to 4032 data buckets of length 2 bits , or 2016 data buckets of length 4 bits , etc . 	100	0
5760	SRBT	SRBT : 8 bits The type of sub-report block that corresponds to the type of address is as follows : 	231	0
5760	Length	Length : 8 bits The length of the sub-report block in 32-bit words . For an IPv4 address , this should be 2 ( i.e ., total length = 4 + 4 = 2 * 4 octets ). For an IPv6 address , this should be 5 . For a DNS name , the length field indicates the number of 32-bit words making up the string plus 1 byte and any additional padding required to reach the next word boundary . 	100	0
5760	Port	Port : 2 octets The port number to which receivers send feedback reports . A port number of 0 is invalid and MUST NOT be used . 	400	0
5760	Address	Address : 4 octets ( IPv4 ), 16 octets ( IPv6 ), or n octets ( DNS name ) The address to which receivers send feedback reports . For IPv4 and IPv6 , fixed-length address fields are used . A DNS name is an arbitrary-length string that is padded with null bytes to the next 32-bit boundary . The string MAY contain Internationalizing Domain Names in Applications ( IDNA ) domain names and MUST be UTF-8 encoded [ 11 ]. 	230	0
5760	Collision SSRC	Collision SSRC : n * 32 bits This field contains a list of SSRCs that are duplicated within the group . Usually this is handled by the hosts upon detection of the same SSRC; however , since receivers in an SSM session using the Distribution Source Feedback Summary Model no longer have a global view of the session , the collision algorithm is handled by the Distribution Source . SSRCs that collide are listed in the packet . Each Collision SSRC is reported only once for each collision detection . If more Collision SSRCs need to be reported than fit into an MTU , the reporting is done in a round robin fashion so that all Collision SSRCs have been reported once before the second round of reporting starts . On receipt of the packet , receiver(s ) MUST detect the collision and select another SSRC , if the collision pertains to them . 	400	0
5760	SRBT	Collision detection is only possible at the Distribution Source . If the Distribution Source and Feedback Target functions are disjoint and collision reporting across RTP receiver SSRCs shall be provided , the Feedback Targets(s ) MUST forward the RTCP reports from the RTP receivers , including at least the RR and the SDES packets to the Distribution Source . 	301	0
5760	MFL	Median fraction lost ( MFL ): 8 bits The median fraction lost indicated by Receiver Reports forwarded to this Distribution Source , expressed as a fixed-point number with the binary point at the left edge of the field . A value of all ' 1's indicates that the MFL value is not provided . 	210	0
5760	HCNL	Highest cumulative number of packets lost ( HCNL ): 24 bits Highest ' cumulative number of packets lost ' value out of the most recent RTCP RR packets from any of the receivers . A value of all ' 1's indicates that the HCNL value is not provided . 	210	0
5760	SRBT	Note that , in case the Distribution Source and the Feedback Target functions are disjoint , it is only possible for the Distribution Source to determine the median of the inter-arrival jitter if all the Feedback Targets forward all RTCP reports from the receivers immediately and include at least the RR packet . 	201	0
5760	S	Sender ( S ): 1 bit The contained bandwidth value applies to each Media Sender . 	400	0
5760	R	Receivers ( R ): 1 bit The contained bandwidth value applies to each RTP receiver . 	400	0
5760	Reserved	Reserved : 14 bits MUST be set to zero upon transmission and ignored upon reception . 	500	0
5760	SRBT	The Group and Average Packet Size sub-report block type ( SRBT ) is 12 . 	231	0
5770	Locator	Locator : As defined in [ RFC5206 ]: " A name that controls how the packet is routed through the network and demultiplexed by the end-host . It may include a concatenation of traditional network addresses such as an IPv6 address and end-to-end identifiers such as an ESP SPI . It may also include transport port numbers or IPv6 Flow Labels as demultiplexing context , or it may simply be a network address ." 	230	0
5770	Type	Type 608 Length length in octets , excluding Type , Length , and padding Reserved zero when sent , ignored when received Mode ID defines the proposed or selected NAT traversal mode(s ) 	100	0
5770	Type	Type 610 Length 4 Min Ta the minimum connectivity check transaction pacing value the host would use 	100	0
5770	Reserved	Reserved reserved for future use; zero when sent , ignored when received Address an IPv6 address or an IPv4 address in " IPv4-Mapped IPv6 address " format 	500	0
5787	PrefixLength	PrefixOptions : 8-bit field describing various capabilities associated with the prefix ( see [ RFC5340 ], Section A.4.2 ). 	231	0
5787	PrefixOptions	PrefixOptions : 8-bit field describing various capabilities associated with the prefix ( see [ RFC5340 ], Section A.4.2 ). 	231	0
5787	Type	Type A value in the range 32768-32777 agreed to by all participants in the experiment . 	231	0
5787	Length	Length A 16-bit field that indicates the length of the value portion in octets and will be a multiple of 4 octets dependent on the number of capabilities advertised . Initially , the length will be 4 , denoting 4 octets of informational capability bits . 	100	0
5787	Associated RA ID	We need some way of filtering the downward/upward re-originated Opaque TE LSA . Per [ RFC5250 ], the information contained in Opaque LSAs may be used directly by OSPF . By adding the RA ID associated with the incoming routing information , the loop prevention problem can be solved . 	400	0
5792	Version	This field indicates the version of the format for the PA-TNC message . This version is intended to allow for evolution of the PA-TNC message header and payload in a manner that can easily be detected by message recipients . 	220	0
5792	Reserved	Reserved for future use . This field MUST be set to 0 on transmission and ignored upon reception . 	500	0
5792	Message Identifier	This field contains a value that uniquely identifies this message , differentiating it from others sent by a particular PA-TNC message sender within this assessment . This value can be included in the payload of a response message to indicate which message was received and caused the response . This value is included in the payload of PA-TNC error messages so the party who receives the error message can determine which of the messages they had sent caused the error . 	230	0
5792	Flags	This field defines flags impacting the processing of the associated attribute . 	231	0
5792	PA-TNC Attribute Vendor ID	This field indicates the owner of the namespace associated with the PA-TNC Attribute Type . This is accomplished by specifying the 24-bit SMI Private Enterprise Number Vendor ID of the party who owns the Attribute Type namespace . IETF Standard PA-TNC Attribute Types MUST use zero ( 0 ) in this field . 	400	0
5792	PA-TNC Attribute Type	This field defines the type of the attribute included in the Attribute Value field . This field is qualified by the PA-TNC Attribute Vendor ID field so that a particular PA-TNC Attribute Type value ( e.g ., 327 ) has a completely different meaning depending on the value in the PA-TNC Attribute Vendor ID field . Posture Collectors and Posture Validators MUST NOT require support for particular vendor-specific PA-TNC Attribute Types and MUST interoperate with other parties despite any differences in the set of vendor-specific PA-TNC Attribute Types supported ( although they MAY permit administrators to configure them to require support for specific PA-TNC attribute types ). 	400	0
5792	PA-TNC Attribute Length	This field contains the length in octets of the entire PA-TNC attribute including the PA-TNC Attribute Header ( the fields Flags , PA-TNC Attribute Vendor ID , PA-TNC Attribute Type , and PA-TNC Attribute Length ). Therefore , this value MUST always be at least 12 . Any Posture Collector or Posture Validator that receives a message with a PA-TNC Attribute Length field whose value is less than 12 SHOULD respond with an Invalid Parameter PA-TNC error code . Similarly , if a Posture Collector or Posture Validator receives a PA-TNC message for an Attribute Type that has a well - known Attribute Value length ( e.g ., fixed-length attribute value ) and the Attribute Length indicates a different value ( greater or less than the expected value ), the recipient SHOULD respond with an Invalid Parameter PA-TNC error code . 	100	0
5792	Reserved	Reserved for future use . This field MUST be set to 0 on transmission and ignored upon reception . 	500	0
5792	PA-TNC Attribute Vendor ID	This field contains the SMI Private Enterprise Number of the organization that controls the namespace for the following PA-TNC Attribute Type . This field enables IETF Standard PA-TNC Attributes and vendor-defined PA-TNC attributes to be used without potential collisions . 	400	0
5792	PA-TNC Attribute Type	The PA-TNC Attribute Type field ( together with the PA-TNC Vendor ID field ) indicates the specific attribute requested . Some IETF Standard PA-TNC Attribute Types MUST NOT be requested using this field ( e.g ., requesting a PA-TNC Error attribute ). This is explicitly indicated in the description of those PA-TNC Attribute Types . Any Posture Collector or Posture Validator that receives an Attribute Request containing one of the prohibited Attribute Types SHOULD respond with an Invalid Parameter error in a PA-TNC error message . 	400	0
5792	Product Vendor ID	This field contains the SMI Private Enterprise Number for the product creator . If the SMI PEN for the product creator is unknown or if the product creator does not have an SMI PEN , the Product Vendor ID field MUST be set to 0 and the identity of the product creator SHOULD be included in the Product Name along with the name of the product . 	231	0
5792	Product ID	This field identifies the product using a numeric identifier assigned by the product creator . If this Product ID value is unknown or if the product creator has not assigned such a value , this field MUST be set to 0 . If the Product Vendor ID is 0 , this field MUST be set to 0 . In any case , the name of the product SHOULD be included in the Product Name field . 	210	0
5792	Major Version Number	This field contains the major version number for the product , if applicable . If unused or unknown , this field SHOULD be set to 0 . 	220	0
5792	Minor Version Number	This field contains the minor version number for the product , if applicable . If unused or unknown , this field SHOULD be set to 0 . 	220	0
5792	Build Number	This field contains the build number for the product , if applicable . This may provide more granularity than the minor version number , as many builds may occur leading up to an official release , and all these builds may share a single major and minor version number . If unused or unknown , this field SHOULD be set to 0 . 	220	0
5792	Service Pack Major	This field contains the major version number of the service pack for the product , if applicable . If unused or unknown , this field SHOULD be set to 0 . 	220	0
5792	Service Pack Minor	This field contains the minor version number of the service pack for the product , if applicable . If unused or unknown , this field SHOULD be set to 0 . 	220	0
5792	Version Len	This field defines the number of octets in the Product Version Number field . If the product version number is unavailable or unknown , this field MUST be set to 0 and the Product Version Number field will be zero length ( effectively not present ). 	220	0
5792	Build Num Len	This field defines the number of octets in the Internal Build Number field . For products where the internal build number is unavailable or unknown , this field MUST be set to 0 and the Internal Build Number field will be zero length ( effectively not present ). 	100	0
5792	Config . Len	This field defines the number of octets in the Configuration Version Number field . If the configuration version number is unavailable or unknown , this field MUST be set to 0 and the Configuration Version Number field will be zero length ( effectively not present ). 	220	0
5792	Status	This field gives the operational status of the product . The following table lists the values currently defined for this field . 	231	0
5792	Result	This field contains the result of the last use of the product . The following table lists the values currently defined for this field . 	231	0
5792	Reserved	This field is reserved for future use . The field MUST be set to 0 on transmission and ignored upon reception . 	500	0
5792	Last Use	This field contains the date and time of the last use of the component . The Last Use date and time MUST be represented as an RFC 3339 [ 4 ] compliant ASCII string in Coordinated Universal Time ( UTC ) time with the additional restrictions that the ' t ' delimiter and the ' z ' suffix MUST be capitalized and fractional seconds ( time-secfrac ) MUST NOT be included . 	121	0
5792	Reserved	This field is reserved for future use . It MUST be set to 0 on transmission and ignored upon reception . 	500	0
5792	Protocol	This field contains the transport protocol number ( e.g ., tcp is 6 ) being blocked or allowed . The values used in this field are the same ones used in the IPv4 Protocol and IPv6 Next Header fields . The IANA already maintains the Assigned Internet Protocol Numbers registry of these values for use in this field . 	231	0
5792	Port Number	This field contains the transport protocol ( e.g ., tcp ) port number being blocked or allowed . The values used in this field are specific to the protocol identified by the Protocol field . The IANA maintains registries for well-known and user-requested TCP and UDP port numbers for use in this field . 	231	0
5792	Reserved	This field is reserved for future use . The field MUST be set to 0 on transmission and ignored upon reception . 	500	0
5792	Package Count	This field is an unsigned 16-bit integer that indicates the number of packages listed in this attribute . For each package so indicated , a Pkg Name Len , Package Name , Version Len , and Package Version Number field is included in the attribute . 	231	0
5792	Pkg Name Len	This field is an unsigned 8-bit integer that indicates the length of the Package Name field in octets . This field may be zero if a Package Name is not available . 	100	0
5792	Version Len	This field is an unsigned 8-bit integer that indicates the length of the Package Version Number field in octets . This field may be zero if a Package Version Number is not available . 	100	0
5792	Reserved	This field is reserved for future use . This field MUST be set to 0 on transmission and ignored upon reception . 	500	0
5792	PA-TNC Error Code Vendor ID	This field contains the SMI Private Enterprise Number for the organization that defined the PA-TNC Error Code that is being used in the attribute . For IETF Standard PA-TNC Error Code values this field MUST be set to zero ( 0 ). 	231	0
5792	PA-TNC Error Code	This field contains the PA-TNC Error Code being reported in this attribute . Note that a particular PA-TNC Error Code value will have completely different meanings depending on the PA-TNC Error Code Vendor ID . Each PA-TNC Error Code Vendor ID defines a different space of PA-TNC Error Code values . Posture Collectors and Posture Validators MUST NOT require support for particular vendor-specific PA-TNC Error Codes and MUST interoperate with other parties despite any differences in the set of vendor - specific PA-TNC Error Codes supported ( although they MAY permit administrators to configure them to require support for specific PA-TNC Error Codes ). 	231	0
5792	Version	This field MUST contain an exact copy of the Version field in the PA-TNC Message Header of the PA-TNC message that caused this error . 	220	0
5792	Copy of Reserved	This field MUST contain an exact copy of the Reserved field in the PA-TNC Message Header of the PA-TNC message that caused this error . 	400	0
5792	Message Identifier	This field MUST contain an exact copy of the Message Identifier field in the PA-TNC Message Header of the PA-TNC message that caused this error . 	231	0
5792	Offset	This field MUST contain an octet offset from the start of the PA - TNC Message Header of the PA-TNC message that caused this error to the start of the value that caused this error . For instance , if the first PA-TNC attribute in the message had an invalid PA-TNC Attribute Length ( e.g ., 0 ), this value would be 16 . 	110	0
5792	Version	This field MUST contain an exact copy of the Version field in the PA-TNC Message Header of the PA-TNC message that caused this error . 	220	0
5792	Copy of Reserved	This field MUST contain an exact copy of the Reserved field in the PA-TNC Message Header of the PA-TNC message that caused this error . 	400	0
5792	Message Identifier	This field MUST contain an exact copy of the Message Identifier field in the PA-TNC Message Header of the PA-TNC message that caused this error . 	231	0
5792	Max Version	This field MUST contain the maximum PA-TNC version supported by the sender of this error code . 	220	0
5792	Min Version	This field MUST contain the minimum PA-TNC version supported by the sender of this error code . 	220	0
5792	Reserved	Reserved for future use . This field MUST be set to 0 on transmission and ignored upon reception . 	500	0
5792	Version	This field MUST contain an exact copy of the Version field in the PA-TNC Message Header of the PA-TNC message that caused this error . 	220	0
5792	Copy of Reserved	This field MUST contain an exact copy of the Reserved field in the PA-TNC Message Header of the PA-TNC message that caused this error . 	400	0
5792	Message Identifier	This field MUST contain an exact copy of the Message Identifier field in the PA-TNC Message Header of the PA-TNC message that caused this error . 	231	0
5792	Flags	This field MUST contain an exact copy of the Flags field in the PA-TNC Attribute Header of the PA-TNC attribute that caused this error . 	231	0
5792	PA-TNC Attribute Vendor ID	This field MUST contain an exact copy of the PA-TNC Attribute Vendor ID field in the PA-TNC Attribute Header of the PA-TNC attribute that caused this error . 	400	0
5792	PA-TNC Attribute Type	This field MUST contain an exact copy of the PA-TNC Attribute Type field in the PA-TNC Attribute Header of the PA-TNC attribute that caused this error . 	400	0
5792	Assessment Result	This PA-TNC attribute contains the final assessment result from a particular Posture Validator . This attribute might be returned to a Posture Collector for information purposes such as when an endpoint is compliant . Similarly , the Assessment Result attribute could be sent to indicate a non-compliant result where specific actions are needed to bring an endpoint into compliance with the network's policies . These actions could be defined in other PA-TNC attributes such as Remediation Instructions sent to the Posture Collector . 	400	0
5792	Assessment Result	Assessment Result 	400	0
5792	Reserved	The Reserved bits MUST be set to 0 on transmission and ignored on reception . 	500	0
5792	Remediation Parameters Vendor ID	The Remediation Parameters Vendor ID field identifies a vendor by using the SMI Private Enterprise Number ( PEN ). Any organization can receive its own unique PEN from IANA , the Internet Assigned Numbers Authority . The Remediation Parameters Vendor ID qualifies the Remediation Parameters Type field so that each vendor has 2^32 separate Remediation Parameters Types available for its use . Remediation Parameters Types standardized by the IETF are always used with the value zero ( 0 ) in this field . 	400	0
5792	Remediation Parameters Type	The Remediation Parameters Type field identifies the different types of remediation instructions that can be contained in the Remediation Parameters field . IANA maintains a registry of PA-TNC Remediation Parameters Types . Entries in this registry are added by Expert Review with Specification Required , following the guidelines in section 7 . A list of IETF Standard PA-TNC Remediation Parameters Types defined in this specification appears later in this section . 	231	0
5792	Remediation String Length	The Remediation String Length contains the length of the Remediation String field in octets . 	100	0
5792	Lang Code Len	The Lang Code Len field contains the length of the Remediation String Language Code field in octets . 	100	0
5792	Forwarding Enabled	This PA-TNC attribute indicates whether the endpoint is forwarding traffic between interfaces . Endpoints that forward traffic between networks connected to multiple network interfaces may be considered non-compliant ( and a security risk ) in some enterprise network deployments . For example , an endpoint with multiple connected network interfaces might allow traffic from an interface connected to a public network to be forwarded through another interface carrying a VPN session to a protected enterprise network . This attribute is 	230	0
5792	Forwarding Enabled	Forwarding Enabled 	400	0
5792	Factory Default Password Enabled	This PA-TNC attribute indicates whether the endpoint has a factory default password enabled for use . Some types of endpoints include a default static password for used to gain privileged access to the endpoint . If this password is not changed or disabled before the endpoint is accessible on the network , it's often easy to compromise the endpoint . 	301	0
5792	Factory Default Password Enabled	Factory Default Password Enabled 	301	0
5792	Assessment Result	This flow contains the PB message containing the system assessment result computed by the Posture Broker Server and the PA messages from the Patch and OS Posture Validators; the message content is described in the PB-TNC specification . 	400	0
5792	Assessment Result	This flow contains the PB message containing the system assessment result computed by the Posture Broker Server and the PA messages from the Vendor X and Vendor Y Anti-Virus Posture Validators; the message content is described in the PB-TNC specification . 	400	0
5792	Assessment Result	This flow contains the PB message containing the system assessment result computed by the Posture Broker Server and the PA messages from the VPN Posture Validator; the message content is described in the PB-TNC specification . 	400	0
5793	PB-TNC Header	Every PB-TNC batch MUST start with the following header . A PB-TNC batch MUST contain only one instance of this header followed by zero or more PB-TNC messages . The PB-TNC messages are defined in subsequent sections of this specification . 	400	0
5793	Version	This field indicates the version of the format for the PB-TNC message . This version is intended to allow for evolution of the PB-TNC protocol in a manner that can easily be detected by message recipients . 	220	0
5793	D	When a Posture Broker Client is sending this message , the Directionality bit MUST be set to 0 . When a Posture Broker Server is sending this message , the Directionality bit MUST be set to 1 . This helps avoid any situation where two Posture Broker Clients or two Posture Broker Servers engage in a dialog . It also helps with debugging . 	210	0
5793	Reserved	This field is reserved . For this version of this specification , it MUST be set to 0 on transmission and ignored on reception . Future versions of this specification may allow senders to set some of these bits and recipients to interpret them . 	500	0
5793	B-Type	This field is used to drive the state machine described in section 3.2 . This field MUST have one of the values from the following table . If any other value is received , the recipient MUST ignore the contents of the batch and send a fatal Invalid Parameter error code in a CLOSE batch . If the value received is not permitted for the current state , according to the state machine in section 3.2 ., the recipient MUST ignore the contents of the batch and send a fatal Unexpected Batch Type error code in a CLOSE batch . 	240	0
5793	Batch Length	This length field contains the size of the full PB-TNC batch in octets . This length includes the PB-TNC header and all the PB-TNC messages in the batch . In other words , it includes the entire contents of the batch . This field MUST contain at least the value 8 for the fixed-length fields in this header . Any Posture Broker Client or Posture Broker Server that receives a PB-TNC message with a PB-TNC Message Length field whose value is less than 8 MUST respond with a fatal Invalid Parameter error code in a CLOSE batch . 	400	0
5793	Flags	Flags ( 8 bits ) 	301	0
5793	PB-TNC Vendor ID	The PB-TNC Vendor ID field identifies a vendor by using the SMI Private Enterprise Number ( PEN ). Any organization can receive its own unique PEN from IANA , the Internet Assigned Numbers Authority . This Vendor ID qualifies the PB-TNC Message Type field so that each vendor has 2^32-1 separate message types available for their use . 	231	0
5793	PB-TNC Message Type	The PB-TNC Message Type field identifies the type of the PB-TNC message contained in the PB-TNC Message Value field . The PB-TNC message type 0xffffffff is reserved . Posture Broker Clients and Posture Broker Servers MUST NOT send messages in which the PB-TNC Message Type field has this reserved value ( 0xffffffff ). If a Posture Broker Client or Posture Broker Server receives a message in which the PB-TNC Message Type field has this reserved value ( 0xffffffff ), it MUST respond with a fatal Invalid Parameter error code in a CLOSE batch . Unless otherwise prohibited in the definition of a particular PB-TNC message type ( e.g ., PB-Language - Preference ), a single PB-TNC batch may contain multiple messages with the same message type and/or vendor ID . 	231	0
5793	PB-TNC Message Length	This field specifies the length of this PB-TNC message in octets . It includes this header ( the fields Flags , PB-TNC Vendor ID , PB - TNC Message Type , and PB-TNC Message Length ). Therefore , this value MUST always be at least 12 . Any Posture Broker Client or Posture Broker Server that receives a message with a PB-TNC Message Length field whose value is less than 12 MUST respond with a fatal Invalid Parameter error code in a CLOSE batch . 	100	0
5793	Flags	Flags ( 8 bits ) 	231	0
5793	PA Message Vendor ID	The PA Message Vendor ID field identifies a vendor by using the SMI Private Enterprise Number ( PEN ). Any organization can receive its own unique PEN from IANA , the Internet Assigned Numbers Authority . The PA Message Vendor ID qualifies the PA Subtype field so that each vendor has 2^32-1 separate PA subtypes available for its use . PA subtypes standardized by the IETF are always used with a PA Message Vendor ID of the value zero ( 0 ) in this field . The PA Message Vendor ID 0xffffff is reserved . A Posture Broker Client or Posture Broker Server MUST NOT send messages in which the PA Message Vendor ID field has this reserved value ( 0xffffff ). If a Posture Broker Client or Posture Broker Server receives a message in which the PA Message Vendor ID has this reserved value ( 0xffffff ), it MUST respond with a fatal Invalid Parameter error code in a CLOSE batch . 	231	0
5793	PA Subtype	The PA Subtype field identifies the type of the PA message contained in the PA Message Body field . The PA subtype 0xffffffff is reserved . A Posture Broker Client or Posture Broker Server MUST NOT send messages in which the PA Subtype field has this reserved value ( 0xffffffff ). If a Posture Broker Client or Posture Broker Server receives a message in which the PA Subtype has this reserved value ( 0xffffffff ), it MUST respond with a fatal Invalid Parameter error code in a CLOSE batch . A Posture Broker Client or Posture Broker Server MUST support having multiple PA messages in a single PB-TNC batch that have the same PA subtype and/or PA Message Vendor ID . 	231	0
5793	Posture Collector Identifier	The Posture Collector Identifier field contains the identifier of the Posture Collector associated with this PA message . 	231	0
5793	Posture Validator Identifier	The Posture Validator Identifier field contains the identifier of the Posture Validator associated with this PA message . 	230	0
5793	Assessment Result	Assessment Result 	400	0
5793	Reserved	These Reserved bits MUST be set to 0 on transmission and ignored on reception . 	500	0
5793	Access Recommendation Code	The Access Recommendation Code field identifies the Access Recommendation that the Posture Broker Server has made for this Posture Broker Client at this time . This field MUST have one of these three values : 1 for Access Allowed ( full access ), 2 for Access Denied ( no access ), or 3 for Quarantined ( partial access ). If a Posture Broker Client receives an Access Recommendation Code value other than these three values , it MUST respond with a fatal Invalid Parameter error code in a CLOSE batch . Other values may 	230	0
5793	Reserved	These Reserved bits MUST be set to 0 on transmission and ignored on reception . 	500	0
5793	Remediation Parameters Vendor ID	The Remediation Parameters Vendor ID field identifies a vendor by using the SMI Private Enterprise Number ( PEN ). Any organization can receive its own unique PEN from IANA , the Internet Assigned Numbers Authority . The Remediation Parameters Vendor ID qualifies the Remediation Parameters Type field so that each vendor has 2^32 separate Remediation Parameters Types available for its use . Remediation Parameters Types standardized by the IETF are always used with the value zero ( 0 ) in this field . 	400	0
5793	Remediation Parameters Type	The Remediation Parameters Type field identifies the type of remediation parameters contained in the Remediation Parameters field . A Posture Broker Client or Posture Broker Server MUST support having multiple Remediation Parameters messages contained in a single PB-TNC batch that have the same Remediation Parameters Type and/or Remediation Parameters Vendor ID . 	231	0
5793	Remediation String Length	The Remediation String Length contains the length of the Remediation String field in octets . 	100	0
5793	Lang Code Len	The Lang Code Len field contains the length of the Remediation String Lang Code field in octets . This value may be set to zero to indicate that the language code for the Remediation String field is not known . 	100	0
5793	Flags	Flags ( 8 bits ) 	301	0
5793	Error Code Vendor ID	The Error Code Vendor ID field identifies a vendor by using the SMI Private Enterprise Number ( PEN ). Any organization can receive its own unique PEN from IANA , the Internet Assigned Numbers Authority . The Error Code Vendor ID qualifies the Error Code field so that each vendor has 2^16 separate Error Codes available for its use . Error codes standardized by the IETF are always used with the value zero ( 0 ) in this field . For detailed descriptions of those messages , see the next few subsections . 	231	0
5793	Error Code	The Error Code field identifies the type of error being signaled with this message . The format of the Error Parameters field depends on the value of the Error Code Vendor ID and the Error Code . However , any recipient that does not understand a particular error code can process the error fairly well by using the FATAL flag to determine whether the error is fatal and the PB - TNC Message Length to skip over the Error Parameters field ( or log it ). 	231	0
5793	Reserved	The Reserved bits MUST be set to 0 on transmission and ignored on reception . 	500	0
5793	Error Code	Error Code Definition ---------- ---------- 0 Unexpected Batch Type . Error Parameters are empty . 	231	0
5793	Reason String Length	The Reason String Length field contains the length of the Reason String field in octets . 	100	0
5793	Lang Code Len	The Lang Code Len field contains the length of the Reason String Language Code field in octets . 	100	0
5793	Batch Length	Batch Length 	100	0
5793	Assessment Result	This flow contains the PB message containing the system assessment result computed by the Posture Broker Server and the PA messages from the Patch and OS Posture Validators : 	400	0
5793	Batch Length	Batch Length 	100	0
5793	Batch Length	Batch Length 	100	0
5793	Batch Length	Batch Length 	100	0
5793	Assessment Result	This flow contains the PB message containing the system assessment result computed by the Posture Broker Server and the PA messages from the Patch and OS Posture Validators : 	400	0
5793	Batch Length	Batch Length 	100	0
5793	Batch Length	Batch Length 	100	0
5793	Assessment Result	This flow contains the PB message containing the system assessment result computed by the Posture Broker Server and the PA messages from the VPN Posture Validator : 	400	0
5793	Batch Length	Batch Length 	100	0
5798	Version	The version field specifies the VRRP protocol version of this packet . This document defines version 3 . 	220	0
5798	Type	The type field specifies the type of this VRRP packet . The only packet type defined in this version of the protocol is : 	231	0
5798	Virtual Rtr ID	The Virtual Rtr ID field identifies the virtual router this packet is reporting status for . 	230	0
5798	Priority	The priority field specifies the sending VRRP router's priority for the virtual router . Higher values equal higher priority . This field is an 8-bit unsigned integer field . 	230	0
5798	Count IPvX Addr	This is the number of either IPv4 addresses or IPv6 addresses contained in this VRRP advertisement . The minimum value is 1 . 	231	0
5798	Max Adver Int	The Maximum Advertisement Interval is a 12-bit field that indicates the time interval ( in centiseconds ) between ADVERTISEMENTS . The default is 100 centiseconds ( 1 second ). 	122	0
5798	Checksum	The checksum field is used to detect data corruption in the VRRP message . 	301	0
5798	Priority	Priority Priority value to be used by this VRRP router in Master election for this virtual router . The value of 255 ( decimal ) is reserved for the router that owns the IPvX address associated with the virtual router . The value of 0 ( zero ) is reserved for the Master router to indicate it is releasing responsibility for the virtual router . The range 1-254 ( decimal ) is available for VRRP routers backing up the virtual router . Higher values indicate higher priorities . The default value is 100 ( decimal ). 	230	0
5810	rsvd	rsvd ( 4 bits ): Unused at this point . A receiver should not interpret this field . Senders MUST set it to zero and receivers MUST ignore this field . 	500	0
5810	Message Type	Message Type ( 8 bits ): Commands are defined in Section 7 . 	301	0
5810	Length	Length ( 16 bits ): length of header + the rest of the message in DWORDS ( 4-byte increments ). 	100	0
5810	Source ID	Source ID ( 32 bits ): 	202	0
5810	Flags	Flags ( 32 bits ): Identified so far : 	231	0
5810	TLV Type	The TLV type field is 2 octets , and semantically indicates the type of data encapsulated within the TLV . 	231	0
5810	TLV Length	The TLV length field is 2 octets , and includes the length of the TLV type ( 2 octets ), TLV Length ( 2 octets ), and the length of the TLV data found in the value field , in octets . Note that this length is the actual length of the value , before any padding for alignment is added . 	100	0
5810	.	o Paths may have zero or more data values associated ( flexibility and operation specific ). 	400	0
5810	OPER-TLV	The OPER-TLV is a place holder in the grammar for TLVs that define operations . The different types are defined in Table 3 , below . 	231	0
5810	Type	Type : Only one operation type is defined for the Association Setup message : 	231	0
5810	Type	Type ( 16 bits ): 	231	0
5810	Length	Length ( 16 bits ): 	100	0
5810	Type	Type ( 16 bits ): 	231	0
5810	Length	Length ( 16 bits ): 	100	0
5810	Type	Type : The operation type for Config Response message . Two types of operations for the Config Response message are defined : 	231	0
5810	TLV Type	o TLV Type , Section 7 	220	0
5810	LFB Class ID	o LFB Class ID , Section 7.1.5 ( resolved by model document , [ RFC5812 ]. 	231	0
5810	OPER-TLV	The Operation Selection ( OPER-TLV ) namespace is 16 bits long . The following is the guideline for managing the OPER-TLV namespace . 	400	0
5810	Type	Type-X : x1 , ID 1 , type u32 x2 , ID2 , type u32 KEY : tkey , ID = 1 , V = { x1 } 	240	0
5810	.	For example : At startup a CE might well want the entire FE Object LFB . So , in a request targeted at class 1 , instance 1 , one might find : 	400	0
5820	Type	o Type : 6 	240	0
5820	Length	o SCS Number : A circular two-octet unsigned integer indicating the current state of the transmitting device . Note that when the incremental Hello mechanism is invoked ( or re-started ), an initial SCS value of ' 1 ' SHOULD be used for the first incremental Hello packet . This sequence number is referred to as InitialSCS . Note that InitialSCS also implies a full state . 	210	0
5820	N	o N : Incomplete bit . If NOT set , the complete state associated with the SCS number is included in the Hello packet . If set , this indicates that the appended TLVs are being sent ' persistently ', and that there is more state associated with the SCS number that was sent originally , but is not included in this Hello packet . This bit allows any desired TLVs to be sent ' persistently ' for a number of Hellos with the same SCS number without requiring all of the TLVs associated with that SCS number to be transmitted . The first time an SCS number is sent , the entire state associated with that SCS number is transmitted , and the N-bit MUST NOT be set . 	210	0
5820	Reserved	A Hello with the SCS TLV appended and with the R-bit set will be referred to as a Hello request . 	231	0
5820	Type	o Type : 7 o Length : Set to the number of dropped neighbors included in the TLV multiplied by 4 . 	100	0
5820	Type	o Length : Set to the number of neighbors included in the TLV multiplied by 4 . 	100	0
5820	Length	o Length : Set to the number of neighbors included in the TLV multiplied by 4 . 	100	0
5820	Type	o Length : Set to the number of neighbors included in the TLV multiplied by 4 . 	100	0
5820	Length	o Length : Set to the number of neighbors included in the TLV multiplied by 4 . 	100	0
5820	N	o 2-hop FULL neighbors ( N2 ): The list of 2-hop neighbors of the node that are FULL and that can be reached from direct neighbors , excluding any directly connected neighbors . 	230	0
5820	Type	o Length - variable . Length of TLV in bytes , NOT including Type and Length . 	100	0
5820	Length	o Length - variable . Length of TLV in bytes , NOT including Type and Length . 	100	0
5820	Relays Added	o Relays Added - variable . Number of Active Overlapping Relays that are being added . Note that the number of Active Overlapping Relays that are being dropped is then given by [( Length - 4)/4 - Relays Added ]. 	240	0
5820	A	o A-bit - If this bit is set , the node is specifying that it will always flood routing updates that it receives , regardless of whether it is selected as an Active Overlapping Relay . 	210	0
5820	N	o N-bit - If this bit is set , the node is specifying that it most likely will not flood routing updates . The node SHOULD NOT be 	210	0
5820	Reserved	o Reserved - Reserved for future use . MUST be set to zero by the sender , and MUST be ignored upon receipt . 	500	0
5820	Type	o Type : 11 	240	0
5820	Length	o Willingness - 1 byte to indicate the willingness of the node to serve as an Active Overlapping Relay for its neighbors . * 0 : MIN_WILLINGNESS * 128 : DEFAULT_WILLINGNESS * 255 : MAX_WILLINGNESS 	240	0
5820	Willingness	o Willingness - 1 byte to indicate the willingness of the node to serve as an Active Overlapping Relay for its neighbors . * 0 : MIN_WILLINGNESS * 128 : DEFAULT_WILLINGNESS * 255 : MAX_WILLINGNESS 	240	0
5820	A	( A ) Defining LD Options and using a bit in it , as shown below : 	231	0
5820	LD Options	U-bit The " Unsynchronized " bit . This is set if the adjacency is being announced before databases are fully synchronized . 	301	0
5840	Next Header	Next Header , 8 bits : This field MUST be the same as the Next Header field in the ESP trailer when using ESP in the Integrity-only mode . When using ESP with encryption , the " Next Header " field looses this name and semantics and becomes an empty field that MUST be initialized to all zeros . The receiver MUST do some sanity checks before the WESP packet is accepted . The receiver MUST ensure that the Next Header field in the WESP header and the Next Header field in the ESP trailer match when using ESP in the Integrity-only mode . The packet MUST be dropped if the two do not match . Similarly , the receiver MUST ensure that the Next Header field in the WESP header is an empty field initialized to zero if using WESP with encryption . The WESP flags dictate if the packet is encrypted . 	231	0
5840	HdrLen	HdrLen , 8 bits : Offset from the beginning of the WESP header to the beginning of the Rest of Payload Data ( i.e ., past the IV , if present and any other WESP options defined in the future ) within the encapsulated ESP header , in octets . HdrLen MUST be set to zero when using ESP with encryption . When using integrity-only ESP , the following HdrLen values are invalid : any value less than 12; any value that is not a multiple of 4; any value that is not a multiple of 8 when using IPv6 . The receiver MUST ensure that this field matches with the header offset computed from using the negotiated Security Association ( SA ) and MUST drop the packet in case it does not match . 	110	0
5840	TrailerLen	TrailerLen , 8 bits : TrailerLen contains the size of the Integrity Check Value ( ICV ) being used by the negotiated algorithms within the IPsec SA , in octets . TrailerLen MUST be set to zero when using ESP with encryption . The receiver MUST only accept the packet if this field matches with the value computed from using the negotiated SA . This ensures that sender is not deliberately setting this value to obfuscate a part of the payload from examination by a trusted intermediary device . 	100	0
5840	Flags	Flags , 8 bits : The bits are defined most-significant-bit ( MSB ) first , so bit 0 is the most significant bit of the flags octet . 	231	0
5840	E	Encrypted Payload ( E ), 1 bit : Setting the Encrypted Payload bit to 1 indicates that the WESP ( and therefore ESP ) payload is protected with encryption . If this bit is set to 0 , then the payload is using integrity-only ESP . Setting or clearing this bit also impacts the value in the WESP Next Header field , as described above . The recipient MUST ensure consistency of this flag with the negotiated policy and MUST drop the incoming packet otherwise . 	210	0
5840	P	Padding header ( P ), 1 bit : If set ( value 1 ), the 4-octet padding is present . If not set ( value 0 ), the 4-octet padding is absent . This padding MUST be used with IPv6 in order to preserve IPv6 8-octet alignment . If WESP is being used with UDP encapsulation ( see Section 2.1 below ) and IPv6 , the Protocol Identifier ( 0x00000002 ) occupies 4 octets so the IPv6 padding is not needed , as the header is already on an 8-octet boundary . This padding MUST NOT be used with IPv4 , as it is not needed to guarantee 4-octet IPv4 alignment . 	210	0
5840	Rsvd	Rsvd , 4 bits : Reserved for future use . The reserved bits MUST be sent as 0 , and ignored by the receiver . Future documents defining any of these bits MUST NOT affect the distinction between encrypted and unencrypted packets or the semantics of HdrLen . In other words , even if new bits are defined , old implementations will be able to find the encapsulated packet correctly . Intermediate nodes dealing with unknown reserved bits are not necessarily able to parse the packet correctly . Intermediate treatment of such packets is policy dependent ( e.g ., it may dictate dropping such packets ). 	500	0
5844	Type	Type 	240	0
5844	Length	An 8-bit unsigned integer indicating the length of the option in octets , excluding the Type and Length fields . This field MUST be set to ( 6 ). 	100	0
5844	Prefix-len	This 6-bit unsigned integer indicating the prefix length of the mobile node's IPv4 home network corresponding to the IPv4 home address contained in the option . 	100	0
5844	Reserved	This 10-bit field is unused for now . The value MUST be initialized to ( 0 ) by the sender and MUST be ignored by the receiver . 	500	0
5844	IPv4 home address	This 4-byte field containing the IPv4 home address that is being requested . The value of 0.0.0.0 is used to request that the local mobility anchor perform the address allocation . 	230	0
5844	Type	Type 	240	0
5844	Length	An 8-bit unsigned integer indicating the length of the option in octets , excluding the Type and Length fields . This field MUST be set to ( 6 ). 	100	0
5844	Status	Indicates success or failure for the IPv4 home address assignment . Values from 0 to 127 indicate success . Higher values ( 128 to 255 ) indicate failure . The following Status values are currently allocated by this document : 	240	0
5844	Prefix-len	This 6-bit unsigned integer is used to carry the prefix length of the mobile node's IPv4 home network corresponding to the IPv4 home address contained in the option . 	100	0
5844	Reserved	This 2-bit field is unused for now . The value MUST be initialized to ( 0 ) by the sender and MUST be ignored by the receiver . 	500	0
5844	Res	This 2-bit field is unused for now . The value MUST be initialized to ( 0 ) by the sender and MUST be ignored by the receiver . 	500	0
5844	IPv4 home address	This 4-byte field is used to carry the IPv4 home address assigned to the mobile node . 	230	0
5844	Type	Type 	240	0
5844	Length	An 8-bit unsigned integer indicating the length of the option in octets , excluding the Type and Length fields . This field MUST be set to ( 6 ). 	100	0
5844	Reserved	This 16-bit field is unused for now . The value MUST be initialized to ( 0 ) by the sender and MUST be ignored by the receiver . 	500	0
5844	IPv4 Default-Router Address	IPv4 Default-Router Address 	230	0
5844	Type	Type 	240	0
5844	Length	An 8-bit unsigned integer indicating the length of the option in octets , excluding the Type and Length fields . This field MUST be set to 2 . 	100	0
5844	Reserved	This 15-bit field is unused for now . The value MUST be initialized to ( 0 ) by the sender and MUST be ignored by the receiver . 	500	0
5844	S	A 1-bit field that specifies the DHCP support mode . This flag indicates whether the mobile access gateway should function as a DHCP Server or a DHCP Relay for the attached mobile node . The flag value of ( 0 ) indicates the mobile access gateway should act as a DHCP Relay , and the flag value of ( 1 ) indicates it should act as a DHCP Server . 	210	0
5845	Type	Type 	240	0
5845	Length	An 8-bit unsigned integer indicating the length in octets of the option , excluding the Type and Length fields . If the Length field is set to 2 , it indicates that the GRE Key Identifier field is not being carried in the option . If the Length field is set to a value of 6 , it means that either the downlink or the uplink GRE key is carried . 	100	0
5845	Reserved	These fields are unused . They MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
5845	GRE Key Identifier	A 32-bit field containing the downlink or the uplink GRE key . This field is present in the GRE Key option only if the GRE keys are being exchanged using the Proxy Binding Update and Proxy Binding Acknowledgement messages . 	400	0
5845	T	When set , this flag indicates that the mobile access gateway requests the use of the TLV header for encapsulating IPv6 or IPv4 packets in IPv4 . The TLV-header format is described in Section 7.2 . None of the other fields or flags in the Proxy Binding Update are modified by this specification . 	302	0
5845	T	When set , this flag indicates that the sender of the Proxy Binding Acknowledgement , the LMA , supports tunneling IPv6-or-IPv4 in IPv4 using TLV-header format . None of the other fields or flags in the Proxy Binding Acknowledgement are modified by this specification . 	302	0
5845	T	Otherwise , the TLV-header format ( T ) flag is cleared . The setting of the TLV-header Format ( T ) flag in the Proxy Binding Acknowledgement indicates to the mobile access gateway that it MUST use the TLV - header UDP encapsulation format for all packets tunneled to the local mobility anchor for the entire duration the mobile node is attached to the mobile access gateway . The TLV-header UDP tunneling format SHOULD NOT change during a Binding Lifetime Extension Proxy Binding Update ( re-registration ) from the same mobile access gateway . 	302	0
5845	Type	This field is always 0 ( zero ) and distinguishes the TLV header from the IPv4 and IPv6 headers . 	302	0
5845	Res .	These fields are Reserved and unused . They MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
5845	Next Header	An 8-bit unsigned integer that indicates the protocol number of the payload header following this TLV header . It is set to the protocol number as assigned by IANA in the " Assigned Internet Protocol Numbers " registry . For example , if an IPv6 header follows , it should be ' 41 '; if a GRE header follows , it should be ' 47 '. 	231	0
5845	Length	A 16-bit unsigned integer indicating the length in octets of the payload following this header , excluding the TLV header itself . 	100	0
5846	Payload Proto	Payload Proto 	302	0
5846	Header Len	8-bit unsigned integer . Representing the length of the Mobility Header in units of 8 octets , excluding the first 8 octets . See [ RFC3775 ] for more details . 	100	0
5846	MH Type	16 , which identifies the mobility message as a Binding Revocation Message . 	240	0
5846	Reserved	8-bit field reserved for future use . The value MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
5846	Checksum	16-bit unsigned integer . This field contains the checksum of the Mobility Header . The checksum is calculated as described in [ RFC3775 ]. 	301	0
5846	Binding Revocation Message Data	The Binding Revocation Message Data follows the Binding Revocation Message format that is defined in this document for the specified value in the Binding Revocation Type field . In this document , it is either a Binding Revocation Indication as in Section 5.1 or Binding Revocation Acknowledgement as in Section 5.2 . 	400	0
5846	P	The Proxy Binding ( P ) bit is set by the initiator to indicate that the revoked binding(s ) is a PMIPv6 binding . 	301	0
5846	V	The IPv4 HoA Binding Only ( V ) bit is set by the initiator , home agent , or local mobility anchor to indicate to the receiving mobility entity the termination of the IPv4 Home Address binding only as in Sections 7 and 8.1 . 	302	0
5846	G	The Global ( G ) bit is set by the initiator , LMA or MAG , to indicate the termination of all Per-Peer mobility Bindings or Multiple Bindings that share a common identifier(s ) and are served by the initiator and responder as in Sections 8.1 and 9.2 . 	210	0
5846	Reserved	These fields are unused . They MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
5846	Status	Status 8-bit unsigned integer indicating the result of processing the Binding Revocation Indication message by the responder . Values of the Status field less than 128 indicate that the Binding Revocation Indication was processed successfully by the responder . Values greater than or equal to 128 indicate that the Binding Revocation Indication was rejected by the responder . The following Status values are currently defined : 	301	0
5846	P	The Proxy Binding ( P ) bit is set if the ( P ) bit is set in the corresponding Binding Revocation Indication message . 	210	0
5846	V	The IPv4 HoA Binding Only ( V ) bit is set if the ( V ) bit is set in the corresponding Binding Revocation Indication message . 	210	0
5846	G	The Global ( G ) bit is set if the ( G ) bit is set in the corresponding Binding Revocation Indication message . 	210	0
5846	Reserved	These fields are unused . They MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
5847	Reserved	Reserved 	500	0
5847	Sequence Number	Sequence Number 	200	0
5847	Mobility Options	Variable-length field of such length that the complete Mobility Header is an integer that is a multiple of 8 octets long . This field contains zero or more TLV-encoded mobility options . The receiver MUST ignore and skip any options that it does not understand . At the time of writing this document , the Restart Counter mobility option , described in Section 3.4 , is the only valid option in this message . 	400	0
5847	Type	An 8-bit field that indicates that it is a Restart Counter mobility option . It MUST be set to 28 . 	302	0
5847	Length	An 8-bit field that indicates the length of the option in octets excluding the Type and Length fields . It is set to 4 . 	100	0
5847	Restart Counter	Restart Counter 	302	0
5880	Vers	The version number of the protocol . This document defines protocol version 1 . 	220	0
5880	Diag	A diagnostic code specifying the local system's reason for the last change in session state . Values are : 	230	0
5880	Sta	The current BFD session state as seen by the transmitting system . Values are : 	240	0
5880	P	If set , the transmitting system is requesting verification of connectivity , or of a parameter change , and is expecting a packet with the Final ( F ) bit in reply . If clear , the transmitting system is not requesting verification . 	302	0
5880	F	If set , the transmitting system is responding to a received BFD Control packet that had the Poll ( P ) bit set . If clear , the transmitting system is not responding to a Poll . 	210	0
5880	C	If set , the transmitting system's BFD implementation does not share fate with its control plane ( in other words , BFD is implemented in the forwarding plane and can continue to function through disruptions in the control plane ). If clear , the transmitting system's BFD implementation shares fate with its control plane . 	301	0
5880	A	If set , the Authentication Section is present and the session is to be authenticated ( see section 6.7 for details ). 	302	0
5880	D	If set , Demand mode is active in the transmitting system ( the system wishes to operate in Demand mode , knows that the session is Up in both directions , and is directing the remote system to cease the periodic transmission of BFD Control packets ). If clear , Demand mode is not active in the transmitting system . 	210	0
5880	M	This bit is reserved for future point-to-multipoint extensions to BFD . It MUST be zero on both transmit and receipt . 	500	0
5880	Detect Mult	Detection time multiplier . The negotiated transmit interval , multiplied by this value , provides the Detection Time for the receiving system in Asynchronous mode . 	122	0
5880	Length	Length 	100	0
5880	My Discriminator	A unique , nonzero discriminator value generated by the transmitting system , used to demultiplex multiple BFD sessions between the same pair of systems . 	230	0
5880	Your Discriminator	The discriminator received from the corresponding remote system . This field reflects back the received value of My Discriminator , or is zero if that value is unknown . 	301	0
5880	Desired Min TX Interval	This is the minimum interval , in microseconds , that the local system would like to use when transmitting BFD Control packets , less any jitter applied ( see section 6.8.2 ). The value zero is reserved . 	120	0
5880	Required Min RX Interval	This is the minimum interval , in microseconds , between received BFD Control packets that this system is capable of supporting , less any jitter applied by the sender ( see section 6.8.2 ). If this value is zero , the transmitting system does not want the remote system to send any periodic BFD Control packets . 	201	0
5880	Required Min Echo RX Interval	This is the minimum interval , in microseconds , between received BFD Echo packets that this system is capable of supporting , less any jitter applied by the sender ( see section 6.8.9 ). If this value is zero , the transmitting system does not support the receipt of BFD Echo packets . 	122	0
5880	Auth Type	The authentication type in use , if the Authentication Present ( A ) bit is set . 	231	0
5880	Auth Len	The length , in bytes , of the authentication section , including the Auth Type and Auth Len fields . 	100	0
5880	Auth Type	Auth Type 	231	0
5880	Auth Len	The length of the Authentication Section , in bytes . For Simple Password authentication , the length is equal to the password length plus three . 	100	0
5880	Auth Key ID	The authentication key ID in use for this packet . This allows multiple keys to be active simultaneously . 	230	0
5880	Auth Type	The Authentication Type , which in this case is 2 ( Keyed MD5 ) or 3 ( Meticulous Keyed MD5 ). 	240	0
5880	Auth Len	The length of the Authentication Section , in bytes . For Keyed MD5 and Meticulous Keyed MD5 authentication , the length is 24 . 	100	0
5880	Auth Key ID	The authentication key ID in use for this packet . This allows multiple keys to be active simultaneously . 	230	0
5880	Reserved	Reserved 	500	0
5880	Sequence Number	The sequence number for this packet . For Keyed MD5 Authentication , this value is incremented occasionally . For Meticulous Keyed MD5 Authentication , this value is incremented for each successive packet transmitted for a session . This provides protection against replay attacks . 	200	0
5880	Auth Type	The Authentication Type , which in this case is 4 ( Keyed SHA1 ) or 5 ( Meticulous Keyed SHA1 ). 	240	0
5880	Auth Len	The length of the Authentication Section , in bytes . For Keyed SHA1 and Meticulous Keyed SHA1 authentication , the length is 28 . 	100	0
5880	Auth Key ID	The authentication key ID in use for this packet . This allows multiple keys to be active simultaneously . 	230	0
5880	Reserved	Reserved 	500	0
5880	Sequence Number	The sequence number for this packet . For Keyed SHA1 Authentication , this value is incremented occasionally . For Meticulous Keyed SHA1 Authentication , this value is incremented for each successive packet transmitted for a session . This provides protection against replay attacks . 	200	0
5880	M	If the Multipoint ( M ) bit is nonzero , the packet MUST be discarded . 	302	0
5880	Sta	Set bfd.RemoteState to the value of the State ( Sta ) field . 	231	0
5880	D	Set bfd.RemoteDemandMode to the value of the Demand ( D ) bit . 	231	0
5880	Diag	Diagnostic ( Diag ) 	231	0
5880	Sta	State ( Sta ) 	231	0
5880	P	Poll ( P ) 	302	0
5880	F	Set to 1 if the local system is responding to a Control packet received with the Poll ( P ) bit set , or 0 if not . 	210	0
5880	C	Set to 1 if the local system's BFD implementation is independent of the control plane ( it can continue to function through a disruption of the control plane ). 	210	0
5880	A	Set to 1 if authentication is in use on this session ( bfd.AuthType is nonzero ), or 0 if not . 	210	0
5880	D	Set to bfd.DemandMode if bfd.SessionState is Up and bfd.RemoteSessionState is Up . Otherwise , it is set to 0 . 	210	0
5880	M	Multipoint ( M ) 	400	0
5880	Detect Mult	Detect Mult 	303	0
5880	Length	Set to the appropriate length , based on the fixed header length ( 24 ) plus any Authentication Section . 	100	0
5880	My Discriminator	My Discriminator 	231	0
5880	Your Discriminator	Your Discriminator 	303	0
5880	Desired Min TX Interval	Desired Min TX Interval 	303	0
5880	Required Min RX Interval	Required Min RX Interval 	400	0
5880	Required Min Echo RX Interval	Set to the minimum required Echo packet receive interval for this session . If this field is set to zero , the local system is unwilling or unable to loop back BFD Echo packets to the remote system , and the remote system will not send Echo packets . 	302	0
5886	Flags	Flags : 24 bits 	231	0
5886	L	L ( Liveness ) - 1 bit : when set , this indicates that the state metric of interest is the PCE's liveness and thus the PCE MUST include a PCE-ID object in the corresponding reply . The L bit MUST always be ignored in a PCMonRep or PCRep message . 	210	0
5886	G	G ( General ) - 1 bit : when set , this indicates that the monitoring request is a general monitoring request . When the requested performance metric is specific , the G bit MUST be cleared . The G bit MUST always be ignored in a PCMonRep or PCRep message . 	210	0
5886	P	P ( Processing Time ) - 1 bit : the P bit of the MONITORING object carried in a PCMonReq or a PCReq message is set to indicate that the processing times is a metric of interest . If allowed by policy , a PROC-TIME object MUST be inserted in the corresponding PCMonRep or PCRep message . The P bit MUST always be ignored in a PCMonRep or PCRep message . 	210	0
5886	C	C ( Overload ) - 1 bit : The C bit of the MONITORING object carried in a PCMonReq or a PCReq message is set to indicate that the overload status is a metric of interest , in which case an OVERLOAD object MUST be inserted in the corresponding PCMonRep or PCRep message . The C bit MUST always be ignored in a PCMonRep or PCRep message . 	210	0
5886	I	I ( Incomplete ) - 1 bit : If a PCE supports a received PCMonReq message and that message does not trigger any policy violation , but the PCE cannot provide any of the set of requested performance metrics for unspecified reasons , the PCE MUST set the I bit . The I bit has no meaning in a request and SHOULD be ignored on receipt . 	210	0
5886	Flags	E ( Estimated ) - 1 bit : when set , this indicates that the reported metric value is based on estimated processing time as opposed to actual computations . 	302	0
5886	E	E ( Estimated ) - 1 bit : when set , this indicates that the reported metric value is based on estimated processing time as opposed to actual computations . 	302	0
5886	Flags	Overload duration - 16 bits : This field indicates the amount of time , in seconds , that the responding PCE expects that it may continue to be overloaded from the time that the response message was generated . The receiver MAY use this value to decide whether or not to send further requests to the same PCE . 	120	0
5904	Type	Type 	240	0
5904	Len	Len 	302	0
5904	Type	Type 	240	0
5904	Len	Len 	302	0
5904	Type	Type 	240	0
5904	Len	Len 	302	0
5904	Auth Wait Timeout	The Auth Wait Timeout field is 4 octets in length and corresponds to the " Authorize wait timeout " field of the 802.16 " PKM configuration settings " attribute . 	231	0
5904	Reauth Wait Timeout	The Reauth Wait Timeout field is 4 octets in length and corresponds to the " Reauthorize wait timeout " field of the 802.16 " PKM configuration settings " attribute . 	231	0
5904	Auth Grace Time	The Auth Grace Time field is 4 octets in length and corresponds to the " Authorize grace time " field of the 802.16 " PKM configuration settings " attribute . 	110	0
5904	Op Wait Timeout	The Op Wait Timeout field is 4 octets in length and corresponds to the " Operational wait timeout " field of the 802.16 " PKM configuration settings " attribute . 	231	0
5904	Rekey Wait Timeout	The Rekey Wait Timeout field is 4 octets in length and corresponds to the " Rekey wait timeout " field of the 802.16 " PKM configuration settings " attribute . 	231	0
5904	TEK Grace Time	The TEK Grace Time field is 4 octets in length and corresponds to the " TEK grace time " field of the 802.16 " PKM configuration settings " attribute . 	110	0
5904	Auth Rej Wait Timeout	The Auth Rej Wait Timeout field is 4 octets in length and corresponds to the " Authorize reject wait timeout " field of the 802.16 " PKM configuration settings " attribute . 	231	0
5904	Type	Type 	240	0
5904	Len	2 + 3n < 39 , where ' n ' is the number of cryptosuite identifiers in the list . 	231	0
5904	Type	Type 	240	0
5904	Len	Len 	302	0
5904	SAID	The SAID field is two octets in length and corresponds to the Value field of the 802.16 PKM SAID attribute 	400	0
5904	Type	Type 	240	0
5904	Len	Len 	302	0
5904	SAID	The SAID field is two octets in length and contains a PKM SAID ( Section 3.5 ). 	400	0
5904	SA Type	The SA Type field is one octet in length . The contents correspond to those of the Value field of an IEEE 802.16 SA-Type attribute . 	400	0
5904	Cryptosuite	The Cryptosuite field is 3 octets in length . The contents correspond to those of the Value field of an IEEE 802.16 Cryptographic-Suite attribute . 	400	0
5904	Type	Type 	240	0
5904	Len	Len 	302	0
5904	Lifetime	The Lifetime field is 4 octets in length and represents the lifetime , in seconds , of the authorization key . For more information , see Section 11.9.4 of [ IEEE.802.16-2004 ]. 	100	0
5904	Sequence	The Sequence field is one octet in length . The contents correspond to those of the Value field of an IEEE 802.16 Key - Sequence-Number attribute ( see [ IEEE.802.16-2004 ], Section 11.9.5 ). 	400	0
5905	Mode	Mode ( mode ): 3-bit integer representing the mode , with values defined in Figure 10 . 	301	0
5905	Stratum	Stratum ( stratum ): 8-bit integer representing the stratum , with values defined in Figure 11 . 	231	0
5905	Poll	Poll : 8-bit signed integer representing the maximum interval between successive messages , in log2 seconds . Suggested default limits for minimum and maximum poll intervals are 6 and 10 , respectively . 	120	0
5905	Precision	Precision : 8-bit signed integer representing the precision of the system clock , in log2 seconds . For instance , a value of - 18 corresponds to a precision of about one microsecond . The precision can be determined when the service first starts up as the minimum time of several iterations to read the system clock . 	121	0
5905	Root Delay	Root Delay ( rootdelay ): Total round-trip delay to the reference clock , in NTP short format . 	122	0
5905	Root Dispersion	Root Dispersion ( rootdisp ): Total dispersion to the reference clock , in NTP short format . 	122	0
5905	Reference ID	Reference ID ( refid ): 32-bit code identifying the particular server or reference clock . The interpretation depends on the value in the stratum field . For packet stratum 0 ( unspecified or invalid ), this is a four-character ASCII [ RFC1345 ] string , called the " kiss code ", used for debugging and monitoring purposes . For stratum 1 ( reference clock ), this is a four-octet , left-justified , zero-padded ASCII string assigned to the reference clock . The authoritative list of Reference Identifiers is maintained by IANA; however , any string beginning with the ASCII character " X " is reserved for unregistered experimentation and development . The identifiers in Figure 12 have been used as ASCII identifiers : 	121	0
5905	Key Identifier	Key Identifier ( keyid ): 32-bit unsigned integer used by the client and server to designate a secret 128-bit MD5 key . 	230	0
5918	FEC Element Type	FEC Element Type : One-octet FEC Element Type that specifies the FEC Element Type to be wildcarded . Please see Section 3.4.1 of RFC 5036 . 	231	0
5918	Len FEC Type Info	Len FEC Type Info : One octet that specifies the length in octets of the FEC Type Specific information field . It MUST be set to 0 if there is no Additional FEC Type-specific Information . 	100	0
5918	U	U and F bits : MUST be 1 and 0 , respectively , as per Section 3 of LDP Capabilities [ RFC5561 ]. 	210	0
5918	Length	Length : Two octets . It MUST be set to 0x0001 . 	100	0
5918	S	S-bit : MUST be 1 ( indicates that capability is being advertised ). 	210	0
5918	FEC Element Type	FEC Element Type : " Prefix " FEC Element ( 0x02 , per RFC 5036 ). 	231	0
5918	Len FEC Type Info	Address Family : Two-octet quantity containing a value from the " ADDRESS FAMILY NUMBERS " registry on http://www.iana.org . 	231	0
5919	U	U - and F-bits : MUST be 1 and 0 , respectively , as per Section 3 of LDP Capabilities [ RFC5561 ]. 	210	0
5919	S	Upon receiving a Notification with an unrecognized Status Code , an LDP speaker MAY generate a console or system log message for trouble shooting purposes . 	231	0
5931	M	For the purposes of interoperability , compliant EAP-pwd implementations SHALL support the following parameters : 	400	0
5931	PRF	o PRF : HMAC-SHA256 defined in [ RFC4634 ] 	231	0
5931	Code	Code 	231	0
5931	Identifier	The Identifier field is one octet and aids in matching responses with requests . The Identifier field MUST be changed on each Request packet . 	301	0
5931	Length	The Length field is two octets and indicates the length of the EAP packet including the Code , Identifier , Length , Type , and Data fields . Octets outside the range of the Length field should be treated as Data Link Layer padding and MUST be ignored on reception . 	100	0
5931	Type	Type 	240	0
5931	L	The L bit ( Length included ) is set to indicate the presence of the two-octet Total-Length field , and MUST be set for the first fragment of a fragmented EAP-pwd message or set of messages . 	301	0
5931	PWD-Exch	The PWD-Exch field identifies the type of EAP-pwd payload encapsulated in the Data field . This document defines the following values for the PWD-Exch field : 	231	0
5931	Total-Length	The Total-Length field is two octets in length , and is present only if the L bit is set . This field provides the total length of the EAP-pwd message or set of messages that is being fragmented . 	100	0
5944	Home Agent	A router on a mobile node's home network that tunnels datagrams for delivery to the mobile node when it is away from home , and maintains current location information for the mobile node . 	230	0
5944	Care-of Address	The termination point of a tunnel toward a mobile node , for datagrams forwarded to the mobile node while it is away from home . The protocol can use two different types of care-of address : a " foreign agent care-of address " is an address of a foreign agent with which the mobile node is registered , and a " co-located care - of address " is an externally obtained local address that the mobile node has associated with one of its own network interfaces . 	230	0
5944	Home Address	An IP address that is assigned for an extended period of time to a mobile node . It remains unchanged regardless of where the node is attached to the Internet . 	230	0
5944	SPI	An index identifying a security context between a pair of nodes , among the contexts available in the Mobility Security Association . SPI values 0 through 255 are reserved and MUST NOT be used in any Mobility Security Association . 	303	0
5944	Type	Type Indicates the particular type of Extension . 	231	0
5944	Length	Length Indicates the length ( in bytes ) of the Data field within this Extension . The length does NOT include the Type and Length bytes . 	100	0
5944	Type	Type is the type , which describes a collection of extensions having a common data type . 	231	0
5944	Length	Length indicates the length ( in bytes ) of the Data field within this Extension . It does NOT include the Type , Length , and Sub-Type bytes . 	100	0
5944	Type	Type is the type , which describes a collection of extensions having a common data type . 	231	0
5944	Length	Length 8-bit unsigned integer . Length of the extension , in bytes , excluding the extension Type and the extension Length fields . This field MUST be set to 1 plus the total length of the Data field . 	100	0
5944	Lifetime	The maximum length of time that the Advertisement is considered valid in the absence of further Advertisements . 	100	0
5944	Num Addrs	The number of router addresses advertised in this message . Note that in an Agent Advertisement message , the number of router addresses specified in the ICMP Router Advertisement portion of the message MAY be set to 0 . See Section 2.3.1 for details . 	202	0
5944	Type	Type 16 	240	0
5944	Length	Length ( 6 + 4*N ), where 6 accounts for the number of bytes in the Sequence Number , Registration Lifetime , flags , and reserved fields , and N is the number of care-of addresses advertised . 	100	0
5944	Sequence Number	The count of Agent Advertisement messages sent since the agent was initialized ( Section 2.3.2 ). 	201	0
5944	Registration Lifetime	The longest lifetime ( measured in seconds ) that this agent is willing to accept in any Registration Request . A value of 0xffff indicates infinity . This field has no relation to the " Lifetime " field within the ICMP Router Advertisement portion of the Agent Advertisement . 	100	0
5944	R	R Registration required . Registration with this foreign agent ( or another foreign agent on this link ) is required even when using a co-located care-of address . 	302	0
5944	B	B Busy . The foreign agent will not accept registrations from additional mobile nodes . 	302	0
5944	H	H Home agent . This agent offers service as a home agent on the link on which this Agent Advertisement message is sent . 	230	0
5944	F	F Foreign agent . This agent offers service as a foreign agent on the link on which this Agent Advertisement message is sent . 	230	0
5944	M	M Minimal encapsulation . This agent implements receiving tunneled datagrams that use minimal encapsulation [ 15 ]. 	400	0
5944	G	G Generic Routing Encapsulation ( GRE ) encapsulation . This agent implements receiving tunneled datagrams that use GRE encapsulation [ 13 ]. 	400	0
5944	r	r Sent as zero; ignored on reception . SHOULD NOT be allocated for any other uses . 	500	0
5944	T	T Foreign agent supports reverse tunneling as specified in [ 12 ]. 	302	0
5944	U	U Mobility agent supports UDP Tunneling as specified in [ 27 ]. 	400	0
5944	X	X Mobility agent supports Registration Revocation as specified in [ 28 ]. 	231	0
5944	I	I Foreign agent supports Regional Registration as specified in [ 29 ]. 	231	0
5944	Care-of Address	The advertised foreign agent care-of address(es ) provided by this foreign agent . An Agent Advertisement MUST include at least one care-of address if the ' F ' bit is set . The number of care-of addresses present is determined by the Length field in the Extension . 	230	0
5944	Type	Type 19 ( Prefix-Lengths Extension ) 	100	0
5944	Length	Length N , where N is the value ( possibly zero ) of the Num Addrs field in the ICMP Router Advertisement portion of the Agent Advertisement . 	100	0
5944	Prefix Length	The number of leading bits that define the network number of the corresponding router address listed in the ICMP Router Advertisement portion of the message . The prefix length for each router address is encoded as a separate byte , in the order that the router addresses are listed in the ICMP Router Advertisement portion of the message . 	230	0
5944	Type	Type 1 ( Registration Request ) 	231	0
5944	S	S Simultaneous bindings . If the ' S ' bit is set , the mobile node is requesting that the home agent retain its prior mobility bindings , as described in Section 3.6.1.2 . 	210	0
5944	B	B Broadcast datagrams . If the ' B ' bit is set , the mobile node requests that the home agent tunnel to it any broadcast datagrams that it receives on the home network , as described in Section 4.3 . 	210	0
5944	D	D Decapsulation by mobile node . If the ' D ' bit is set , the mobile node will itself decapsulate datagrams that are sent to the care-of address . That is , the mobile node is using a co-located care-of address . 	301	0
5944	M	M Minimal encapsulation . If the ' M ' bit is set , the mobile node requests that its home agent use minimal encapsulation [ 16 ] for datagrams tunneled to the mobile node . 	400	0
5944	G	G GRE encapsulation . If the ' G ' bit is set , the mobile node requests that its home agent use GRE encapsulation [ 13 ] for datagrams tunneled to the mobile node . 	400	0
5944	r	r Sent as zero; ignored on reception . SHOULD NOT be allocated for any other uses . 	500	0
5944	T	T Reverse Tunneling requested; see [ 12 ]. 	302	0
5944	x	x Sent as zero; ignored on reception . 	500	0
5944	Lifetime	The number of seconds remaining before the registration is considered expired . A value of zero indicates a request for deregistration . A value of 0xffff indicates infinity . 	120	0
5944	Home Address	Home Address 	230	0
5944	Home Agent	Home Agent 	230	0
5944	Care-of Address	Care-of Address 	230	0
5944	Identification	A 64-bit number , constructed by the mobile node , used for matching Registration Requests with Registration Replies , and for protecting against replay attacks of registration messages . See Sections 5.4 and 5.7 . 	400	0
5944	Type	Type 3 ( Registration Reply ) 	231	0
5944	Code	A value indicating the result of the Registration Request . See below for a list of currently defined code values . 	231	0
5944	Lifetime	If the Code field indicates that the registration was accepted , the Lifetime field is set to the number of seconds remaining before the registration is considered expired . A value of zero indicates that the mobile node has been deregistered . A value of 0xffff indicates infinity . If the Code field indicates that the registration was denied , the contents of the Lifetime field are unspecified and MUST be ignored on reception . 	210	0
5944	Home Address	Home Address 	230	0
5944	Home Agent	Home Agent 	230	0
5944	Identification	A 64-bit number used for matching Registration Requests with Registration Replies , and for protecting against replay attacks of registration messages . The value is based on the Identification field from the Registration Request message from the mobile node , and on the style of replay protection used in the security context between the mobile node and its home agent ( defined by the Mobility Security Association between them , and SPI value in the authorization-enabling extension ). See Sections 5.4 and 5.7 . 	400	0
5944	Length	The default authentication algorithm uses HMAC-MD5 [ 10 ] to compute a 128-bit " message digest " of the registration message . The data over which the HMAC is computed is defined as : 	400	0
5944	Length	Note that the Authenticator field itself and the UDP header are NOT included in the computation of the default Authenticator value . See Section 5.1 for information about support requirements for message authentication codes , which are to be used with the various authentication Extensions . 	400	0
5944	Type	Type 32 	240	0
5944	Length	Length 4 plus the number of bytes in the Authenticator . 	100	0
5944	SPI	SPI Security Parameter Index ( 4 bytes ). An opaque identifier ( see Section 1.6 ). 	230	0
5944	Type	Type 33 	240	0
5944	Length	Length 4 plus the number of bytes in the Authenticator . 	100	0
5944	SPI	SPI Security Parameter Index ( 4 bytes ). An opaque identifier ( see Section 1.6 ). 	230	0
5944	Type	Type 34 	240	0
5944	Length	Length 4 plus the number of bytes in the Authenticator . 	100	0
5944	SPI	SPI Security Parameter Index ( 4 bytes ). An opaque identifier ( see Section 1.6 ). 	230	0
5944	Code	In this case , the Lifetime field in the Registration Reply will contain the maximum Lifetime value that the foreign agent is willing to accept in any Registration Request . The mobile node MAY attempt to register with this same agent , using a Lifetime in the Registration Request that MUST be less than or equal to the value specified in the Reply . 	230	0
5944	Code	Code 133 : ( Denied by home agent , registration Identification mismatch ) 	231	0
5944	Code	This code is returned by a home agent when the mobile node is performing dynamic home agent address resolution as described in Sections 3.6.1.1 and 3.6.1.2 . In this case , the Home Agent field within the Reply will contain the unicast IP address of the home agent returning the Reply . The mobile node MAY then attempt to register with this home agent in future Registration Requests . In addition , the mobile node SHOULD adjust the parameters it uses to compute the Identification field based upon the corresponding field in the Registration Reply , before issuing any future Registration Requests . 	230	0
5948	H	H : Header Type ( 1 bit ). Shall be set to zero , indicating that it is a Generic MAC PDU . 	210	0
5948	E	E : Encryption Control . 0 = Payload is not encrypted; 1 = Payload is encrypted . 	210	0
5948	R	C : Cyclic Redundancy Check ( CRC ) Indicator . 1 = CRC is included; 0 = No CRC is included . 	210	0
5948	C	C : Cyclic Redundancy Check ( CRC ) Indicator . 1 = CRC is included; 0 = No CRC is included . 	210	0
5948	EKS	LEN : The Length , in bytes , of the MAC PDU , including the MAC header and the CRC , if present ( 11 bits ). 	100	0
5948	LEN	LEN : The Length , in bytes , of the MAC PDU , including the MAC header and the CRC , if present ( 11 bits ). 	100	0
5948	HCS	CRC : An optional 8-bit field . The CRC is appended to the PDU after encryption . 	231	0
5948	TYPE	TYPE : This field indicates the subheaders ( Mesh subheader , Fragmentation subheader , Packing subheader , etc .) and special payload types ( e.g ., Automatic Repeat reQuest ( ARQ )) present in the message payload . 	231	0
5949	P	Previous Access Network ( P-AN ): The access network to which the Mobile Node ( MN ) is attached before handover . 	230	0
5949	Reserved	Reserved Same as [ RFC5568 ]. 	303	0
5949	Code	Code Code values 0 through 4 and 128 through 130 are defined in [ RFC5568 ]. When the ' P ' flag is set , the meaning of Code value 0 is as defined in this specification; 128 through 130 are reused; and 5 , 6 , 131 , and 132 are newly defined . 	240	0
5949	Option-Type	Option-Type 40 	231	0
5949	Option-Length	Option-Length The length in octets of this option , not including the Option Type and Option Length fields . 	100	0
5949	Reserved	Reserved This field is unused . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
5949	Option-Type	Option-Type 41 	231	0
5949	Option-Length	Option-Length 18 or 6 	100	0
5949	Option-Code	Option-Code 0 Reserved 	303	0
5949	Reserved	Reserved This field is unused . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
5949	Option-Type	Option-Type 42 	220	0
5949	Option-Length	Reserved This field is unused . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
5949	Reserved	Reserved This field is unused . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
5949	Interface Identifier	The Interface Identifier value used for the mobile node's IPv6 Link-local address in the P-AN . 	230	0
5949	Reserved	0 ) Reserved 	500	0
5969	IPv4MaskLen	IPv4MaskLen The number of high-order bits that are identical across all CE IPv4 addresses within a given 6rd domain . For example , if there are no identical bits , IPv4MaskLen is 0 and the entire CE IPv4 address is used to create the 6rd delegated prefix . If there are 8 identical bits ( e.g ., the Private IPv4 address range 10.0.0.0/8 is being used ), IPv4MaskLen is equal to 8 and IPv4MaskLen high-order bits are stripped from the IPv4 address before constructing the corresponding 6rd delegated prefix . 	201	0
5969	IPv4MaskLen	IPv4MaskLen The number of high-order bits that are identical across all CE IPv4 addresses within a given 6rd domain . This may be any value between 0 and 32 . Any value greater than 32 is invalid . 	201	0
5970	Type	Type As specified in Section 2.2 of [ RFC4578 ]. 	400	0
5970	Major	Major As specified in Section 2.2 of [ RFC4578 ]. 	400	0
5970	Minor	Minor As specified in Section 2.2 of [ RFC4578 ]. 	400	0
5971	D	Datagram Mode ( D-mode ): A mode of sending GIST messages between nodes without using any transport layer state or security protection . Datagram mode uses UDP encapsulation , with source and destination IP addresses derived either from the flow definition or previously discovered adjacency information . 	400	0
5971	C	Connection Mode ( C-mode ): A mode of sending GIST messages directly between nodes using point-to-point messaging associations ( see below ). Connection mode allows the re-use of existing transport and security protocols where such functionality is required . 	400	0
5971	Message Routing Information	Message Routing Information ( MRI ): The set of data item values that is used to route a signalling message according to a particular MRM; for example , for routing along a flow path , the MRI includes flow source and destination addresses , and protocol and port numbers . See Section 3.3 . 	400	0
5971	D	Datagram mode ( D-mode ): used for small , infrequent messages with modest delay constraints and no security requirements . A special case of D-mode called Query-mode ( Q-mode ) is used when no routing state exists . 	400	0
5971	C	Connection mode ( C-mode ): used for all other signalling traffic . In particular , it can support large messages and channel security and provides congestion control for signalling traffic . 	400	0
5971	Message Routing Information	Message Routing Information ( MRI ): This defines the method to be used to route the message , the direction in which to send the message , and any associated addressing information; see Section 3.3 . 	400	0
5971	NSLPID	NSLP Identifier ( NSLPID ): This is an IANA-assigned identifier associated with the NSLP that is generating messages for this flow; see Section 3.8 . The inclusion of this identifier allows the routing state to be different for different NSLPs . 	231	0
5971	Q	Q-mode encapsulation : Where GIST is sending messages to be intercepted by the appropriate peer rather than directly addressed to it ( in particular , Query messages ), these are UDP encapsulated , and MAY include an IP Router Alert Option ( RAO ) if required by the MRM . Each GIST node can therefore see every such message , but unless the message exactly matches the Q-mode encapsulation rules ( Section 5.3.2 ) it MUST be forwarded transparently at the IP level . If it does match , GIST MUST check the NSLPID in the common header . The case where the NSLPID does not match a local signalling application at all is considered below in Section 4.3.4; otherwise , the message MUST be passed up to the GIST layer for further processing . 	400	0
5971	Version	Version : The version number of the GIST protocol . This specification defines GIST version 1 . 	220	0
5971	Length	Length : The number of 32-bit words in the message following the common header . 	100	0
5971	NSLPID	Upper layer identifier ( NSLPID ): This gives the specific NSLP for which this message is used . 	231	0
5971	MA-Protocol-ID	o A specification of the ( non-negotiable ) policies about how the protocol should be used , for example , in which direction a connection should be opened . 	400	0
5971	Message Routing Information	For the path-coupled MRM , the message routing information ( MRI ) is conceptually the Flow Identifier as in the NSIS framework [ 29 ]. Minimally , this could just be the flow destination address; however , to account for policy-based forwarding and other issues a more complete set of header fields SHOULD be specified if possible ( see Section 4.3.4 and Section 7.2 for further discussion ). 	230	0
5971	Message Routing Information	For the loose-end MRM , only a simplified version of the Flow Identifier is needed . 	231	0
5971	Version	Version ( 8 bits ): The GIST protocol version number . This specification defines version number 1 . 	220	0
5971	GIST hops	GIST hops ( 8 bits ): A hop count for the number of GIST-aware nodes this message can still be processed by ( including the destination ). 	231	0
5971	Message Length	Message Length ( 16 bits ): The total number of 32-bit words in the message after the common header itself . 	100	0
5971	NSLPID	NSLPID ( 16 bits ): IANA-assigned identifier of the signalling application to which the message refers . 	231	0
5971	C	C-flag : C=1 if the message has to be able to be interpreted in the absence of routing state ( Section 5.2.1 ). 	210	0
5971	Type	S-flag : S=1 if the IP source address is the same as the signalling source address , S=0 if it is different . 	210	0
5971	S	S-flag : S=1 if the IP source address is the same as the signalling source address , S=0 if it is different . 	210	0
5971	R	R-flag : R=1 if a reply to this message is explicitly requested . 	210	0
5971	E	The rules governing the use of the R-flag depend on the GIST message type . It MUST always be set ( R=1 ) in Query messages , since these always elicit a Response , and never in Confirm , Data , or Error messages . It MAY be set in an MA-Hello; if set , another MA-Hello MUST be sent in reply . It MAY be set in a Response , but MUST be set if the Response contains a Responder-Cookie; if set , a Confirm MUST be sent in reply . The E-flag MUST NOT be set unless the message type is a Data message . 	210	0
5971	Type	Length ( 12 bits ): Length has the units of 32-bit words , and measures the length of Value . If there is no Value , Length=0 . If the Length is not consistent with the contents of the object , an " Object Value Error " message ( Appendix A.4.4.10 ) with subcode 0 " Incorrect Length " MUST be returned and the message dropped . 	100	0
5971	Length	Length ( 12 bits ): Length has the units of 32-bit words , and measures the length of Value . If there is no Value , Length=0 . If the Length is not consistent with the contents of the object , an " Object Value Error " message ( Appendix A.4.4.10 ) with subcode 0 " Incorrect Length " MUST be returned and the message dropped . 	100	0
5971	Value	Value ( variable ): Value is ( therefore ) a whole number of 32-bit words . If there is any padding required , the length and location are be defined by the object-specific format information; objects that contain variable-length ( e.g ., string ) types may need to include additional length subfields to do so . 	400	0
5971	Type	Type : Message-Routing-Information 	400	0
5971	Length	MRM-ID ( 8 bits ): An IANA-assigned identifier for the message routing method . 	231	0
5971	N	N-flag : If set ( N=1 ), this means that NATs do not need to translate this MRM; if clear ( N=0 ), it means that the method-specific information contains network or transport layer information that a NAT must process . 	210	0
5971	P	Protocol ( 8 bits ): The IP protocol number . This MUST be ignored if P=0 . In the case of IPv6 , the Protocol field refers to the true upper layer protocol carried by the packets , i.e ., excluding any IP option headers . This is therefore not necessarily the same as the Next Header value from the base IPv6 header . 	231	0
5971	Protocol	Protocol ( 8 bits ): The IP protocol number . This MUST be ignored if P=0 . In the case of IPv6 , the Protocol field refers to the true upper layer protocol carried by the packets , i.e ., excluding any IP option headers . This is therefore not necessarily the same as the Next Header value from the base IPv6 header . 	231	0
5971	T	T-flag : T=1 means that the Diffserv field ( DS-field ) is significant . 	231	0
5971	F	F-flag : F=1 means that flow label is present and is significant . F MUST NOT be set if IP-Ver is not 6 . 	302	0
5971	Flow Label	Flow Label ( 20 bits ): The flow label; only present if F=1 . If F=0 , the entire 32-bit word containing the Flow Label is absent . 	400	0
5971	S	S-flag : S=1 means that the SPI field is present and is significant . The S-flag MUST be 0 if the P-flag is 0 . 	210	0
5971	D	D-flag : The Direction flag has the following meaning : the value 0 means ' in the same direction as the flow ' ( i.e ., downstream ), and the value 1 means ' in the opposite direction to the flow ' ( i.e ., upstream ). 	210	0
5971	D	D-flag : The Direction flag has the following meaning : the value 0 means ' towards the edge of the network ', and the value 1 means ' from the edge of the network '. Note that for Q-mode messages , the only valid value is D=0 ( see Section 5.8.2 ). 	210	0
5971	Type	Type : Session-Identifier 	230	0
5971	Length	Length : Fixed ( 4 32-bit words ) 	100	0
5971	Type	Type : Network-Layer-Information 	400	0
5971	Length	Length : Variable ( depends on length of Peer-Identity and IP version ) 	100	0
5971	Peer Identity	Peer Identity ( variable ): The Peer Identity field . Note that the Peer-Identity field itself is padded to a whole number of words . 	231	0
5971	Interface Address	Interface Address ( variable ): The IP address allocated to the interface , matching the IP-Ver field . 	230	0
5971	Routing State Validity Time	Routing State Validity Time ( 32 bits ): The time for which the routing state for this flow can be considered correct without a refresh . Given in milliseconds . The value 0 ( zero ) is reserved and MUST NOT be used . 	122	0
5971	Type	Length : Variable ( depends on number of profiles and size of each profile ) 	100	0
5971	Length	Length : Variable ( depends on number of profiles and size of each profile ) 	100	0
5971	Type	Length : Variable ( depends on number of protocols and size of each MA-protocol-options field ) 	100	0
5971	Length	Length : Variable ( depends on number of protocols and size of each MA-protocol-options field ) 	100	0
5971	Profile	Profile ( 8 bits ): Tag indicating which profile from the accompanying Stack-Proposal object this applies to . Profiles are numbered from 1 upwards; the special value 0 indicates ' applies to all profiles '. 	210	0
5971	Length	Length ( 8 bits ): The byte length of MA-protocol-options field that follows . This will be zero-padded up to the next word boundary . 	100	0
5971	D	D-flag : If set ( D=1 ), this protocol MUST NOT be used for a messaging association . 	302	0
5971	Options Data	Options Data ( variable ): Any options data for this protocol . Note that the format of the options data might differ depending on whether the field is in a Query or Response . 	400	0
5971	Query-Cookie	A.3.6 . Query-Cookie 	240	0
5971	Type	Type : Query-Cookie 	400	0
5971	Length	The content is defined by the implementation . See Section 8.5 for further discussion . 	400	0
5971	Responder-Cookie	A.3.7 . Responder-Cookie 	240	0
5971	Type	Type : Responder-Cookie 	231	0
5971	Length	The content is defined by the implementation . See Section 8.5 for further discussion . 	400	0
5971	Hello-ID	A.3.8 . Hello-ID 	240	0
5971	Type	Type : Hello-ID 	202	0
5971	Length	The content is defined by the implementation . See Section 5.2.2 for further discussion . 	400	0
5971	Type	Type : NAT-Traversal 	231	0
5971	Length	This object is used to support the NAT traversal mechanisms described in Section 7.2.2 . 	400	0
5971	Type	Type-Count ( 8 bits ): The number of objects in the ' List of translated objects ' field . 	231	0
5971	List of translated objects	List of translated objects ( variable ): This field lists the types of objects that were translated by every NAT through which the message has passed . Each element in the list is a 16-bit field containing the first 16 bits of the object TLV header , including the AB extensibility flags , 2 reserved bits , and 12-bit object type . The list is initialised by the first NAT on the path; subsequent NATs may delete elements in the list . Padded with 2 null bytes if necessary . 	231	0
5971	Type	Type : NSLP-Data 	400	0
5971	Length	This object is used to deliver data between NSLPs . GIST regards the data as a number of complete 32-bit words , as given by the length field in the TLV; any padding to a word boundary must be carried out within the NSLP itself . 	400	0
5971	Type	Type : Error 	231	0
5971	Length	The flags are : S - S=1 means the Session ID object is present . M - M=1 means MRI object is present . C - C=1 means a debug Comment is present after header . D - D=1 means the original message was received in D-mode . Q - Q=1 means the original message was received Q-mode encapsulated ( can't be set if D=0 ). 	210	0
5971	Additional Information Fields	The Common Error Header may be followed by some Additional Information fields . Each Additional Information field has a simple TLV format as follows : 	400	0
5971	Real Object Length	Real Object Length ( 12 bits ): Since the length in the original TLV header may be inaccurate , this field provides the actual length of the object ( including the TLV header ) included in the error message . Measured in 32-bit words . 	100	0
5971	Offset	Offset ( 16 bits ): The byte in the object at which the GIST node found the error . The first byte in the object has offset=0 . 	110	0
5971	Object	Object ( variable ): The invalid TLV object ( including the TLV header ). 	230	0
5971	Protocol	2 ( Protocol-Error ): the message has been rejected because of a protocol error ( e.g ., an error in message format ). 	240	0
5971	NSLPID	Session-ID : The NSIS session identifier . Note that it is assumed that the signalling application provides this to GIST rather than GIST providing a value itself . 	202	0
5971	NSLPID	NSLPID : An identifier indicating which NSLP this message is for . 	231	0
5971	NSLPID	NetworkNotification ( NSLPID , MRI , Network-Notification-Type ) 	400	0
5971	NSLPID	MRI : Provides the message routing information to which the network notification applies . 	400	0
5971	NSLPID	NSLPID : Provides the NSLPID to which the routing state lifetime applies . 	400	0
5971	NSLPID	NSLPID : Provides the NSLPID to which the routing state lifetime applies . 	400	0
5971	NSLPID	NSLPID : The NSLP originating the message . May be null ( in which case , the invalidation applies to all signalling applications ). 	303	0
5973	Type	Type : NATFW_LT ( 0x00C ) 	220	0
5973	Type	Type : NATFW_EXTERNAL_IP ( 0x00D ) 	400	0
5973	Type	Type : NATFW_EXTERNAL_BINDING ( 0x00E ) 	240	0
5973	Type	Type : NATFW_EFI ( 0x00F ) 	220	0
5973	Type	Type : NATFW_INFO ( 0x010 ) 	240	0
5973	Type	Type : NATFW_NONCE ( 0x011 ) 	220	0
5973	Type	Type : NATFW_MSN ( 0x012 ) 	220	0
5973	Type	Type : NATFW_DTINFO ( 0x013 ) 	220	0
5973	I	o P : P=1 means that ' dst port number ' and ' src port number ' are present and should be interpreted . 	210	0
5973	P	o P : P=1 means that ' dst port number ' and ' src port number ' are present and should be interpreted . 	210	0
5973	S	The SPI field is only present if S is set . The port numbers are only present if P is set . The flags P and S MUST NOT be set at the same time . An error RESPONSE of class ' Protocol error ' ( 3 ) with response code ' Invalid Flag-Field combination ' ( 0x09 ) MUST be generated if they are both set . If either P or S is set , I MUST be set as well and the protocol field MUST carry the particular protocol . An error RESPONSE of class ' Protocol error ' ( 3 ) with response code ' Invalid Flag-Field combination ' ( 0x09 ) MUST be generated if S or P is set but I is not set . 	302	0
5973	sender prefix	o ( data ) sender prefix : This parameter indicates the prefix length of the ' data sender's IP address ' in bits . For instance , a full IPv4 address requires ' sender prefix ' to be set to 32 . A value of 0 indicates an IP address wildcard . 	210	0
5973	protocol	o protocol : The IP protocol field . This field MUST be interpreted if I=1; otherwise , it MUST be set to 0 and MUST be ignored . 	500	0
5973	DR port number	o DR port number : The port number at the data receiver ( DR ), i.e ., the destination port . A value of 0 indicates a port wildcard , i.e ., the destination port number is not known . Any other value indicates the destination port number . 	210	0
5973	DS port number	o DS port number : The port number at the data sender ( DS ), i.e ., the source port . A value of 0 indicates a port wildcard , i.e ., the source port number is not known . Any other value indicates the source port number . 	210	0
5973	data sender's IPv4 address	o data sender's IPv4 address : The source IP address of the data sender . This field MUST be set to zero if no IP address is provided , i.e ., a complete wildcard is desired ( see the dest prefix field above ). 	230	0
5973	Type	Type : NATFW_ICMP_TYPES ( 0x014 ) 	240	0
5974	P	P-QNE : Proxy-QNE , a node set to reply to messages with the PROXY scope flag set . 	301	0
5974	S	SCOPING ( S ) - when set , indicates that the message is scoped and should not travel down the entire path but only as far as the next QNE ( scope="next hop "). By default , this flag is not set ( default scope="whole path "). 	210	0
5974	P	PROXY ( P ) - when set , indicates that the message is scoped , and should not travel down the entire path but only as far as the P-QNE . By default , this flag is not set . 	210	0
5974	B	BREAK ( B ) - when set , indicates that there are routers along the path where QoS cannot be provided . 	302	0
5974	T	TEAR ( T ) - when set , indicates that reservation state and QoS NSLP operation state should be torn down . The former is indicated to the RMF . Depending on the QoS model , the tear message may include a QSPEC to further specify state removal , e.g ., for an aggregation , the QSPEC may specify the amount of resources to be removed from the aggregate . 	302	0
5974	R	REPLACE ( R ) - when set , the flag has two uses . First , it indicates that a RESERVE with different MRI ( but same SID ) replaces an existing one , so the old one MAY be torn down immediately . This is the default situation . This flag may be unset to indicate a desire from an upstream node to keep an existing reservation on an old branch in place . Second , this flag is also used to indicate whether the reserved resources on the old branch should be torn down or not when a data path change happens . In this case , the MRI is the same and only the route path changes . 	210	0
5974	Type	Type : 0x001 	220	0
5974	Length	Value : An identifier that MUST be ( probabilistically ) unique within the context of a SESSION-ID and SHOULD be different every time a RESPONSE is desired . Used by a QNE to match back a RESPONSE to a request in a RESERVE or QUERY message . 	230	0
5974	Type	Type : 0x002 	240	0
5974	Length	Value : An incrementing sequence number that indicates the order in which state-modifying actions are performed by a QNE , and an epoch identifier to allow the identification of peer restarts . The RSN has local significance only , i.e ., between a QNE and its downstream stateful peers . The RSN is not reset when the downstream peer changes . 	110	0
5974	Type	Type : 0x003 	220	0
5974	Length	Value : The refresh timeout period R used to generate this message; in milliseconds . 	120	0
5974	Type	Type : 0x004 	220	0
5974	Length	Value : contains an 8-bit Binding_Code that indicates the nature of the binding . The rest specifies the SESSION-ID ( as specified in GIST [ RFC5971 ]) of the session that MUST be bound to the session associated with the message carrying this object . 	240	0
5974	Type	Type : 0x005 	220	0
5974	Length	Length : Variable 	100	0
5974	X	X - Source Address and Prefix 	230	0
5974	Y	Y - Destination Address and Prefix 	230	0
5974	P	P - Protocol 	400	0
5974	T	T - Diffserv Code Point 	231	0
5974	F	F - Flow Label 	302	0
5974	S	S - SPI 	302	0
5974	A	A - Source Port 	302	0
5974	B	The flags indicate which fields from the MRI MUST be used by the packet classifier . This allows a subset of the information in the MRI to be used for identifying the set of packets that are part of the reservation . Flags MUST only be set if the data is present in the MRI ( i.e ., where there is a corresponding flag in the GIST MRI , the flag can only be set if the corresponding GIST MRI flag is set ). It should be noted that some flags in the PACKET-CLASSIFIER ( X and Y ) relate to data that is always present in the MRI , but are optional to use for QoS NSLP packet classification . The appropriate set of flags set may depend , to some extent , on the QoS model being used . 	301	0
5974	Type	Type : 0x006 	220	0
5974	Length	Value : Contains 8 reserved bits , an 8-bit error code , a 4-bit error class , a 4-bit error source identifier type , and an 8-bit error source identifier length ( in 32-bit words ), an error source identifier , and optionally variable-length error-specific information . 	231	0
5974	Error Source Identifier	The Error Source Identifier is for diagnostic purposes and its inclusion is OPTIONAL . It is suggested that implementations use this for the IP address , host name , or other identifier of the QNE generating the INFO-SPEC to aid diagnostic activities . A QNE SHOULD NOT be used in any purpose other than error logging or being presented to the user as part of any diagnostic information . A QNE SHOULD NOT attempt to send a message to that address . 	231	0
5974	Error Source Identifier	Error Source Identifier : IPv4 	231	0
5974	Error Source Identifier	Error Source Identifier : IPv6 	231	0
5974	Error Source Identifier	Error Source Identifier : FQDN in UTF-8 	231	0
5974	Real Object Length	Real Object Length : Since the length in the original TLV header may be inaccurate , this field provides the actual length of the object ( including the TLV Header ) included in the error message . 	100	0
5974	Offset	Offset : Indicates which part of the erroneous object is included . When this field is set to " 0 ", the complete object is included . If Offset is bigger than " 0 ", the erroneous object from offset ( calculated from the beginning of the object ) to the end of the object is included . 	210	0
5974	Object	This object carries information about a TLV object that was found to be invalid in the original message . An error message may contain more than one Object Value Info object . 	230	0
5974	Type	Type : 0x007 	302	0
5974	Length	Value : A list of 128-bit SESSION-IDs used in summary refresh and summary tear messages . All SESSION-IDs are concatenated together . 	231	0
5974	Type	Type : 0x008 	220	0
5974	Length	Value : A list of 32-bit Reservation Sequence Number ( RSN ) values . All RSN are concatenated together . 	231	0
5974	Message ID	5.1.3.9 . Message ID ( MSG-ID ) 	240	0
5974	Type	Type : 0x009 	220	0
5974	Length	Value : contains a 1-bit Message_Binding_Type ( D ) that indicates the dependency relation of a message binding . The rest specifies a 128-bit randomly generated value that " uniquely " identifies this particular message . 	230	0
5974	Bound Message ID	5.1.3.10 . Bound Message ID ( BOUND-MSG-ID ) 	240	0
5974	Type	Type : 0x00A 	240	0
5974	Length	Value : contains a 1-bit Message_Binding_Type ( D ) that indicates the dependency relation of a message binding . The rest specifies a 128-bit randomly generated value that refers to a Message ID in another message . 	301	0
5974	Type	Type : 0x00B 	240	0
5974	Length	Value : Variable-length QSPEC ( QoS specification ) information , which is dependent on the QoS model . 	400	0
5975	QSPEC Objects	The QSPEC is the object of QoS NSLP containing QSPEC objects and parameters . QSPEC objects are the main building blocks of the QSPEC parameter set that is input or output of an RMF operation . QSPEC parameters are the parameters appearing in a QSPEC , which must include the traffic model parameter ( TMOD ), and may optionally include constraints ( e.g ., path latency ), traffic handling directives ( e.g ., excess treatment ), and traffic classifiers ( e.g ., PHB class ). The RMF implements functions that are related to resource management and processes the QSPEC parameters . 	231	0
5975	r	o rate ( r ) specified in octets per second o bucket size ( b ) specified in octets o peak rate ( p ) specified in octets per second o minimum policed unit ( m ) specified in octets o maximum packet size ( MPS ) specified in octets 	240	0
5975	Vers .	Vers .: Identifies the QSPEC version number . QSPEC Version 0 is assigned by this specification in Section 7 ( IANA Considerations ). 	220	0
5975	QSPEC Proc .	QSPEC Proc .: Identifies the QSPEC procedure and is composed of two times 4 bits . The first field identifies the Message Sequence; the second field identifies the QSPEC Object Combination used for this particular message sequence : 	231	0
5975	I	I : Initiator/Local QSPEC bit identifies whether the QSPEC is an initiator QSPEC or a Local QSPEC , and is set to the following values : 	210	0
5975	Length	Length : The total length of the QSPEC ( in 32-bit words ) excluding the common header 	100	0
5975	Parameter ID	Parameter ID : Assigned consecutively to each QSPEC parameter . Parameter IDs are assigned to each QSPEC parameter defined in this document in Sections 5.2 and 7 ( IANA Considerations ). 	231	0
5975	Preemption Priority	Preemption Priority : The priority of the new flow compared with the defending priority of previously admitted flows . Higher values represent higher priority . 	231	0
5975	Defending Priority	Defending Priority : Once a flow is admitted , the preemption priority becomes irrelevant . Instead , its defending priority is used to compare with the preemption priority of new flows . 	303	0
5975	Parameter ID	Parameter ID ( 12 bits ): The following values are allocated by this specification : 1-14 : assigned as specified in Section 5.2 : 1 : < TMOD-1 > 2 : < TMOD-2 > 3 : < Path Latency > 4 : < Path Jitter > 5 : < Path PLR > 6 : < Path PER > 7 : < Slack Term > 8 : < Preemption Priority > and < Defending Priority > 9 : < Admission Priority > 10 : < RPH Priority > 11 : < Excess Treatment > 12 : < PHB Class > 13 : < DSTE Class Type > 14 : < Y.1541 QoS Class > Further values are as follows : 15-255 : Unassigned 256-259 : Private/Experimental Use 260-4095 : Reserved The registration procedure is Specification Required . ( A specification is required to depreciate , delete , or modify Parameter IDs .) 	240	0
5976	EOR	Extent of Restoration ( EOR ) Field ( 4-bit unsigned integer ): Percentage of traffic belonging to the restoration class that can be restored . This percentage depends on the amount of spare capacity engineered . All high-priority restoration traffic , for example , may be " guaranteed " at 100% by the service provider . Other classes may offer lesser chances for successful restoration . The restoration extent for these lower priority classes depend on SLAs developed between the service provider and the customer . 	100	0
5976	EOR	The Extent of Restoration ( EOR ) Field is 4 bits in length . 	100	0
5977	Parameter ID	Parameter ID : 12-bit field , indicating the PHR type : PHR_Resource_Request , PHR_Release_Request , PHR_Refresh_Update . 	240	0
5977	Parameter ID	Parameter ID : 12-bit field identifying the type of < PDR container > field . 	231	0
5977	2	Any signaling message could be delayed by an adversary . For example , if RESERVE ' messages are delayed over the duration of the refresh period , then the resource units ( bandwidth ) reserved along the nodes for corresponding sessions will be removed . In this situation , the Ingress node does not receive the RESPONSE within a certain period , and considers that the signaling message has failed , which may cause a retransmission of the " failed " message . The Egress node may distinguish between the two messages , i.e ., the delayed message and the retransmitted message , and it could get a proper response . 	302	0
5979	Type	Type : NODE_CAPABILITY_TUNNEL ( 0x015 ) from the shared NSLP object type space 	231	0
5979	Length	The bits marked ' A ' and ' B ' define the desired behavior for objects whose Type field is not recognized . If a node does not recognize the NODE_CAPABILITY_TUNNEL object , the desired behavior is " Forward ". That is , the object must be retained unchanged and forwarded as a result of message processing . This is satisfied by setting ' AB ' to ' 10 '. 	210	0
5981	Type	Length : Variable , contains length of session authorization object list in units of 32-bit words . 	100	0
5981	Length	Length : Variable , contains length of session authorization object list in units of 32-bit words . 	100	0
5981	Length	The Length field is two octets and indicates the actual length of the attribute ( including Length , X-Type , and SubType fields ) in number of octets . The length does NOT include any padding of the value field to make the attribute's length a multiple of 4 octets . 	100	0
5981	START_TIME	5 . START_TIME : The starting time for the session . 	240	0
5981	SubType	Session authorization attribute sub-type is one octet in length . The value of the SubType depends on the X-Type . 	231	0
5981	Length	Length : Length of the attribute , which MUST be > 4 . 	100	0
5981	IPV4_ADDRESS	1 . IPV4_ADDRESS : IPv4 address represented in 32 bits . 	400	0
5981	Length	Length : Length of the attribute , which MUST be > 4 . 	100	0
5981	Length	Length : Length of the attribute , which MUST be > 4 . 	100	0
5981	IPV4_ADDRESS	1 . IPV4_ADDRESS : IPv4 address represented in 32 bits . 	230	0
5981	Length	Length : Length of the attribute in number of octets , which MUST be > 4 . 	100	0
5981	IPV4_ADDRESS	1 . IPV4_ADDRESS : IPv4 address represented in 32 bits . 	230	0
5981	Length	Length : Length of the attribute , which MUST be > 4 . 	100	0
5981	Length	Length : Length of the attribute , which MUST be > 4 . 	100	0
5981	Length	Length : Length of the attribute , which MUST be > 4 . 	100	0
5981	SubType	SubType : No sub-types for NSLP_OBJECT_LIST are currently defined . This field MUST be set to 0 and ignored upon reception . 	500	0
5981	Length	Length : Length of the attribute , which MUST be > 4 . 	100	0
5981	SubType	SubType : No sub-types for AUTHENTICATION_DATA are currently defined . This field MUST be set to 0 and ignored upon reception . 	500	0
5981	SOURCE_ADDR	o SOURCE_ADDR : the source address of the entity that created the HMAC 	230	0
5981	START_TIME	o START_TIME : the timestamp when the HMAC signature was calculated . This MUST be different for any two messages in sequence in order to prevent replay attacks . The NTP timestamp currently provides a resolution of 200 picoseconds , which should be sufficient . 	121	0
5991	C	C : This flag is specified in [ RFC4380 ], and its use is modified in Section 3.2 below . 	231	0
5991	z	z : This flag is reserved . It MUST be set to zero when the address is constructed , as specified in [ RFC4380 ]. 	500	0
5991	U	U : This flag is specified in [ RFC4380 ]. 	231	0
5991	G	G : This flag is specified in [ RFC4380 ]. 	231	0
5993	F	F : Follow flag; 1 denotes that more ToC elements follow; 0 denotes the last ToC element . 	210	0
5993	FT	FT : Frame type 000 = Good Speech frame 001 = Reserved 010 = Good SID frame 011 = Reserved 100 = Reserved 101 = Reserved 110 = Reserved 111 = No_Data frame 	240	0
5996	Next Payload	o Next Payload ( 1 octet ) - Indicates the type of payload that immediately follows the header . The format and value of each payload are defined below . 	231	0
5996	Exchange Type	o Exchange Type ( 1 octet ) - Indicates the type of exchange being used . This constrains the payloads sent in each message in an exchange . The values in the following table are only current as of the publication date of RFC 4306 . Other values may have been added since then or will be added after the publication of this document . Readers should refer to [ IKEV2IANA ] for the latest values . 	231	0
5996	Flags	o Flags ( 1 octet ) - Indicates specific options that are set for the message . Presence of options is indicated by the appropriate bit in the flags field being set . The bits are as follows : 	240	0
5996	R	* R ( Response ) - This bit indicates that this message is a response to a message containing the same Message ID . This bit MUST be cleared in all request messages and MUST be set in all responses . An IKE endpoint MUST NOT generate a response to a message that is marked as being a response ( with one exception; see Section 2.21.2 ). 	210	0
5996	V	* V ( Version ) - This bit indicates that the transmitter is capable of speaking a higher major version number of the protocol than the one indicated in the major version number field . Implementations of IKEv2 MUST clear this bit when sending and MUST ignore it in incoming messages . 	220	0
5996	I	* I ( Initiator ) - This bit MUST be set in messages sent by the original initiator of the IKE SA and MUST be cleared in messages sent by the original responder . It is used by the recipient to determine which eight octets of the SPI were generated by the recipient . This bit changes to reflect who initiated the last rekey of the IKE SA . 	210	0
5996	Message ID	o Message ID ( 4 octets , unsigned integer ) - Message identifier used to control retransmission of lost packets and matching of requests and responses . It is essential to the security of the protocol because it is used to prevent message replay attacks . See Sections 2.1 and 2.2 . 	231	0
5996	Length	o Length ( 4 octets , unsigned integer ) - Length of the total message ( header + payloads ) in octets . 	100	0
5996	Next Payload	o Next Payload ( 1 octet ) - Identifier for the payload type of the next payload in the message . If the current payload is the last in the message , then this field will be 0 . This field provides a " chaining " capability whereby additional payloads can be added to a message by appending each one to the end of the message and setting the " Next Payload " field of the preceding payload to indicate the new payload's type . An Encrypted payload , which must always be the last payload of a message , is an exception . It contains data structures in the format of additional payloads . In the header of an Encrypted payload , the Next Payload field is set to the payload type of the first contained payload ( instead of 0); conversely , the Next Payload field of the last contained payload is set to zero ). The payload type values are listed here . The values in the following table are only current as of the publication date of RFC 4306 . Other values may have been added since then or will be added after the publication of this document . Readers should refer to [ IKEV2IANA ] for the latest values . 	231	0
5996	RESERVED	o RESERVED ( 7 bits ) - MUST be sent as zero; MUST be ignored on receipt . 	500	0
5996	Payload Length	o Payload Length ( 2 octets , unsigned integer ) - Length in octets of the current payload , including the generic payload header . 	100	0
5996	RESERVED	o RESERVED ( 1 octet ) - MUST be sent as zero; MUST be ignored on receipt . 	500	0
5996	Proposal Length	o Proposal Length ( 2 octets , unsigned integer ) - Length of this proposal , including all transforms and attributes that follow . 	100	0
5996	Proposal Num	o Proposal Num ( 1 octet ) - When a proposal is made , the first proposal in an SA payload MUST be 1 , and subsequent proposals MUST be one more than the previous proposal ( indicating an OR of the two proposals ). When a proposal is accepted , the proposal number in the SA payload MUST match the number on the proposal sent that was accepted . 	302	0
5996	Protocol ID	o Protocol ID ( 1 octet ) - Specifies the IPsec protocol identifier for the current negotiation . The values in the following table are only current as of the publication date of RFC 4306 . Other values may have been added since then or will be added after the publication of this document . Readers should refer to [ IKEV2IANA ] for the latest values . 	231	0
5996	SPI Size	o SPI Size ( 1 octet ) - For an initial IKE SA negotiation , this field MUST be zero; the SPI is obtained from the outer header . During subsequent negotiations , it is equal to the size , in octets , of the SPI of the corresponding protocol ( 8 for IKE , 4 for ESP and AH ). 	231	0
5996	Num Transforms	o Num Transforms ( 1 octet ) - Specifies the number of transforms in this proposal . 	202	0
5996	RESERVED	o Transform Length - The length ( in octets ) of the Transform Substructure including Header and Attributes . 	100	0
5996	Transform Length	o Transform Length - The length ( in octets ) of the Transform Substructure including Header and Attributes . 	100	0
5996	Transform Type	o Transform Type ( 1 octet ) - The type of transform being specified in this transform . Different protocols support different Transform Types . For some protocols , some of the transforms may be optional . If a transform is optional and the initiator wishes to propose that the transform be omitted , no transform of the given type is included in the proposal . If the initiator wishes to make use of the transform optional to the responder , it includes a transform substructure with Transform ID = 0 as one of the options . 	231	0
5996	Transform ID	o Transform ID ( 2 octets ) - The specific instance of the Transform Type being proposed . 	231	0
5996	Transform Attributes	Each transform in a Security Association payload may include attributes that modify or complete the specification of the transform . The set of valid attributes depends on the transform . Currently , only a single attribute type is defined : the Key Length attribute is used by certain encryption transforms with variable - length keys ( see below for details ). 	231	0
5996	AF	o Attribute Format ( AF ) ( 1 bit ) - Indicates whether the data attribute follows the Type/Length/Value ( TLV ) format or a shortened Type/Value ( TV ) format . If the AF bit is zero ( 0 ), then the attribute uses TLV format; if the AF bit is one ( 1 ), the TV format ( with two-byte value ) is used . 	210	0
5996	Attribute Type	o Attribute Type ( 15 bits ) - Unique identifier for each type of attribute ( see below ). 	231	0
5996	ID Type	o ID Type ( 1 octet ) - Specifies the type of Identification being used . 	231	0
5996	RESERVED	o Identification Data ( variable length ) - Value , as indicated by the Identification Type . The length of the Identification Data is computed from the size in the ID payload header . 	400	0
5996	Identification Data	o Identification Data ( variable length ) - Value , as indicated by the Identification Type . The length of the Identification Data is computed from the size in the ID payload header . 	400	0
5996	Certificate Data	o Certificate Data ( variable length ) - Actual encoding of certificate data . The type of certificate is indicated by the Certificate Encoding field . 	231	0
5996	Certification Authority	o Certification Authority ( variable length ) - Contains an encoding of an acceptable certification authority for the type of certificate requested . 	303	0
5996	Auth Method	o Auth Method ( 1 octet ) - Specifies the method of authentication used . The types of signatures are listed here . The values in the following table are only current as of the publication date of RFC 4306 . Other values may have been added since then or will be added after the publication of this document . Readers should refer to [ IKEV2IANA ] for the latest values . 	231	0
5996	Authentication Data	o Authentication Data ( variable length ) - see Section 2.15 . 	400	0
5996	Nonce Data	o Nonce Data ( variable length ) - Contains the random data generated by the transmitting entity . 	400	0
5996	Protocol ID	o Protocol ID ( 1 octet ) - If this notification concerns an existing SA whose SPI is given in the SPI field , this field indicates the type of that SA . For notifications concerning Child SAs , this field MUST contain either ( 2 ) to indicate AH or ( 3 ) to indicate ESP . Of the notifications defined in this document , the SPI is included only with INVALID_SELECTORS and REKEY_SA . If the SPI field is empty , this field MUST be sent as zero and MUST be ignored on receipt . 	231	0
5996	SPI Size	o SPI Size ( 1 octet ) - Length in octets of the SPI as defined by the IPsec protocol ID or zero if no SPI is applicable . For a notification concerning the IKE SA , the SPI Size MUST be zero and the field must be empty . 	100	0
5996	Notify Message Type	o Notify Message Type ( 2 octets ) - Specifies the type of notification message . 	231	0
5996	Notification Data	o Notification Data ( variable length ) - Status or error data transmitted in addition to the Notify Message Type . Values for this field are type specific ( see below ). 	400	0
5996	Protocol ID	o Protocol ID ( 1 octet ) - Must be 1 for an IKE SA , 2 for AH , or 3 for ESP . 	240	0
5996	SPI Size	o SPI Size ( 1 octet ) - Length in octets of the SPI as defined by the protocol ID . It MUST be zero for IKE ( SPI is in message header ) or four for AH and ESP . 	100	0
5996	Num of SPIs	o Num of SPIs ( 2 octets , unsigned integer ) - The number of SPIs contained in the Delete payload . The size of each SPI is defined by the SPI Size field . 	231	0
5996	Number of TSs	o Number of TSs ( 1 octet ) - Number of Traffic Selectors being provided . 	400	0
5996	RESERVED	o RESERVED - This field MUST be sent as zero and MUST be ignored on receipt . 	500	0
5996	TS Type	o IP protocol ID ( 1 octet ) - Value specifying an associated IP protocol ID ( such as UDP , TCP , and ICMP ). A value of zero means that the protocol ID is not relevant to this Traffic Selector -- the SA can carry all protocols . 	400	0
5996	Selector Length	o Selector Length - Specifies the length of this Traffic Selector substructure including the header . 	100	0
5996	Next Payload	o Next Payload - The payload type of the first embedded payload . Note that this is an exception in the standard header format , since the Encrypted payload is the last payload in the message and therefore the Next Payload field would normally be zero . But because the content of this payload is embedded payloads and there was no natural place to put the type of the first one , that type is placed here . 	231	0
5996	Payload Length	o Payload Length - Includes the lengths of the header , initialization vector ( IV ), Encrypted IKE payloads , Padding , Pad Length , and Integrity Checksum Data . 	100	0
5996	CFG Type	o CFG Type ( 1 octet ) - The type of exchange represented by the Configuration Attributes . The values in the following table are only current as of the publication date of RFC 4306 . Other values may have been added since then or will be added after the publication of this document . Readers should refer to [ IKEV2IANA ] for the latest values . 	231	0
5996	RESERVED	o RESERVED ( 3 octets ) - MUST be sent as zero; MUST be ignored on receipt . 	500	0
5996	Configuration Attributes	o Configuration Attributes ( variable length ) - These are type length value ( TLV ) structures specific to the Configuration payload and are defined below . There may be zero or more Configuration Attributes in this payload . 	231	0
5996	Configuration Attributes	3.15.1 . Configuration Attributes 	240	0
5996	Attribute Type	o Attribute Type ( 15 bits ) - A unique identifier for each of the Configuration Attribute Types . 	231	0
5996	Length	o Value ( 0 or more octets ) - The variable-length value of this Configuration Attribute . The following lists the attribute types . 	231	0
5996	Value	o Value ( 0 or more octets ) - The variable-length value of this Configuration Attribute . The following lists the attribute types . 	231	0
6001	Lower Encoding	Contains one of the LSP Encoding Type values specified in Section 3.1.1 of [ RFC3471 ] and updates . 	231	0
6001	Upper Encoding	Set to the encoding of the available adjustment capacity and to 0xFF when the corresponding SC value has no access to the wire , i.e ., there is no ISC sub-TLV for this upper switching capability . The adjustment capacity is the set of resources associated to the upper switching capability . 	400	0
6001	L	L ( 1 bit ) 	210	0
6001	Type	Type ( 7 bits ) 	231	0
6001	Length	The total length of the subobject in bytes ( including the Type and Length fields ). The Length of the XRO SC subobject is 4 . 	100	0
6001	Attribute	Attribute ( 8 bits ) 	231	0
6001	Switching Cap	Switching Cap ( 8 bits ) 	231	0
6001	L	L ( 1 bit ) 	210	0
6001	Type	Type ( 7 bits ) 	231	0
6001	Length	The total length of the subobject in bytes ( including the Type and Length fields ). The Length is always divisible by 4 . 	100	0
6001	U	U ( 1 bit ) 	210	0
6001	C-Type	The C-Type of the included Label Object . Copied from the Label Object ( see [ RFC3471 ]). 	231	0
6001	Type	Type 	240	0
6001	Length	Indicates the total length of the TLV in octets . That is , the combined length of the Type , Length , and Value fields , i.e ., four plus the length of the Value field in octets . 	100	0
6001	C-Type	Class Type ( C-Type ): 	231	0
6002	Action	See [ RFC3471 ] for definition of actions . Range actions SHOULD be used when possible to minimize the size of the Channel_Set LABEL Object . 	231	0
6002	Label Type	Label Type : 14 bits 	400	0
6002	Padding	Padding is used to ensure that the length of a Channel_Set Subobject meets the multiple of 4 byte size requirement stated above . The field is only required when the Subchannel field is not 32-bit aligned and the number of included Subchannel fields result in the Subobject not being 32-bit aligned . 	100	0
6003	Switching Granularity	This field indicates the type of link that comprises the requested Ethernet LSP . 	231	0
6003	MTU	MTU : 16 bits 	400	0
6003	Type	Type : 16 bits 	400	0
6003	Length	Indicates the length in bytes of the whole TLV including the Type and Length fields . A value field whose length is not a multiple of four MUST be zero-padded ( with trailing zeros ) so that the TLV is four-octet aligned . 	100	0
6003	Profile	This field is defined as a bit vector of binary flags . The following flags are defined : 	231	0
6003	Index	The Index field is used to reference bandwidth allocated for a given traffic class in case a multiple-class LSP is being requested . The Index field value MUST correspond to at least one of the Class-Type values included either in the CLASSTYPE object [ RFC4124 ] or in the EXTENDED_CLASSTYPE object [ MCOS ]. 	400	0
6003	Reserved	These bits SHOULD be set to zero when sent and MUST be ignored when received . 	500	0
6003	CIR	The value of the CIR is in units of bytes per second . The CIR is encoded as a 32-bit IEEE single-precision floating-point number ( see [ RFC4506 ]). 	110	0
6003	CBS	The value of the CBS is in units of bytes . The CBS is encoded as a 32-bit IEEE single-precision floating-point number ( see [ RFC4506 ]). 	200	0
6003	EIR	The value of the EIR is in units of bytes per second . The EIR is encoded as a 32-bit IEEE single-precision floating-point number ( see [ RFC4506 ]). 	110	0
6003	EBS	The value of the EBS is in units of bytes . The EBS is encoded as a 32-bit IEEE single-precision floating-point number ( see [ RFC4506 ]). 	200	0
6004	Type	Type and Length fields are defined in [ RFC6001 ]. Note that as defined in [ RFC6001 ], the Length field is set to length of the whole TLV including the Type , Length , and Endpoint ID fields . 	100	0
6004	IL2CP	This field controls processing of Layer 2 Control Protocols on a receiving interface . Valid usage is service specific , see [ MEF10.1 ], [ G.8011.1 ], and [ G.8011.2 ]. 	400	0
6004	EL2CP	This field controls processing of Layer 2 Control Protocols on a transmitting interface . When MEF services are used a value of 1 MUST be used , other valid usage is service specific , see [ G.8011.1 ] and [ G.8011.2 ]. 	400	0
6004	Reserved	This field is reserved . It MUST be set to zero on transmission and MUST be ignored on receipt . This field SHOULD be passed unmodified by transit nodes . 	500	0
6004	Reserved	This field is reserved . It MUST be set to zero on transmission and MUST be ignored on receipt . This field SHOULD be passed unmodified by transit nodes . 	500	0
6004	VLAN ID	VLAN ID : 12 bits 	202	0
6004	Type	Type Name Reference ---- ----------- --------- 2 Endpoint ID [ RFC6004 ] 	240	0
6013	Length	Cookie 8 to 16 bytes ( Length - 2 ): an unpredictable value . 	400	0
6013	R	( R)eserved 5 bits : default zero . Reserved for future use . 	500	0
6013	S	( S)ize 3 bits : 	231	0
6013	TS Value	TS Value 4 , 8 , or 16 bytes . The current value of the timestamp for the sender . 	121	0
6013	TS Echo Reply	TS Echo Reply 4 , 8 , or 16 bytes . A copy of the most recently received TS Value . 	400	0
6015	D	o D : Number of rows of the source block . 	240	0
6015	D	o D : Number of rows of the source block . D is a positive integer that is less than or equal to 255 . 	201	0
6015	D	o D : Number of rows of the source block . D is a positive integer that is less than or equal to 255 . 	201	0
6015	D	o D : Number of rows of the source block . D is a positive integer that is less than or equal to 255 . 	201	0
6015	D	o D : Number of rows of the source block . D is a positive integer that is less than or equal to 255 . 	201	0
6015	D	o The NA field MUST be set to the number of rows of the source block ( D ). 	201	0
6037	Type	the type of the MDT TLV . In this specification , types 1 and 4 are defined . 	231	0
6037	Length	the total number of octets in the TLV for this type , including both the Type and Length fields . 	100	0
6037	Value	Value ( variable length ): 	400	0
6037	Type	Type ( 8 bits ): 	231	0
6037	Length	Length ( 16 bits ): 	100	0
6037	Reserved	Reserved ( 8 bits ): 	231	0
6037	C-source	C-source ( 32 bits ): 	231	0
6037	C-group	the IPv4 address of the multicast traffic destination address in the VPN . 	230	0
6037	P-group	the IPv4 group address that the PE router is going to use to encapsulate the flow ( C-source , C-group ). 	230	0
6037	Type	Type ( 8 bits ): 	231	0
6037	Length	Length ( 16 bits ): 	100	0
6037	Reserved	Reserved ( 8 bits ): 	231	0
6037	C-source	C-source ( 128 bits ): 	231	0
6037	C-group	the IPv6 address of the multicast traffic destination address in the VPN . 	230	0
6037	P-group	the IPv4 group address that the PE router is going to use to encapsulate the flow ( C-source , C-group ). 	230	0
6058	Type	Length : 8-bit unsigned integer indicating the length of the option in octets , excluding the Type and the Length fields . This field MUST be set to 2 . 	100	0
6058	Length	Length : 8-bit unsigned integer indicating the length of the option in octets , excluding the Type and the Length fields . This field MUST be set to 2 . 	100	0
6058	L	L-Flag : Indicates that the LMA applies late path switch according to the transient BCE state . If the L-flag is set to 1 , the LMA continues to forward downlink packets towards the pMAG . Different setting of the L-Flag may be for future use . 	210	0
6058	Lifetime	Lifetime : Maximum lifetime of a Transient-L state in multiple of 100 ms . 	100	0
6073	Value	Value E Description 0x0000003A 0 PW Loop Detected 	240	0
6073	Type	Type Length Description 	100	0
6078	Type	Type Type code for the parameter . 16 bits long , C-bit being part of the Type code . C Critical . One if this parameter is critical , and MUST be recognized by the recipient; zero otherwise . The C bit is considered to be a part of the Type field . Consequently , critical parameters are always odd and non-critical ones have an even value . Length Length of the Contents , in octets . Contents Parameter specific , defined by Type . Padding Padding , 0-7 octets , added if needed . 	210	0
6078	Type	Type 4481 Length 4 Sequence number 32-bit unsigned integer in network byte order that MUST NOT be reused before it has been acknowledged by the receiver . 	100	0
6078	Type	Type 4545 Length variable ( multiple of 4 ) Acked Sequence number A sequence of 32-bit unsigned integers in network byte order corresponding to the sequence numbers being acknowledged . 	100	0
6078	Type	Type 4577 Length Length in octets , excluding Type , Length , and Padding . Next Header Identifies the data that is protected by this MIC . The values for this field are defined by IANA " Protocol Numbers " [ PROTOCOL-NUMBERS ]. Payload Data Last 8 octets of the payload data over which the MIC is calculated . This field is used to uniquely bind the PAYLOAD_MIC parameter to the Next Header , in case there are multiple copies of the same type . MIC Value MIC computed over the data to which the Next Header and Payload Data point . The size of the MIC is the natural size of the computation output depending on the function used . 	100	0
6078	Type	Type 4580 Length Length of the Identifier , in octets Identifier The identifier value Padding 0-7 octets of padding if needed 	100	0
6079	Type	Type 4592 Length Length of the Identifier , in octets Identifier The identifier value Padding 0-7 bytes of padding if needed 	100	0
6079	Type	Type 64011 Length 4 TTL The Time-to-Live value Reserved Reserved for future use 	100	0
6081	Nonce	Nonce : A time-variant random value used in the connection setup phase to prevent message replay and other types of attacks . 	301	0
6081	Port	Port-Preserving NAT : A NAT that translates a local address/port to a mapped address/port such that the mapped port has the same value as the local port , as long as that same mapped address/port has not already been used for a different local address/port . 	400	0
6081	Port	Port-Restricted NAT : A restricted NAT that accepts packets from an external host's IP address X and port Y only if the internal host has sent a packet destined to IP address X and port Y . In the terminology of [ RFC4787 ], this is a NAT with Endpoint-Independent Mapping and Address and Port-Dependent Filtering . 	400	0
6081	Port	Port-Symmetric NAT : A symmetric NAT that has only a single external IP address and hence only assigns different ports when communicating with different external hosts . 	231	0
6081	Type	Length ( 1 byte ): 8-bit unsigned integer . Length of the Value field of this trailer , in octets . 	100	0
6081	Length	Length ( 1 byte ): 8-bit unsigned integer . Length of the Value field of this trailer , in octets . 	100	0
6081	Type	Type ( 1 byte ): The Trailer Option type . This field MUST be set to 0x01 . 	240	0
6081	Length	Length ( 1 byte ): The length in bytes of the rest of the option . This field MUST be set to 0x04 . 	100	0
6081	Nonce	Nonce ( 4 bytes ): The nonce value . 	231	0
6081	Type	Type ( 1 byte ): The Trailer Option type . This field MUST be set to 0x03 . 	240	0
6081	Length	Length ( 1 byte ): The length in bytes of the rest of the option . The value of this field MUST be in the range 8 to 26 ( i.e ., 2 bytes for the Reserved field , and 6 bytes for each entry in the Alternate Address/Port List ). This allows for a minimum of one address/port mapping and a maximum of four address/port mappings to be advertised . It SHOULD be at most 14 as a maximum of two address/port mappings can be determined by Teredo : one local address/port and one obtained using UPnP . Because the length of the alternate address/port is 6 bytes , the valid range of values is only 8 , 14 , 20 , and 26 . 	100	0
6081	Reserved	Reserved ( 2 bytes ): This field MUST be set to 0x0000 and ignored on receipt . 	500	0
6081	IPv4 Address	IPv4 Address ( 4 bytes ): An IPv4 address in network byte order . This field MUST contain a valid unicast address . 	230	0
6081	Port	Port ( 2 bytes ): A port number in network byte order . This field MUST NOT be zero . 	400	0
6081	Type	Type ( 1 byte ): The Trailer Option type . This field MUST be set to 0x04 . 	240	0
6081	Length	Length ( 1 byte ): The length in bytes of the rest of the option . This field MUST be set to 0x04 . 	100	0
6081	DiscoveryType	DiscoveryType ( 1 byte ): This field MUST be set to one of the following values : 	400	0
6081	Reserved	Reserved ( 3 bytes ): This field MUST be set to 0x000000 on transmission and ignored on receipt . 	500	0
6081	Type	Type ( 1 byte ): The Trailer Option type . This field MUST be set to 0x05 . 	302	0
6081	Length	Length ( 1 byte ): The length in bytes of the rest of the option . This field MUST be set to 0x02 . 	100	0
6081	Port	Port-Preserving NAT flag : This is a Boolean value , set to TRUE if the Teredo client is positioned behind a port-preserving NAT . 	231	0
6088	B	4n if A , B , C , D , E , or F is set 	210	0
6088	C	4n if A , B , C , D , E , or F is set 	210	0
6088	D	4n if A , B , C , D , E , or F is set 	210	0
6088	E	4n if A , B , C , D , E , or F is set 	210	0
6088	H	2n if G , H , I , or J is set 	210	0
6088	I	2n if G , H , I , or J is set 	210	0
6088	L	n if K , L , M , or N is set 	210	0
6088	M	n if K , L , M , or N is set 	210	0
6088	A	This field identifies the first source address , from the range of 32-bit IPv4 addresses to be matched , on data packets sent from a corresponding node to the mobile node as seen by the home agent . In other words , this is one of the addresses of the correspondent node . 	230	0
6088	B	If more than one contiguous source address needs to be matched , then this field can be used to indicate the end value of a range starting from the value of the Start Source Address field . This field MUST NOT be included unless the Start Source Address field is included . When this field is included , the receiver will match all of the addresses between fields ( A ) and ( B ), inclusive of ( A ) and ( B ). 	230	0
6088	C	This field identifies the first destination address , from the range of 32-bit IPv4 addresses to be matched , on data packets sent from a corresponding node to the mobile node as seen by the home agent . In other words , this is one of the registered home addresses of the mobile node . 	230	0
6088	D	If more than one contiguous destination address needs to be matched , then this field can be used to indicate the end value of a range starting from the value of the Start Destination Address field . This field MUST NOT be included unless the Start Destination Address field is included . When this field is included , the receiver will match all of the addresses between fields ( C ) and ( D ), inclusive of ( C ) and ( D ). 	230	0
6088	E	This field identifies the first 32-bit IPsec SPI value , from the range of SPI values to be matched , on data packets sent from a corresponding node to the mobile node as seen by the home agent . This field is defined in [ RFC4303 ]. 	231	0
6088	F	If more than one contiguous SPI value needs to be matched , then this field can be used to indicate the end value of a range starting from the value of the Start IPsec SPI field . This field MUST NOT be included unless the Start IPsec SPI field is included . When this field is included , the receiver will match all of the SPI values between fields ( E ) and ( F ), inclusive of ( E ) and ( F ). 	400	0
6088	G	This field identifies the first 16-bit source port number , from the range of port numbers to be matched , on data packets sent from a corresponding node to the mobile node as seen by the home agent . This is from the range of port numbers defined by IANA ( http://www.iana.org ). 	231	0
6088	H	If more than one contiguous source port number needs to be matched , then this field can be used to indicate the end value of a range starting from the value of the Start Source Port field . This field MUST NOT be included unless the Start Source Port field is included . When this field is included , the receiver will match all of the port numbers between fields ( G ) and ( H ), inclusive of ( G ) and ( H ). 	400	0
6088	I	This field identifies the first 16-bit destination port number , from the range of port numbers to be matched , on data packets sent from a corresponding node to the mobile node as seen by the home agent . 	231	0
6088	J	If more than one contiguous destination port number needs to be matched , then this field can be used to indicate the end value of a range starting from the value of the Start Destination Port field . This field MUST NOT be included unless the Start Destination Port field is included . When this field is included , the receiver will match all of the port numbers between fields ( I ) and ( J ), inclusive of ( I ) and ( J ). 	400	0
6088	K	This field identifies the first differential services value , from the range of differential services values to be matched , on data packets sent from a corresponding node to the mobile node as seen by the home agent . Note that this field is called a " Type of Service field " in [ RFC0791 ]. [ RFC3260 ] then clarified that the field has been redefined as a 6-bit DS field with 2 bits reserved , later claimed by Explicit Congestion Notification ( ECN ) [ RFC3168 ]. For the purpose of this specification , the ( K)Start DS field is 8 bits long , where the 6 most significant bits indicate the DS field to be matched and the 2 least significant bits ' values MUST be ignored in any comparison . 	231	0
6088	L	If more than one contiguous DS value needs to be matched , then this field can be used to indicate the end value of a range starting from the value of the Start DS field . This field MUST NOT be included unless the Start DS field is included . When this field is included , it MUST be coded the same way as defined for ( K ). When this field is included , the receiver will match all of the values between fields ( K ) and ( L ), inclusive of ( K ) and ( L ). 	400	0
6088	M	This field identifies the first 8-bit protocol value , from the range of protocol values to be matched , on data packets sent from a corresponding node to the mobile node as seen by the home agent . 	231	0
6088	N	If more than one contiguous protocol value needs to be matched , then this field can be used to indicate the end value of a range starting from the value of the Start Protocol field . This field MUST NOT be included unless the Start Protocol field is included . When this field is included , the receiver will match all of the values between fields ( M ) and ( N ), inclusive of ( M ) and ( N ). 	400	0
6088	Reserved	Reserved for future use . These bits MUST be set to zero by the sender and ignored by the receiver . 	500	0
6088	B	8n if A , B , C , or D is set 	210	0
6088	C	8n if A , B , C , or D is set 	210	0
6088	F	4n if E , F , G , or H is set 	210	0
6088	G	4n if E , F , G , or H is set 	210	0
6088	J	2n if I , J , K , or L is set 	210	0
6088	K	2n if I , J , K , or L is set 	210	0
6088	N	n if M , N , O , or P is set 	210	0
6088	O	n if M , N , O , or P is set 	210	0
6088	A	This field identifies the first source address , from the range of 128-bit IPv6 addresses to be matched , on data packets sent from a corresponding node to the mobile node as seen by the home agent . In other words , this is one of the addresses of the correspondent node . 	230	0
6088	B	If more than one contiguous source address needs to be matched , then this field can be used to indicate the end value of a range starting from the value of the Start Source Address field . This field MUST NOT be included unless the Start Source Address field is included . When this field is included , the receiver will match all of the addresses between fields ( A ) and ( B ), inclusive of ( A ) and ( B ). 	230	0
6088	C	This field identifies the first destination address , from the range of 128-bit IPv6 addresses to be matched , on data packets sent from a corresponding node to the mobile node as seen by the home agent . In other words , this is one of the registered home addresses of the mobile node . 	230	0
6088	D	If more than one contiguous destination address needs to be matched , then this field can be used to indicate the end value of a range starting from the value of the Start Destination Address field . This field MUST NOT be included unless the Start Destination Address field is included . When this field is included , the receiver will match all of the addresses between fields ( C ) and ( D ), inclusive of ( C ) and ( D ). 	230	0
6088	E	This field identifies the first 32-bit IPsec SPI value , from the range of SPI values to be matched , on data packets sent from a corresponding node to the mobile node as seen by the home agent . This field is defined in [ RFC4303 ]. 	231	0
6088	F	If more than one contiguous SPI value needs to be matched , then this field can be used to indicate the end value of a range starting from the value of the Start IPsec SPI field . This field MUST NOT be included unless the Start IPsec SPI field is included . When this field is included , the receiver will match all of the SPI values between fields ( E ) and ( F ), inclusive of ( E ) and ( F ). 	400	0
6088	G	This field identifies the first flow label value , from the range of flow label values to be matched , on data packets sent from a corresponding node to the mobile node as seen by the home agent . According to [ RFC2460 ], the flow label is 24 bits long . For the purpose of this specification , the sender of this option MUST prefix the flow label value with 8 bits of " 0 " before inserting it in the ( G)Start Flow Label field . The receiver SHOULD ignore the first 8 bits of this field before using it in comparisons with flow labels in packets . 	231	0
6088	H	If more than one contiguous flow label value needs to be matched , then this field can be used to indicate the end value of a range starting from the value of the Start Flow Label field . This field MUST NOT be included unless the Start Flow Label field is included . When this field is included , the receiver will match all of the flow label values between fields ( G ) and ( H ), inclusive of ( G ) and ( H ). When this field is included , it MUST be coded the same way as defined for ( G ). 	400	0
6088	I	This field identifies the first 16-bit source port number , from the range of port numbers to be matched , on data packets sent from a corresponding node to the mobile node as seen by the home agent . 	231	0
6088	J	If more than one contiguous source port number needs to be matched , then this field can be used to indicate the end value of a range starting from the value of the Start Source Port field . This field MUST NOT be included unless the Start Source Port field is included . When this field is included , the receiver will match all of the port numbers between fields ( I ) and ( J ), inclusive of ( I ) and ( J ). 	400	0
6088	K	This field identifies the first 16-bit destination port number , from the range of port numbers to be matched , on data packets sent from a corresponding node to the mobile node as seen by the home agent . 	231	0
6088	L	If more than one contiguous destination port number needs to be matched , then this field can be used to indicate the end value of a range starting from the value of the Start Destination Port field . This field MUST NOT be included unless the Start Destination Port field is included . When this field is included , the receiver will match all of the port numbers between fields ( K ) and ( L ), inclusive of ( K ) and ( L ). 	400	0
6088	M	This field identifies the first traffic class value , from the range of traffic class values to be matched , on data packets sent from a corresponding node to the mobile node as seen by the home agent . This field is equivalent to the Start DS field in the IPv4 traffic selector in Figure 1 . As per [ RFC3260 ], the field is defined as a 6-bit DS field with 2 bits reserved , later claimed by Explicit Congestion Notification ( ECN ) [ RFC3168 ]. For the purpose of this specification , the ( M)Start TC field is 8 bits long , where the 6 most significant bits indicate the DS field to be matched and the 2 least significant bits ' values MUST be ignored in any comparison . 	231	0
6088	N	If more than one contiguous TC value needs to be matched , then this field can be used to indicate the end value of a range starting from the value of the Start TC field . This field MUST NOT be included unless the Start TC field is included . When this 	400	0
6088	M	field is included , it MUST be coded the same way as defined for ( M ). When this field is included , the receiver will match all of the values between fields ( M ) and ( N ), inclusive of ( M ) and ( N ). 	301	0
6088	O	This field identifies the first 8-bit next header value , from the range of next header values to be matched , on data packets sent from a corresponding node to the mobile node as seen by the home agent . 	231	0
6088	P	If more than one contiguous next header value needs to be matched , then this field can be used to indicate the end value of a range starting from the value of the Start NH field . This field MUST NOT be included unless the Start next header field is included . When this field is included , the receiver will match all of the values between fields ( O ) and ( P ), inclusive of ( O ) and ( P ). 	400	0
6088	Reserved	Reserved for future use . These bits MUST be set to zero by the sender and ignored by the receiver . 	500	0
6089	BID-PRI	This is a 7-bit unsigned integer placing each BID to a relative priority ( PRI ) with other registered BIDs . Value ' 0 ' is reserved and MUST NOT be used . A lower number in this field indicates a higher priority , while BIDs with the same BID-PRI value have equal priority meaning that , the BID used is an implementation issue . This is consistent with current practice in packet classifiers . 	231	0
6089	Option Type	Option Type 	220	0
6089	Option Len	Option Len 	302	0
6089	FID	The Flow Identifier field is a 16-bit unsigned integer that includes the unique identifier for the flow binding . This field is used to refer to an existing flow binding or to create a new flow binding . The value of this field is set by the mobile node . FID = 0 is reserved and MUST NOT be used . 	231	0
6089	FID-PRI	This is a 16-bit unsigned integer priority field to indicate the priority of a particular option . This field is needed in cases where two different flow descriptions in two different options overlap . The priority field decides which policy should be executed in those cases . A lower number in this field indicates a higher priority . Value ' 0 ' is reserved and MUST NOT be used . FID-PRI MUST be unique to each of the flows pertaining to a given MN . In other words , two FIDs MUST NOT be associated with the same FID-PRI value . 	231	0
6089	Status	This 8-bit unsigned integer field indicates the success or failure of the flow binding operation for the particular flow in the option . This field is not relevant to the binding update message as a whole or to other flow identification options . This field is only relevant when included in the Binding Acknowledgement message and must be ignored in the 	302	0
6089	Sub-Opt Type	8-bit unsigned integer indicating the sub-option Type . When processing a flow identification mobility option containing an option for which the sub-option Type value is not recognized by the receiver , the receiver MUST silently ignore and skip over the sub-option , correctly handling any remaining sub-options in the same option . 	231	0
6089	Sub-Opt Len	8-bit unsigned integer , representing the length in octets of the flow identification sub-option . This field indicates the length of the sub-option not including the Sub-Opt Type and Sub-Opt Length fields . Note that Sub-Opt Type ' 0 ' ( Section 4.2.1.1 ) is a special case that does not take a Sub - Opt Length field . 	100	0
6089	Sub-Opt Type	Sub-Opt Type 	231	0
6089	Sub-Opt Type	Sub-Opt Type 	231	0
6089	Sub-Opt Len	Sub-Opt Len 	400	0
6089	Sub-Opt Type	Sub-Opt Type 	231	0
6089	Sub-Opt Len	Sub-Opt Len 	400	0
6089	BID	A 16-bit unsigned integer indicating the BID that the mobile node wants to associate with the flow identification option . One or more BID fields can be included in this sub-option . Since each BID is 2 bytes long , the value of the Sub-opt Len field indicates the number of BIDs present . Number of BIDs = Sub-Opt Len/2 . 	230	0
6089	Sub-Opt Type	Sub-Opt Type 	231	0
6089	Sub-Opt Len	Sub-Opt Len 	400	0
6089	TS Format	An 8-bit unsigned integer indicating the Traffic Selector Format . Value " 0 " is reserved and MUST NOT be used . 	500	0
6089	Reserved	An 8-bit reserved field . It MUST be set to zero by the sender and ignored by the receiver . 	500	0
6089	Option Type	Option Type 	220	0
6089	FID	A 16-bit unsigned integer indicating a registered FID . One or more FID fields can be included in this option . Number of FIDs = Option Len/2 . 	231	0
6089	FID	o FID ( Flow Identifier ): For a given mobile node , identified by its primary home address , the FID MUST uniquely identify an entry , i.e ., a unique flow binding . Each mobile node can only have a single entry identified by a given FID at any one time . A given FID number space is used for all the addresses associated to a given MN by the HA ( e.g ., via [ RFC3963 ]). Different mobile nodes use the same FID number space . 	230	0
6089	BID	o BID(s ): The list of BIDs associated with the entry as defined by the binding reference sub-option included in the FID option that created it . 	231	0
6089	FID	o FID-PRI : This field indicates the priority of the flow binding and is used to break the tie between overlapping flow bindings . 	231	0
6089	BID-PRI	BID-PRI BID CoA --------- --- --- 20 1 IP1 30 3 IP2 30 2 IP3 	240	0
6089	H	This specification ( see Section 4.1 ) updates the definition of the binding identifier mobility option , originally defined in [ RFC5648 ]. According to this specification , the BID option includes a BID-PRI field assigning each registered care-of address a priority , and thus places them in an ordered list ( see Section 4.3 ). 	231	0
6089	H	When the home agent receives a binding update that includes at least one flow identification mobility option , it first performs the operation described in section 10.3.1 of RFC 3775 , followed by the operations defined in Section 5.3.1 of this document . 	400	0
6089	H	If the FID field of the flow identification mobility option is not already present in the list of flow binding entries for this mobile node , then this is a request for a new entry . 	302	0
6089	H	If the FID field of the flow identification mobility option is already present in the list of flow binding entries for this mobile node , then this is a request to update the existing entry . 	302	0
6089	H	When the home agent receives a binding update that includes flow summary mobility options , it first performs the operation described so far in Section 5.3 . 	400	0
6098	Type	Type 22 	240	0
6098	MD	MD : Message Direction 	231	0
6098	A	This bit indicates whether the notification message MUST be acknowledged by the recipient . If the " A " bit has been set during the message , but the sender doesn't receive any acknowledgement message , then the sender will have to re-send the notification message again . 	210	0
6098	Reserved	Reserved 	500	0
6098	Home Address	Home Address 	230	0
6098	Home Agent Address	Home Agent Address 	230	0
6098	Care-of Address	The mobile node's care-of address , either the co-located care-of address or the foreign agent care-of address . 	230	0
6098	Identification	A 64-bit number , constructed by the sender , used for matching GNM with GNAM and for protecting against replay attacks of notification messages . See Sections 7.1.1 and 7.1.2 for more on the use of timestamps and nonces in this field . Support for the use of timestamps is REQUIRED , and support for nonces is OPTIONAL . 	400	0
6098	Type	Type 23 	220	0
6098	MD	MD : Message Direction 	231	0
6098	Code	A value indicating the result of the GNM . See below for a list of currently defined Code values . 	231	0
6098	Home Address	Home Address 	230	0
6098	Home Agent Address	Home Agent Address 	230	0
6098	Care-of Address	The mobile node's care-of address , either the co-located care-of address or the foreign agent care-of address . 	230	0
6098	Identification	A 64-bit number used for matching the GNM with the GNAM and for protecting against replay attacks of notification messages . See Sections 7.1.1 and 7.1.2 for more on the use of timestamps and nonces in this field . Support for the use of timestamps is REQUIRED , and support for nonces is OPTIONAL . The value is based on the Identification field from the GNM from the sender , and on the style of replay protection used in the security context between the sender and its receiver ( defined by the mobility security association between them , and the Security Parameter Index ( SPI ) value in the authorization-enabling extension ). 	400	0
6106	Length	Length 8-bit unsigned integer . The length of the option ( including the Type and Length fields ) is in units of 8 octets . The minimum value is 3 if one IPv6 address is contained in the option . Every additional RDNSS address increases the length by 2 . The Length field is used by the receiver to determine the number of IPv6 addresses in the option . 	100	0
6106	Lifetime	Lifetime 32-bit unsigned integer . The maximum time , in seconds ( relative to the time the packet is sent ), over which this RDNSS address MAY be used for name resolution . Hosts MAY send a Router Solicitation to ensure the RDNSS information is fresh before the interval expires . In order to provide fixed hosts with stable DNS service and allow mobile hosts to prefer local RDNSSes to remote RDNSSes , the value of Lifetime SHOULD be bounded as MaxRtrAdvInterval <= Lifetime <= 2*MaxRtrAdvInterval where MaxRtrAdvInterval is the Maximum RA Interval defined in [ RFC4861 ]. A value of all one bits ( 0xffffffff ) represents infinity . A value of zero means that the RDNSS address MUST no longer be used . 	120	0
6106	Length	Length 8-bit unsigned integer . The length of the option ( including the Type and Length fields ) is in units of 8 octets . The minimum value is 2 if at least one domain name is contained in the option . The Length field is set to a multiple of 8 octets to accommodate all the domain names in the field of Domain Names of DNS Search List . 	100	0
6106	Lifetime	Lifetime 32-bit unsigned integer . The maximum time , in seconds ( relative to the time the packet is sent ), over which this DNSSL domain name MAY be used for name resolution . The Lifetime value has the same semantics as with the RDNSS option . That is , Lifetime SHOULD be bounded as follows : MaxRtrAdvInterval <= Lifetime <= 2*MaxRtrAdvInterval . 	120	0
6107	LSR's Router ID	LSR's Router ID 	231	0
6107	Actions	This field specifies how the LSP that is being set up is to be treated . 	400	0
6107	Reserved	The Reserved bits MUST be set to zero on transmission and SHOULD be ignored on receipt . 	500	0
6107	TLVs	Zero , one , or more TLVs may be present . Each TLV is encoded as follows : 	400	0
6107	IPv4 Interface Address	The address assigned to the interface that the sender applies to this LSP . 	230	0
6107	Actions	Actions 	240	0
6107	Reserved	Reserved 	500	0
6107	TLVs	TLVs 	400	0
6107	Actions	Actions 	240	0
6107	Reserved	Reserved 	500	0
6107	TLVs	TLVs 	400	0
6107	IGP Instance Identifier	A 32-bit identifier assigned to each of the IGP instances within a network , such that ingress and egress LSRs have the same understanding of these numbers . This is a management configuration exercise outside the scope of this document . 	230	0
6107	Component Link Identifier	Unnumbered identifier that is assigned to this component link within the bundle [ RFC4201 ]. 	231	0
6107	IPv4 Address	The IPv4 address that is assigned to this component link within the bundle . 	230	0
6107	IPv6 Address	The IPv6 address that is assigned to this component link within the bundle . 	230	0
6126	Interval	Relative times are carried as 16-bit values specifying a number of centiseconds ( hundredths of a second ). This allows times up to roughly 11 minutes with a granularity of 10 ms , which should cover all reasonable applications of Babel . 	122	0
6126	Router-Id	A router-id is an arbitrary 8-octet value . Router-ids SHOULD be assigned in modified EUI-64 format [ ADDRARCH ]. 	231	0
6126	AE	o AE 0 : wildcard address . The value is 0 octets long . 	230	0
6126	AE	o AE 1 : IPv4 address . Compression is allowed . 4 octets or less . 	230	0
6126	AE	o AE 3 : link-local IPv6 address . The value is 8 octets long , a prefix of fe80::/64 is implied . 	230	0
6126	AE	o AE 3 : link-local IPv6 address . The value is 8 octets long , a prefix of fe80::/64 is implied . 	230	0
6126	Magic	Magic The arbitrary but carefully chosen value 42 ( decimal ); packets with a first octet different from 42 MUST be silently ignored . 	302	0
6126	Version	Version This document specifies version 2 of the Babel protocol . Packets with a second octet different from 2 MUST be silently ignored . 	220	0
6126	Body length	Body length The length in octets of the body following the packet header . 	100	0
6126	Type	Type The type of the TLV . 	231	0
6126	Length	Length The length of the body , exclusive of the Type and Length fields . If the body is longer than the expected length of a given type of TLV , any extra data MUST be silently ignored . 	100	0
6126	Type	Type Set to 0 to indicate a Pad1 TLV . 	302	0
6126	Type	Type Set to 1 to indicate a PadN TLV . 	302	0
6126	Length	Length The length of the body , exclusive of the Type and Length fields . 	100	0
6126	Type	Type Set to 2 to indicate an Acknowledgement Request TLV . 	302	0
6126	Length	Length The length of the body , exclusive of the Type and Length fields . 	100	0
6126	Reserved	Nonce An arbitrary value that will be echoed in the receiver's Acknowledgement TLV . 	231	0
6126	Nonce	Nonce An arbitrary value that will be echoed in the receiver's Acknowledgement TLV . 	231	0
6126	Interval	Interval A time interval in centiseconds after which the sender will assume that this packet has been lost . This MUST NOT be 0 . The receiver MUST send an acknowledgement before this time has elapsed ( with a margin allowing for propagation time ). 	120	0
6126	Type	Type Set to 3 to indicate an Acknowledgement TLV . 	302	0
6126	Length	Length The length of the body , exclusive of the Type and Length fields . 	100	0
6126	Nonce	Nonce Set to the Nonce value of the Acknowledgement Request that prompted this Acknowledgement . 	231	0
6126	Type	Type Set to 4 to indicate a Hello TLV . 	302	0
6126	Length	Length The length of the body , exclusive of the Type and Length fields . 	100	0
6126	Reserved	Seqno The value of the sending node's Hello seqno for this interface . 	230	0
6126	Seqno	Seqno The value of the sending node's Hello seqno for this interface . 	230	0
6126	Interval	Interval An upper bound , expressed in centiseconds , on the time after which the sending node will send a new Hello TLV . This MUST NOT be 0 . 	121	0
6126	Type	Type Set to 5 to indicate an IHU TLV . 	302	0
6126	Length	Length The length of the body , exclusive of the Type and Length fields . 	100	0
6126	AE	AE The encoding of the Address field . This should be 1 or 3 in most cases . As an optimisation , it MAY be 0 if the TLV is sent to a unicast address , if the association is over a point-to-point link , or when bidirectional reachability is ascertained by means outside of the Babel protocol . 	210	0
6126	Reserved	Rxcost The rxcost according to the sending node of the interface whose address is specified in the Address field . The value FFFF hexadecimal ( infinity ) indicates that this interface is unreachable . 	230	0
6126	Rxcost	Rxcost The rxcost according to the sending node of the interface whose address is specified in the Address field . The value FFFF hexadecimal ( infinity ) indicates that this interface is unreachable . 	230	0
6126	Interval	Interval An upper bound , expressed in centiseconds , on the time after which the sending node will send a new IHU; this MUST NOT be 0 . The receiving node will use this value in order to compute a hold time for this symmetric association . 	121	0
6126	Router-Id	A Router-Id TLV establishes a router-id that is implied by subsequent Update TLVs . 	231	0
6126	Type	Type Set to 6 to indicate a Router-Id TLV . 	302	0
6126	Length	Length The length of the body , exclusive of the Type and Length fields . 	100	0
6126	Reserved	Router-Id The router-id for routes advertised in subsequent Update TLVs 	230	0
6126	Type	Type Set to 7 to indicate a Next Hop TLV . 	302	0
6126	Length	Length The length of the body , exclusive of the Type and Length fields . 	100	0
6126	AE	AE The encoding of the Address field . This SHOULD be 1 or 3 and MUST NOT be 0 . 	303	0
6126	Reserved	Next hop The next-hop address advertised by subsequent Update TLVs , for this address family . 	230	0
6126	Type	Type Set to 8 to indicate an Update TLV . 	302	0
6126	Length	Length The length of the body , exclusive of the Type and Length fields . 	100	0
6126	AE	AE The encoding of the Prefix field . 	400	0
6126	Flags	Flags The individual bits of this field specify special handling of this TLV ( see below ). Every node MUST be able to interpret the flags with values 80 and 40 hexadecimal; unknown flags MUST be silently ignored . 	500	0
6126	Plen	Plen The length of the advertised prefix . 	100	0
6126	Omitted	Omitted The number of octets that have been omitted at the beginning of the advertised prefix and that should be taken from a preceding Update TLV with the flag with value 80 hexadecimal set . 	231	0
6126	Interval	Interval An upper bound , expressed in centiseconds , on the time after which the sending node will send a new update for this prefix . This MUST NOT be 0 and SHOULD NOT be less than 10 . The receiving node will use this value to compute a hold time for this routing table entry . The value FFFF hexadecimal ( infinity ) expresses that this announcement will not be repeated unless a request is received ( Section 3.8.2.3 ). 	121	0
6126	Seqno	Seqno The originator's sequence number for this update . 	230	0
6126	Metric	Metric The sender's metric for this route . The value FFFF hexadecimal ( infinity ) means that this is a route retraction . 	231	0
6126	Type	Type Set to 9 to indicate a Route Request TLV . 	302	0
6126	Length	Length The length of the body , exclusive of the Type and Length fields . 	100	0
6126	AE	AE The encoding of the Prefix field . The value 0 specifies that this is a request for a full routing table dump ( a wildcard request ). 	201	0
6126	Plen	Plen The length of the requested prefix . 	100	0
6126	Type	Type Set to 10 to indicate a Seqno Request message . 	302	0
6126	Length	Length The length of the body , exclusive of the Type and Length fields . 	100	0
6126	AE	AE The encoding of the Prefix field . This MUST NOT be 0 . 	500	0
6126	Plen	Plen The length of the requested prefix . 	100	0
6126	Seqno	Seqno The sequence number that is being requested . 	200	0
6130	LOCAL_IF	Note : This information is recorded here for clarity and for use elsewhere in this specification . The information required by IANA is included in the descriptions of the Address Block TLVs allocated in Section 18.4 . 	400	0
6130	LINK_STATUS	Note : This information is recorded here for clarity and for use elsewhere in this specification . The information required by IANA is included in the descriptions of the Address Block TLVs allocated in Section 18.4 . 	400	0
6156	Type	Type : the type of the REQUESTED-ADDRESS-FAMILY attribute is 0x0017 . As specified in [ RFC5389 ], attributes with values between 0x0000 and 0x7FFF are comprehension-required , which means that the client or server cannot successfully process the message unless it understands the attribute . 	240	0
6156	Length	Length : this 16-bit field contains the length of the attribute in bytes . The length of this attribute is 4 bytes . 	100	0
6156	Family	Family : there are two values defined for this field and specified in [ RFC5389 ], Section 15.1 : 0x01 for IPv4 addresses and 0x02 for IPv6 addresses . 	240	0
6156	Reserved	Reserved : at this point , the 24 bits in the Reserved field MUST be set to zero by the client and MUST be ignored by the server . 	500	0
6165	Length	o Length : Total number of bytes contained in the value field , including the length of the sub-TLVs carried in this TLV . 	100	0
6165	R	o Topology Identifier : MT ID is a 12-bit field containing the MT ID of the topology being announced . This field when set to zero implies that it is being used to carry base topology information . 	400	0
6165	Topology Identifier	o Topology Identifier : MT ID is a 12-bit field containing the MT ID of the topology being announced . This field when set to zero implies that it is being used to carry base topology information . 	400	0
6165	Length	o Length : Total number of bytes contained in the value field given by 5 + 6*n bytes . 	100	0
6165	Confidence	o Confidence : This carries an 8-bit quantity indicating the confidence level in the MAC addresses being transported . Whether this field is used , and its semantics if used , are further defined by the specific protocol using Layer-2 IS-IS . If not used , it MUST be set to zero on transmission and be ignored on receipt . 	400	0
6165	RESV	o VLAN-ID : This carries a 12-bit VLAN identifier that is valid for all subsequent MAC addresses in this TLV , or the value zero if no VLAN is specified . 	230	0
6184	F	F : 1 bit forbidden_zero_bit . The H.264 specification declares a value of 1 as a syntax violation . 	302	0
6184	NRI	NRI : 2 bits nal_ref_idc . A value of 00 indicates that the content of the NAL unit is not used to reconstruct reference pictures for inter picture prediction . Such NAL units can be discarded without risking the integrity of the reference pictures . Values greater than 00 indicate that the decoding of the NAL unit is required to maintain the integrity of the reference pictures . 	210	0
6184	Type	Type : 5 bits nal_unit_type . This component specifies the NAL unit payload type as defined in Table 7-1 of [ 1 ] and later within this memo . For a reference of all currently defined NAL unit types and their semantics , please refer to Section 7.4.1 in [ 1 ]. 	231	0
6184	DON	decoding order number ( DON ): A field in the payload structure or a derived variable indicating NAL unit decoding order . Values of DON are in the range of 0 to 65535 , inclusive . After reaching the maximum value , the value of DON wraps around to 0 . 	231	0
6184	DON	DON : Decoding Order Number DONB : Decoding Order Number Base DOND : Decoding Order Number Difference FEC : Forward Error Correction FU : Fragmentation Unit IDR : Instantaneous Decoding Refresh IEC : International Electrotechnical Commission ISO : International Organization for Standardization ITU-T : International Telecommunication Union , Telecommunication Standardization Sector MANE : Media-Aware Network Element MTAP : Multi-Time Aggregation Packet 	240	0
6184	M	Marker bit ( M ): 1 bit Set for the very last packet of the access unit indicated by the RTP timestamp , in line with the normal use of the M bit in video 	210	0
6184	PT	Payload type ( PT ): 7 bits The assignment of an RTP payload type for this new packet format is outside the scope of this document and will not be specified here . The assignment of a payload type has to be performed either through the profile used or in a dynamic way . 	231	0
6184	F	F : 1 bit forbidden_zero_bit . A value of 0 indicates that the NAL unit type octet and payload should not contain bit errors or other syntax violations . A value of 1 indicates that the NAL unit type octet and payload may contain bit errors or other syntax violations . 	210	0
6184	NRI	NRI : 2 bits nal_ref_idc . The semantics of value 00 and a non-zero value remain unchanged from the H.264 specification . In other words , a value of 00 indicates that the content of the NAL unit is not used to reconstruct reference pictures for inter picture prediction . Such NAL units can be discarded without risking the integrity of the reference pictures . Values greater than 00 indicate that the decoding of the NAL unit is required to maintain the integrity of the reference pictures . 	210	0
6184	DON	In the interleaved packetization mode , the transmission order of NAL units is allowed to differ from the decoding order of the NAL units . Decoding order number ( DON ) is a field in the payload structure or a derived variable that indicates the NAL unit decoding order . Rationale and examples of use cases for transmission out of decoding order and for the use of DON are given in Section 13 . 	231	0
6184	DON	If ( DON(m ) < DON(n ) and DON(n ) - DON(m ) < 32768 ), don_diff(m,n ) = DON(n ) - DON(m ) 	210	0
6184	DON	If ( DON(m ) < DON(n ) and DON(n ) - DON(m ) < 32768 ), don_diff(m,n ) = DON(n ) - DON(m ) 	210	0
6184	DON	If ( DON(m ) > DON(n ) and DON(m ) - DON(n ) >= 32768 ), don_diff(m,n ) = 65536 - DON(m ) + DON(n ) 	210	0
6184	DON	If ( DON(m ) > DON(n ) and DON(m ) - DON(n ) >= 32768 ), don_diff(m,n ) = 65536 - DON(m ) + DON(n ) 	210	0
6184	DON	If ( DON(m ) < DON(n ) and DON(n ) - DON(m ) >= 32768 ), don_diff(m,n ) = - ( DON(m ) + 65536 - DON(n )) 	210	0
6184	DON	If ( DON(m ) < DON(n ) and DON(n ) - DON(m ) >= 32768 ), don_diff(m,n ) = - ( DON(m ) + 65536 - DON(n )) 	210	0
6184	DON	If ( DON(m ) > DON(n ) and DON(m ) - DON(n ) < 32768 ), don_diff(m,n ) = - ( DON(m ) - DON(n )) 	210	0
6184	DON	If ( DON(m ) > DON(n ) and DON(m ) - DON(n ) < 32768 ), don_diff(m,n ) = - ( DON(m ) - DON(n )) 	210	0
6184	Type	Type : 5 bits The NAL unit payload type as defined in Table 7-1 of [ 1 ]. 	231	0
6184	DON	If ( DON(m ) < DON(n ) and DON(n ) - DON(m ) < 32768 ), AbsDON(n ) = AbsDON(m ) + DON(n ) - DON(m ) 	210	0
6184	DON	If ( DON(m ) < DON(n ) and DON(n ) - DON(m ) < 32768 ), AbsDON(n ) = AbsDON(m ) + DON(n ) - DON(m ) 	210	0
6184	DON	If ( DON(m ) > DON(n ) and DON(m ) - DON(n ) >= 32768 ), AbsDON(n ) = AbsDON(m ) + 65536 - DON(m ) + DON(n ) 	302	0
6184	DON	If ( DON(m ) > DON(n ) and DON(m ) - DON(n ) >= 32768 ), AbsDON(n ) = AbsDON(m ) + 65536 - DON(m ) + DON(n ) 	302	0
6184	DON	If ( DON(m ) < DON(n ) and DON(n ) - DON(m ) >= 32768 ), AbsDON(n ) = AbsDON(m ) - ( DON(m ) + 65536 - DON(n )) 	210	0
6184	DON	If ( DON(m ) < DON(n ) and DON(n ) - DON(m ) >= 32768 ), AbsDON(n ) = AbsDON(m ) - ( DON(m ) + 65536 - DON(n )) 	210	0
6184	DON	If ( DON(m ) > DON(n ) and DON(m ) - DON(n ) < 32768 ), AbsDON(n ) = AbsDON(m ) - ( DON(m ) - DON(n )) 	210	0
6184	DON	If ( DON(m ) > DON(n ) and DON(m ) - DON(n ) < 32768 ), AbsDON(n ) = AbsDON(m ) - ( DON(m ) - DON(n )) 	210	0
6190	F	F : 1 bit forbidden_zero_bit . H.264/AVC declares a value of 1 as a syntax violation . 	302	0
6190	NRI	NRI : 2 bits nal_ref_idc . A value of " 00 " ( in binary form ) indicates that the content of the NAL unit is not used to reconstruct reference pictures for future prediction . Such NAL units can be discarded without risking the integrity of the reference pictures in the same layer . A value greater than " 00 " indicates that the decoding of the NAL unit is required to maintain the integrity of reference pictures in the same layer or that the NAL unit contains parameter sets . 	210	0
6190	Type	Type : 5 bits nal_unit_type . This component specifies the NAL unit type as defined in Table 7-1 of [ H.264 ], and later within this memo . For a reference of all currently defined NAL unit types and their semantics , please refer to Section 7.4.1 in [ H.264 ]. 	231	0
6190	R	R : 1 bit reserved_one_bit . Reserved bit for future extension . R must be equal to 1 . The value of R must be ignored by decoders . 	500	0
6190	I	I : 1 bit idr_flag . This component specifies whether the layer representation is an instantaneous decoding refresh ( IDR ) layer representation ( when equal to 1 ) or not ( when equal to 0 ). 	210	0
6190	PRID	PRID : 6 bits priority_id . This flag specifies a priority identifier for the NAL unit . A lower value of PRID indicates a higher priority . 	231	0
6190	N	N : 1 bit no_inter_layer_pred_flag . This flag specifies , when present in a coded slice NAL unit , whether inter-layer prediction may be used for decoding the coded slice ( when equal to 1 ) or not ( when equal to 0 ). 	210	0
6190	DID	DID : 3 bits dependency_id . This component indicates the inter-layer coding dependency level of a layer representation . At any access unit , a layer representation with a given dependency_id may be used for inter-layer prediction for coding of a layer representation with a higher dependency_id , while a layer representation with a given dependency_id shall not be used for inter-layer prediction for coding of a layer representation with a lower dependency_id . 	231	0
6190	QID	QID : 4 bits quality_id . This component indicates the quality level of an MGS layer representation . At any access unit and for identical dependency_id values , a layer representation with quality_id equal to ql uses a layer representation with quality_id equal to ql-1 for inter-layer prediction . 	231	0
6190	TID	TID : 3 bits temporal_id . This component indicates the temporal level of a layer representation . The temporal_id is associated with the frame rate , with lower values of _temporal_id corresponding to lower frame rates . A layer representation at a given temporal_id typically depends on layer representations with lower temporal_id values , but it never depends on layer representations with higher temporal_id values . 	231	0
6190	U	U : 1 bit use_ref_base_pic_flag . A value of 1 indicates that only reference base pictures are used during the inter prediction process . A value of 0 indicates that the reference base pictures are not used during the inter prediction process . 	210	0
6190	D	D : 1 bit discardable_flag . A value of 1 indicates that the current NAL unit is not used for decoding NAL units with values of dependency_id higher than the one of the current NAL unit , in the current and all subsequent access units . Such NAL units can be discarded without risking the integrity of layers with higher dependency_id values . discardable_flag equal to 0 indicates that the decoding of the NAL unit is required to maintain the integrity of layers with higher dependency_id . 	210	0
6190	O	O : 1 bit output_flag : Affects the decoded picture output process as defined in Annex C of [ H.264 ]. 	231	0
6190	RR	RR : 2 bits reserved_three_2bits . Reserved bits for future extension . RR MUST be equal to " 11 " ( in binary form ). The value of RR must be ignored by decoders . 	500	0
6190	P	o If the X bit is equal to 1 , the bits A , P , and C are specified as below . Otherwise , the bits A , P , and C are unspecified , and receivers MUST ignore the values of these bits . The X bit SHOULD be identical for all the PACSI NAL units in all the RTP sessions carrying the same SVC bitstream . 	210	0
6190	C	C : configuration for sending and receiving streams P : properties of the stream to be sent R : receiver capabilities S : out-of-band parameter sets O : operation point selection X : MUST NOT be present -: not usable , when present SHOULD be ignored 	240	0
6205	Grid	The value for Grid is set to 1 for the ITU-T DWDM grid as defined in [ G.694.1 ]. 	302	0
6205	C.S .	( 2 ) C.S . ( channel spacing ): 4 bits 	400	0
6205	Identifier	The Identifier field in lambda label format is used to distinguish different lasers ( in one node ) when they can transmit the same frequency lambda . The Identifier field is a per-node assigned and scoped value . This field MAY change on a per-hop basis . In all cases but one , a node MAY select any value , including zero ( 0 ), for this field . Once selected , the value MUST NOT change until the LSP is torn down , and the value MUST be used in all LSP-related messages , e.g ., in Resv messages and label Record Route Object ( RRO ) subobjects . The sole special case occurs when this label format is used in a label Explicit Route Object ( ERO ) subobject . In this case , the special value of zero ( 0 ) means that the referenced node MAY assign any Identifier field value , including zero ( 0 ), when establishing the corresponding LSP . When a non-zero value is assigned to the Identifier field in a label ERO subobject , the referenced node MUST use the assigned value for the Identifier field in the corresponding LSP-related messages . 	231	0
6205	n	n is a two's-complement integer to take either a positive , negative , or zero value . This value is used to compute the frequency as shown above . 	302	0
6205	Grid	The value for Grid is set to 2 for the ITU-T CWDM grid as defined in [ G.694.2 ]. 	302	0
6205	C.S .	( 2 ) C.S . ( channel spacing ): 4 bits 	400	0
6205	Identifier	The Identifier field in lambda label format is used to distinguish different lasers ( in one node ) when they can transmit the same frequency lambda . The Identifier field is a per-node assigned and scoped value . This field MAY change on a per-hop basis . In all cases but one , a node MAY select any value , including zero ( 0 ), for this field . Once selected , the value MUST NOT change until the LSP 	231	0
6205	n	n is a two's-complement integer . This value is used to compute the wavelength as shown above . 	200	0
6205	n	n = 5 : 	302	0
6205	n	n = - 7 : 	302	0
6218	Length	Length 	100	0
6218	Vendor ID	Vendor ID 	202	0
6218	Sub-length	Length of the sub-attribute including the sub-type and sub-length fields 	100	0
6218	Length	Length 	100	0
6218	Vendor ID	Vendor ID 	202	0
6218	Sub-length	Length of the sub-attribute including the sub-type and sub-length fields 	100	0
6218	Enc Type	The Enc Type field indicates the method used to encrypt the contents of the Data field . This document defines only one value ( decimal ) for this field : 	231	0
6218	App ID	The App ID field is 4 octets in length and identifies the type of application for which the key material is to be used . This allows for multiple keys for different purposes to be present in the same message . This document defines two values for the App ID : 	231	0
6218	KEK ID	The KEK ID field is 16 octets in length . The combination of the KEK ID and the client and server IP addresses together uniquely identify a key shared between the RADIUS client and server . As a result , the KEK ID need not be globally unique . The KEK ID MUST refer to an encryption key of a type and length appropriate for use with the algorithm specified by the Enc Type field ( see above ). This key is used to protect the contents of the Data field ( below ). The KEK ID is a constant that is configured through an out-of-band mechanism . The same value is configured on both the RADIUS client and server . If no KEK ID is configured , then the field is set to 0 . If only a single KEK is configured for use between a given RADIUS client and server , then 0 can be used as the default value . 	231	0
6218	KM ID	The KM ID field is 16 octets in length and contains an identifier for the contents of the Data field . The KM ID MAY be used by communicating parties to identify the material being transmitted . The combination of App ID and KM ID MUST uniquely identify the keying material between the parties utilizing it . The KM ID is assumed to be known to the parties that derived the keying material . If the KM ID is not used , it is set to 0 . The KM ID for the EAP Master Session Key ( MSK ) application is set to 0 . Another application that uses the KM ID field can be defined in the future . 	231	0
6218	Lifetime	The Lifetime field is an integer [ RFC2865 ] representing the period of time ( in seconds ) for which the keying material is valid . 	120	0
6218	IV	The length of the IV field depends upon the value of the Enc Type field , but is fixed for any given value thereof . When the value of the Enc Type field is 0 ( decimal ), the IV field MUST be 8 octets in length ( as illustrated above ), and the value of the IV field MUST be as specified in [ RFC3394 ]. If the IV for Enc Type 0 does not match [ RFC3394 ], then the receiver MUST NOT use the key material from this attribute . 	400	0
6218	Keying Material Data	The Keying Material Data field is of variable length and contains the actual encrypted keying material . 	400	0
6218	Length	Length 	100	0
6218	Vendor ID	Vendor ID 	202	0
6218	Sub-length	Length of the sub-attribute including the sub-type and sub-length fields 	100	0
6218	Length	Length 	100	0
6218	Vendor ID	Vendor ID 	202	0
6218	Sub-length	Length of the sub-attribute including the sub-type and sub-length fields 	100	0
6218	MAC Type	The MAC Type field specifies the algorithm used to create the value in the MAC field . This document defines six values for the MAC Type field : 	231	0
6218	MAC Key ID	The MAC Key ID field is 16 octets in length and contains an identifier for the key . The combination of the MAC Key ID and the client and server IP addresses together uniquely identify a key shared between the RADIUS client and server . As a result , the MAC Key ID need not be globally unique . The MAC Key ID MUST refer to a key of a type and length appropriate for use with the algorithm specified by the MAC Type field ( see above ). 	231	0
6218	MAC	Both the length and value of the MAC field depend upon the algorithm specified by the value of the MAC Type field . If the algorithm specified is HMAC-SHA-1 , HMAC-SHA-256 , or HMAC-SHA-512 , the MAC field MUST be 20 , 32 , or 64 octets in length , respectively . If the algorithm specified is CMAC-AES-128 , CMAC-AES-192 , or CMAC-AES-256 , the MAC field SHOULD be 64 octets in length . The derivation of the MAC field value for all the algorithms specified in this document is identical , except for the algorithm used . There are differences , however , depending upon whether the MAC is being computed for a request message or a response . These differences are detailed below , with the free variable HASH-ALG representing the actual algorithm used . 	400	0
6225	OptLen	OptLen : Option Length . For version 1 , the option length is 16 . 	100	0
6225	LatUnc	LatUnc : 6 bits . When the Ver field = 1 , this field represents latitude uncertainty . The contents of this field are undefined for other values of the Ver field . 	231	0
6225	Latitude	Latitude : A 34-bit fixed-point value consisting of 9 bits of integer and 25 bits of fraction , interpreted as described in Section 2.3 . 	110	0
6225	LongUnc	LongUnc : 6 bits . When the Ver field = 1 , this field represents longitude uncertainty . The contents of this field are undefined for other values of the Ver field . 	231	0
6225	Longitude	Longitude : A 34-bit fixed-point value consisting of 9 bits of integer and 25 bits of fraction , interpreted as described in Section 2.3 . 	110	0
6225	AType	AType : 4 bits . Altitude Type , defined in Section 2.4 . 	200	0
6225	AltUnc	AltUnc : 6 bits . When the Ver field = 1 , this field represents altitude uncertainty . The contents of this field are undefined for other values of the Ver field . 	231	0
6225	Altitude	Altitude : A 30-bit value defined by the AType field , described in Section 2.4 . 	110	0
6225	Ver	Ver : The Ver field is 2 bits , providing for four potential versions . This specification defines the behavior of version 1 . The Ver field is always located at the same offset from the beginning of the option , regardless of the version in use . DHCPv6 clients implementing this specification MUST support receiving version 1 responses . DHCPv6 servers implementing this specification MUST send version 1 responses . 	220	0
6225	Res	Res : 3 bits . The Res field is reserved . These bits have been used by [ IEEE-802.11y ], but are not defined within this specification . 	231	0
6225	Datum	Datum : 3 bits . The Map Datum used for the coordinates given in this option . 	231	0
6225	Length	Length : 8 bits . The length of the option , in octets . The option length is 16 . 	100	0
6225	LaRes	LaRes : 6 bits . This field represents latitude resolution . 	231	0
6225	Latitude	Latitude : A 34-bit fixed-point value consisting of 9 bits of signed integer and 25 bits of fraction , interpreted as described in Section 2.3 . 	200	0
6225	LoRes	LoRes : 6 bits . This field represents longitude resolution . 	231	0
6225	Longitude	Longitude : A 34-bit fixed-point value consisting of 9 bits of signed integer and 25 bits of fraction , interpreted as described in Section 2.3 . 	110	0
6225	AType	AType : 4 bits . Altitude Type , defined in Section 2.4 . 	200	0
6225	AltRes	AltRes : 6 bits . This field represents altitude resolution . 	231	0
6225	Altitude	Altitude : A 30-bit value defined by the AType field , described in Section 2.4 . 	110	0
6225	Res	Res : 5 bits . The Res field is reserved . These bits have been used by IEEE 802.11y [ IEEE-802.11y ], but are not defined within this specification . 	231	0
6225	Datum	Datum : 3 bits . The Map Datum used for the coordinates given in this option . 	231	0
6225	Length	Length : 8 bits . The length of the option , in octets . For version 1 , the option length is 16 . 	100	0
6225	LatUnc	LatUnc : 6 bits . When the Ver field = 1 , this field represents latitude uncertainty . The contents of this field are undefined for other values of the Ver field . 	231	0
6225	Latitude	Latitude : A 34-bit fixed-point value consisting of 9 bits of integer and 25 bits of fraction , interpreted as described in Section 2.3 . 	110	0
6225	LongUnc	LongUnc : 6 bits . When the Ver field = 1 , this field represents longitude uncertainty . The contents of this field are undefined for other values of the Ver field . 	231	0
6225	Longitude	Longitude : A 34-bit fixed-point value consisting of 9 bits of integer and 25 bits of fraction , interpreted as described in Section 2.3 . 	110	0
6225	AType	AType : 4 bits . Altitude Type , defined in Section 2.4 . 	200	0
6225	AltUnc	AltUnc : 6 bits . When the Ver field = 1 , this field represents altitude uncertainty . The contents of this field are undefined for other values of the Ver field . 	231	0
6225	Altitude	Altitude : A 30-bit value defined by the AType field , described in Section 2.4 . 	110	0
6225	Ver	Ver : The Ver field is 2 bits , providing for four potential versions . This specification defines the behavior of version 1 . The Ver field is always located at the same offset from the beginning of the option , regardless of the version in use . 	220	0
6225	Res	Res : 3 bits . The Res field is reserved . These bits have been used by [ IEEE-802.11y ], but are not defined within this specification . 	231	0
6225	Datum	Datum : 3 bits . The Map Datum used for the coordinates given in this option . 	231	0
6225	Latitude	The latitude and longitude values in this specification are encoded as 34-bit , two's complement , fixed-point values with 9 integer bits and 25 fractional bits . The exact meaning of these values is determined by the datum; the description in this section applies to the datums defined in this document . This document uses the same definition for all datums it specifies . 	231	0
6225	Latitude	In the DHCPv4 GeoConf Option 123 , the LaRes value encodes the number of high-order latitude bits that MUST be considered valid . Any bits entered to the right of this limit MUST NOT be considered valid and might be purposely false , or zeroed by the sender . The examples in Appendix B illustrate that a smaller value in the resolution field increases the area within which the device is located . A value of 2 in the LaRes field indicates a precision of no greater than 1/6th that of the globe ( see the first example of Appendix B ). A value of 34 in the LaRes field indicates a precision of about 3.11 mm in latitude at the equator . 	201	0
6225	Latitude	In the DHCPv6 GeoLoc Option 63 and the DHCPv4 GeoLoc Option 144 , the Latitude and Longitude Uncertainty fields ( LatUnc and LongUnc ) quantify the amount of uncertainty in each of the latitude and longitude values , respectively . A value of 0 is reserved to indicate that the uncertainty is unknown; values greater than 34 are reserved . 	231	0
6225	Altitude	How the altitude value is interpreted depends on the Altitude Type ( AType ) value and the selected datum . Three Altitude Type values are defined in this document : unknown ( 0 ), meters ( 1 ), and floors ( 2 ). 	240	0
6225	Datum	The Datum field determines how coordinates are organized and related to the real world . Three datums are defined in this document , based on the definitions in [ OGP.Geodesy ]: 	231	0
6225	Datum	Datum : An integer , refers to the value used in the DHCPv4 GeoConf and the DHCPv4 and DHCPv6 GeoLoc options described in this document . Value 0 is Reserved . Values 1 - 3 are assigned . Values 4 - 7 are Unassigned [ RFC5226 ]. 	302	0
6225	Altitude	In this example , we are inside a structure; therefore , we will assume an altitude value of 103 to indicate the floor we are on . The Altitude Type value is 2 , indicating floors . The AltRes field would indicate that all bits in the Altitude field are true , as we want to accurately represent the floor of the structure where we are located . 	201	0
6225	LongUnc	Similarly , longitude uncertainty ( LongUnc ) is given by the formula : 	302	0
6225	AltUnc	Altitude uncertainty ( AltUnc ) uses the formula from Section 2.4.5 : 	110	0
6245	Type	Type 	240	0
6245	Sub-Type	Sub-Type 	231	0
6245	Length	Length 	100	0
6245	Key Identifier	This is a four-octet value assigned during registration and inserted in every GRE packet of the user traffic . 	231	0
6253	Type	Type 768 Length Length in octets , excluding Type , Length , and Padding . Cert group Group ID grouping multiple related CERT parameters . Cert count Total count of certificates that are sent , possibly in several consecutive HIP control packets . Cert ID The sequence number for this certificate . Cert Type Indicates the type of the certificate . Padding Any Padding , if necessary , to make the TLV a multiple of 8 bytes . 	100	0
6253	Certificate	Certificate : Data : Version : 3 ( 0x2 ) Serial Number : 0 ( 0x0 ) Signature Algorithm : sha1WithRSAEncryption Issuer : CN=Example issuing host , DC=example , DC=com Validity Not Before : Mar 11 09:01:39 2011 GMT Not After : Mar 21 09:01:39 2011 GMT Subject : CN=Example subject host , DC=example , DC=com Subject Public Key Info : Public Key Algorithm : rsaEncryption RSA Public Key : ( 1024 bit ) Modulus ( 1024 bit ): 00:c0:db:38:50:8e:63:ed:96:ea:c6:c4:ec:a3:36 : 62:e2:28:e9:74:9c:f5:2f:cb:58:0e:52:54:60:b5 : fa:98:87:0d:22:ab:d8:6a:61:74:a9:ee:0b:ae:cd : 18:6f:05:ab:69:66:42:46:00:a2:c0:0c:3a:28:67 : 09:cc:52:27:da:79:3e:67:d7:d8:d0:7c:f1:a1:26 : fa:38:8f:73:f5:b0:20:c6:f2:0b:7d:77:43:aa:c7 : 98:91:7e:1e:04:31:0d:ca:94:55:20:c4:4f:ba:b1 : df:d4:61:9d:dd:b9:b5:47:94:6c:06:91:69:30:42 : 9c:0a:8b:e3:00:ce:49:ab:e3 Exponent : 65537 ( 0x10001 ) X509v3 extensions : X509v3 Issuer Alternative Name : IP Address:2001:13:8d83:41c5:dc9f:38ed:e742:7281 X509v3 Subject Alternative Name : IP Address:2001:1c:6e02:d3e0:9b90:8417:673e:99db Signature Algorithm : sha1WithRSAEncryption 83:68:b4:38:63:a6:ae:57:68:e2:4d:73:5d:8f:11:e4:ba:30 : a0:19:ca:86:22:e9:6b:e9:36:96:af:95:bd:e8:02:b9:72:2f : 30:a2:62:ac:b2:fa:3d:25:c5:24:fd:8d:32:aa:01:4f:a5:8a : f5:06:52:56:0a:86:55:39:2b:ee:7a:7b:46:14:d7:5d:15:82 : 4d:74:06:ca:b7:8c:54:c1:6b:33:7f:77:82:d8:95:e1:05:ca : e2:0d:22:1d:86:fc:1c:c4:a4:cf:c6:bc:ab:ec:b8:2a:1e:4b : 04:7e:49:9c:8f:9d:98:58:9c:63:c5:97:b5:41:94:f7:ef:93 : 57:29 	240	0
6262	T	o T ( 1 bit ): Reserved . MUST always be set to 0 . Receiver MAY discard packet if the ' T ' bit is not equal to 0 . 	500	0
6262	CR	o CR ( 3 bits ): Coding rate index - top enchantment layer available . The CR value 7 ( NO_DATA ) indicates that there is no speech data ( and thus no speech TOC ) in the payload . This MAY be used to transmit redundancy data only . 	231	0
6262	BR	o BR ( 3 bits ): Base rate index - base layer bitrate . Speech payload can be scaled to any rate index between BR and CR . Packets with BR = 6 or BR > CR MUST be discarded . Redundancy data is also considered to have a base rate of BR . 	231	0
6262	D	o D ( 1 bit ): Reserved . MUST always be set to 1 . Receiver MAY discard packet if the ' D ' bit is zero . 	210	0
6262	A	o A ( 1 bit ): Byte alignment . The value of 1 specifies that padding bits were added to enable each compressed frame ( 3.5 ) to start with the byte ( 8-bit ) boundary . The value of 0 specifies unaligned frames . Note that the speech payload is always padded to the byte boundary independently on an ' A ' bit value . 	210	0
6262	GR	o GR ( 2 bits ): Number of frames in packet ( grouping size ). Actual grouping size is GR + 1; thus , the maximum grouping supported is 4 . 	200	0
6262	R	o R ( 1 bit ): Redundancy presence . Value of 1 indicates redundancy payload presence . 	210	0
6262	E	o E ( 1 bit ): Frame existence indicator . The value of 0 indicates speech data is not present for the corresponding frame . The IP-MR encoder sets the ' E ' flag to 0 for the periods of silence in DTX mode . Applications MUST set this bit to 0 if the frame is known to be damaged . 	210	0
6262	E	o E ( 1 bit ): Redundancy frame existence indicator . The value of 0 indicates redundancy data is not present for corresponding frame . 	210	0
6262	}	pLayerBits[0 ] = 0; for ( i = 0; i < SENSE_CLASSES; i ++) { pLayerBits[0 ] += pSenseBits[i]; } 	210	0
6274	Version	This is a 4-bit field that indicates the version of the Internet Protocol ( IP ), and thus the syntax of the packet . For IPv4 , this field must be 4 . 	220	0
6274	IHL	The IHL ( Internet Header Length ) field indicates the length of the Internet header in 32-bit words ( 4 bytes ). The following paragraphs describe a number of sanity checks to be performed on the IHL field , such that possible packet-of-death vulnerabilities are avoided . 	100	0
6274	Type of Service	3.3 . Type of Service ( TOS ) 	240	0
6274	Total Length	The Total Length field is the length of the datagram , measured in bytes , including both the IP header and the IP payload . Being a 16-bit field , it allows for datagrams of up to 65535 bytes . RFC 791 [ RFC0791 ] states that all hosts should be prepared to receive datagrams of up to 576 bytes ( whether they arrive as a whole , or in fragments ). However , most modern implementations can reassemble datagrams of at least 9 Kbytes . 	100	0
6274	Identification	The Identification field is set by the sending host to aid in the reassembly of fragmented datagrams . At any time , it needs to be unique for each set of { Source Address , Destination Address , Protocol }. 	201	0
6274	Flags	The IP header contains 3 control bits , two of which are currently used for the fragmentation and reassembly function . 	231	0
6274	Fragment Offset	The Fragment Offset is used for the fragmentation and reassembly of IP datagrams . It indicates where in the original datagram payload the payload of the fragment belongs , and is measured in units of eight bytes . As a consequence , all fragments ( except the last one ), have to be aligned on an 8-byte boundary . Therefore , if a packet has the MF flag set , the following check should be enforced : 	110	0
6274	Total Length	If the packet does not pass this check , it should be dropped , and this event should be logged ( e.g ., a counter could be incremented reflecting the packet drop ). 	302	0
6274	Total Length	where IHL_FF is the IHL field of the first fragment ( the one with a Fragment Offset of 0 ). 	301	0
6274	Time to Live	The Time to Live ( TTL ) field has two functions : to bound the lifetime of the upper-layer packets ( e.g ., TCP segments ) and to prevent packets from looping indefinitely in the network . 	120	0
6274	Protocol	The Protocol field indicates the protocol encapsulated in the Internet datagram . The Protocol field may not only contain a value corresponding to a protocol implemented by the system processing the packet , but also a value corresponding to a protocol not implemented , or even a value not yet assigned by the IANA [ IANA_PROT_NUM ]. 	231	0
6274	Header Checksum	The Header Checksum field is an error-detection mechanism meant to detect errors in the IP header . While in principle there should not be security implications arising from this field , it should be noted that due to non-RFC-compliant implementations , the Header Checksum might be exploited to detect firewalls and/or evade NIDSs . 	301	0
6274	Source Address	The Source Address of an IP datagram identifies the node from which the packet originated . 	230	0
6274	Destination Address	The Destination Address of an IP datagram identifies the destination host to which the packet is meant to be delivered . 	230	0
6275	H	In some scenarios , such as simultaneous mobility , where both correspondent host and mobile host move at the same time , or in the case where the correspondent node reboots and loses data , route optimization may not complete , or relevant data in the binding cache might be lost . 	301	0
6275	Payload Proto	8-bit selector . Identifies the type of header immediately following the Mobility Header . Uses the same values as the IPv6 Next Header field [ 6 ]. 	231	0
6275	Header Len	8-bit unsigned integer , representing the length of the Mobility Header in units of 8 octets , excluding the first 8 octets . 	100	0
6275	MH Type	8-bit selector . Identifies the particular mobility message in question . Current values are specified in Section 6.1.2 and onward . An unrecognized MH Type field causes an error indication to be sent . 	230	0
6275	Reserved	8-bit field reserved for future use . The value MUST be initialized to zero by the sender , and MUST be ignored by the receiver . 	500	0
6275	Checksum	16-bit unsigned integer . This field contains the checksum of the Mobility Header . The checksum is calculated from the octet string consisting of a " pseudo-header " followed by the entire Mobility Header starting with the Payload Proto field . The checksum is the 16-bit one's complement of the one's complement sum of this string . 	301	0
6275	Message Data	A variable-length field containing the data specific to the indicated Mobility Header type . 	400	0
6275	Reserved	16-bit field reserved for future use . The value MUST be initialized to zero by the sender , and MUST be ignored by the receiver . 	500	0
6275	Mobility Options	Variable-length field of such length that the complete Mobility Header is an integer multiple of 8 octets long . This field contains zero or more TLV-encoded mobility options . The encoding and format of defined options are described in Section 6.2 . The receiver MUST ignore and skip any options that it does not understand . 	400	0
6275	Reserved	16-bit field reserved for future use . This value MUST be initialized to zero by the sender , and MUST be ignored by the receiver . 	500	0
6275	Home Init Cookie	Home Init Cookie 	302	0
6275	Mobility Options	Variable-length field of such length that the complete Mobility Header is an integer multiple of 8 octets long . This field contains zero or more TLV-encoded mobility options . The receiver MUST ignore and skip any options that it does not understand . This specification does not define any options valid for the Home Test Init message . 	400	0
6275	Reserved	16-bit field reserved for future use . The value MUST be initialized to zero by the sender , and MUST be ignored by the receiver . 	500	0
6275	Care-of Init Cookie	Care-of Init Cookie 	400	0
6275	Mobility Options	Variable-length field of such length that the complete Mobility Header is an integer multiple of 8 octets long . This field contains zero or more TLV-encoded mobility options . The receiver MUST ignore and skip any options that it does not understand . This specification does not define any options valid for the Care-of Test Init message . 	400	0
6275	Home Nonce Index	This field will be echoed back by the mobile node to the correspondent node in a subsequent Binding Update . 	100	0
6275	Home Init Cookie	Home Init Cookie 	302	0
6275	Home Keygen Token	This field contains the 64-bit home keygen token used in the return routability procedure . 	230	0
6275	Mobility Options	Variable-length field of such length that the complete Mobility Header is an integer multiple of 8 octets long . This field contains zero or more TLV-encoded mobility options . The receiver MUST ignore and skip any options that it does not understand . This specification does not define any options valid for the Home Test message . 	400	0
6275	Care-of Nonce Index	This value will be echoed back by the mobile node to the correspondent node in a subsequent Binding Update . 	202	0
6275	Care-of Init Cookie	Care-of Init Cookie 	400	0
6275	Care-of Keygen Token	This field contains the 64-bit care-of keygen token used in the return routability procedure . 	400	0
6275	Mobility Options	Variable-length field of such length that the complete Mobility Header is an integer multiple of 8 octets long . This field contains zero or more TLV-encoded mobility options . The receiver 	400	0
6275	A	The Acknowledge ( A ) bit is set by the sending mobile node to request a Binding Acknowledgement ( Section 6.1.8 ) be returned upon receipt of the Binding Update . 	302	0
6275	H	The Home Registration ( H ) bit is set by the sending mobile node to request that the receiving node should act as this node's home agent . The destination of the packet carrying this message MUST be that of a router sharing the same subnet prefix as the home address of the mobile node in the binding . 	302	0
6275	L	The Link-Local Address Compatibility ( L ) bit is set when the home address reported by the mobile node has the same interface identifier as the mobile node's link-local address . 	301	0
6275	K	If this bit is cleared , the protocol used for establishing the IPsec security associations between the mobile node and the home agent does not survive movements . It may then have to be rerun . ( Note that the IPsec security associations themselves are expected to survive movements .) If manual IPsec configuration is used , the bit MUST be cleared . 	303	0
6275	Reserved	These fields are unused . They MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
6275	Sequence #	A 16-bit unsigned integer used by the receiving node to sequence Binding Updates and by the sending node to match a returned Binding Acknowledgement with this Binding Update . 	200	0
6275	Lifetime	16-bit unsigned integer . The number of time units remaining before the binding MUST be considered expired . A value of zero indicates that the Binding Cache entry for the mobile node MUST be deleted . One time unit is 4 seconds . 	120	0
6275	Mobility Options	Variable-length field of such length that the complete Mobility Header is an integer multiple of 8 octets long . This field contains zero or more TLV-encoded mobility options . The encoding and format of defined options are described in Section 6.2 . The receiver MUST ignore and skip any options that it does not understand . 	400	0
6275	Status	8-bit unsigned integer indicating the disposition of the Binding Update . Values of the Status field less than 128 indicate that the Binding Update was accepted by the receiving node . Values greater than or equal to 128 indicate that the Binding Update was rejected by the receiving node . The following Status values are currently defined : 	240	0
6275	K	If this bit is cleared , the protocol used by the home agent for establishing the IPsec security associations between the mobile node and the home agent does not survive movements . It may then have to be rerun . ( Note that the IPsec security associations themselves are expected to survive movements .) 	303	0
6275	Reserved	This field is unused . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
6275	Sequence #	The Sequence Number in the Binding Acknowledgement is copied from the Sequence Number field in the Binding Update . It is used by the mobile node in matching this Binding Acknowledgement with an outstanding Binding Update . 	231	0
6275	Lifetime	The granted lifetime , in time units of 4 seconds , for which this node SHOULD retain the entry for this mobile node in its Binding Cache . 	120	0
6275	Mobility Options	Variable-length field of such length that the complete Mobility Header is an integer multiple of 8 octets long . This field contains zero or more TLV-encoded mobility options . The encoding and format of defined options are described in Section 6.2 . The receiver MUST ignore and skip any options that it does not understand . 	400	0
6275	Status	8-bit unsigned integer indicating the reason for this message . The following values are currently defined : 	231	0
6275	Reserved	8-bit field reserved for future use . The value MUST be initialized to zero by the sender , and MUST be ignored by the receiver . 	500	0
6275	Home Address	The home address that was contained in the Home Address destination option . The mobile node uses this information to determine which binding does not exist , in cases where the mobile node has several home addresses . 	230	0
6275	Mobility Options	Variable-length field of such length that the complete Mobility Header is an integer multiple of 8 octets long . This field contains zero or more TLV-encoded mobility options . The receiver MUST ignore and skip any options that it does not understand . There MAY be additional information associated with this Binding Error message that need not be present in all Binding Error messages sent . Mobility options allow future extensions to the format of the Binding Error message to be defined . The encoding and format of defined options are described in Section 6.2 . This specification does not define any options valid for the Binding Error message . 	400	0
6275	Mobility Options	Mobility messages can include zero or more mobility options . This allows optional fields that may not be needed in every use of a particular Mobility Header , as well as future extensions to the format of the messages . Such options are included in the Message Data field of the message itself , after the fixed portion of the message data specified in the message subsections of Section 6.1 . 	400	0
6275	Option Type	8-bit identifier of the type of mobility option . When processing a Mobility Header containing an option for which the Option Type value is not recognized by the receiver , the receiver MUST quietly ignore and skip over the option , correctly handling any remaining options in the message . 	231	0
6275	Option Length	8-bit unsigned integer , representing the length in octets of the mobility option , not including the Option Type and Option Length fields . 	100	0
6275	Option Data	Option Data 	400	0
6275	Alternate Care-of Address	The Alternate Care-of Address option has an alignment requirement of 8n + 6 . Its format is as follows : 	400	0
6275	Option Type	Option Type 	220	0
6275	Option Length	8-bit unsigned integer . Length of the option , in octets , excluding the Option Type and Option Length fields . This field MUST be set to 16 . 	100	0
6275	Home Address	The home address of the mobile node sending the packet . This address MUST be a unicast routable address . 	230	0
6275	Next Header	8-bit selector . Identifies the type of header immediately following the routing header . Uses the same values as the IPv6 Next Header field [ 6 ]. 	231	0
6275	Hdr Ext Len	2 ( 8-bit unsigned integer); length of the routing header in 8-octet units , not including the first 8 octets . 	100	0
6275	Routing Type	Routing Type 	240	0
6275	Segments Left	Segments Left 	301	0
6275	Reserved	32-bit reserved field . The value MUST be initialized to zero by the sender , and MUST be ignored by the receiver . 	500	0
6275	Home Address	Home Address 	230	0
6275	Type	Type 	240	0
6275	Code	Code 	231	0
6275	Checksum	Checksum 	301	0
6275	Identifier	An identifier to aid in matching Home Agent Address Discovery Reply messages to this Home Agent Address Discovery Request message . 	231	0
6275	Reserved	This field is unused . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
6275	Type	Type 	240	0
6275	Code	Code 	231	0
6275	Checksum	Checksum 	301	0
6275	Identifier	The identifier from the invoking Home Agent Address Discovery Request message . 	231	0
6275	Reserved	This field is unused . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
6275	Home Agent Addresses	A list of addresses of home agents on the home link for the mobile node . The number of addresses presented in the list is indicated by the remaining length of the IPv6 packet carrying the Home Agent Address Discovery Reply message . 	230	0
6275	Type	Type 	240	0
6275	Code	Code 	231	0
6275	Checksum	Checksum 	301	0
6275	Identifier	An identifier to aid in matching a future Mobile Prefix Advertisement to this Mobile Prefix Solicitation . 	231	0
6275	Reserved	This field is unused . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
6275	Type	Type 	240	0
6275	Code	Code 	231	0
6275	Checksum	Checksum 	301	0
6275	Identifier	An identifier to aid in matching this Mobile Prefix Advertisement to a previous Mobile Prefix Solicitation . 	231	0
6275	M	1-bit Managed Address Configuration flag . When set , hosts use the administered ( stateful ) protocol for address autoconfiguration in addition to any addresses autoconfigured using stateless address autoconfiguration . The use of this flag is described in [ 18 ] [ 19 ]. 	231	0
6275	O	1-bit Other Stateful Configuration flag . When set , hosts use the administered ( stateful ) protocol for autoconfiguration of other ( non-address ) information . The use of this flag is described in [ 18 ] [ 19 ]. 	231	0
6275	Reserved	This field is unused . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
6275	H	The Home Agent ( H ) bit is set in a Router Advertisement to indicate that the router sending this Router Advertisement is also functioning as a Mobile IPv6 home agent on this link . 	301	0
6275	Reserved	Reduced from a 6-bit field to a 5-bit field to account for the addition of the above bit . 	231	0
6275	R	1-bit router address flag . When set , indicates that the Prefix field contains a complete IP address assigned to the sending router . The indicated prefix is given by the first Prefix Length bits of the Prefix field . The router IP address has the same scope and conforms to the same lifetime values as the advertised prefix . This use of the Prefix field is compatible with its use in advertising the prefix itself , since Prefix Advertisement uses 	230	0
6275	Reserved	Reduced from a 6-bit field to a 5-bit field to account for the addition of the above bit . 	231	0
6275	Type	Type 	240	0
6275	Length	8-bit unsigned integer . The length of the option ( including the type and length fields ) is in units of 8 octets . The value of this field MUST be 1 . 	100	0
6275	Reserved	This field is unused . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
6275	Advertisement Interval	32-bit unsigned integer . The maximum time , in milliseconds , between successive unsolicited Router Advertisement messages sent by this router on this network interface . Using the conceptual router configuration variables defined by Neighbor Discovery [ 18 ], this field MUST be equal to the value MaxRtrAdvInterval , expressed in milliseconds . 	120	0
6275	Type	Type 	240	0
6275	Length	8-bit unsigned integer . The length of the option ( including the type and length fields ) in units of 8 octets . The value of this field MUST be 1 . 	100	0
6275	Reserved	This field is unused . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
6275	Home Agent Preference	16-bit unsigned integer . The preference for the home agent sending this Router Advertisement , for use in ordering the addresses returned to a mobile node in the Home Agent Addresses field of a Home Agent Address Discovery Reply message . Higher values mean more preferable . If this option is not included in a Router Advertisement in which the Home Agent ( H ) bit is set , the preference value for this home agent MUST be considered to be 0 . Greater values indicate a more preferable home agent than lower values . 	231	0
6275	Home Agent Lifetime	16-bit unsigned integer . The lifetime associated with the home agent in units of seconds . The default value is the same as the Router Lifetime , as specified in the main body of the Router Advertisement . The maximum value corresponds to 18.2 hours . A 	100	0
6275	R	o The Solicited ( S ) flag in the Advertisement MUST NOT be set , since it was not solicited by any Neighbor Solicitation . 	231	0
6275	H	Unless a binding has been established between the mobile node and a correspondent node , traffic from the mobile node to the correspondent node goes through a reverse tunnel . Home agents MUST support reverse tunneling as follows : 	400	0
6275	Preferred Lifetime	where MaxMobPfxAdvInterval is as defined in Section 12 . Then , compute the final delay for the advertisement : 	110	0
6275	H	o The Home Registration ( H ) bit MUST be set in the Binding Update . 	302	0
6275	A	o The packet MUST contain a Home Address destination option , giving the mobile node's home address for the binding . 	230	0
6284	SSRC of Requesting Client	o SSRC of Requesting Client ( 32 bits ): Field that contains the SSRC of the client who sent the request . 	400	0
6284	Associated Nonce	o Associated Nonce ( 64 bits ): Field that contains the nonce received in the Port Mapping Request message and used in Token construction . 	231	0
6284	Token Element	o Token Element ( variable size ): Element that is used to carry the Token generated by the server . This element is a 32-bit aligned Length-Value element . The Length field , which is 16 bits , indicates the length ( in octets ) of the Value field that follows the Length field . While a 16-bit length allows for Tokens with a size of up to 65535 bytes , using Tokens of sizes that make the RTCP compound packet larger than the MTU might have a negative impact on functionality because of IP fragmentation . Some NATs or other middleboxes do not pass IP fragments; thus , a large Token can cause the whole mechanism to fail . In addition , fragmentation increases the risk for packet loss . 	100	0
6284	Absolute Expiration Time	o Absolute Expiration Time ( 64 bits ): Field that contains the absolute expiration time of the Token . The absolute expiration time is expressed as a Network Time Protocol ( NTP ) timestamp value in seconds since the year 1900 [ RFC5905 ]. The client does not need to use this element directly and thus does not need to synchronize its clock with the server . However , the client needs to send this element back to the server along with the associated nonce in the Token Verification Request message and thus needs to keep it associated with the Token . 	121	0
6284	Relative Expiration Time	o Relative Expiration Time ( 32 bits ): Field that contains the relative expiration time of the Token . The relative expiration time is expressed in seconds from the time the Token was generated . Whenever a server decides to not grant a Token to a requesting client , the relative expiration time will be set to zero ( and hence , the accompanying Token will be invalid ). 	122	0
6284	Packet Types Element	o Packet Types Element ( variable size ): Element that is used to signal which RTCP packet types require Token-based authentication . This element is a 32-bit aligned Length-Value element . The Length field , which is 8 bits , indicates the length ( in octets ) of the Value field that follows the Length field . This length does not include any padding that is required for alignment . The Value field carries zero or more 8-bit sub-fields , each carrying an RTCP packet type . If the Packet Types element does not fall on a 	400	0
6284	Associated Nonce	o Associated Nonce ( 64 bits ): Field that contains the nonce associated with the Token below . 	400	0
6284	Token Element	o Token Element ( variable size ): Token element that was previously received in the Port Mapping Response message . 	231	0
6284	Associated Absolute Expiration Time	o Associated Absolute Expiration Time ( 64 bits ): Field that contains the absolute expiration time associated with the Token above . 	122	0
6284	SSRC of Packet Sender	o SSRC of Packet Sender : This is the server's SSRC , which equals the SSRC of the respective multicast stream . Note that this SSRC value is from a different SSRC space than the one used in the unicast session . 	231	0
6284	SSRC of Requesting Client	o SSRC of Requesting Client ( 32 bits ): Field that contains the SSRC of the client . 	400	0
6284	Failed PT	o Failed PT ( 8 bits ): Field that indicates the type of the RTCP packet that caused this failure message . 	231	0
6284	FMT	o FMT ( 5 bits ): Field that indicates the feedback message type ( FMT ) value of the RTCP packet that caused this failure . Together with the field above , the client can infer which RTCP message it had previously sent caused this failure message to be sent by the server . For example , if the client did not include a valid Token with an RTCP NACK message , the Failed PT field will indicate 205 ( RTPFB ) and the FMT field will indicate 1 ( Generic NACK ). If the RTCP message did not have an associated FMT value ( such as an RTCP BYE message ), the FMT field SHALL be set to zero . 	231	0
6284	Associated Nonce	o Associated Nonce ( 64 bits ): Field that contains the nonce received in the Token Verification Request message . If there was no Token Verification Request message included by the client , this field is set to zero . 	400	0
6285	Type	o Type : A single-octet identifier that defines the type of the parameter represented in this TLV element . 	231	0
6285	Length	o Length : A two-octet field that indicates the length ( in octets ) of the TLV element excluding the Type and Length fields and the 8-bit Reserved field between them . This length does not include any padding that is required for alignment . 	100	0
6285	Value	o Value : Variable-size set of octets that contains the specific value for the parameter . 	231	0
6285	Type	o Min RAMS Buffer Fill Requirement ( 32 bits ): Optional TLV element that denotes the minimum milliseconds of data that the RTP_Rx desires to have in its buffer before allowing the data to be consumed by the application . 	400	0
6285	Type	o Max RAMS Buffer Fill Requirement ( 32 bits ): Optional TLV element that denotes the maximum milliseconds of data that the RTP_Rx can buffer without losing the data due to buffer overflow . 	100	0
6285	Type	o Max Receive Bitrate ( 64 bits ): Optional TLV element that denotes the maximum bitrate ( in bits per second ) at which the RTP_Rx can process the aggregation of the unicast burst(s ) and any payload - specific information that will be provided by the BRS . The limits can include local receiver limits as well as network limits that are known to the receiver . 	231	0
6285	Type	o Preamble-only Allowed ( 0 bits ): Optional TLV element that indicates that the RTP_Rx is willing to receive only the preamble information for the desired primary multicast stream(s ) in case the BRS cannot send the unicast burst stream(s ). ( In such cases , the BRS will not accept the request , but will send a response code 511 in the RAMS-I message as defined in Section 11.6 .) Note that 	302	0
6285	Type	o Supported Enterprise Number(s ): Optional TLV element that indicates the enterprise number(s ) that the RTP_Rx implementation supports . Similar to the private extensions , the enterprise numbers here are as listed on http://www.iana.org . This TLV element , if exists , provides a hint to the BRS about which private extensions the RTP_Rx can potentially support . Note that an RTP_Rx does not necessarily support all the private extensions under a particular enterprise number . Unless the BRS explicitly knows which private extensions an RTP_Rx supports ( through this or some out-of-band means ), the BRS SHOULD NOT use private extensions in the RAMS-I messages . The BRS SHOULD rather use only vendor - neutral extensions . The Length field of this TLV element is set to 4*n , where n is the number of enterprise number entries . 	231	0
6285	Type	Type : 6 	240	0
6285	MSN	o Message Sequence Number ( MSN ) ( 8 bits ) : Mandatory field that denotes the sequence number of the RAMS-I message for the particular media sender SSRC specified in the message header . The MSN value SHALL be set to zero when a new RAMS request is received . During rapid acquisition , the same RAMS-I message MAY be repeated for redundancy purposes without incrementing the MSN value . If an updated RAMS-I message will be sent ( either with new information or updated information ), the MSN value SHALL be incremented by one . In the MSN field , the regular wrapping rules apply . Note that if the RTP_Rx has sent an updated request , it MUST check every RAMS-I message entirely , regardless of whether or not the MSN value has changed . 	200	0
6285	Response	o Response ( 16 bits ): Mandatory field that denotes the response code for this RAMS-I message . This document defines several initial response codes in Section 7.3.1 and registers them with IANA in Section 11.6 . If a new vendor-neutral response code will be defined , it MUST be registered with IANA through the guidelines specified in Section 11.6 . If the new response code is intended to be used privately by a vendor , there is no need for IANA management . Instead , the vendor MUST use the private extension mechanism ( Section 7.1.2 ) to convey its message and MUST indicate this by putting zero in the Response field . 	231	0
6285	Type	o RTP Seqnum of the First Packet ( 16 bits ): TLV element that specifies the RTP sequence number of the first packet that will be sent in the respective unicast RTP stream . This allows the RTP_Rx to know whether one or more packets sent by the BRS have been dropped at the beginning of the stream . If the BRS accepts the RAMS request , this element exists . If the BRS rejects the RAMS request , this element SHALL NOT exist . 	200	0
6285	Type	o Earliest Multicast Join Time ( 32 bits ): TLV element that specifies the delta time ( in ms ) between the arrival of the first RTP packet in the unicast RTP stream ( which could be a burst packet or a payload-specific packet ) and the earliest time instant when an RTP_Rx MAY send an SFGMP Join message to join the multicast session . A zero value indicated in this element means that the RTP_Rx MAY send the SFGMP Join message right away . If the RTP_Rx does not want to wait until the earliest multicast join time , it MAY send a RAMS-T message , and after a reasonable amount of time , it MAY join the SSM session . 	122	0
6285	Type	o Burst Duration ( 32 bits ): Optional TLV element that denotes the time the burst will last ( in ms ), i.e ., the difference between the expected transmission times of the first and the last burst packets that the BRS is planning to send in the respective unicast RTP stream . In the absence of additional stimulus , the BRS will 	122	0
6285	Type	o Max Transmit Bitrate ( 64 bits ): Optional TLV element that denotes the maximum bitrate ( in bits per second ) that will be used by the BRS for the RTP stream associated with this RAMS-I message . 	231	0
6285	Type	Type : 35 	220	0
6285	Type	Type : 61 	220	0
6285	FMT	Within the RTPFB range , the following format ( FMT ) value is registered : 	231	0
6295	A	A = %x41 B = %x42 C = %x43 D = %x44 E = %x45 F = %x46 G = %x47 	240	0
6295	H	H = %x48 J = %x4A K = %x4B M = %x4D N = %x4E P = %x50 Q = %x51 T = %x54 V = %x56 W = %x57 X = %x58 Y = %x59 Z = %x5A 	240	0
6295	N	o N-active commands . N-active commands are MIDI commands that do not appear before one of the following commands in the session history : MIDI Control Change numbers 123-127 ( numbers with All Notes Off semantics ) or 120 ( All Sound Off ), and any Reset State command . 	301	0
6295	C	o C-active commands . C-active commands are MIDI commands that do not appear before one of the following commands in the session history : MIDI Control Change number 121 ( Reset All Controllers ) and any Reset State command . 	231	0
6295	W	By default , the U , W , and Z bits MUST be set to 0 . If all parameter logs in the list code RPN parameters , the U bit MAY be set to 1 . If all parameter logs in the list code NRPN parameters , the W bit MAY be set to 1 . If the parameter numbers of all RPN and NRPN logs in the list lie in the range 0-127 ( and thus have an MSB value of 0 ), the Z bit MAY be set to 1 . 	210	0
6295	TCOUNT	If the T header bit is set to 1 , the 8-bit TCOUNT field appears in the command log . If the C header bit is set to 1 , the 8-bit COUNT field appears in the command log . TCOUNT and COUNT are interpreted as unsigned integers . 	210	0
6295	A	o A : Poly Aftertouch ( 0xA ) o B : System Reset ( 0xFF ) o C : Control Change ( 0xB ) o F : System Time Code ( 0xF1 ) o G : System Tune Request ( 0xF6 ) o H : System Song Select ( 0xF3 ) o J : System Common Undefined ( 0xF4 ) o K : System Common Undefined ( 0xF5 ) o N : NoteOff ( 0x8 ), NoteOn ( 0x9 ) o P : Program Change ( 0xC ) o Q : System Sequencer ( 0xF2 , 0xF8 , 0xFA , 0xFB , 0xFC ) o T : Channel Aftertouch ( 0xD ) o V : System Active Sense ( 0xFE ) o W : Pitch Wheel ( 0xE ) o X : SysEx ( 0xF0 , 0xF7 ) o Y : System Real-Time Undefined ( 0xF9 ) o Z : System Real-Time Undefined ( 0xFD ) 	240	0
6295	A	A = %x41 ; Uppercase-only letters used above . B = %x42 C = %x43 D = %x44 E = %x45 F = %x46 G = %x47 H = %x48 J = %x4A K = %x4B M = %x4D N = %x4E P = %x50 Q = %x51 T = %x54 V = %x56 W = %x57 X = %x58 Y = %x59 Z = %x5A 	240	0
6295	U	U-HEXDIG = DIGIT / A / B / C / D / E / F ; variant of HEXDIG [ RFC5234 ] : ; hexadecimal digit using uppercase A-F only 	231	0
6295	FREQIDX	FREQIDX Sampling Frequency 	301	0
6306	Identification	The design guidelines and rationale behind decoupling the location from identification are stated in [ RFC6227 ]. Another important influence source is the report and presentations from the [ Dagstuhl ] workshop that declared " a future Internet architecture must hence decouple the functions of IP addresses as names , locators , and forwarding directives in order to facilitate the growth and new network-topological dynamisms of the Internet ". 	301	0
6306	Version	Version : 4 bits 	220	0
6306	IHL	IHL : 4 bits 	400	0
6306	Type of Service	Type of Service : 8 bits 	231	0
6306	Total Length	Total Length : 16 bits 	100	0
6306	Identification	Identification : 16 bits 	400	0
6306	Flags	Flags : 3 bits 	231	0
6306	Fragment Offset	Fragment Offset : 13 bits 	110	0
6306	Time to Live	Time to Live : 8 bits 	302	0
6306	Protocol	Protocol : 8 bits 	400	0
6306	Header Checksum	Header Checksum : 16 bits 	301	0
6306	Source Address	Source Address : 32 bits 	230	0
6306	Destination Address	Destination Address : 32 bits 	230	0
6306	Options	Options and Padding : Variable length 	231	0
6306	Padding	Options and Padding : Variable length 	231	0
6306	A	When the initiator and responder reside in different ALOC realms , the A-bit is set to 1 and the Area and Endpoint Locator fields must be used in the locator header . The size of the locator header is 12 bytes . When the A-bit is set to 0 , the initiator and responder reside within the same ALOC realm . The Area and Endpoint Locator shall not be used in the locator header . The size of the locator header is 4 bytes . 	400	0
6306	I	The identifier bit is set to 1 if the endpoint is using an identifier/locator split scheme within the locator header . The identifier/locator split scheme must indicate by how much the size of the locator header is increased . The Locator Header Length field is also added to the locator header . 	210	0
6306	S	The initiator sets the swap bit to 0 in the hIPv4 packet . An RBR will set this bit to 1 when it is swapping the source and destination addresses of the IP header with the ALOC and ELOC prefixes of the locator header . 	210	0
6306	FI	The purpose of the Forwarding Indicator ( FI ) field is to provide a mechanism for a future forwarding plane to identify which Forwarding Information Base ( FIB ) should be used for inter-ALOC realm sessions . The new forwarding plane will remove the swap functionality of IP and locator header values for both unicast and multicast sessions . The outcome is that the IP and transport protocol headers will remain intact and only FI and LH checksum values in the locator header will alternate . The following values are defined : 	400	0
6306	Protocol	Protocol : 8 bits 	400	0
6306	Padding	The locator header padding is used to ensure that the locator header ends on a 32-bit boundary . The padding is zero . 	302	0
6306	S	To enable RPF globally for an ( S,G ), the multicast-enabled RBR ( mRBR ) must at the source's ALOC realm replace the value of the source address field in the IP header with the local ALOC prefix for inter - ALOC multicast streams . This can be achieved if the local RBR acts also as an anycast Rendezvous Point with MSDP and PIM capabilities . With these functionalities the RBR becomes a multicast-enabled RBR ( mRBR ). The source registers at the mRBR and a source tree is established between the source and the mRBR . When an inter-ALOC realm receiver subscribes to the multicast group , the mRBR has to swap the hIPv4 header in the following way : 	230	0
6306	VLB	[ VLB ] Zhang-Shen , R ., McKeown , N ., " Designing a Predictable Internet Backbone with Valiant Load-Balancing ", 2004 , http://conferences.sigcomm.org/hotnets/ 2004/HotNets-III%20Proceedings/zhang-shen.pdf . 	302	0
6311	EXPECTED_SEND_REQ_MESSAGE_ID	o EXPECTED_SEND_REQ_MESSAGE_ID ( 4 octets ): This field is used by the sender of this notification payload to indicate the Message ID it will use in the next request that it will send to the other protocol peer . 	230	0
6311	EXPECTED_RECV_REQ_MESSAGE_ID	o EXPECTED_RECV_REQ_MESSAGE_ID ( 4 octets ): This field is used by the sender of this notification payload to indicate the Message ID it is expecting in the next request to be received from the other protocol peer . 	240	0
6311	Incoming IPsec SA delta value	o Incoming IPsec SA delta value ( 4 or 8 octets ): The sender requests that the peer should increment all the Child SA replay counters for the sender's incoming ( the peer's outgoing ) traffic by this value . The size of this field depends on the ESN bit associated with the Child SAs : if the ESN bit is 1 , the field's size is 8 octets; otherwise , it is 4 octets . We note that this constrains the Child SAs of each IKE SA to either all have the ESN bit on or off . 	302	0
6313	Semantic	The Semantic field indicates the relationship among the different Information Element values within this Structured Data Information Element . Refer to IANA's " IPFIX Structured Data Types Semantics " registry . 	231	0
6313	Field ID	Field ID is the Information Element identifier of the Information Element(s ) contained in the list . 	231	0
6313	Element Length	Per Section 7 of [ RFC5101 ], the Element Length field indicates the length , in octets , of each list element specified by Field ID , or contains the value 0xFFFF if the length is encoded as a variable - length Information Element at the start of the basicList Content . 	100	0
6313	Semantic	The Semantic field indicates the relationship among the different Data Records within this Structured Data Information Element . 	231	0
6313	Template ID	The Template ID field contains the ID of the Template used to encode and decode the subTemplateList Content . 	230	0
6313	Semantic	The Semantic field indicates the top-level relationship among the series of Data Records corresponding to the different Template Records within this Structured Data Information Element . 	231	0
6313	Template ID	Unlike the subTemplateList Information Element , each element of the subTemplateMultiList contains a Template ID that specifies the encoding of the following Data Records . 	400	0
6313	Semantic	Semantic interpretations of received Data Records at or beyond the Collecting Process remain explicitly undefined , unless that data is transmitted using this extension with explicit structured data type semantic information . 	400	0
6320	Length	Length ( 16 bits ): Total length of the ANCP message in bytes , not including the 4-byte encapsulating header . 	100	0
6320	Version	Version ( 8 bits ): ANCP version , which is subject to negotiation . This is the key parameter by means of which ANCP messages can be distinguished from GSMP messages received over the same port . 	220	0
6320	Message Type	Timer ( 8 bits ): The Timer field is used to negotiate the timer value used in the adjacency protocol with the peer . The timer specifies the nominal time between periodic adjacency protocol messages . It is a constant for the duration of an ANCP session . The Timer field is specified in units of 100 ms , with a default value of 250 ( i.e ., 25 seconds ). 	121	0
6320	Timer	Timer ( 8 bits ): The Timer field is used to negotiate the timer value used in the adjacency protocol with the peer . The timer specifies the nominal time between periodic adjacency protocol messages . It is a constant for the duration of an ANCP session . The Timer field is specified in units of 100 ms , with a default value of 250 ( i.e ., 25 seconds ). 	121	0
6320	Code	Code ( 7 bits ): The adjacency protocol message type . It MUST have one of the following values : 	231	0
6320	Sender Name	Sender Name ( 48 bits ): For the SYN , SYNACK , and ACK messages , is the identifier of the entity sending the message . The Sender Name is a 48-bit quantity that is unique within the operational context of the device . A 48-bit IEEE 802 Media Access Control ( MAC ) address , if available , may be used for the Sender Name . If the Ethernet encapsulation is used , the Sender Name MUST be the Source Address from the MAC header . For the RSTACK message , the Sender Name field is set to the value of the Receiver Name field from the incoming message that caused the RSTACK message to be generated . 	230	0
6320	Receiver Name	Receiver Name ( 48 bits ) For the SYN , SYNACK , and ACK messages , is the name of the entity that the sender of the message believes is at the far end of the link . If the sender of the message does not know the name of the entity at the far end of the link , this field SHOULD be set to zero . For the RSTACK message , the Receiver Name field is set to the value of the Sender Name field from the incoming message that caused the RSTACK message to be generated . 	230	0
6320	Sender Port	Sender Port ( 32 bits ): For the SYN , SYNACK , and ACK messages , is the local port number of the link across which the message is being sent . For the RSTACK message , the Sender Port field is set to the value of the Receiver Port field from the incoming message that caused the RSTACK message to be generated . 	230	0
6320	Receiver Port	Receiver Port ( 32 bits ): For the SYN , SYNACK , and ACK messages , is what the sender believes is the local port number for the link , allocated by the entity at the far end of the link . If the sender of the message does not know the port number at the far end of the link , this field SHOULD be set to zero . For the RSTACK message , the Receiver Port field is set to the value of the Sender Port field from the incoming message that caused the RSTACK message to be generated . 	230	0
6320	PType	PType ( 4 bits ): PType is used to specify if partitions are used and how the Partition ID is negotiated . 	231	0
6320	P Flag	P Flag ( 4 bits ): Used to indicate the type of partition request . 	231	0
6320	Sender Instance	Sender Instance ( 24 bits ): For the SYN , SYNACK , and ACK messages , is the sender's instance number for the link to the peer . It is used to detect when the link comes back up after going down or when the identity of the entity at the other end of the link changes . The instance number is a 24-bit number that is guaranteed to be unique within the recent past and to change when the link or node comes back up after going down . Zero is not a valid instance number . For the RSTACK message , the Sender Instance field is set to the value of the Receiver Instance field from the incoming message that caused the RSTACK message to be generated . 	301	0
6320	Partition ID	Partition ID ( 8 bits ): Field used to associate the message with a specific partition of the AN . The value of this field is negotiated during the adjacency procedure . The AN makes the final decision , but will consider a request from the NAS . If the AN does not support partitions , the value of this field MUST be 0 . Otherwise , it MUST be non-zero . 	400	0
6320	Receiver Instance	Receiver Instance ( 24 bits ): For the SYN , SYNACK , and ACK messages , is what the sender believes is the current instance number for the link , allocated by the entity at the far end of the link . If the sender of the message does not know the current instance number at the far end of the link , this field SHOULD be set to zero . For the RSTACK message , the Receiver Instance field is set to the value of the Sender Instance field from the incoming message that caused the RSTACK message to be generated . 	231	0
6320	Reserved	Reserved ( 8 bits ): Reserved for use by a future version of this specification . 	500	0
6320	Total Length	Total Length ( 16 bits ): Indicates the total number of bytes occupied by the Capability fields that follow . 	100	0
6320	Capability Fields	Capability Fields : Each Capability field indicates one ANCP capability supported by the sender of the adjacency message . Negotiation of a common set of capabilities to be supported within the ANCP session is described below . The detailed format of a Capability field is shown in Figure 5 and described below . 	400	0
6320	Capability Type	Capability Type ( 16 bits ): Indicates the specific capability supported . An IANA registry exists for values of this sub-field . The values specified by this document are listed below . 	231	0
6320	Capability Length	Capability Length ( 16 bits ): The number of bytes of data contained in the Capability Data sub-field , excluding padding . If the definition of a particular capability includes no capability data , the value of the Capability Length sub-field is zero . 	100	0
6320	Capability Data	Capability Data ( as indicated by Capability Length ): Contains data associated with the capability as specified for that capability . If the definition of a particular capability includes no capability data , the Capability Data sub-field is absent ( has zero length ). Otherwise , the Capability Data sub-field MUST be padded with zeroes as required to terminate on a 4-byte word boundary . The possibility of specifying capability data provides the flexibility to advertise more than the mere presence or absence of a capability if needed . 	400	0
6320	Capability Type	o Capability Type : DSL Topology Discovery = 0x01 	240	0
6320	Length	Length ( in bytes ): 0 	100	0
6320	Capability Data	For the detailed protocol specification of this capability , see Section 6 . 	400	0
6320	Capability Type	o Capability Type : DSL Line Configuration = 0x02 	240	0
6320	Length	Length ( in bytes ): 0 	100	0
6320	Capability Data	For the detailed protocol specification of this capability , see Section 7 . 	400	0
6320	Capability Type	o Capability Type : DSL Remote Line Connectivity Testing = 0x04 	240	0
6320	Length	Length ( in bytes ): 0 	100	0
6320	Capability Data	For the detailed protocol specification of this capability , see Section 8 . 	400	0
6320	Version	Version ( 8 bits ): The ANCP version negotiated and running in this adjacency . 	220	0
6320	Message Type	Message Type ( 8 bits ): Always 85 . 	240	0
6320	Result	Code ( 12 bits ): Set to the total number of adjacencies currently established on this partition , from the point of view of the AN . 	231	0
6320	Code	Code ( 12 bits ): Set to the total number of adjacencies currently established on this partition , from the point of view of the AN . 	231	0
6320	Partition ID	Partition ID ( 8 bits ): The partition identifier of the partition for which this notification is being sent . 	230	0
6320	Transaction Identifier	I ( 1 bit ), SubMessage number ( 15 bits ): Set as described in Section 3.6.1.7 . 	302	0
6320	I	I ( 1 bit ), SubMessage number ( 15 bits ): Set as described in Section 3.6.1.7 . 	302	0
6320	Length	Length ( 16 bits ): Set as described in Section 3.6.1.8 . 	100	0
6320	Version	Version : SHOULD be set to the highest version of ANCP that the sender supports . 	220	0
6320	Message Type	Timer : SHOULD be set to the value configured in the AN or NAS sending the message . 	230	0
6320	Timer	Timer : SHOULD be set to the value configured in the AN or NAS sending the message . 	230	0
6320	Code	Code : MUST be set to 1 ( SYN ). 	302	0
6320	Sender Name	Sender Name : Set as described in Section 3.5.1 . 	301	0
6320	Receiver Name	Receiver Name : SHOULD be set to 0 . 	500	0
6320	Sender Port	Sender Port : Set as described in Section 3.5.1 . 	301	0
6320	Receiver Port	Receiver Port : SHOULD be set to 0 . 	500	0
6320	PType	PType : Set according to the following rules : 	400	0
6320	P Flag	P Flag : Set to the mode of adjacency setup ( new adjacency vs . recovered adjacency ) requested by the sender . Warning : setting P Flag=1 runs the risk of state mismatch because ANCP does not provide the means for the NAS to audit the current state of the AN . 	231	0
6320	Sender Instance	Partition ID : MUST be set to 0 if PType=0; otherwise , set to the assigned or requested partition identifier value . 	302	0
6320	Partition ID	Partition ID : MUST be set to 0 if PType=0; otherwise , set to the assigned or requested partition identifier value . 	302	0
6320	Receiver Instance	# of Caps : MUST be set to the number of Capability fields that follow . 	231	0
6320	Total Length	Total Length : MUST be set to the total number of bytes in the Capability fields that follow . 	100	0
6320	Capability Fields	Capability Fields : One Capability field MUST be present for each ANCP capability for which the sender wishes to advertise support . 	400	0
6320	Version	Version : The supported Version value received in the SYN message . This value MUST be used for all subsequent ANCP messages sent during the life of the adjacency . 	220	0
6320	Timer	Timer : The larger of the Timer value received in the SYN message and the value with which the receiver is configured . 	230	0
6320	Sender Name	Sender Name : The value of the Sender Name field in the SYN message just received . 	231	0
6320	Receiver Name	Receiver Name : The value used by the receiver in the Sender Name field of SYN , SYNACK , and ACK messages it sends in this adjacency . 	230	0
6320	Sender Port	Sender Port : The value of the Sender Port field in the SYN message just received . 	230	0
6320	Receiver Port	Receiver Port : The value used by the receiver in the Sender Port field of SYN , SYNACK , and ACK messages it sends in this adjacency . 	230	0
6320	Sender Instance	Sender Instance : The value of the Sender Instance field in the SYN message just received . 	231	0
6320	P Flag	P Flag : The lesser of the value determined by local policy and the value received in the SYN message . That is , preference is given to " 0 - New adjacency " if there is a conflict . 	231	0
6320	Partition ID	Partition ID : If the SYN receiver is the AN , this is set to 0 if the AN does not support partitions or to the non-zero value of the partition identifier it chooses to assign otherwise . If the SYN receiver is the NAS , this is set to the value of the Partition ID field copied from the SYN . 	210	0
6320	Receiver Instance	Receiver Instance : The value used by the receiver in the Sender Instance field of SYN , SYNACK , and ACK messages it sends in this adjacency . 	230	0
6320	Message Type	Message Type : MUST be 10 . 	302	0
6320	Code	PType : MUST be 0 if the Partition ID value is 0 or 2 if the Partition ID value is non-zero . 	210	0
6320	PType	PType : MUST be 0 if the Partition ID value is 0 or 2 if the Partition ID value is non-zero . 	210	0
6320	Sender Name	Sender Name : MUST be set to the Receiver Name value recorded as part of adjacency state . 	230	0
6320	Receiver Name	Receiver Name : MUST be set to the Sender Name value recorded as part of adjacency state . 	230	0
6320	Sender Port	Sender Port : MUST be set to the Receiver Port value recorded as part of adjacency state . 	230	0
6320	Receiver Port	Receiver Port : MUST be set to the Sender Port value recorded as part of adjacency state . 	231	0
6320	Sender Instance	Sender Instance : MUST be set to the Receiver Instance value recorded as part of adjacency state . 	230	0
6320	Receiver Instance	Receiver Instance : MUST be set to the Sender Instance value recorded as part of adjacency state . 	231	0
6320	Partition ID	The Partition ID field MUST contain the value that was negotiated for Partition ID during the adjacency procedure as described above . 	400	0
6320	SubMessage Number	In GSMPv3 , these provide a mechanism for message fragmentation . Because ANCP uses TCP transport , this mechanism is unnecessary . An ANCP agent MUST set the I Flag and subMessage Number fields to 1 to signify " no fragmentation ". 	201	0
6320	Length	This field MUST be set to the length of the ANCP message in bytes , including its header fields and message body but excluding the 4-byte encapsulating header defined in Section 3.2 . 	100	0
6320	Length	Length ( 16 bits ): The number of bytes of data in the Value field of the TLV , excluding any padding required to bring this TLV to a 4-byte word boundary ( see " Value " below ). If a TLV contains other TLVs , any padding in the contained TLVs MUST be included in the value of Length . Depending on the specification of the TLV , the value of Length can be zero , a constant for all instances of the TLV , or a varying quantity . 	100	0
6320	Value	Value ( variable ): The actual data carried by the TLV , if any . The Value field in each TLV MUST be padded with zeroes as required to align with a 4-byte word boundary . The Value field of a TLV MAY include fixed fields and/or other TLVs . 	400	0
6320	TLVs	This section defines two messages and a number of TLVs that could be useful in multiple capabilities . In some cases , the content is under-specified , with the intention that particular capabilities spell out the remaining details . 	400	0
6320	Message Type	Message Type : MUST be set to 93 . 	302	0
6320	Result	Result : MUST be set to 0x0 ( Ignore ). 	302	0
6320	Result Code	Transaction ID : MUST be populated with a non-zero value chosen in the manner described in Section 3.6.1.6 . 	302	0
6320	Message Type	Message Type : MUST be set to 91 . 	302	0
6320	Result	Result Code : MUST be set to zero for success or an appropriate non - zero value for failure . 	302	0
6320	Result Code	Result Code : MUST be set to zero for success or an appropriate non - zero value for failure . 	302	0
6320	Length	Value : Target information as defined for each object type . The Value field MAY consist of sub-TLVs . 	400	0
6320	Value	Value : Target information as defined for each object type . The Value field MAY consist of sub-TLVs . 	400	0
6320	Length	Value : Command information as defined for each message type . The field MAY include sub-TLVs . The contents of this TLV MUST be specified as one " command " or alternatively a sequence of one or more " commands ", each beginning with a 1-byte Command Code and possibly including other data following the Command Code . An IANA registry has been established for Command Code values . This document reserves the Command Code value 0 as an initial entry in the registry . 	400	0
6320	Value	Value : Command information as defined for each message type . The field MAY include sub-TLVs . The contents of this TLV MUST be specified as one " command " or alternatively a sequence of one or more " commands ", each beginning with a 1-byte Command Code and possibly including other data following the Command Code . An IANA registry has been established for Command Code values . This document reserves the Command Code value 0 as an initial entry in the registry . 	400	0
6320	Length	Value : The following fixed fields . In addition , sub-TLVs MAY be appended to provide further diagnostic information . 	400	0
6320	Value	Value : The following fixed fields . In addition , sub-TLVs MAY be appended to provide further diagnostic information . 	400	0
6320	Reserved	Reserved ( 8 bits ): See Section 3.4 for handling of reserved fields . 	231	0
6320	Msg Type	Msg Type ( 8 bits ): Message Type of the request for which this TLV is providing diagnostics . 	231	0
6320	Error Message Length	Error Message Length ( 16 bits ): Number of bytes in the error message , excluding padding , but including the language tag and delimiter . This MAY be zero if no error message is provided . 	100	0
6320	Length	Length : Up to 63 bytes 	100	0
6320	Value	Value : ASCII string 	231	0
6320	Length	Length : Up to 63 bytes 	100	0
6320	Value	Value : ASCII string 	231	0
6320	Length	Length : 4 or 8 bytes 	100	0
6320	Value	Value : One or two 32-bit binary fields . 	400	0
6320	Length	Length : Up to 63 bytes 	100	0
6320	Value	Value : ASCII string 	231	0
6320	Message Type	Message Type ( 8 bits ): Message Type has the same value as in the general header ( i.e ., 80 or 81 ). 	231	0
6320	Tech Type	Tech Type ( 8 bits ): MUST be set to 0x05 ( DSL ). 	240	0
6320	Reserved	# of TLVs ( 16 bits ): The number of TLVs that follow , not counting TLVs encapsulated within other TLVs . 	231	0
6320	TLVs	TLVs : One or more TLVs to identify a DSL access line and zero or more TLVs to define its characteristics . 	400	0
6320	Length	Value : One or more encapsulated TLVs corresponding to DSL access line attributes . The DSL-Line-Attributes TLV MUST contain at least one TLV when it is present in a Port Up or Port Down message . The actual contents are determined by the AN control application . 	400	0
6320	Value	Value : One or more encapsulated TLVs corresponding to DSL access line attributes . The DSL-Line-Attributes TLV MUST contain at least one TLV when it is present in a Port Up or Port Down message . The actual contents are determined by the AN control application . 	400	0
6320	Length	Length : 4 bytes 	100	0
6320	Value	Value : 32-bit unsigned integer 	302	0
6320	Length	Length : 4 bytes 	100	0
6320	Value	Value : Rate in kbits/s as a 32-bit unsigned integer 	231	0
6320	Length	Length : 4 bytes 	100	0
6320	Value	Value : Rate in kbits/s as a 32-bit unsigned integer 	231	0
6320	Length	Length : 4 bytes 	100	0
6320	Value	Value : Rate in kbits/s as a 32-bit unsigned integer 	231	0
6320	Length	Length : 4 bytes 	100	0
6320	Value	Value : Rate in kbits/s as a 32-bit unsigned integer 	231	0
6320	Length	Length : 4 bytes 	100	0
6320	Value	Value : Rate in kbits/s as a 32-bit unsigned integer 	231	0
6320	Length	Length : 4 bytes 	100	0
6320	Value	Value : Rate in kbits/s as a 32-bit unsigned integer 	231	0
6320	Length	Length : 4 bytes 	100	0
6320	Value	Value : Rate in kbits/s as a 32-bit unsigned integer 	231	0
6320	Length	Length : 4 bytes 	100	0
6320	Value	Value : Rate in kbits/s as a 32-bit unsigned integer 	231	0
6320	Length	Length : 4 bytes 	100	0
6320	Value	Value : Rate in kbits/s as a 32-bit unsigned integer 	231	0
6320	Length	Length : 4 bytes 	100	0
6320	Value	Value : Rate in kbits/s as a 32-bit unsigned integer 	231	0
6320	Length	Length : 4 bytes 	100	0
6320	Value	Value : Time in ms as a 32-bit unsigned integer 	121	0
6320	Length	Length : 4 bytes 	100	0
6320	Value	Value : Time in ms as a 32-bit unsigned integer 	121	0
6320	Length	Length : 4 bytes 	100	0
6320	Value	Value : Time in ms as a 32-bit unsigned integer 	120	0
6320	Length	Length : 4 bytes 	100	0
6320	Value	Value : Time in ms as a 32-bit unsigned integer 	121	0
6320	Length	Length : 4 bytes 	100	0
6320	Value	Value : 32-bit unsigned integer 	302	0
6320	Length	Value : The 3 bytes ( most to least significant ) and valid set of values for each byte are defined as follows : 	400	0
6320	Value	Value : The 3 bytes ( most to least significant ) and valid set of values for each byte are defined as follows : 	400	0
6320	Function	Function ( 8 bits ): Action to be performed . For line configuration , Function MUST be set to 8 ( Configure Connection Service Data ). This action type requests the Access Node ( i.e ., DSLAM ) to apply service configuration data contained in the line configuration TLVs to the DSL access line designated by the access line identifying TLVs . 	301	0
6320	Message Type	Message Type ( 8 bits ): Message Type has the same value as in the general header ( i.e ., 32 ). 	231	0
6320	Reserved	# of TLVs ( 16 bits ): The number of TLVs that follow , not counting TLVs encapsulated within other TLVs . 	231	0
6320	TLVs	TLVs : Two or more TLVs to identify a DSL access line and configure its service data . 	400	0
6320	Length	Value : ASCII string containing the profile name ( which the NAS learns from a policy server after a subscriber is authorized ). 	230	0
6320	Value	Value : ASCII string containing the profile name ( which the NAS learns from a policy server after a subscriber is authorized ). 	400	0
6320	x	0x500 : Specified access line does not exist . See the documentation of Result Code 0x500 in Section 3.6.1.4 for more information . The Result header field MUST be set to Failure ( 0x4 ). 	302	0
6320	x	0x501 : Loopback test timed out . The Result header field MUST be set to Failure ( 0x4 ). 	302	0
6320	x	0x503 : DSL access line status showtime 	240	0
6320	x	0x504 : DSL access line status idle 	240	0
6320	x	0x505 : DSL access line status silent 	240	0
6320	x	0x506 : DSL access line status training 	240	0
6320	x	0x508 : DSLAM resource not available . The Result header field MUST be set to Failure ( 0x04 ). 	302	0
6320	x	0x508 : DSLAM resource not available . The Result header field MUST be set to Failure ( 0x04 ). 	302	0
6320	x	0x509 : Invalid test parameter . The Result header field MUST be set to Failure ( 0x4 ). 	301	0
6320	Length	Value : Two unsigned 1-byte fields described below ( listed in order of most to least significant ). 	400	0
6320	Value	Value : Two unsigned 1-byte fields described below ( listed in order of most to least significant ). 	400	0
6320	Length	Length : 8 bytes 	100	0
6320	Value	Value : Two 32-bit unsigned integers . 	100	0
6320	Length	Length : Up to 128 bytes 	100	0
6320	Value	Value : UTF-8 encoded string of text . 	400	0
6325	V	o V ( Version ): 2-bit unsigned integer . See Section 3.2 . 	302	0
6325	R	o R ( Reserved ): 2 bits . See Section 3.3 . 	231	0
6325	M	o Op-Length ( Options Length ): 5-bit unsigned integer . See Section 3.5 . 	100	0
6325	Hop Count	o Hop Count : 6-bit unsigned integer . See Section 3.6 . 	231	0
6325	Egress RBridge Nickname	o Egress RBridge Nickname : 16-bit identifier . See Section 3.7.1 . 	231	0
6325	Ingress RBridge Nickname	o Ingress RBridge Nickname : 16-bit identifier . See Section 3.7.2 . 	231	0
6325	V	Version ( V ) is a 2-bit field . Version zero of TRILL is specified in this document . An RBridge RB1 MUST check the V field in a received TRILL-encapsulated frame . If the V field has a value not recognized by RB1 , then RB1 MUST silently discard the frame . The allocation of new TRILL Version numbers requires an IETF Standards Action . 	302	0
6325	V	Version ( V ) is a 2-bit field . Version zero of TRILL is specified in this document . An RBridge RB1 MUST check the V field in a received TRILL-encapsulated frame . If the V field has a value not recognized by RB1 , then RB1 MUST silently discard the frame . The allocation of new TRILL Version numbers requires an IETF Standards Action . 	302	0
6325	R	The two R bits are reserved for future use in extensions to this version zero of the TRILL protocol . They MUST be set to zero when the TRILL header is added by an ingress RBridge , transparently copied but otherwise ignored by transit RBridges , and ignored by egress RBridges . The allocation of reserved TRILL header bits requires an IETF Standards Action . 	500	0
6325	M	The Multi-destination bit ( see Section 2.4.2 ) indicates that the frame is to be delivered to a class of destination end stations via a distribution tree and that the egress RBridge nickname field specifies this tree . In particular : 	231	0
6325	Op-Length	There are provisions to express in the TRILL header that a frame is using an optional capability and to encode information into the header in connection with that capability . 	231	0
6325	Hop Count	The Hop Count field is a 6-bit unsigned integer . An Rbridge drops frames received with a hop count of zero , otherwise it decrements the hop count . ( This behavior is different from IPv4 and IPv6 in order to support the later addition of a traceroute-like facility that would be able to get a hop count exceeded from an egress RBridge .) 	231	0
6325	Egress RBridge Nickname	There are two cases for the contents of the egress RBridge nickname field , depending on the M bit ( see Section 3.4 ). The nickname is filled in by the ingress RBridge for TRILL Data frames and by the source RBridge for TRILL ESADI frames . 	231	0
6325	Ingress RBridge Nickname	The ingress RBridge nickname is set to a nickname of the ingress RBridge for TRILL Data frames and to a nickname of the source RBridge for TRILL ESADI frames . If the RBridge setting the ingress nickname has multiple nicknames , it SHOULD use the same nickname in the ingress field whenever it encapsulates a frame with any particular Inner.MacSA and Inner.VLAN value . This simplifies end node learning . 	231	0
6325	TRILL Header	o TRILL Header : Egress Nickname and Ingress Nickname . These specify nicknames of the egress and ingress RBridges , respectively , unless the frame is multi-destination , in which case the Egress Nickname specifies the distribution tree on which the frame is being sent . 	231	0
6325	Inner Ethernet Header	o Inner Ethernet Header : Inner Destination MAC Address ( Inner.MacDA ) and Inner Source MAC Address ( Inner.MacSA ): These addresses are as transmitted by the original end station , specifying , respectively , the destination and source of the inner frame . 	230	0
6325	Frame Check Sequence	Each Ethernet frame has a single Frame Check Sequence ( FCS ) that is computed to cover the entire frame , for detecting frame corruption due to bit errors on a link . Thus , when a frame is encapsulated , the original FCS is not included but is discarded . Any received frame for which the FCS check fails SHOULD be discarded ( this may not be possible in the case of cut through forwarding ). The FCS normally changes on encapsulation , decapsulation , and every TRILL hop due to changes in the outer destination and source addresses , the decrementing of the hop count , etc . 	301	0
6326	Type	o Type : TLV Type , set to GADDR-TLV 142 . 	240	0
6326	Length	o sub-TLVs : The Group Address TLV value consists of sub-TLVs formatted as described in [ RFC5305 ]. 	400	0
6326	Type	o Type : GADDR sub-TLV type , set to 1 ( GMAC-ADDR ). 	240	0
6326	Length	o RESV : Reserved . 4-bit fields that MUST be sent as zero and ignored on receipt . 	500	0
6326	RESV	o RESV : Reserved . 4-bit fields that MUST be sent as zero and ignored on receipt . 	500	0
6326	VLAN ID	o VLAN ID : This carries the 12-bit VLAN identifier for all subsequent MAC addresses in this sub-TLV , or the value zero if no VLAN is specified . 	230	0
6326	Type	o Type : sub-TLV type , set to MT-PORT-CAP VLAN-FLAGs sub-TLV 1 . 	240	0
6326	Length	o Port ID : An ID for the port on which the enclosing TRILL IIH PDU is being sent as specified in [ RFC6325 ], Section 4.4.2 . 	230	0
6326	Type	o Type : sub-TLV type , set to MT-PORT-CAP Enabled-VLANs sub-TLV 2 . 	240	0
6326	Length	o RESV : 4 reserved bits that MUST be sent as zero and ignored on receipt . 	500	0
6326	RESV	o RESV : 4 reserved bits that MUST be sent as zero and ignored on receipt . 	500	0
6326	Start VLAN ID	o Start VLAN ID : The 12-bit VLAN ID that is represented by the high order bit of the first byte of the VLAN bit-map . 	231	0
6326	Type	o Type : sub-TLV type , set to MT-PORT-CAP AppointedFwrdrs sub-TLV 3 . 	240	0
6326	Length	o Appointee Nickname : The nickname of the IS being appointed a forwarder . 	231	0
6326	Appointee Nickname	o Appointee Nickname : The nickname of the IS being appointed a forwarder . 	231	0
6326	RESV	o Start.VLAN , End.VLAN : These fields are the VLAN IDs of the appointment range , inclusive . To specify a single VLAN , the VLAN's ID appears as both the start and end VLAN . As specified in Section 4.4 of [ RFC6325 ], appointing an IS forwarder on a port for a VLAN not enabled on that port has no effect . 	240	0
6326	Start.VLAN	o Start.VLAN , End.VLAN : These fields are the VLAN IDs of the appointment range , inclusive . To specify a single VLAN , the VLAN's ID appears as both the start and end VLAN . As specified in Section 4.4 of [ RFC6325 ], appointing an IS forwarder on a port for a VLAN not enabled on that port has no effect . 	240	0
6326	End.VLAN	o Start.VLAN , End.VLAN : These fields are the VLAN IDs of the appointment range , inclusive . To specify a single VLAN , the VLAN's ID appears as both the start and end VLAN . As specified in Section 4.4 of [ RFC6325 ], appointing an IS forwarder on a port for a VLAN not enabled on that port has no effect . 	240	0
6326	Type	o Type : Router Capability sub-TLV type , set to 13 ( TRILL-VER ). 	240	0
6326	Length	o Length : 1 . 	100	0
6326	Type	o Type : Router Capability sub-TLV type , set to 6 ( NICKNAME ). 	240	0
6326	Length	o Nickname.Pri : An 8-bit unsigned integer priority to hold a nickname as specified in Section 3.7.3 of [ RFC6325 ]. 	230	0
6326	Nickname.Pri	o Nickname.Pri : An 8-bit unsigned integer priority to hold a nickname as specified in Section 3.7.3 of [ RFC6325 ]. 	231	0
6326	Tree Root Priority	o Tree Root Priority : This is an unsigned 16-bit integer priority to be a tree root as specified in Section 4.5 of [ RFC6325 ]. 	230	0
6326	Nickname	o Nickname : This is an unsigned 16-bit integer as specified in Section 3.7 of [ RFC6325 ]. 	231	0
6326	Type	o Type : Router Capability sub-TLV type , set to 7 ( TREES ). 	240	0
6326	Length	o Number of trees to compute : An unsigned 16-bit integer as specified in Section 4.5 of [ RFC6325 ]. 	100	0
6326	Number of trees to compute	o Number of trees to compute : An unsigned 16-bit integer as specified in Section 4.5 of [ RFC6325 ]. 	100	0
6326	Maximum trees able to compute	o Maximum trees able to compute : An unsigned 16-bit integer as specified in Section 4.5 of [ RFC6325 ]. 	400	0
6326	Number of trees to use	o Number of trees to use : An unsigned 16-bit integer as specified in Section 4.5 of [ RFC6325 ]. 	400	0
6326	Type	o Type : Router Capability sub-TLV type , set to 8 ( TREE-RT-IDs ). 	231	0
6326	Length	o Starting Tree Number : This identifies the starting tree number of the nicknames that are trees for the domain . This is set to 1 for the sub-TLV containing the first list . Other Tree-Identifiers sub-TLVs will have the number of the starting list they contain . In the event a tree identifier can be computed from two such sub - TLVs and they are different , then it is assumed that this is a transient condition that will get cleared . During this transient time , such a tree SHOULD NOT be computed unless such computation is indicated by all relevant sub-TLVs present . 	240	0
6326	Starting Tree Number	o Starting Tree Number : This identifies the starting tree number of the nicknames that are trees for the domain . This is set to 1 for the sub-TLV containing the first list . Other Tree-Identifiers sub-TLVs will have the number of the starting list they contain . In the event a tree identifier can be computed from two such sub - TLVs and they are different , then it is assumed that this is a transient condition that will get cleared . During this transient time , such a tree SHOULD NOT be computed unless such computation is indicated by all relevant sub-TLVs present . 	231	0
6326	Nickname	o Nickname : The nickname at which a distribution tree is rooted . 	231	0
6326	Type	o Type : Router Capability sub-TLV type , set to 10 ( INT-VLAN ). 	240	0
6326	Length	o Nickname : As specified in [ RFC6325 ], Section 4.2.4.4 , this field may be used to associate a nickname held by the originating IS with the VLAN range indicated . When not used in this way , it is set to zero . 	231	0
6326	Nickname	o Nickname : As specified in [ RFC6325 ], Section 4.2.4.4 , this field may be used to associate a nickname held by the originating IS with the VLAN range indicated . When not used in this way , it is set to zero . 	231	0
6326	Interested VLANS	o Interested VLANS : The Interested VLANs field is formatted as shown below . 	400	0
6326	Appointed Forwarder Status Lost Counter	o Appointed Forwarder Status Lost Counter : This is a count of how many times a port that was appointed forwarder for the VLANs in the range given has lost the status of being an appointed forwarder as discussed in Section 4.8.3 of [ RFC6325 ]. It is initialized to zero at an IS when the zeroth LSP sequence number is initialized . No special action need be taken at rollover; the counter just wraps around . 	240	0
6326	Root Bridges	o Root Bridges : The list of zero or more spanning tree root bridge IDs is the set of root bridge IDs seen for all ports for which the IS is appointed forwarder for the VLANs in the specified range as discussed in [ RFC6325 ], Section 4.9.3.2 . While , of course , only one spanning tree root could be seen on any particular port , there may be multiple ports in the same VLAN connected to different bridged LANs with different spanning tree roots . 	230	0
6326	Type	o Length : 4 + 2*n , where n is the number of secondary VLAN ID fields , which may be zero . 	100	0
6326	Length	o Length : 4 + 2*n , where n is the number of secondary VLAN ID fields , which may be zero . 	100	0
6326	RESV	o RESV : a 4-bit field that MUST be sent as zero and ignored on receipt . 	500	0
6326	Primary VLAN ID	o Secondary VLAN ID : This identifies a secondary VLAN in the VLAN Group . 	231	0
6326	Secondary VLAN ID	o Secondary VLAN ID : This identifies a secondary VLAN in the VLAN Group . 	231	0
6326	Type	o Type : Extended Reachability sub-TLV type , set to MTU sub-TLV 28 . 	400	0
6326	Length	o F : Failed . This bit is a one if MTU testing failed on this link at the required campus-wide MTU . 	210	0
6326	F	o F : Failed . This bit is a one if MTU testing failed on this link at the required campus-wide MTU . 	210	0
6326	Reserved	o MTU : This field is set to the largest successfully tested MTU size for this link , or zero if it has not been tested , as specified in Section 4.3.2 of [ RFC6325 ]. 	400	0
6326	MTU	o MTU : This field is set to the largest successfully tested MTU size for this link , or zero if it has not been tested , as specified in Section 4.3.2 of [ RFC6325 ]. 	400	0
6326	Type	o Length : 1 + 9*n , where n is the number of neighbor records which may be zero . 	100	0
6326	Length	o Length : 1 + 9*n , where n is the number of neighbor records which may be zero . 	100	0
6326	S	o S : Smallest flag . If this bit is a one , then the list of neighbors includes the neighbor with the smallest MAC address considered as an unsigned integer . 	231	0
6326	L	o L : Largest flag . If this bit is a one , then the list of neighbors includes the neighbor with the largest MAC address considered as an unsigned integer . 	231	0
6326	RESV	o RESV : These 7 bits are reserved use and MUST be sent as zero and ignored on receipt . 	500	0
6326	F	o F : failed . This bit is a one if MTU testing to this neighbor failed at the required campus-wide MTU ( see [ RFC6325 ], Section 4.3.1 ). 	302	0
6326	MTU	o MTU : This field is set to the largest successfully tested MTU size for this neighbor or to zero if it has not been tested . 	400	0
6326	MAC Address	o MAC Address : The MAC address of the neighbor as in the IS Neighbor TLV ( 6 ). 	230	0
6326	MTU	MTU-PROBE-PDU PDU Number : 23 MTU-ACK-PDU PDU Number : 28 	240	0
6329	1	2 ) bridge the original customer frame to the set of local UNI ports that are associated with the I-SID . 	400	0
6329	Length	o MCID ( 51 bytes ): The complete MCID defined in IEEE 802.1Q , which identifies an SPT Region on the basis of matching assignments of VIDs to control regimes ( xSTP , SPBV , SPBM , etc .). Briefly , the MCID consists of a 1-byte format selector , a 32-byte configuration name , a 2-byte revision level , and finally a 16-byte signature of type HMAC-MD5 over an array of 4096 elements that contain identifiers of the use of the corresponding VID . Refer to Section 13.8 of [ 802.1aq ] for the exact format and procedure . Note that the use of the VID does not include specification of a specific SPB ECT-ALGORITHM; rather , it is coarser grain . 	400	0
6329	Length	o Length : The size of the value . 	100	0
6329	A	o A ( 2 bits ): The Agreement Number 0-3 , which aligns with the BPDU's Agreement Number concept [ 802.1aq ]. When the Agreement Digest for this node changes , this number is incremented . The node then checks for Agreement Digest match ( as below ). The new local Agreement Number and the updated local Discarded Agreement Number are then transmitted with the new Agreement Digest to the node's neighbors in the Hello PDU . Once an Agreement Number has been sent , it is considered outstanding until a matching or more recent Discarded Agreement Number is received from the neighbor . 	230	0
6329	Length	o Length : The size of the value is ECT-VID Tuples*6 bytes . Each 6-byte part of the ECT-VID tuple is formatted as follows : 	100	0
6329	Length	o CIST Root Identifier ( 64 bits ): The CIST Root Identifier is for SPB interworking with Rapid STP ( RSTP ) and Multiple STP ( MSTP ) at SPT Region boundaries . This is an imported value from a spanning tree . 	231	0
6329	Bridge Priority	o Bridge Priority ( 16 bits ): Bridge priority is the 16 bits that together with the 6 bytes of the System ID form the Bridge Identifier . This allows SPB to build a compatible spanning tree using link state by combining the Bridge Priority and the System ID to form the 8-byte Bridge Identifier . The 8-byte Bridge Identifier is also the input to the 16 predefined ECT tie-breaker algorithms . 	231	0
6329	SPSourceID	o SPSourceID : a 20-bit value used to construct multicast DAs as described below for multicast frames originating from the origin ( SPB node ) of the Link State Packet ( LSP ) that contains this TLV . More details are in IEEE [ 802.1aq ]. 	400	0
6329	SPVID	o SPVID ( 12 bits ): The SPVID is the Shortest Path VID assigned for the Base VID to this node when using SPBV mode . It is not defined for SPBM mode and Must be 0 for SPBM mode B-VIDs . 	301	0
6329	Length	o ECT-ALGORITHM : ECT-ALGORITHM is advertised when the bridge supports a given ECT-ALGORITHM ( by OUI/Index ) on a given VID . 	240	0
6329	Length	o SPB-LINK-METRIC : the administrative cost or weight of using this link as a 24-bit unsigned number . This metric applies to the use of this link for SPB traffic only . Smaller numbers indicate lower weights and are more likely to carry SPB traffic . Only one metric is allowed per SPB instance per link . If multiple metrics are required , multiple SPB instances Must be used , either within IS-IS or within several independent IS-IS instances . If this metric is different at each end of a link , the maximum of the two values Must be used in all SPB calculations for the weight of this link . The maximum SPB-LINK-METRIC value 2^24 - 1 has a special significance; this value indicates that although the IS-IS adjacency has formed , incompatible values have been detected in parameters configured within SPB itself ( for example , different regions ), and the link Must Not be used for carrying SPB traffic . Full details are found in [ 802.1aq ]. 	231	0
6329	Num of Ports	o Port Identifier : the standard IEEE port identifier used to build a spanning tree associated with this link . 	231	0
6329	Port Identifier	o Port Identifier : the standard IEEE port identifier used to build a spanning tree associated with this link . 	231	0
6329	Length	o ECT-ALGORITHM : ECT-ALGORITHM is advertised when the bridge supports a given ECT-ALGORITHM ( by OUI/Index ) on a given VID . 	240	0
6329	Length	o B-MAC ADDRESS : a unicast address of this node . It may be the single nodal address , or it may address a port or any other level of granularity relative to the node . In the case where the node only has one B-MAC address , this Should be the same as the SYSID of the node . To add multiple B-MACs this TLV MUST be repeated per additional B-MAC . 	230	0
6329	Length	o Length : Total number of bytes contained in the value field . The number of MAC address associated with the SPVID is computed by ( Length - 2)/7 . 	100	0
6329	SPVID	o SPVID ( 12 bits ): The SPVID and by association Base VID and the ECT-ALGORITHM and SPT Set that the MAC addresses defined below will use . If the SPVID is not allocated the SPVID Value is 0 . Note that if the ECT-ALGORITHM in use is spanning tree algorithm this value Must be populated with the Base VID and the MAC Must be populated . 	400	0
6330	SBN	o Source Block Number ( SBN ): 8-bit unsigned integer . A non-negative integer identifier for the source block that the encoding symbols within the packet relate to . 	230	0
6330	Encoding Symbol ID	o Encoding Symbol ID ( ESI ): 24-bit unsigned integer . A non-negative integer identifier for the encoding symbols within the packet . 	231	0
6330	Z	o The number of source blocks ( Z ): 8-bit unsigned integer . 	201	0
6330	Al	These parameters are all positive integers . The encoded Scheme - specific Object Transmission Information is a 4-octet field consisting of the parameters Z , N , and Al as shown in Figure 3 . 	301	0
6330	Al	o Al : the symbol alignment parameter 	231	0
6330	Z	o Z : the number of source blocks 	201	0
6330	N	o N : the number of sub-blocks in each source block 	200	0
6330	SBN	o Source Block Number ( SBN ) 	220	0
6330	Encoding Symbol ID	o Encoding Symbol ID ( ESI ) 	231	0
6330	Al	o SS : a parameter where the desired lower bound on the sub-symbol size is SS*Al 	231	0
6330	Al	o Al : a symbol alignment parameter , in octets 	231	0
6330	Z	o Z : the number of source blocks 	201	0
6330	N	These parameters MUST be set so that ceil(ceil(F/T)/Z ) <= K'_max . Recommendations for derivation of these parameters are provided in Section 4.3 . 	302	0
6330	Z	o ( KL , KS , ZL , ZS ) = Partition[Kt , Z ], 	240	0
6330	N	Then , the object MUST be partitioned into Z = ZL + ZS contiguous source blocks , the first ZL source blocks each having KL*T octets , i.e ., KL source symbols of T octets each , and the remaining ZS source blocks each having KS*T octets , i.e ., KS source symbols of T octets each . 	301	0
6330	SBN	o Source Block Number ( SBN ) 	220	0
6330	Encoding Symbol ID	o Encoding Symbol ID ( ESI ) 	231	0
6330	Encoding Symbol ID	o Encoding Symbol ID ( ESI ): information that uniquely identifies each encoding symbol associated with a source block for sending and receiving purposes . 	231	0
6332	BT	o BT ( 8 bits ): Field that denotes the type for this block format . The MA report block is identified by the constant 11 . 	231	0
6332	MA Method	o MA Method ( 8 bits ): Field that denotes the type of the MA method ( e.g ., simple join , RAMS , etc .). See Section 7.3 for the values registered with IANA . 	231	0
6332	Block Length	o Block Length ( 16 bits ): The length of this report block , including the header , in 32-bit words minus one . 	100	0
6332	SSRC of the Primary Multicast Stream	o SSRC of the Primary Multicast Stream ( 32 bits ): Field that denotes the SSRC of the primary multicast stream . 	231	0
6332	Status	o Status ( 16 bits ): Field that denotes the status code for the MA operation . 	231	0
6332	Rsvd .	o Rsvd . ( 16 bits ): The RTP receiver MUST set this field to zero . The recipient MUST ignore this field when received . 	500	0
6332	Type	o Type : A single-octet identifier that defines the type of the parameter represented in this TLV element . 	231	0
6332	Length	o Length : A two-octet field that indicates the length ( in octets ) of the TLV element excluding the Type and Length fields and the 8-bit Reserved field between them . Note that this length does not include any padding that is needed for alignment . 	100	0
6332	Value	o Value : Variable-size set of octets that contains the specific value for the parameter . 	231	0
6332	Type	o SFGMP Join Time ( 32 bits ): TLV element that denotes the greater of zero or the time difference ( in ms ) between the instant the SFGMP Join message was sent and the instant the first packet was 	121	0
6332	Type	o Application Request-to-Multicast Delta Time ( 32 bits ): OPTIONAL TLV element that denotes the time difference ( in ms ) between the instant the application became aware it would join a new multicast session and the instant the first RTP packet was received from the primary multicast stream . If no such packet has been received , this element MUST NOT exist in the report block . 	122	0
6332	Type	o Application Request-to-Presentation Delta Time ( 32 bits ): OPTIONAL TLV element that denotes the time difference ( in ms ) between the instant the application became aware it would join a new multicast session and the instant the media was first presented . If the RTP receiver cannot successfully present the media , this element MUST NOT exist in the report block . 	120	0
6332	Type	We next present the TLV elements that can be used when the RTP receiver supports and uses the RAMS method described in [ RFC6285 ]. However , if the RTP receiver does not send a rapid acquisition request , the following TLV elements MUST NOT exist in the MA report block . Some elements may or may not exist depending on whether or not the RTP receiver receives any packet from the unicast burst and/or the primary multicast stream . These are explained below . 	400	0
6332	Type	o RAMS Request-to-RAMS Information Delta Time ( 32 bits ): OPTIONAL TLV element that denotes the time difference ( in ms ) between the instant the rapid acquisition request was sent and the instant the 	121	0
6332	Type	o RAMS Request-to-Burst Delta Time ( 32 bits ): OPTIONAL TLV element that denotes the time difference ( in ms ) between the instant the rapid acquisition request was sent and the instant the first burst packet was received in the unicast session . If no burst packet has been received , this element MUST NOT exist in the report block . 	122	0
6332	Type	o RAMS Request-to-Multicast Delta Time ( 32 bits ): OPTIONAL TLV element that denotes the time difference ( in ms ) between the instant the rapid acquisition request was sent and the instant the first RTP packet was received from the primary multicast stream . If no such packet has been received , this element MUST NOT exist in the report block . 	121	0
6332	Type	o RAMS Request-to-Burst-Completion Delta Time ( 32 bits ): OPTIONAL TLV element that denotes the time difference ( in ms ) between the instant the rapid acquisition request was sent and the instant the last burst packet was received in the unicast session . If no burst packet has been received , this element MUST NOT exist in the report block . 	121	0
6332	Type	o Number of Duplicate Packets ( 32 bits ): OPTIONAL TLV element that denotes the number of duplicate packets due to receiving the same packet in both unicast and primary multicast RTP sessions . If no RTP packet has been received from the primary multicast stream , this element MUST NOT exist . If no burst packet has been received in the unicast session , the value of this element MUST be set to zero . 	231	0
6332	Type	o Size of Burst-to-Multicast Gap ( 32 bits ): OPTIONAL TLV element that denotes the greater of zero or the difference between the sequence number of the first multicast packet ( received from the primary multicast stream ) and the sequence number of the last burst packet minus 1 ( considering the wrapping of the sequence 	200	0
6332	Type	Type : 17 	220	0
6344	Signal Type	The signal types can never be mixed in a VCG; hence , a VCAT call contains only one signal type . This field can take the following values and MUST never change over the lifetime of a VCG [ ANSI-T1.105 ] [ ITU-T-G.707 ] [ ITU-T-G.709 ] [ ITU-T-G.7043 ]: 	231	0
6344	Number of Members	This field is an unsigned integer that MUST indicate the total number of members in the VCG ( not just the call ). This field MUST be changed ( over the life of the VCG ) to indicate the current number of members . 	231	0
6344	LCR	This field can take the following values and MUST NOT change over the life of a VCG : 	240	0
6344	Action	This field is used to indicate the relationship between the call and the VCG and has the following values : 	240	0
6361	Code	Only LCP Code values 1 through 7 ( Configure-Request , Configure-Ack , Configure-Nak , Configure-Reject , Terminate-Request , Terminate-Ack , and Code-Reject ) are used . All other codes SHOULD result in a TNCP Code-Reject reply . 	231	0
6361	Identifier	Identifier and Length 	100	0
6361	Length	Identifier and Length 	100	0
6374	T	When the message arrives at B , the following timestamp is recorded in the message : 	121	0
6374	T	At this point , B transmits the message back to A , recording within it the following timestamp : 	121	0
6374	T	When the message arrives back at A , the following timestamp is recorded in the message : 	121	0
6374	T	( Strictly speaking , it is not necessary that the fourth timestamp , T4 , actually be written in the message , but this is convenient for some implementations and useful if the message is to be forwarded on to an external measurement system .) 	302	0
6374	Version	Version : Currently set to 0 . 	220	0
6374	Flags	Flags : The format of the Flags field is shown below . 	220	0
6374	R	R : Query/Response indicator . Set to 0 for a Query and 1 for a Response . 	210	0
6374	T	T : Traffic-class-specific measurement indicator . Set to 1 when the measurement operation is scoped to packets of a particular traffic class ( DSCP value ), and 0 otherwise . When set to 1 , the DS field of the message indicates the measured traffic class . 	210	0
6374	Control Code	Control Code : Set as follows according to whether the message is a Query or a Response as identified by the R flag . 	400	0
6374	Message Length	Message Length : Set to the total length of this message in bytes , including the Version , Flags , Control Code , and Message Length fields as well as the TLV Block , if any . 	100	0
6374	DFlags	DFlags : The format of the DFlags field is shown below . 	400	0
6374	X	X : Extended counter format indicator . Indicates the use of extended ( 64-bit ) counter values . Initialized to 1 upon creation ( and prior to transmission ) of an LM Query and copied from an LM Query to an LM response . Set to 0 when the LM message is transmitted or received over an interface that writes 32-bit counter values . 	231	0
6374	B	B : Octet ( byte ) count . When set to 1 , indicates that the Counter 1-4 fields represent octet counts . The octet count applies to all packets within the LM scope ( Section 2.9.9 ), and the octet count of a packet sent or received over a channel includes the total length of that packet ( but excludes headers , labels , or framing of the channel itself ). When set to 0 , indicates that the Counter 1-4 fields represent packet counts . 	210	0
6374	Session Identifier	Session Identifier : Set arbitrarily in a query and copied in the response , if any . This field uniquely identifies a measurement operation ( also called a session ) that consists of a sequence of messages . All messages in the sequence have the same Session Identifier . 	202	0
6374	DS	DS : When the T flag is set to 1 , this field is set to the DSCP value [ RFC3260 ] that corresponds to the traffic class being measured . For MPLS , where the traffic class of a channel is identified by the three-bit Traffic Class in the channel's LSE [ RFC5462 ], this field 	210	0
6374	Origin Timestamp	Origin Timestamp : Timestamp recording the transmit time of the query message . 	121	0
6374	TLV Block	TLV Block : Zero or more TLV fields . 	400	0
6374	Version	Flags : As specified in Section 3.1 . The T flag in a DM message is set to 1 . 	210	0
6374	Flags	Flags : As specified in Section 3.1 . The T flag in a DM message is set to 1 . 	210	0
6374	Control Code	Message Length : Set to the total length of this message in bytes , including the Version , Flags , Control Code , and Message Length fields as well as the TLV Block , if any . 	100	0
6374	Message Length	Message Length : Set to the total length of this message in bytes , including the Version , Flags , Control Code , and Message Length fields as well as the TLV Block , if any . 	100	0
6374	Session Identifier	Session Identifier : As specified in Section 3.1 . 	202	0
6374	DS	Timestamp 1-4 : Referring to Section 2.4 , when a query is sent from A , Timestamp 1 is set to T1 and the other timestamp fields are set to 0 . When the query is received at B , Timestamp 2 is set to T2 . At this point , B copies Timestamp 1 to Timestamp 3 and Timestamp 2 to Timestamp 4 , and re-initializes Timestamp 1 and Timestamp 2 to 0 . When B transmits the response , Timestamp 1 is set to T3 . When the response is received at A , Timestamp 2 is set to T4 . The actual formats of the timestamp fields written by A and B are indicated by the Querier Timestamp Format and Responder Timestamp Format fields respectively . 	210	0
6374	TLV Block	TLV Block : Zero or more TLV fields . 	400	0
6378	PT	The PT field indicates the currently configured protection architecture type , this SHOULD be validated to be consistent for both ends of the protection domain . If an inconsistency is detected , then an alarm SHALL be sent to the management system . The following are the possible values : 	231	0
6378	R	This field indicates that the transmitting end point is configured to work in revertive mode . If there is an inconsistency between the two end points , i.e ., one end point is configured for revertive action and the second end point is in non-revertive mode , then the management system SHOULD be notified . The following are the possible values : 	210	0
6378	FPath	The FPath field indicates which path ( i.e ., working or protection ) is identified to be in a fault condition or affected by an administrative command , when a fault or command is indicated by the Request field to be in effect . The following are the possible values : 	240	0
6378	Path	The Path field indicates which data is being transported on the protection path . Under normal conditions , the protection path ( especially , in 1:1 or 1:n architecture ) does not need to carry any user data traffic . If there is a failure/degrade condition on one of the working paths , then that working path's data traffic will be transported over the protection path . The following are the possible values : 	400	0
6378	TLV Length	o TLV Length : indicates the number of bytes included in the optional TLV information . For the basic PSC protocol operation described in this document , this value MUST be 0 . 	100	0
6378	Optional TLVs	o Optional TLVs : this includes any additional information formatted as TLV units . There are no TLV units defined for the basic PSC operation . 	400	0
6388	S	The P2MP Capability TLV MUST be advertised in the LDP Initialization message . Advertisement of the P2MP Capability indicates support of the procedures for P2MP LSP setup detailed in this document . If the peer has not advertised the corresponding capability , then label messages using the P2MP FEC Element SHOULD NOT be sent to the peer . 	231	0
6388	Type	Address Family : Two octet quantity containing a value from IANA's " Address Family Numbers " registry that encodes the address family for the Root LSR Address . 	230	0
6388	Address Family	Address Family : Two octet quantity containing a value from IANA's " Address Family Numbers " registry that encodes the address family for the Root LSR Address . 	230	0
6388	Address Length	Root Node Address : A host address encoded according to the Address Family field . 	230	0
6388	Root Node Address	Root Node Address : A host address encoded according to the Address Family field . 	230	0
6388	Opaque Length	Opaque Value : One or more MP opaque value elements , uniquely identifying the P2MP LSP in the context of the root node . This is described in the next section . 	400	0
6388	Type	Type : The Type of the LDP MP opaque value element . IANA maintains a registry of basic types ( see Section 11 ). 	231	0
6388	Length	Value : String of Length octets , to be interpreted as specified by the Type field . 	100	0
6388	Value	Value : String of Length octets , to be interpreted as specified by the Type field . 	400	0
6388	Type	Extended Type : The Extended Type of the LDP MP opaque value element . IANA maintains a registry of extended types ( see Section 11 ). 	231	0
6388	Extended Type	Extended Type : The Extended Type of the LDP MP opaque value element . IANA maintains a registry of extended types ( see Section 11 ). 	231	0
6388	Length	Value : String of Length octets , to be interpreted as specified by the Type field . 	100	0
6388	Value	Value : String of Length octets , to be interpreted as specified by the Type field . 	400	0
6388	Type	Type : 1 	240	0
6388	Length	Value : A 32-bit integer , unique in the context of the root , as identified by the root's address . 	230	0
6388	Value	Value : A 32-bit integer , unique in the context of the root , as identified by the root's address . 	230	0
6388	S	The MP2MP Capability TLV MUST be advertised in the LDP Initialization message . Advertisement of the MP2MP Capability indicates support of the procedures for MP2MP LSP setup detailed in this document . If the peer has not advertised the corresponding capability , then label messages using the MP2MP upstream and downstream FEC Elements SHOULD NOT be sent to the peer . 	231	0
6388	Length	Length : Length of the LDP MP Status Value in octets . 	100	0
6388	Value	Value : One or more LDP MP Status Value elements . 	231	0
6388	Type	Type : The type of the LDP MP Status Value Element . IANA maintains a registry of status value types ( see Section 11 ). 	231	0
6388	Length	Value : String of Length octets , to be interpreted as specified by the Type field . 	100	0
6388	Value	Value : String of Length octets , to be interpreted as specified by the Type field . 	100	0
6388	Length	Length : 1 	100	0
6388	Status Code	Status Code : 1 = MBB request 	302	0
6388	LDP MP MBB Capability	LDP MP MBB Capability : The MBB Capability Parameter ( 0x050A ) 	231	0
6388	S	If an LSR has not advertised that it is MBB capable , its LDP peers MUST NOT send it messages that include MBB parameters . If an LSR receives a Label Mapping message with an MBB parameter from downstream LSR-D and its upstream LSR-U has not advertised that it is MBB capable , the LSR MUST send an MBB notification immediately to LSR-U ( see Section 8.4 ). If this happens , an MBB MP LSP will not be established , but a normal MP LSP will be the result . 	303	0
6388	Typed Wcard	Type : The type of FEC Element Type . Either the P2MP FEC Element or the MP2MP FEC Element using the values defined for those FEC Elements when carried in the FEC TLV as defined in this document . 	231	0
6388	Type	Type : The type of FEC Element Type . Either the P2MP FEC Element or the MP2MP FEC Element using the values defined for those FEC Elements when carried in the FEC TLV as defined in this document . 	231	0
6388	AFI	AFI : Address Family , two-octet quantity containing a value from IANA's " Address Family Numbers " registry . 	231	0
6395	Local Interface Identifier	The 32-bit Local Interface Identifier is selected such that it is unique among the router's PIM-enabled interfaces . That is , there MUST NOT be two PIM interfaces with the same Local Interface Identifier . While an interface is up , the Identifier MUST always be the same once it has been allocated . If an interface goes down and comes up , the router SHOULD use the same Identifier . If a node goes down and comes up again , the Identifier for each interface MAY change . Many systems make use of an ifIndex [ RFC2863 ] as a Local Interface Identifier . 	231	0
6395	Router Identifier	The 32-bit Router Identifier may be used to uniquely identify the router . The requirements for the scope in which the Router Identifier needs to be unique depend on the protocols that utilize it . It may need to be unique within some administrative domain , or it may possibly be globally unique . 	230	0
6395	Router Identifier	Router Identifier : The Router Identifier is a 4-byte identifier uniquely identifying the router within some scope . It MAY be 0 when no protocols require a Router Identifier . The field MUST contain a valid Router Identifier or the value zero . 	230	0
6395	Local Interface Identifier	Local Interface Identifier : The Local Interface Identifier is a 4-byte identifier that is unique among all PIM-enabled interfaces on a router . 	231	0
6397	Collector BGP ID	Collector Latitude : Geographic latitude of the BGP collector in WGS84 [ WGS-84 ] datum decimal degrees format stored as a single precision float . 	100	0
6397	Collector Latitude	Collector Latitude : Geographic latitude of the BGP collector in WGS84 [ WGS-84 ] datum decimal degrees format stored as a single precision float . 	100	0
6397	Collector Longitude	Collector Longitude : Geographic longitude of the BGP collector in WGS84 [ WGS-84 ] datum decimal degrees format stored as a single precision float . 	231	0
6397	Peer Count	Peer Count : Defined in the MRT format [ RFC6396 ]. 	400	0
6397	Peer Type	Peer Type : Defined in the MRT format [ RFC6396 ]. 	400	0
6397	Peer BGP ID	Peer Latitude : Geographic latitude of the BGP peer in WGS84 [ WGS-84 ] datum decimal degrees format stored as a single precision float . 	100	0
6397	Peer Latitude	Peer Latitude : Geographic latitude of the BGP peer in WGS84 [ WGS-84 ] datum decimal degrees format stored as a single precision float . 	100	0
6397	Peer Longitude	Peer Longitude : Geographic longitude of the BGP peer in WGS84 [ WGS-84 ] datum decimal degrees format stored as a single precision float . 	231	0
6407	Key Packets	o Key Packets ( variable ) -- Several types of key packets are defined . Each key packet has the following format . 	400	0
6407	Key Packet Attributes	o Key Packet Attributes ( variable length ) -- Contains key information . The format of this field is specific to the value of the KD Type field . The following sections describe the format of each KD Type . 	400	0
6407	KEK Attributes	The registration procedure is Standards Action . Values 9-127 have been added and are designated Unassigned . Values 128-255 have been added and are designated Private Use . Values 256-32767 have been added and are designated Unassigned . 	301	0
6416	PT	Payload Type ( PT ): The assignment of an RTP payload type for this packet format is outside the scope of this document and will not be specified here . It is expected that the RTP profile for a particular class of applications will assign a payload type for this encoding , or if that is not done , then a payload type in the dynamic range SHALL be chosen by means of an out-of-band signaling protocol ( e.g ., H.245 , SIP ). 	231	0
6416	X	Sequence Number : Incremented by 1 for each RTP data packet sent , starting , for security reasons , with a random initial value . 	100	0
6416	M	Marker ( M ) bit : The marker bit is set to 1 to indicate the last RTP packet ( or only RTP packet ) of a VOP . When multiple VOPs are carried in the same RTP packet , the marker bit is set to 1 . 	210	0
6416	PT	Payload Type ( PT ): The assignment of an RTP payload type for this packet format is outside the scope of this document and will only be restricted here . It is expected that the RTP profile for a particular class of applications will assign a payload type for this encoding , or if that is not done , then a payload type in the dynamic range shall be chosen by means of an out-of-band signaling protocol ( e.g ., H.245 , SIP ). In the dynamic assignment of RTP payload types for scalable streams , the server SHALL assign a different value to each layer . The dependency relationships between the enhanced layer and the base layer MUST be signaled as specified in [ RFC5583 ]. An example of the use of such signaling for scalable audio streams can be found in [ RFC5691 ]. 	231	0
6416	M	Marker ( M ) bit : The marker bit indicates audioMuxElement boundaries . It is set to 1 to indicate that the RTP packet contains a complete audioMuxElement or the last fragment of an audioMuxElement . 	210	0
6424	MTU	The MTU is the size in octets of the largest MPLS frame ( including label stack ) that fits on the interface to the Downstream Label Switching Router ( LSR ). 	100	0
6424	Address Type	The Address Type indicates if the interface is numbered or unnumbered . It also determines the length of the Downstream IP Address and Downstream Interface fields . 	240	0
6424	DS Flags	DS Flags 	302	0
6424	Return Code	The Return Code is set to zero by the sender . The receiver can set it to one of the values specified in the " Multi-Protocol Label Switching ( MPLS ) Label Switched Paths ( LSPs ) Ping Parameters " registry , " Return Codes " sub-registry . 	302	0
6424	Return Subcode	The Return Subcode is set to zero by the sender . The receiver can set it to one of the values specified in the " Multi-Protocol Label Switching ( MPLS ) Label Switched Paths ( LSPs ) Ping Parameters " registry , " Return Codes " sub-registry . This field is filled in with the stack-depth for those codes that specify the stack-depth . For all other codes , the Return Subcode MUST be set to zero . 	201	0
6424	Sub-tlv Length	Sub-tlv Length 	100	0
6424	Multipath Type	Multipath Type 	240	0
6424	Multipath Length	Multipath Length 	100	0
6424	Downstream Label	A Downstream label is 24 bits , in the same format as an MPLS label minus the Time to Live ( TTL ) field , i.e ., the MSBit of the label is bit 0 , the LSBit is bit 19 , the Traffic Class ( TC ) field [ RFC5462 ] is bits 20-22 , and S is bit 23 . The replying router SHOULD fill in the TC field and S bit; the LSR receiving the echo reply MAY choose to ignore these . 	210	0
6424	Protocol	This specifies the label distribution protocol for the Downstream label . 	231	0
6424	Operation Type	The operation type specifies the action associated with the FEC stack change . The following operation types are defined : 	231	0
6424	Address Type	The Address Type indicates the remote peer's address type . The Address Type is set to one of the following values . The length of the peer address is determined based on the address type . The address type MAY be different from the address type included in the Downstream Detailed Mapping TLV . This can happen when the LSP goes over a tunnel of a different address family . The address type MAY be set to Unspecified if the peer address is either unavailable or the transit router does not wish to provide it for security or administrative reasons . 	240	0
6424	Reserved	Reserved 	500	0
6425	Address Family	Two-octet quantity containing a value from ADDRESS FAMILY NUMBERS in [ IANA-AF ] that encodes the address family for the Root LSR Address . 	230	0
6425	Address Length	Address Length 	100	0
6425	Opaque Length	The length of the opaque value , in octets . Depending on the length of the Root LSR Address , this field may not be aligned to a word boundary . 	100	0
6427	Version	Version 	220	0
6427	Reserved	Reserved 	500	0
6427	Flags	Two flags are defined . The reserved flags in this field MUST be set to zero on transmission and ignored on receipt . 	500	0
6427	Refresh Timer	The maximum time between successive FM messages specified in seconds . The range is 1 to 20 . The value 0 is not permitted . 	122	0
6427	Type	Type 	240	0
6427	Length	Length 	100	0
6427	Value	Octet string of Length octets that encodes information to be interpreted as specified by the Type field . 	400	0
6427	Value	Value TLV Name ----- ------- 0 Reserved ( not available for allocation ) 1 Interface Identifier TLV 2 Global Identifier 	240	0
6431	Port Range Mask	The Port Range Value and Port Range Mask are used to specify one range of ports ( contiguous or non-contiguous ) pertaining to a given IP address . Concretely , the Port Range Mask and Port Range Value are used to notify a remote peer about the Port Mask to be applied when selecting a port value as a source port . The Port Range Value is used to infer a set of allowed port values . A Port Range Mask defines a set of ports that all have in common a subset of pre-positioned bits . This set of ports is also referred to as the port range . 	231	0
6431	M	o M : mode bit . The mode bit indicates the mode for which the port range is allocated . A value of zero indicates that the port ranges are delegated , while a value of 1 indicates that the port ranges are port-forwarded . 	210	0
6431	Port Range Value	o Port Range Value ( PRV ): The PRV indicates the value of the significant bits of the Port Mask . By default , no PRV is assigned . 	231	0
6431	Port Range Mask	o Port Range Mask ( PRM ): The Port Range Mask indicates the position of the bits that are used to build the Port Range Value . By default , no PRM value is assigned . The 1 values in the Port Range Mask indicate by their position the significant bits of the Port Range Value . 	210	0
6431	M	o M : mode bit . The mode bit indicates the mode for which the port range is allocated . A value of zero indicates that the port ranges are delegated , while a value of 1 indicates that the port ranges are port-forwarded . 	210	0
6435	Reserved	Reserved : The Reserved field MUST be set to zero on transmission and SHOULD be ignored on receipt . 	500	0
6435	Refresh Timer	Refresh Timer : The Refresh Timer is the maximum time between successive LI messages specified in seconds . The default value is 1 . The value 0 is not permitted . When a lock is applied , a refresh timer is chosen . This value MUST NOT be changed for the duration of that lock . A node receiving an LI message with a changed refresh timer MAY ignore the new value and continue to apply the old value . 	122	0
6435	MEP Source ID TLV	MEP Source ID TLV : This is one of the three MEP Source ID TLVs defined in [ 3 ] and identifies the MEP that originated the LI message . 	231	0
6450	Type	Length ( 2 octets ) specifies the length of the value field . Depending on the option type , it can be from 0 to 65535 . 	100	0
6450	Length	Length ( 2 octets ) specifies the length of the value field . Depending on the option type , it can be from 0 to 65535 . 	100	0
6455	FIN	Indicates that this is the final fragment in a message . The first fragment MAY also be the final fragment . 	231	0
6455	RSV1	MUST be 0 unless an extension is negotiated that defines meanings for non-zero values . If a nonzero value is received and none of the negotiated extensions defines the meaning of such a nonzero value , the receiving endpoint MUST _Fail the WebSocket Connection _. 	302	0
6455	RSV2	MUST be 0 unless an extension is negotiated that defines meanings for non-zero values . If a nonzero value is received and none of the negotiated extensions defines the meaning of such a nonzero value , the receiving endpoint MUST _Fail the WebSocket Connection _. 	302	0
6463	Option Type	o Option Length : 8-bit unsigned integer , representing the length of the Redirect-Capability mobility option in octets , excluding the Option Type and Length fields . The Option Length MUST be set to 2 . 	100	0
6463	Option Length	o Option Length : 8-bit unsigned integer , representing the length of the Redirect-Capability mobility option in octets , excluding the Option Type and Length fields . The Option Length MUST be set to 2 . 	100	0
6463	Reserved	o Reserved : This field is reserved for future use . This field MUST be set to zero by the sender and ignored by the receiver . 	500	0
6463	Option Type	o Option Length : 8-bit unsigned integer , representing the length of the Redirect mobility option in octets , excluding the Option Type and Length fields . If the ' K ' flag is set and ' N ' is unset , then the length MUST be 18 . If the ' K ' flag is unset and ' N ' is set , then the length MUST be 6 . Both the ' K ' and ' N ' flags cannot be set or unset simultaneously . 	100	0
6463	Option Length	o Option Length : 8-bit unsigned integer , representing the length of the Redirect mobility option in octets , excluding the Option Type and Length fields . If the ' K ' flag is set and ' N ' is unset , then the length MUST be 18 . If the ' K ' flag is unset and ' N ' is set , then the length MUST be 6 . Both the ' K ' and ' N ' flags cannot be set or unset simultaneously . 	100	0
6463	Reserved	o Reserved : This field is reserved for future use . MUST be set to zero by the sender and ignored by the receiver . 	500	0
6463	Optional IPv6 r2LMA Address	o Optional IPv6 r2LMA Address : the unicast IPv6 address of the r2LMA . This value is present when the corresponding PBU was sourced from an IPv6 address . 	230	0
6463	Optional IPv4 r2LMA Address	o Optional IPv4 r2LMA Address : the IPv4 address of the r2LMA . This value is present when the corresponding PBU was sourced from an IPv4 address ( for IPv4 transport , see [ RFC5844 ]). 	230	0
6463	Option Type	o Option Length : 8-bit unsigned integer , representing the length of the Load Information mobility option in octets , excluding the Option Type and Length fields . The length is set to 18 . 	100	0
6463	Option Length	o Option Length : 8-bit unsigned integer , representing the length of the Load Information mobility option in octets , excluding the Option Type and Length fields . The length is set to 18 . 	100	0
6463	Priority	o Priority : 16-bit unsigned integer , representing the priority of an LMA . The lower value , the higher the priority . The priority only has meaning among a group of LMAs under the same administration , for example , determined by a common LMA FQDN , a domain name , or a realm . 	231	0
6463	Sessions in Use	o Sessions in Use : 32-bit unsigned integer , representing the number of parallel mobility sessions the LMA has in use . 	100	0
6463	Maximum Sessions	o Maximum Sessions : 32-bit unsigned integer , representing the maximum number of parallel mobility sessions the LMA is willing to accept . 	100	0
6463	Used Capacity	o Used Capacity : 32-bit unsigned integer , representing the used bandwidth/throughput capacity of the LMA in kilobytes per second . 	100	0
6463	Maximum Capacity	o Maximum Capacity : 32-bit unsigned integer , representing the maximum bandwidth/throughput capacity in kilobytes per second the LMA is willing to accept . 	400	0
6463	Option Type	o Option Length : 8-bit unsigned integer , representing the length of the Load Information mobility option in octets , excluding the Option Type and Length fields . The length is set to 4 . 	100	0
6463	Option Length	o Option Length : 8-bit unsigned integer , representing the length of the Load Information mobility option in octets , excluding the Option Type and Length fields . The length is set to 4 . 	100	0
6478	Length	Length 	100	0
6478	Flags	Bit B , in position 31 above , is set to request the S-PE bypass mode . R bits are to be allocated by IANA as described in the IANA section . If they are not allocated , they are to be considered as reserved for future use and MUST be zero on transmission and ignored on reception of this TLV . 	500	0
6496	Type	Type 	240	0
6496	Length	The length of the option ( including the Type , Length , Reserved , Key Hash , Digital Signature , and Padding fields ) in units of 8 octets . 	100	0
6496	Reserved	A 16-bit field reserved for future use . The value MUST be initialized to zero by the sender , and MUST be ignored by the receiver . 	500	0
6496	Key Hash	A 128-bit field containing the most significant ( leftmost ) 128 bits of a SHA-1 [ SHA1 ] hash of the public key used for constructing the signature . Its purpose is to associate the signature to a particular key known by the receiver . Such a key MUST be the same one within the corresponding Secure Proxy ND certificate . 	400	0
6496	Digital Signature	A variable-length field containing a PKCS#1 v1.5 signature , constructed by using the sender's private key over the following sequence of octets : 	400	0
6496	Padding	This variable-length field contains padding . The length of the padding field is determined by the length of the Proxy Signature option minus the length of the other fields . 	400	0
6506	Authentication Type	16-bit field identifying the type of authentication . The following values are defined in this specification : 	231	0
6506	Auth Data Len	The length in octets of the Authentication Trailer ( AT ) including both the 16-octet fixed header and the variable length message digest . 	100	0
6506	Reserved	This field is reserved . It SHOULD be set to 0 when sending protocol packets and MUST be ignored when receiving protocol packets . 	500	0
6513	Type	Length ( 16 bits ): the total number of octets in the Type , Length , and Value fields combined 	100	0
6513	Length	Length ( 16 bits ): the total number of octets in the Type , Length , and Value fields combined 	100	0
6513	Value	In this specification , only one type of S-PMSI Join is defined . A Type 1 S-PMSI Join is used when the S-PMSI tunnel is a PIM tunnel that is used to carry a single multicast stream , where the packets of that stream have IPv4 source and destination IP addresses . 	400	0
6513	Type	Type ( 8 bits ): 1 	240	0
6513	Length	Reserved ( 8 bits ): This field SHOULD be zero when transmitted , and MUST be ignored when received . 	500	0
6513	Reserved	Reserved ( 8 bits ): This field SHOULD be zero when transmitted , and MUST be ignored when received . 	500	0
6516	Type	Length ( 16 bits ): 40 , the length in octets of the entire S-PMSI Join message , including the Type , Length , Reserved , C-source , C-group , and P-group fields . 	100	0
6516	Length	Length ( 16 bits ): 40 , the length in octets of the entire S-PMSI Join message , including the Type , Length , Reserved , C-source , C-group , and P-group fields . 	100	0
6516	Reserved	Reserved ( 8 bits ): this field SHOULD be zero when transmitted and MUST be ignored when received . 	500	0
6521	Care-of Address	RFC 5944 [ RFC5944 ] defines a care-of address as the termination point of a tunnel toward a mobile node , for datagrams forwarded to the mobile node while it is away from home . The protocol can use two different types of CoA : a " foreign agent care-of address ", which is an address of a foreign agent with which the mobile node is registered , and a " co-located care-of address ", which is an externally obtained local address that the mobile node has associated with one of its own network interfaces . However , in the case of Network Mobility , foreign agents are not used , so no foreign CoAs are used either . 	230	0
6521	Type	Type 153 ( skippable ); if the HA does not support route optimization advertisements , it can ignore this request and simply not include any information in the reply . " short " extension format . 	400	0
6521	Subtype	Subtype 1 	240	0
6521	Reserved	A Advertise my networks . If the ' A ' bit is set , the HA is allowed to advertise the networks managed by this MR to other MRs . This also indicates that the MR is capable of receiving route optimization Registration Requests . In effect , this allows the MR to work in the CR role . 	210	0
6521	A	A Advertise my networks . If the ' A ' bit is set , the HA is allowed to advertise the networks managed by this MR to other MRs . This also indicates that the MR is capable of receiving route optimization Registration Requests . In effect , this allows the MR to work in the CR role . 	210	0
6521	R	R Request mobile network information . If the ' R ' bit is set , the HA MAY respond with information about mobile networks in the same domain . 	210	0
6521	S	S Solicit prefixes managed by a specific MR . The MR is specified in the Optional Mobile Router HoA field . 	231	0
6521	O	O Explicitly specify that the requesting router is only able to initiate outgoing connections and not accept any incoming connections , due to a NAT device , stateful firewall , or similar issue on any interface . This is reflected by the HA in the reply and distributed in Prefix Advertisements to other MRs . 	231	0
6521	Optional Mobile Router HoA	Solicited mobile router's home address . This field is only included if the ' S ' flag is set . 	230	0
6521	Type	Type 49 ( non-skippable ); " short " extension format . 	400	0
6521	Subtype	Subtype 1 	240	0
6521	O	O The ' O ' flag in the Mobile Router Route Optimization Capability Extension was set during registration . 	231	0
6521	N	N NAT was detected by the HA . This informs the MR that it is located behind a NAT . The detection procedure is specified in RFC 3519 [ RFC3519 ] and is based on the discrepancy between the registration packet's source address and indicated CoA . The MR can use this information to make decisions about route optimization strategy . 	230	0
6521	S	S Responding to a solicitation . If the ' S ' bit was present in the MR's Route Optimization Capability Extension ( Section 5.1 ), this bit is set; otherwise , it is unset . 	210	0
6521	Type	Type 49 ( non-skippable ); " short " extension format . 	400	0
6521	Subtype	Subtype 2 	240	0
6521	Reserved	Reserved Set to zero; MUST be ignored on reception . 	500	0
6521	Home Nonce Index	Home Nonce Index in use . If using a pre-shared KRm , set to zero and ignored on reception . 	500	0
6521	Care-of Nonce Index	Care-of Nonce Index in use . If using a pre-shared KRm , set to zero and ignored on reception . 	500	0
6521	Type	Type 49 ( non-skippable ); " short " extension format . 	400	0
6521	Length	Length Total length of the packet . When processing the information structures , if Length octets have been reached , this is an indication that the final information structure was reached as well . 	100	0
6521	Subtype	Subtype 3 	240	0
6521	Care-of Address	Care-of address(es ) that may be used for a tunnel with the MR , in order of priority . Multiple CoAs MAY be listed to facilitate faster NAT traversal processing . 	230	0
6521	Type	Type 50 ( non-skippable ); " long " extension format . 	400	0
6521	Subtype	Subtype 1 	240	0
6521	Length	Length Total length of the packet . When processing the information structures , if Length octets have been reached , this is an indication that the final information structure was reached as well . 	100	0
6521	D	D Delta . If D = 1 , the prefix is a delta from the last Prefix , where D = 0 . MUST be zero on the first information structure containing a Prefix; MAY be zero or one on subsequent information structures . If D = 1 , the Prefix field is one octet in length . See Section 4.1 for details . 	210	0
6521	M	M Mobile Router HoA bit . If M = 1 , the next field is Mobile Router HoA , and Prefix and Realm are omitted . If M = 0 , the next field is Prefix followed by Realm , and Mobile Router HoA is omitted . For the first information structure , M MUST be set to 1 . If M = 1 , the ' D ' bit is set to zero and ignored upon reception . 	210	0
6521	Type	Type 24 	240	0
6521	Reserved	Reserved Set to zero; MUST be ignored on reception . 	500	0
6521	Home Init Cookie	Home Init Cookie 	302	0
6521	Type	Type 25 	240	0
6521	Reserved	Reserved Set to zero; MUST be ignored on reception . 	500	0
6521	Care-of Init Cookie	Care-of Init Cookie 	400	0
6521	Type	Type 26 	240	0
6521	Reserved	Reserved Set to zero; MUST be ignored on reception . 	500	0
6521	Nonce Index	This field will be echoed back by the MR to the CR in a subsequent Registration Request's authentication extension . 	100	0
6521	Home Init Cookie	Home Init Cookie 	302	0
6521	Home Keygen Token	This field contains the 64-bit home keygen token used in the RR procedure . Generated from cookie + nonce . 	230	0
6521	Type	Type 27 	240	0
6521	Reserved	Reserved Set to zero; MUST be ignored on reception . 	500	0
6521	Care-of Nonce Index	This field will be echoed back by the MR to the CR in a subsequent Registration Request's authentication extension . 	100	0
6521	Care-of Init Cookie	Care-of Init Cookie 	400	0
6521	Care-of Keygen Token	This field contains the 64-bit care-of keygen token used in the RR procedure . Generated from cookie + nonce . 	400	0
6525	Chunk Flags	Chunk Flags : 1 byte ( unsigned integer ) This field is set to 0 by the sender and ignored by the receiver . 	500	0
6525	Chunk Length	Chunk Length : 2 bytes ( unsigned integer ) This field holds the length of the chunk in bytes , including the Chunk Type , Chunk Flags , and Chunk Length . 	100	0
6525	Parameter Length	Parameter Length : 2 bytes ( unsigned integer ) This field holds the length in bytes of the parameter; the value MUST be 16 + 2 * N , where N is the number of stream numbers listed . 	100	0
6525	Sender's Last Assigned TSN	Sender's Last Assigned TSN : 4 bytes ( unsigned integer ) This value holds the next TSN minus 1 -- in other words , the last TSN that this sender assigned . 	230	0
6525	Parameter Length	Parameter Length : 2 bytes ( unsigned integer ) This field holds the length in bytes of the parameter; the value MUST be 8 + 2 * N . 	100	0
6525	Parameter Length	Parameter Length : 2 bytes ( unsigned integer ) This field holds the length in bytes of the parameter; the value MUST be 8 . 	100	0
6525	Result	Result : 4 bytes ( unsigned integer ) This value describes the result of the processing of the request . It is encoded as indicated in Table 3 : 	302	0
6525	Parameter Length	Parameter Length : 2 bytes ( unsigned integer ) This field holds the length in bytes of the parameter; the value MUST be 12 . 	100	0
6525	Number of new streams	Number of new streams : 2 bytes ( unsigned integer ) This value holds the number of additional outgoing streams that the sender requests be added to the association . Streams are added in order and are consecutive; e.g ., if an association has 4 outgoing streams ( 0-3 ) and a request is made to add 3 streams , then the new streams will be 4 , 5 , and 6 . 	400	0
6525	Reserved	Reserved : 2 bytes ( unsigned integer ) This field is reserved . It SHOULD be set to 0 by the sender and ignored by the receiver . 	500	0
6525	Parameter Length	Parameter Length : 2 bytes ( unsigned integer ) This field holds the length in bytes of the parameter; the value MUST be 12 . 	100	0
6525	Number of new streams	Number of new streams : 2 bytes ( unsigned integer ) This value holds the number of additional incoming streams that the sender requests be added to the association . Streams are added in order and are consecutive; e.g ., if an association has 4 outgoing streams ( 0-3 ) and a request is made to add 3 streams , then the new streams will be 4 , 5 , and 6 . 	400	0
6525	Reserved	Reserved : 2 bytes ( unsigned integer ) This field is reserved . It SHOULD be set to 0 by the sender and ignored by the receiver . 	500	0
6550	Rank	Rank : A node's Rank defines the node's individual position relative to other nodes with respect to a DODAG root . Rank strictly increases in the Down direction and strictly decreases in the Up direction . The exact way Rank is computed depends on the DAG's Objective Function ( OF ). The Rank may analogously track a simple topological distance , may be calculated as a function of link metrics , and may consider other properties such as constraints . 	231	0
6550	OCP	Objective Code Point ( OCP ): An OCP is an identifier that indicates which Objective Function the DODAG uses . 	231	0
6550	RPLInstanceID	RPLInstanceID : A RPLInstanceID is a unique identifier within a network . DODAGs with the same RPLInstanceID share the same Objective Function . 	231	0
6550	DODAGID	DODAGID : A DODAGID is the identifier of a DODAG root . The DODAGID is unique within the scope of a RPL Instance in the LLN . The tuple ( RPLInstanceID , DODAGID ) uniquely identifies a DODAG . 	231	0
6550	Security	RPL supports message confidentiality and integrity . It is designed such that link-layer mechanisms can be used when available and appropriate; yet , in their absence , RPL can use its own mechanisms . RPL has three basic security modes . 	400	0
6550	Type	Function : The Rank is the expression of a relative position within a DODAG Version with regard to neighbors , and it is not necessarily a good indication or a proper expression of a distance or a path cost to the root . 	231	0
6550	A	( A ) ( A ) ( A ) |\ |\ |\ | `-----. | `-----. | `-----. | \ | \ | \ ( B ) ( C ) ( B ) \ | ( C ) \ | | / `-----. | | .-----' \| |/ ( C ) ( B ) 	240	0
6550	A	taking both Nodes ( A ) and ( C ) as DODAG parents . Now Node ( B ) is deeper than both Nodes ( A ) and ( C ) and is satisfied with two DAG parents . 	301	0
6550	T	Counter is Time ( T ): If the counter's Time flag is set , then the Counter field is a timestamp . If the flag is cleared , then the counter is an incrementing counter . Section 10.5 describes the details of the ' T ' flag and Counter field . 	301	0
6550	Reserved	Reserved : 7-bit unused field . The field MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
6550	Algorithm	Security Algorithm ( Algorithm ): The Security Algorithm field specifies the encryption , MAC , and signature scheme the network uses . Supported values of this field are as follows : 	400	0
6550	KIM	Key Identifier Mode ( KIM ): The Key Identifier Mode is a 2-bit field that indicates whether the key used for packet protection is determined implicitly or explicitly and indicates the particular representation of the Key Identifier field . The Key Identifier Mode is set one of the values from the table below : 	240	0
6550	Resvd	Resvd : 3-bit unused field . The field MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
6550	LVL	Security Level ( LVL ): The Security Level is a 3-bit field that indicates the provided packet protection . This value can be adapted on a per-packet basis and allows for varying levels of data authenticity and , optionally , for data confidentiality . The KIM field indicates whether signatures are used and the meaning of the Level field . Note that the assigned values of Security Level are not necessarily ordered -- a higher value of LVL does not necessarily equate to increased security . The Security Level is set to one of the values in the tables below : 	231	0
6550	Flags	Flags : 8-bit unused field reserved for flags . The field MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
6550	Counter	Counter : The Counter field indicates the non-repeating 4-octet value used to construct the cryptographic mechanism that implements packet protection and allows for the provision of semantic security . See Section 10.9.1 . 	231	0
6550	Key Identifier	Key Identifier : The Key Identifier field indicates which key was used to protect the packet . This field provides various levels of granularity of packet protection , including peer-to-peer keys , group keys , and signature keys . This field is represented as indicated by the Key Identifier Mode field and is formatted as follows : 	231	0
6550	Key Source	Key Source : The Key Source field , when present , indicates the logical identifier of the originator of a group key . When present , this field is 8 bytes in length . 	230	0
6550	Key Index	Key Index : The Key Index field , when present , allows unique identification of different keys with the same originator . It is the responsibility of each key originator to make sure that actively used keys that it issues have distinct key indices and that all key indices have a value unequal to 0x00 . Value 0x00 is reserved for a preinstalled , shared key . When present this field is 1 byte in length . 	231	0
6550	Flags	Flags : 8-bit unused field reserved for flags . The field MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
6550	Reserved	Reserved : 8-bit unused field . The field MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
6550	G	Grounded ( G ): The Grounded ' G ' flag indicates whether the DODAG advertised can satisfy the application-defined goal . If the flag is set , the DODAG is grounded . If the flag is cleared , the DODAG is floating . 	210	0
6550	MOP	Mode of Operation ( MOP ): The Mode of Operation ( MOP ) field identifies the mode of operation of the RPL Instance as administratively provisioned at and distributed by the DODAG root . All nodes who join the DODAG must be able to honor the MOP in order to fully participate as a router , or else they must only join as a leaf . MOP is encoded as in the figure below : 	400	0
6550	Prf	DODAGPreference ( Prf ): A 3-bit unsigned integer that defines how preferable the root of this DODAG is compared to other DODAG roots within the instance . DAGPreference ranges from 0x00 ( least preferred ) to 0x07 ( most preferred ). The default is 0 ( least preferred ). Section 8.2 describes how DAGPreference affects DIO processing . 	231	0
6550	Version Number	Version Number : 8-bit unsigned integer set by the DODAG root to the DODAGVersionNumber . Section 8.2 describes the rules for DODAGVersionNumbers and how they affect DIO processing . 	231	0
6550	Rank	Rank : 16-bit unsigned integer indicating the DODAG Rank of the node sending the DIO message . Section 8.2 describes how Rank is set and how it affects DIO processing . 	231	0
6550	RPLInstanceID	RPLInstanceID : 8-bit field set by the DODAG root that indicates of which RPL Instance the DODAG is a part . 	400	0
6550	DTSN	Destination Advertisement Trigger Sequence Number ( DTSN ): 8-bit unsigned integer set by the node issuing the DIO message . The Destination Advertisement Trigger Sequence Number ( DTSN ) flag is used as part of the procedure to maintain Downward routes . The details of this process are described in Section 9 . 	231	0
6550	Flags	Flags : 8-bit unused field reserved for flags . The field MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
6550	Reserved	Reserved : 8-bit unused field . The field MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
6550	DODAGID	DODAGID : 128-bit IPv6 address set by a DODAG root that uniquely identifies a DODAG . The DODAGID MUST be a routable IPv6 address belonging to the DODAG root . 	230	0
6550	RPLInstanceID	RPLInstanceID : 8-bit field indicating the topology instance associated with the DODAG , as learned from the DIO . 	400	0
6550	K	K : The ' K ' flag indicates that the recipient is expected to send a DAO-ACK back . ( See Section 9.3 .) 	210	0
6550	D	D : The ' D ' flag indicates that the DODAGID field is present . This flag MUST be set when a local RPLInstanceID is used . 	210	0
6550	Flags	Flags : The 6 bits remaining unused in the Flags field are reserved for flags . The field MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
6550	Reserved	Reserved : 8-bit unused field . The field MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
6550	DAOSequence	DAOSequence : Incremented at each unique DAO message from a node and echoed in the DAO-ACK message . 	231	0
6550	DODAGID	DODAGID ( optional ): 128-bit unsigned integer set by a DODAG root that uniquely identifies a DODAG . This field is only present when the ' D ' flag is set . This field is typically only present when a local RPLInstanceID is in use , in order to identify the DODAGID that is associated with the RPLInstanceID . When a global RPLInstanceID is in use , this field need not be present . 	400	0
6550	RPLInstanceID	RPLInstanceID : 8-bit field indicating the topology instance associated with the DODAG , as learned from the DIO . 	400	0
6550	D	D : The ' D ' flag indicates that the DODAGID field is present . This would typically only be set when a local RPLInstanceID is used . 	210	0
6550	Reserved	DAOSequence : Incremented at each DAO message from a node , and echoed in the DAO-ACK by the recipient . The DAOSequence is used to correlate a DAO message and a DAO ACK message and is not to be confused with the Transit Information option Path Sequence that is associated to a given Target Down the DODAG . 	231	0
6550	DAOSequence	DAOSequence : Incremented at each DAO message from a node , and echoed in the DAO-ACK by the recipient . The DAOSequence is used to correlate a DAO message and a DAO ACK message and is not to be confused with the Transit Information option Path Sequence that is associated to a given Target Down the DODAG . 	400	0
6550	Status	Status : Indicates the completion . Status 0 is defined as unqualified acceptance in this specification . The remaining status values are reserved as rejection codes . No rejection status codes are defined in this specification , although status codes SHOULD be allocated according to the following guidelines in future specifications : 	231	0
6550	DODAGID	DODAGID ( optional ): 128-bit unsigned integer set by a DODAG root that uniquely identifies a DODAG . This field is only present when the ' D ' flag is set . Typically , this field is only present when a local RPLInstanceID is in use in order to identify the DODAGID that is associated with the RPLInstanceID . When a global RPLInstanceID is in use , this field need not be present . 	210	0
6550	RPLInstanceID	RPLInstanceID : 8-bit field indicating the topology instance associated with the DODAG , as learned from the DIO . 	400	0
6550	R	R : The ' R ' flag indicates whether the CC message is a response . A message with the ' R ' flag cleared is a request; a message with the ' R ' flag set is a response . 	210	0
6550	Flags	Flags : The 7 bits remaining unused in the Flags field are reserved for flags . The field MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
6550	CC Nonce	CC Nonce : 16-bit unsigned integer set by a CC request . The corresponding CC response includes the same CC nonce value as the request . 	231	0
6550	DODAGID	Destination Counter : 32-bit unsigned integer value indicating the sender's estimate of the destination's current security counter value . If the sender does not have an estimate , it SHOULD set the Destination Counter field to zero . 	302	0
6550	Destination Counter	Destination Counter : 32-bit unsigned integer value indicating the sender's estimate of the destination's current security counter value . If the sender does not have an estimate , it SHOULD set the Destination Counter field to zero . 	302	0
6550	Option Type	Option Type : 8-bit identifier of the type of option . The Option Type values are assigned by IANA ( see Section 20.4 .) 	231	0
6550	Option Length	Option Length : 8-bit unsigned integer , representing the length in octets of the option , not including the Option Type and Length fields . 	100	0
6550	Option Data	Option Data : A variable length field that contains data specific to the option . 	400	0
6550	Option Type	Option Length : For N octets of padding , where 2 <= N <= 7 , the Option Length field contains the value N-2 . An Option Length of 0 indicates a total padding of 2 octets . An Option Length of 5 indicates a total padding of 7 octets , which is the maximum padding size allowed with the PadN option . 	100	0
6550	Option Length	Option Length : For N octets of padding , where 2 <= N <= 7 , the Option Length field contains the value N-2 . An Option Length of 0 indicates a total padding of 2 octets . An Option Length of 5 indicates a total padding of 7 octets , which is the maximum padding size allowed with the PadN option . 	100	0
6550	Option Data	Option Data : For N ( N > 1 ) octets of padding , the Option Data consists of N-2 zero-valued octets . 	400	0
6550	Option Type	Option Length : The Option Length field contains the length in octets of the Metric Data . 	100	0
6550	Option Length	Option Length : The Option Length field contains the length in octets of the Metric Data . 	100	0
6550	Metric Data	Metric Data : The order , content , and coding of the DAG Metric Container data is as specified in [ RFC6551 ]. 	400	0
6550	Option Type	Option Length : Variable , length of the option in octets excluding the Type and Length fields . Note that this length is expressed in units of single octets , unlike in IPv6 ND . 	100	0
6550	Option Length	Option Length : Variable , length of the option in octets excluding the Type and Length fields . Note that this length is expressed in units of single octets , unlike in IPv6 ND . 	100	0
6550	Prefix Length	Prefix Length : 8-bit unsigned integer . The number of leading bits in the prefix that are valid . The value ranges from 0 to 128 . The Prefix field has the number of bytes inferred from the Option Length field , that must be at least the Prefix Length . Note that in RPL , this means that the Prefix field may have lengths other than 0 , 8 , or 16 . 	100	0
6550	Prf	Prf : 2-bit signed integer . The Route Preference indicates whether to prefer the router associated with this prefix over others , when multiple identical prefixes ( for different routers ) have been received . If the Reserved ( 10 ) value is received , the RIO MUST be ignored . Per [ RFC4191 ], the Reserved ( 10 ) value MUST NOT be sent . ([ RFC4191 ] restricts the Preference to just three values to reinforce that it is not a metric .) 	301	0
6550	Resvd	Resvd : Two 3-bit unused fields . They MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
6550	Route Lifetime	Route Lifetime : 32-bit unsigned integer . The length of time in seconds ( relative to the time the packet is sent ) that the prefix is valid for route determination . A value of all one bits ( 0xFFFFFFFF ) represents infinity . 	120	0
6550	Prefix	Prefix : Variable-length field containing an IP address or a prefix of an IPv6 address . The Prefix Length field contains the number of valid leading bits in the prefix . The bits in the prefix after the prefix length ( if any ) are reserved and MUST be initialized to zero by the sender and ignored by the receiver . Note that in RPL , this field may have lengths other than 0 , 8 , or 16 . 	231	0
6550	Option Type	Option Type : 0x04 	240	0
6550	Option Length	Flags : The 4-bits remaining unused in the Flags field are reserved for flags . The field MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
6550	Flags	Flags : The 4-bits remaining unused in the Flags field are reserved for flags . The field MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
6550	A	Authentication Enabled ( A ): 1-bit flag describing the security mode of the network . The bit describes whether a node must authenticate with a key authority before joining the network as a router . If the DIO is not a secure DIO , the ' A ' bit MUST be zero . 	231	0
6550	PCS	Path Control Size ( PCS ): 3-bit unsigned integer used to configure the number of bits that may be allocated to the Path Control field ( see Section 9.9 ). Note that when PCS is consulted to determine the width of the Path Control field , a value of 1 is added , i.e ., a PCS value of 0 results in 1 active bit in the Path Control field . The default value of PCS is DEFAULT_PATH_CONTROL_SIZE . 	400	0
6550	MaxRankIncrease	MaxRankIncrease : 16-bit unsigned integer used to configure DAGMaxRankIncrease , the allowable increase in Rank in support of local repair . If DAGMaxRankIncrease is 0 , then this mechanism is disabled . 	231	0
6550	MinHopRankIncrease	MinHopRankIncrease : 16-bit unsigned integer used to configure MinHopRankIncrease as described in Section 3.5.1 . The default value of MinHopRankInc is DEFAULT_MIN_HOP_RANK_INCREASE . 	231	0
6550	OCP	Objective Code Point ( OCP ): 16-bit unsigned integer . The OCP field identifies the OF and is managed by the IANA . 	231	0
6550	Reserved	Reserved : 7-bit unused field . The field MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
6550	Lifetime Unit	Lifetime Unit : 16-bit unsigned integer . Provides the unit in seconds that is used to express route lifetimes in RPL . For very stable networks , it can be hours to days . 	100	0
6550	Option Type	Option Length : Variable , length of the option in octets excluding the Type and Length fields . 	100	0
6550	Option Length	Option Length : Variable , length of the option in octets excluding the Type and Length fields . 	100	0
6550	Flags	Flags : 8-bit unused field reserved for flags . The field MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
6550	Prefix Length	Prefix Length : 8-bit unsigned integer . Number of valid leading bits in the IPv6 Prefix . 	100	0
6550	Option Type	Option Length : Variable , depending on whether or not the DODAG Parent Address subfield is present . 	100	0
6550	Option Length	Option Length : Variable , depending on whether or not the DODAG Parent Address subfield is present . 	100	0
6550	E	External ( E ): 1-bit flag . The ' E ' flag is set to indicate that the parent router redistributes external targets into the RPL network . An external Target is a Target that has been learned through an alternate protocol . The external targets are listed in the Target options that immediately precede the Transit Information option . An external Target is not expected to support RPL messages and options . 	210	0
6550	Flags	Flags : The 7 bits remaining unused in the Flags field are reserved for flags . The field MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
6550	Path Control	Path Control : 8-bit bit field . The Path Control field limits the number of DAO parents to which a DAO message advertising connectivity to a specific destination may be sent , as well as providing some indication of relative preference . The limit provides some bound on overall DAO message fan-out in the LLN . The assignment and ordering of the bits in the Path Control also serves to communicate preference . Not all of these bits may be enabled as according to the PCS in the DODAG Configuration . The Path Control field is divided into four subfields that contain two bits each : PC1 , PC2 , PC3 , and PC4 , as illustrated in Figure 27 . The subfields are ordered by preference , with PC1 being the most preferred and PC4 being the least preferred . Within a subfield , there is no order of preference . By grouping the parents ( as in ECMP ) and ordering them , the parents may be associated with specific bits in the Path Control field in a way that communicates preference . 	400	0
6550	Path Sequence	Path Sequence : 8-bit unsigned integer . When a RPL Target option is issued by the node that owns the Target prefix ( i.e ., in a DAO message ), that node sets the Path Sequence and increments the Path Sequence each time it issues a RPL Target option with updated information . 	301	0
6550	Path Lifetime	Path Lifetime : 8-bit unsigned integer . The length of time in Lifetime Units ( obtained from the Configuration option ) that the prefix is valid for route determination . The period starts when a new Path Sequence is seen . A value of all one bits ( 0xFF ) represents infinity . A value of all zero bits ( 0x00 ) indicates a loss of reachability . A DAO message that contains a Transit Information option with a Path Lifetime of 0x00 for a Target is referred as a No-Path ( for that Target ) in this document . 	120	0
6550	Option Type	Option Type : 0x07 	240	0
6550	Option Length	V : The ' V ' flag is the Version predicate . The Version predicate is true if the receiver's DODAGVersionNumber matches the requested Version Number . If the ' V ' flag is cleared , then the Version field is not valid and the Version field MUST be set to zero on transmission and ignored upon receipt . 	210	0
6550	V	V : The ' V ' flag is the Version predicate . The Version predicate is true if the receiver's DODAGVersionNumber matches the requested Version Number . If the ' V ' flag is cleared , then the Version field is not valid and the Version field MUST be set to zero on transmission and ignored upon receipt . 	210	0
6550	I	I : The ' I ' flag is the InstanceID predicate . The InstanceID predicate is true when the RPL node's current RPLInstanceID matches the requested RPLInstanceID . If the ' I ' flag is cleared , then the RPLInstanceID field is not valid and the RPLInstanceID field MUST be set to zero on transmission and ignored upon receipt . 	210	0
6550	D	D : The ' D ' flag is the DODAGID predicate . The DODAGID predicate is true if the RPL node's parent set has the same DODAGID as the DODAGID field . If the ' D ' flag is cleared , then the DODAGID field is not valid and the DODAGID field MUST be set to zero on transmission and ignored upon receipt . 	210	0
6550	Flags	Flags : The 5 bits remaining unused in the Flags field are reserved for flags . The field MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
6550	Version Number	Version Number : 8-bit unsigned integer containing the value of DODAGVersionNumber that is being solicited when valid . 	220	0
6550	RPLInstanceID	RPLInstanceID : 8-bit unsigned integer containing the RPLInstanceID that is being solicited when valid . 	400	0
6550	DODAGID	DODAGID : 128-bit unsigned integer containing the DODAGID that is being solicited when valid . 	400	0
6550	Option Type	Option Length : 30 . Note that this length is expressed in units of single octets , unlike in IPv6 ND . 	100	0
6550	Option Length	Option Length : 30 . Note that this length is expressed in units of single octets , unlike in IPv6 ND . 	100	0
6550	Prefix Length	Prefix Length : 8-bit unsigned integer . The number of leading bits in the Prefix field that are valid . The value ranges from 0 to 128 . The Prefix Length field provides necessary information for on-link determination ( when combined with the ' L ' flag in the PIO ). It also assists with address autoconfiguration as specified in [ RFC4862 ], for which there may be more restrictions on the prefix length . 	100	0
6550	L	L : 1-bit on-link flag . When set , it indicates that this prefix can be used for on-link determination . When not set , the advertisement makes no statement about on-link or off-link properties of the prefix . In other words , if the ' L ' flag is not set , a RPL node MUST NOT conclude that an address derived from the prefix is off-link . That is , it MUST NOT update a previous indication that the address is on-link . A RPL node acting as a router MUST NOT propagate a PIO with the ' L ' flag set . A RPL node acting as a router MAY propagate a PIO with the ' L ' flag not set . 	210	0
6550	A	A : 1-bit autonomous address-configuration flag . When set , it indicates that this prefix can be used for stateless address configuration as specified in [ RFC4862 ]. When both protocols ( ND RAs and RPL DIOs ) are used to carry PIOs on the same link , it is possible to use either one for SLAAC by a RPL node . It is also possible to make either protocol ineligible for SLAAC operation by forcing the ' A ' flag to 0 for PIOs carried in that protocol . 	210	0
6550	R	R : 1-bit router address flag . When set , it indicates that the Prefix field contains a complete IPv6 address assigned to the sending router that can be used as parent in a target option . The indicated prefix is the first prefix length bits of the Prefix field . The router IPv6 address has the same scope and conforms to the same lifetime values as the advertised prefix . This use of the Prefix field is compatible with its use in advertising the prefix itself , since Prefix Advertisement uses only the leading bits . Interpretation of this flag bit is thus independent of the processing required for the on-link ( L ) and autonomous address-configuration ( A ) flag bits . 	230	0
6550	Reserved	Reserved1 : 5-bit unused field . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
6550	Valid Lifetime	Valid Lifetime : 32-bit unsigned integer . The length of time in seconds ( relative to the time the packet is sent ) that the prefix is valid for the purpose of on-link determination . A value of all one bits ( 0xFFFFFFFF ) represents infinity . The Valid Lifetime is also used by [ RFC4862 ]. 	120	0
6550	Preferred Lifetime	Preferred Lifetime : 32-bit unsigned integer . The length of time in seconds ( relative to the time the packet is sent ) that addresses generated from the prefix via stateless address autoconfiguration remain preferred [ RFC4862 ]. A value of all one bits ( 0xFFFFFFFF ) represents infinity . See [ RFC4862 ]. Note that the value of this field MUST NOT exceed the Valid Lifetime field to avoid preferring addresses that are no longer valid . 	100	0
6550	Reserved	Reserved2 : This field is unused . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
6550	Prefix	Prefix : An IPv6 address or a prefix of an IPv6 address . The Prefix Length field contains the number of valid leading bits in the prefix . The bits in the prefix after the prefix length are reserved and MUST be initialized to zero by the sender and ignored by the receiver . A router SHOULD NOT send a prefix option for the link-local prefix , and a host SHOULD ignore such a prefix option . A non-storing node SHOULD refrain from advertising a prefix till it owns an address of that prefix , and then it SHOULD advertise its full address in this field , with the ' R ' flag set . The children of a node that so advertises a full address with the ' R ' flag set may then use that address to determine the content of the DODAG Parent Address subfield of the Transit Information option . 	230	0
6550	Option Type	Option Type : 0x09 	240	0
6550	Option Length	Option Length : 4 	100	0
6550	Descriptor	Descriptor : 32-bit unsigned integer . Opaque . 	231	0
6550	DAOSequence	DAOSequence : This sequence counter is present in the DAO Base to correlate a DAO message and a DAO ACK message . The DAOSequence number is locally significant to the node that issues a DAO message for its own consumption to detect the loss of a DAO message and enable retries . 	400	0
6550	Path Sequence	Path Sequence : This sequence counter is present in the Transit Information option in a DAO message . The purpose of this counter is to differentiate a movement where a newer route supersedes a stale one from a route redundancy scenario where multiple routes exist in parallel for the same target . The Path Sequence is globally significant in a DODAG and indicates the freshness of the route to the associated target . An older ( lesser ) value received from an originating router indicates that the originating router holds stale routing states and the originating router should not be considered anymore as a potential next hop for the target . The Path Sequence is computed by the node that advertises the target , that is the Target itself or a router that advertises a Target on behalf of a host , and is unchanged as the DAO content is propagated towards the root by parent routers . If a host does not pass a counter to its router , then the router is in charge of computing the Path Sequence on behalf of the host and the host can only register to one router for that purpose . If a DAO message containing the same Target is issued to multiple parents at a given point in time for the purpose of route redundancy , then the Path Sequence is the same in all the DAO messages for that same target . 	301	0
6550	DODAGID	DODAGID : The DODAGID is a Global or Unique Local IPv6 address of the root . A node that joins a DODAG SHOULD provision a host route via a DODAG parent to the address used by the root as the DODAGID . 	230	0
6550	Rank	1 . A node MUST NOT advertise a Rank less than or equal to any member of its parent set within the DODAG Version . 	231	0
6550	Path Control	A DAO message from a node contains one or more Target options . Each Target option specifies either a prefix advertised by the node , a prefix of addresses reachable outside the LLN , the address of a destination in the node's sub-DODAG , or a multicast group to which a node in the sub-DODAG is listening . The Path Control field of the Transit Information option allows nodes to request or allow for multiple Downward routes . A node constructs the Path Control field of a Transit Information option as follows : 	230	0
6550	Source Identifier	Source Identifier : 8 bytes . Source Identifier is set to the logical identifier of the originator of the protected packet . 	230	0
6550	Counter	Counter : 4 bytes . Counter is set to the ( uncompressed ) value of the corresponding field in the Security option of the RPL control message . 	231	0
6550	KIM	Key Identifier Mode ( KIM ): 2 bits . KIM is set to the value of the corresponding field in the Security option of the RPL control message . 	231	0
6550	LVL	Security Level ( LVL ): 3 bits . Security Level is set to the value of the corresponding field in the Security option of the RPL control message . 	231	0
6550	Rank	Rank-Error ' R ': 1-bit flag indicating whether a Rank error was detected . A Rank error is detected when there is a mismatch in the relative Ranks and the direction as indicated in the ' O ' bit . A host or RPL leaf node MUST set the ' R ' bit to 0 . 	210	0
6550	RPLInstanceID	RPLInstanceID : 8-bit field indicating the DODAG instance along which the packet is sent . 	400	0
6550	RPLInstanceID	o RPLInstanceID [ DIO message , in DIO Base message ]. Although the RPLInstanceID must be configured on the DODAG root , it must also be configured as a policy on every node in order to determine whether or not the node should join a particular DODAG . Note that a second RPLInstanceID can be configured on the node , should it become root of a floating DODAG . 	303	0
6550	MOP	o Route Information ( and preference ) [ DIO message , in Route Information option ] 	400	0
6550	MinHopRankIncrease	o MinHopRankIncrease [ DIO message , in DODAG Configuration option ] 	400	0
6550	DAOSequence	o DAOSequence : Incremented at each unique DAO message , echoed in the DAO-ACK message [ DAO and DAO-ACK messages ] 	231	0
6550	MinHopRankIncrease	o MinHopRankIncrease [ DIO message , in DODAG Configuration option ] 	400	0
6550	RPLInstanceID	o RPLInstanceID 	230	0
6550	DODAGID	o DODAGID 	202	0
6550	Rank	o Rank 	240	0
6550	DTSN	o DTSN 	240	0
6550	Path Sequence	* Path Sequence 	240	0
6550	RPLInstanceID	o RPLInstanceID 	303	0
6550	Code	o Code 	240	0
6550	MOP	IANA has created a registry for the 3-bit Mode of Operation ( MOP ), which is contained in the DIO Base . 	231	0
6550	OCP	IANA has created a registry to manage the codespace of the Objective Code Point ( OCP ) field . 	400	0
6550	Code	o Code 	240	0
6550	Flags	IANA has created a registry for the DIS ( DODAG Informational Solicitation ) Flags field . 	231	0
6550	Flags	IANA has created a registry for the 8-bit DODAG Information Object ( DIO ) Flags field . 	231	0
6550	Flags	IANA has created a registry for the 8-bit Consistency Check ( CC ) Flags field . 	231	0
6551	I	o I ( Included ): the ' I ' bit is only relevant when the node type is used as a constraint . For example , the path must only traverse mains-powered nodes . Conversely , battery-operated nodes must be excluded . The ' I ' bit is used to stipulate inclusion versus exclusion . When set , this indicates that nodes of the type specified in the node type field MUST be included . Conversely , when cleared , this indicates that nodes of type specified in the node type field MUST be excluded . 	210	0
6551	T	o T ( node Type ): 2-bit field indicating the node type . T=0 designates a mains-powered node , T=1 a battery-powered node , and T=2 a node powered by an energy scavenger . 	240	0
6551	E	o E ( Estimation ): when the ' E ' bit is set for a metric , the estimated percentage of remaining energy on the node is indicated in the E_E 8-bit field . When cleared , the estimated percentage of remaining energy is not provided . When the ' E ' bit is set for a constraint , the E_E field defines a threshold for the inclusion/ exclusion : if an inclusion , nodes with values higher than the threshold are to be included; if an exclusion , nodes with values lower than the threshold are to be excluded . 	210	0
6551	E_E	E_E ( Estimated-Energy ): 8-bit unsigned integer field indicating an estimated percentage of remaining energy . The E_E field is only relevant when the ' E ' flag is set , and it MUST be set to 0 when the ' E ' flag is cleared . 	210	0
6551	Throughput	Many LLNs support a wide range of throughputs . For some links , this may be due to variable coding . For the deeply duty-cycled links found in many LLNs , the variability comes as a result of trading power consumption for bit rate . There are several MAC layer protocols that allow for the effective bit rate of a link to vary over more than three orders of magnitude with a corresponding change in power consumption . For efficient operation , it may be desirable for nodes to report the range of throughput that their links can handle in addition to the currently available throughput . 	231	0
6551	Throughput	Throughput : 32 bits . The Throughput is encoded in 32 bits in unsigned integer format , expressed in bytes per second . 	400	0
6551	Latency	Similar to throughput , the latency of many LLN MAC sub-layers can vary over many orders of magnitude , again with a corresponding change in power consumption . Some LLN MAC link layers will allow the latency to be adjusted globally on the subnet , on a link-by-link basis , or not at all . Some will insist that it be fixed for a given link , but allow it to be variable from link to link . 	231	0
6551	Latency	Latency : 32 bits . The Latency is encoded in 32 bits in unsigned integer format , expressed in microseconds . 	110	0
6551	Val	Val : LQL value from 0 to 7 where 0 means undetermined and 1 indicates the highest link quality . 	302	0
6551	Counter	Counter : number of links with that value . 	303	0
6551	ETX	ETX : 16 bits . The ETX * 128 is encoded using 16 bits in unsigned integer format , rounded off to the nearest whole number . For example , if ETX = 3.569 , the object value will be 457 . If ETX > 511.9921875 , the object value will be the maximum , which is 65535 . 	200	0
6551	Reserved	Reserved ( 5 bits ): Reserved field . This field MUST be set to zero on transmission and MUST be ignored on receipt . 	500	0
6553	Option Type	Opt Data Len : 8-bit field indicating the length of the option , in octets , excluding the Option Type and Opt Data Len fields . 	100	0
6553	Opt Data Len	Opt Data Len : 8-bit field indicating the length of the option , in octets , excluding the Option Type and Opt Data Len fields . 	100	0
6553	RPLInstanceID	RPLInstanceID : 8-bit field as defined in Section 11.2 of [ RFC6550 ]. The processing SHALL follow the rules described in Section 11.2 of [ RFC6550 ]. 	400	0
6553	SenderRank	SenderRank : 16-bit field as defined in Section 11.2 of [ RFC6550 ]. The processing SHALL follow the rules described in Section 11.2 of [ RFC6550 ]. 	400	0
6554	Next Header	Next Header 8-bit selector . Identifies the type of header immediately following the Routing header . Uses the same values as the IPv6 Next Header field [ RFC2460 ]. 	231	0
6554	Hdr Ext Len	Hdr Ext Len 8-bit unsigned integer . Length of the Routing header in 8-octet units , not including the first 8 octets . Note that when Addresses[1..n ] are compressed ( i.e ., value of CmprI or CmprE is not 0 ), Hdr Ext Len does not equal twice the number of Addresses . 	100	0
6554	Routing Type	Routing Type 8-bit selector . Identifies the particular Routing header variant . An SRH should set the Routing Type to 3 . 	231	0
6554	Segments Left	Segments Left 8-bit unsigned integer . Number of route segments remaining , i.e ., number of explicitly listed intermediate nodes still to be visited before reaching the final destination . The originator of an SRH sets this field to n , the number of addresses contained in Addresses[1..n ]. 	100	0
6554	CmprI	CmprI 4-bit unsigned integer . Number of prefix octets from each segment , except than the last segment , ( i.e ., segments 1 through n-1 ) that are elided . For example , an SRH carrying full IPv6 addresses in Addresses[1..n-1 ] sets CmprI to 0 . 	301	0
6554	CmprE	CmprE 4-bit unsigned integer . Number of prefix octets from the last segment ( i.e ., segment n ) that are elided . For example , an SRH carrying a full IPv6 address in Addresses[n ] sets CmprE to 0 . 	301	0
6554	Pad	Pad 4-bit unsigned integer . Number of octets that are used for padding after Address[n ] at the end of the SRH . 	100	0
6554	Reserved	Reserved This field is unused . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
6559	TCP Connection ID AFI	TCP Connection ID AFI : The AFI value to describe the address family of the address of the TCP Connection ID field . Note that this value does not need to match the address family of the PIM Hello message that carries it . When this field is 0 , a mechanism outside the scope of this document is used to obtain the addresses used to establish the TCP connection . 	230	0
6559	Reserved	Reserved : Set to zero on transmission and ignored on receipt . 	500	0
6559	Exp	Exp : For experimental use [ RFC3692 ]. One expected use of these bits would be to signal experimental capabilities . For example , if a router supports an experimental feature , it may set a bit to indicate this . The default behavior , unless a router supports a particular experiment , is to ignore the bits on receipt . 	231	0
6559	TCP Connection ID	TCP Connection ID : An IPv4 or IPv6 address used to establish the TCP connection . This field is omitted ( length 0 ) for the Connection ID AFI 0 . 	230	0
6559	SCTP Connection ID AFI	SCTP Connection ID AFI : The AFI value to describe the address family of the address of the SCTP Connection ID field . Note that this value does not need to match the address family of the PIM Hello message that carries it . When this field is 0 , a mechanism outside the scope of this document is used to obtain the addresses used to establish the SCTP connection . 	230	0
6559	Reserved	Reserved : Set to zero on transmission and ignored on receipt . 	500	0
6559	Exp	Exp : For experimental use [ RFC3692 ]. One expected use of these bits would be to signal experimental capabilities . For example , if a router supports an experimental feature , it may set a bit to indicate this . The default behavior , unless a router supports a particular experiment , is to ignore the bits on receipt . 	231	0
6559	SCTP Connection ID	SCTP Connection ID : An IPv4 or IPv6 address used to establish the SCTP connection . This field is omitted ( length 0 ) for the Connection ID AFI 0 . 	230	0
6559	Interface ID	All Hello messages containing PIM-over-TCP-Capable or PIM-over-SCTP - Capable Hello Options MUST also contain the Interface ID Hello Option [ RFC6395 ]. 	231	0
6559	Message Length	Message Length : Length in bytes for the value part of the Type/ Length/Value encoding . If no PORT Options are included , the length is 12 . If n PORT Options with Option Value lengths L1 , L2 , ..., Ln are included , the message length is 12 + 4*n + L1 + L2 + ... + Ln . 	100	0
6559	Reserved	Reserved : Set to zero on transmission and ignored on receipt . 	500	0
6559	Interface ID	Interface ID : This MUST be the Interface ID of the Interface ID Hello Option contained in the PIM Hello messages that the PIM router is sending to the PIM neighbor . It indicates to the PIM neighbor what interface to associate the Join/Prune with . The Interface ID allows us to do connection sharing . 	230	0
6559	Message Length	Message Length : Length in bytes for the value part of the Type/ Length/Value encoding . If no PORT Options are included , the length is 6 . If n PORT Options with Option Value lengths L1 , L2 , ..., Ln are included , the message length is 6 + 4*n + L1 + L2 + ... + Ln . 	100	0
6559	Reserved	Reserved : Set to zero on transmission and ignored on receipt . 	500	0
6559	Holdtime	Holdtime : This specifies a Holdtime in seconds for the connection . A non-zero value means that the connection SHOULD be gracefully shut down if no further PORT messages are received within the specified time . This is measured on the receiving side by measuring the time from when one PORT message has been processed until the next has been processed . Note that this MUST be done for any PORT message , not just keep-alive messages . A Holdtime of 0 disables the keep-alive mechanism . 	120	0
6559	Option Value Length	Option Value Length : The number of bytes that make up the PIMv2 Join/Prune message . 	100	0
6559	Option Value Length	Option Value Length : The number of bytes that make up the PIMv2 Join/Prune message . 	100	0
6564	Next Header	Next Header 8-bit selector . Identifies the type of header immediately following the extension header . Uses the same values as the IPv4 Protocol field [ IANA_IP_PARAM ]. 	231	0
6564	Hdr Ext Len	Hdr Ext Len 8-bit unsigned integer . Length of the extension header in 8-octet units , not including the first 8 octets . 	100	0
6565	Area Number	The area number indicates the 32-bit Area ID to which the route belongs . 	231	0
6565	Options	The Options field indicates the options that are associated with the OSPFv3 route . 	231	0
6572	Type	Type : Mobile-Node-Identifier 145 . 	231	0
6572	Length	Length : In octets , including Type and Length fields (>= 3 ). 	100	0
6572	Type	Type : Service-Selection 146 . 	240	0
6572	Length	Length : In octets , including Type and Length fields (>= 3 ). 	100	0
6572	Type	Type : PMIP6-Home-LMA-IPv6-Address 147 . 	240	0
6572	Length	Length : = 18 octets 	100	0
6572	Home LMA IPv6 address	Home LMA IPv6 address : 128-bit IPv6 address of the assigned home LMA IPv6 address . 	230	0
6572	Type	Type : PMIP6-Visited-LMA-IPv6-Address 148 . 	240	0
6572	Length	Length : = 18 octets 	100	0
6572	Visited LMA IPv6 address	Visited LMA IPv6 address : 128-bit IPv6 address of the assigned visited LMA IPv6 address . 	230	0
6572	Type	Type : PMIP6-Home-LMA-IPv4-Address 149 . 	240	0
6572	Length	Length : = 6 octets 	100	0
6572	Home LMA IPv4 address	Home LMA IPv4 address : 32-bit IPv4 address of the assigned LMA . 	230	0
6572	Type	Type : PMIP6-Visited-LMA-IPv4-Address 150 . 	240	0
6572	Length	Length : = 6 octets 	100	0
6572	Type	Type : PMIP6-Home-HN-Prefix 151 . 	231	0
6572	Length	Length : = at least 4 and no larger than 20 . 	100	0
6572	Reserved	Reserved : Reserved for future use . The bits MUST be set to zero by the sender and MUST be ignored by the receiver . 	500	0
6572	Type	Type : PMIP6-Visited-HN-Prefix 152 . 	231	0
6572	Length	Length : = at least 4 and no larger than 20 . 	100	0
6572	Reserved	Reserved : Reserved for future use . The bits MUST be set to zero by the sender and MUST be ignored by the receiver . 	500	0
6572	Type	Type : PMIP6-Home-Interface-ID 153 . 	231	0
6572	Length	Length : = 10 octets . 	100	0
6572	Home Interface Identifier	Home Interface Identifier : The 64-bit long interface identifier ( 8 octets ). 	230	0
6572	Type	Type : PMIP6-Visited-Interface-ID 154 . 	400	0
6572	Length	Length : = 10 octets . 	100	0
6572	Visited Interface Identifier	Visited Interface Identifier : The 64-bit long interface identifier ( 8 octets ). 	230	0
6572	Type	Type : PMIP6-Home-IPv4-HoA 155 . 	231	0
6572	Length	Length : = 8 octets 	100	0
6572	Home IPv4 HoA	Home IPv4 HoA : This field is of type Address and contains the IPv4 home address of the MN in the home network . 	230	0
6572	Type	Type : PMIP6-Visited-IPv4-HoA 156 . 	400	0
6572	Length	Length : = 8 octets 	100	0
6572	Reserved	Reserved : The 10-bit field reserved for future use . The value MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
6572	Visited IPv4 HoA	Visited IPv4 HoA : This field is of type Address and contains the IPv4 home address of the MN in the visited network . 	230	0
6572	Type	Type : PMIP6-Home-DHCP4-Server-Address 157 . 	240	0
6572	Length	Length : = 6 octets . 	100	0
6572	Home DHCPv4 server address	Home DHCPv4 server address : This field is of type Address and contains a 4-octet IPv4 address of the DHCP server . 	230	0
6572	Type	Type : PMIP6-Visited-DHCP4-Server-Address 158 . 	240	0
6572	Length	Length : = 6 octets 	100	0
6572	Visited DHCPv4 server address	Visited DHCPv4 server address : This field is of type Address and contains a 4-octet IPv4 address of the DHCPv4 server . 	230	0
6572	Type	Type : PMIP6-Home-DHCP6-Server-Address 159 . 	240	0
6572	Length	Length : = 18 octets 	100	0
6572	Home DHCPv6 server address	Home DHCPv6 server address : This field is of type Address and contains 16-octet IPv6 address of the DHCPv6 server . 	230	0
6572	Type	Type : PMIP6-Visited-DHCP6-Server-Address 160 . 	240	0
6572	Length	Length : = 18 octets 	100	0
6572	Visited DHCPv6 server address	Visited DHCPv6 server address : This field is of type Address and contains the 16-octet IPv6 address of the DHCPv6 server . 	230	0
6572	Type	Type : PMIP6-Home-IPv4-Gateway 161 . 	240	0
6572	Length	Length : = 6 octets 	100	0
6572	Type	Type : PMIP6-Visited-IPv4-Gateway 162 . 	400	0
6572	Length	Length : = 6 octets 	100	0
6581	IRD	Inbound RDMA Read Queue Depth ( IRD ): The maximum number of incoming simultaneous RDMA Read Request Messages an RDMA connection can handle . See [ RDMAC ]. 	400	0
6581	IRD	MPA Fencing : MPA responder connection establishment logic that ensures that no ULP messages will be transferred until the initiator's first message has been received . 	400	0
6581	ORD	Outbound RDMA Read Queue Depth ( ORD ): The maximum number of simultaneous RDMA Read Requests that can be issued for the RDMA connection . This should be less than or equal to the peer's IRD . See [ RDMAC ]. 	400	0
6581	ORD	Outbound RDMA Read Queue Depth ( ORD ): The maximum number of simultaneous RDMA Read Requests that can be issued for the RDMA connection . This should be less than or equal to the peer's IRD . See [ RDMAC ]. 	400	0
6581	Private Data	Private Data : A block of data exchanged between MPA endpoints during initial connection setup . See [ RFC5044 ]. 	400	0
6581	ORD	Outbound RDMA Read Queue Depth ( ORD ). ORD is used to limit the number of simultaneous RDMA Read Requests such that the local endpoint does not overrun the remote endpoint's IRRQ depth or IRD . Note that outbound RDMA Reads are submitted to a QP's Send Queue at the local peer , not to a separate outbound RDMA Read Request queue on the local peer . The local endpoint uses ORD to strictly limit simultaneous Read Requests so that IRRQ overruns do not occur at the remote endpoint . 	400	0
6581	M	M : Unchanged from [ RFC5044 ]. 	231	0
6581	C	C : Unchanged from [ RFC5044 ]. 	231	0
6581	R	S : One , if the Private Data begins with the enhanced RDMA connection establishment data; 0 otherwise . 	210	0
6581	S	S : One , if the Private Data begins with the enhanced RDMA connection establishment data; 0 otherwise . 	210	0
6581	Res	Res : One bit smaller than in [ RFC5044 ]; otherwise unchanged . In [ RFC5044 ], the ' Res ' field , in which the newly defined ' S ' bit resides , is reserved for future use . [ RFC5044 ] specifies that ' Res ' MUST be set to zero when sending and MUST NOT be checked on reception , making use of ' S ' bit backwards compatibility with the original MPA Frame format . When the ' S ' bit is set to zero , no additional Private Data is used for enhanced RDMA connection establishment; therefore , the resulting MPA Request and Reply Frames are identical to the unenhanced protocol . 	302	0
6581	Rev	Rev : This field contains the revision of MPA . To use any enhanced connection establishment feature , this MUST be set to two or higher . If no enhanced connection establishment features are desired , it MAY be set to one . A host accepting MPA connections MUST continue to accept MPA Requests with version one , even if it supports version two . 	400	0
6581	PD_Length	PD_Length : Unchanged from [ RFC5044 ]. This is the total length of the Private Data field , including the enhanced RDMA connection establishment data , if present . 	100	0
6581	Private Data	Private Data : Unchanged from [ RFC5044 ]. However , if the ' S ' flag is set , Private Data MUST begin with enhanced RDMA connection establishment data ( see Section 9 ). 	400	0
6581	IRD	IRD : Inbound RDMA Read Queue Depth . 	400	0
6581	ORD	ORD : Outbound RDMA Read Queue Depth . 	400	0
6581	A	A : Control Flag for connection model . 	231	0
6581	B	B : Control Flag for use of a zero-length FULPDU ( Send ) RTR indication . 	231	0
6581	C	C : Control Flag for use of a zero-length RDMA Write RTR indication . 	231	0
6581	D	D : Control Flag for use of a zero-length RDMA Read RTR indication . 	231	0
6581	IRD	The IRD and ORD are used for negotiation of Inbound RDMA Read Request Queue depths for both endpoints of the RDMA connection . The IRD is used to configure the depth of the Inbound RDMA Read Request Queue ( IRRQ ) on each endpoint . ORD is used to limit the number of simultaneous outbound RDMA Read Requests allowed at any given point in time in order to avoid IRRQ overruns at the remote endpoint . In order to describe the negotiation of both local endpoint and remote endpoint ORD and IRD values , four terms are defined : 	400	0
6584	ASID	The ASID identifies the source authentication scheme or protocol in use . The association between the ASID value and the actual authentication scheme is defined out-of-band , at session startup . 	231	0
6584	rsvd	This is a reserved field that MUST be set to zero and ignored by receivers . 	500	0
6584	Signature	The Signature field contains a Digital Signature of the message . If need be , this field is padded ( with 0 ) up to a multiple of 32 bits . 	400	0
6584	ASID	The ASID identifies the source authentication scheme or protocol in use . The association between the ASID value and the actual authentication scheme is defined out-of-band , at session startup . 	231	0
6584	rsvd	This is a reserved field that MUST be set to zero and ignored by receivers . 	500	0
6584	Signature	The Signature field contains a Digital Signature of the message . If need be , this field is padded ( with 0 ) up to a multiple of 32 bits . 	400	0
6584	ASID	The ASID identifies the source authentication scheme or protocol in use . The association between the ASID value and the actual authentication scheme is defined out-of-band , at session startup . 	231	0
6584	rsvd	This is a reserved field that MUST be set to zero and ignored by receivers . 	500	0
6584	Group-keyed MAC	The Group-keyed MAC field contains a truncated Group-keyed MAC of the message . If need be , this field is padded ( with 0 ) up to a multiple of 32 bits . 	400	0
6584	ASID	The ASID identifies the source authentication scheme or protocol in use . The association between the ASID value and the actual authentication scheme is defined out-of-band , at session startup . 	231	0
6584	rsvd	This is a reserved field that MUST be set to zero and ignored by receivers . 	500	0
6584	Signature	The Signature field contains a Digital Signature of the message . If need be , this field is padded ( with 0 ) up to a multiple of 32 bits . 	400	0
6607	Code	Code The option code ( 221 ). 	231	0
6607	Length	Length The option length , minimum 1 octet . 	100	0
6607	Type	Type and VSS Information -- see Section 3.5 . 	400	0
6607	Code	Code The sub-option code ( 151 ). 	231	0
6607	Length	Length The sub-option length , minimum 1 octet . 	100	0
6607	Type	Type and VSS Information -- see Section 3.5 . 	400	0
6607	Code	Code The sub-option code ( 152 ). 	231	0
6607	Length	Length The sub-option length , 0 . 	100	0
6607	Type	Type and VSS Information -- see Section 3.5 . 	400	0
6610	Home Network Identifier FQDN	Home Network Identifier FQDN : A Fully Qualified Domain Name ( FQDN ) that identifies a mobile IP home network for which the client is seeking configuration information . This is encoded in accordance with RFC 3315 , Section 8 , " Representation and Use of Domain Names ". 	230	0
6610	Options	Options : One or more options , specifying information about the local ASP ( visited domain ). 	400	0
6610	Options	Options : One or more options , specifying information about the home network identified by a Home Network Identifier FQDN option sent by a mobile node . 	400	0
6610	Options	Options : One or more options , specifying information about some home network as specified by the DHCP server administrator . 	400	0
6610	Prefix	Prefix-len : Length of prefix 	100	0
6610	Prefix	Prefix : Home Network Prefix 	231	0
6610	Address	Address : IP Address of home agent 	230	0
6610	Address	Address : FQDN resolving to one or more IPv4 and/or IPv6 addresses for the home agent . This is encoded in accordance with RFC 3315 , Section 8 , " Representation and Use of Domain Names ". 	230	0
6621	TidTy	A portion of the option data content in the SMF_DPD is the Tagger Identifier Type ( TidTy ), which provides a context for the optionally included TaggerId . 	231	0
6621	SMF_TYPE	This document defines one Message TLV Type , " SMF_TYPE ", which has been allocated from the " HELLO Message-Type-specific Message TLV Types " registry , defined in [ RFC6130 ]. 	400	0
6621	SMF_NBR_TYPE	This document defines one Address Block TLV Type , " SMF_NBR_TYPE ", which has been allocated from the " HELLO Message-Type-specific Address Block TLV Types " registry , defined in [ RFC6130 ]. 	400	0
6622	ICV	The basic ICV , represented by way of an ICV TLV with type extension = 0 , is a simple bit-field containing the cryptographic ICV . This assumes that the mechanism stipulating how ICVs are calculated and verified is established outside of this specification , e.g ., by way of administrative configuration or external out-of-band signaling . Thus , the < ICV-value >, when using type extension = 0 , is 	400	0
6622	ICV	One common way of calculating an ICV is applying a cryptographic function over a hash value of the content . This decomposition is specified in this section , using a type extension = 1 in the ICV TLVs . 	400	0
6630	SEQ	As defined in Section 5.3.2 of [ RFC5296 ], this field is 16-bit sequence number and used for replay protection . 	200	0
6630	Cryptosuite	This field indicates the integrity algorithm used for ERP/AAK . Key lengths and output lengths are either indicated or obvious from the cryptosuite name , e.g ., HMAC-SHA256-128 denotes Hashed Message Authentication Code ( HMAC ) computed using the SHA-256 function [ RFC4868 ] with 256-bit key length and the output truncated to 128 bits [ RFC2104 ]. We specify some cryptosuites below : 	231	0
6630	Authentication Tag	This field contains an integrity checksum over the ERP/AAK packet from the first bit of the Code field to the last bit of the Cryptosuite field , excluding the Authentication Tag field itself . The value field is calculated using the integrity algorithm indicated in the Cryptosuite field and rIK specified in [ RFC5296 ] as the secret key . The length of the field is indicated by the Cryptosuite . 	301	0
6630	Resved	The final 4 bits ( Resved ) MUST be set to 0 and ignored on reception . 	500	0
6630	SEQ	As defined in Section 5.3.3 of [ RFC5296 ], this field is a 16-bit sequence number and is used for replay protection . 	200	0
6630	Cryptosuite	This field indicates the integrity algorithm and PRF used for ERP/ AAK . HMAC-SHA256-128 is REQUIRED to implement , and it SHOULD be enabled in the default configuration . Key lengths and output lengths are either indicated or obvious from the cryptosuite name . 	400	0
6630	Authentication Tag	This field contains the integrity checksum over the ERP/AAK packet from the first bit of the Code field to the last bit of the Cryptosuite field , excluding the Authentication Tag field itself . The value field is calculated using the integrity algorithm indicated in the Cryptosuite field and the rIK [ RFC5296 ] as the integrity key . The length of the field is indicated by the corresponding Cryptosuite . 	301	0
6630	E	The rest of the values in the 8-bit field are reserved . New values can be assigned by Standards Action or IESG Approval [ RFC5226 ]. 	231	0
6630	R	( R ) 0x80 [ RFC5296 ] 	240	0
6630	L	( L ) 0x20 [ RFC5296 ] 	240	0
6630	E	This document assigns a new flag ( E ) as follows : 	231	0
6630	E	The rest of the values in the 8-bit field are reserved . New values can be assigned by Standards Action or IESG Approval . 	231	0
6630	R	( R ) 0x80 [ RFC5296 ] 	240	0
6630	L	( L ) 0x20 [ RFC5296 ] 	240	0
6630	E	This document assigns a new flag ( E ) as follows : 	231	0
6630	E	The rest of the values in the 8-bit field are reserved . New values can be assigned by Standards Action or IESG approval . 	231	0
6642	SSRC	SSRC - Synchronization Source 	231	0
6642	PID	The PID field is used to specify a lost packet . The PID field refers to the RTP sequence number of the lost packet . 	200	0
6642	BLP	The BLP allows for reporting losses of any of the 16 RTP packets immediately following the RTP packet indicated by the PID . The BLP's definition is identical to that given in Section 6.2.1 of [ RFC4585 ]. 	302	0
6642	SSRC	The SSRC value of the media source that is already aware , or in the process of being made aware , that some receiver lost synchronization with the media stream and for which the PSLEI receiver's own response to any such error is suppressed . 	230	0
6656	Len	Len = Length of the suboption ( always 2 for this suboption ) ( 1 octet ) Flags = Flags field . ( all unused bits must be zero ) 	100	0
6656	Len	Len = Length of the suboption ( min . length of 8 ) ( 1 octet ) Flags = Various flags that apply to ALL Subnet Prefix Information fields specified in this suboption . Unused flags must be zero . 	100	0
6656	Prefix	Network = IPv4 network number ( 4 octets ) Prefix = Prefix length ( 1 octet ) Flags = Flags field ( Undefined bits must be zero ) ( 1 octet ) 	100	0
6656	Len	The Subnet-Name suboption may be used in order to pass a subnet name to the Server for use during allocation . This name may be used for any purpose but is intended to tell the Server something extra about the needed subnet; for example , " sales department ", " customer 1002 ", " address pool FOO ", or some such . The " name " should NOT be NULL terminated since the " len " field already specifies the length of the name . The " Name " in this suboption MUST be given using UTF-8 [ RFC3629 ]. 	230	0
6656	Len	Len = length of the suboption ( always 4 for this suboption ) ( 1 octet ) 	100	0
6677	Length	Length : Two octets of length in network byte order , indicating the length of the NS-Specific data . The NSID and length octets are not included . 	100	0
6677	NSID	NSID : Namespace identifier . One octet describing the namespace from which the attributes are drawn . See Section 5.3.3 for a description of how to encode RADIUS attributes in channel-binding data and responses . RADIUS uses a namespace identifier of 1 . 	231	0
6679	Extended Highest Sequence Number	Extended Highest Sequence Number : The 32-bit extended highest sequence number received , as defined by [ RFC3550 ]. Indicates the highest RTP sequence number to which this report relates . 	231	0
6679	Lost Packets Counter	Lost Packets Counter : The cumulative number of RTP packets that the receiver expected to receive minus the number of packets it actually received that are not a duplicate of an already received packet , from this SSRC since the receiver joined the RTP session . Note that packets that arrive late are not counted as lost . The receiver should keep track of this value using a local representation that is at least 32 bits and only include the 16 bits with least significance . In other words , the field will wrap if more than 65535 packets are lost . 	100	0
6679	Duplication Counter	Duplication Counter : The cumulative number of RTP packets received that are a duplicate of an already received packet from this SSRC since the receiver joined the RTP session . The receiver should keep track of this value using a local representation that is at least 32 bits and only include the 16 bits with least significance . In other words , the field will wrap if more than 65535 duplicate packets have been received . 	200	0
6679	BT	BT : Block Type identifying the ECN Summary Report block . Value is 13 . 	400	0
6679	Reserved	Reserved : All bits SHALL be set to 0 on transmission and ignored on reception . 	500	0
6679	Block Length	Block Length : The length of this XR report block , including the header , in 32-bit words minus one . Used to indicate the number of ECN Summary Report data blocks present in the ECN Summary Report . This length will be 5*n , where n is the number of ECN Summary Report blocks , since blocks are a fixed size . The block length MAY be zero if there is nothing to report . Receivers MUST discard reports where the block length is not a multiple of five , since these cannot be valid . 	100	0
6679	SSRC of Media Sender	SSRC of Media Sender : The SSRC identifying the media sender this report is for . 	230	0
6679	Lost Packets Counter	Lost Packets Counter : as in Section 5.1 . 	301	0
6679	Duplication Counter	The extended highest sequence number counter for each SSRC is not present in an RTCP XR report , in contrast to the feedback version . The reason is that this summary report will rely on the information sent in the Sender Report ( SR ) or Receiver Report ( RR ) blocks part of the same RTCP compound packet . The extended highest sequence number is available from the SR or RR . 	200	0
6679	V	V : Valid ( 1 bit ) ECN Echo value field is valid when set to 1 and invalid when set 0 . 	210	0
6679	ECF	ECF : ECN Echo value field ( 2 bits ) contains the ECN field value of the STUN packet it echoes back when the field is valid . If invalid , the content is arbitrary . 	400	0
6679	Reserved	Reserved : Reserved bits ( 29 bits ) SHALL be set to 0 on transmission and SHALL be ignored on reception . 	500	0
6679	Lost Packets Counter	Lost Packets Counter : The number of RTP packets that where expected based on sequence numbers but never received . 	110	0
6679	Duplication Counter	Duplication Counter : The number of received RTP packets that are duplicates of already received ones . 	231	0
6681	MSBL	MSBL : Maximum Source Block Length 	100	0
6681	P	o P[i ] denote s[i]*T-(l[i]+3 ) zero octets . Note : P[i ] are padding octets to align the start of each UDP packet with the start of a symbol . 	110	0
6681	P	Then , a source data block is constructed by concatenating ADUI[i ] for i = 0 , 1 , 2 , ... n-1 . The source data block size , S , is then given by sum { s[i]*T , i=0 , ..., n-1 }. Symbols are allocated integer encoding symbol IDs ( ESI ) consecutively starting from zero within the source block . Each ADU is associated with the ESI of the first symbol containing SPI for that packet . Thus , the encoding symbol ID value associated with the j-th source packet , ESI[j ], is given by ESI[j ] = 0 , for j=0 and ESI[j ] = sum{s[i ], i=0,...,(j-1 )}, for 0 < j < n . 	210	0
6681	MSBL	MSBL : The maximum source block length . A non-negative integer less than 8192 for FEC Scheme 1 and less than 56403 for FEC Scheme 2 , in units of symbols . The field type is unsigned integer . 	100	0
6681	P	P : The payload ID format indicator . The P bit shall be set to zero to indicate payload ID format A or to one to indicate payload ID format B . The field type is unsigned integer . 	210	0
6681	SBN	Source Block Number ( SBN ), ( 16 bits ): Identifier for the source block that the source data within the packet relates . The field type is unsigned integer . 	231	0
6681	Encoding Symbol ID	Encoding Symbol ID ( ESI ), ( 16 bits ): The starting symbol index of the source packet in the source block . The field type is unsigned integer . 	231	0
6681	SBN	Source Block Number ( SBN ), ( 8 bits ): Identifier for the source block that the source data within the packet relates . The field type is unsigned integer . 	231	0
6681	Encoding Symbol ID	Encoding Symbol ID ( ESI ), ( 24 bits ): The starting symbol index of the source packet in the source block . The field type is unsigned integer . 	231	0
6681	SBN	Source Block Number ( SBN ), ( 16 bits ): Identifier for the source block that the repair symbols within the packet relate . For format A , it is of size 16 bits . The field type is unsigned integer . 	231	0
6681	Encoding Symbol ID	Encoding Symbol ID ( ESI ), ( 16 bits ): Identifier for the encoding symbols within the packet . The field type is unsigned integer . 	231	0
6681	Source Block Length	Source Block Length ( SBL ), ( 16 bits ): The number of source symbols in the source block . The field type is unsigned integer . 	100	0
6681	SBN	Source Block Number ( SBN ), ( 8 bits ): Identifier for the source block that the repair symbols within the packet relate . For format B , it is of size 8 bits . The field type is unsigned integer . 	231	0
6681	Encoding Symbol ID	Encoding Symbol ID ( ESI ), ( 24 bits ): Identifier for the encoding symbols within the packet . The field type is unsigned integer . 	231	0
6681	Source Block Length	Source Block Length ( SBL ), ( 16 bits ): The number of source symbols in the source block . The field type is unsigned integer . 	100	0
6681	Initial Sequence Number	Initial Sequence Number ( Flow i ISN ), ( 16 bits ): This field specifies the lowest 16 bits of the sequence number of the first packet to be included in this sub-block . If the sequence numbers are shorter than 16 bits , then the received Sequence Number SHALL be logically padded with zero bits to become 16 bits in length , respectively . The field type is unsigned integer . 	200	0
6681	Source Block Length	Source Block Length ( SBL ), ( 16 bits ): This field specifies the length of the source block in symbols . The field type is unsigned integer . 	100	0
6681	Encoding Symbol ID	Encoding Symbol ID ( ESI ), ( 16 bits ): This field indicates which repair symbols are contained within this repair packet . The ESI provided is the ESI of the first repair symbol in the packet . The field type is unsigned integer . 	231	0
6681	Initial Sequence Number	Initial Sequence Number ( Flow i ISN ), ( 16 bits ): This field specifies the lowest 16 bits of the sequence number in the first packet to be included in this sub-block . If the sequence numbers are shorter than 16 bits , then the received Sequence Number SHALL be logically padded with zero bits to become 16 bits in length , respectively . The field type is unsigned integer . 	200	0
6681	Source Block Length	Source Block Length ( SBL ), ( 16 bits ): This field specifies the length of the source block in symbols . The field type is unsigned integer . 	100	0
6681	Encoding Symbol ID	Encoding Symbol ID ( ESI ); ( 24 bits ): This field indicates which repair symbols are contained within this repair packet . The ESI provided is the ESI of the first repair symbol in the packet . The field type is unsigned integer . 	231	0
6693	Header	4.1 . Header 	240	0
6693	TLV Data	Timer The Timer field is used to inform the receiver of the timer value used in the Hello processing of the sender . The timer specifies the nominal time between periodic Hello messages . It is a constant for the duration of a session . The timer field is specified in units of 100 ms and is encoded as an SDNV . 	121	0
6693	TLV Data	TLV Data 	400	0
6693	TLV Data	RIB String Count Number of routing entries in the TLV . Encoded as an SDNV . 	400	0
6693	TLV Data	Bundle Offer Count Number of bundle offer/response entries . Encoded as an SDNV . Note that 0 is an acceptable value . In particular , a Bundle Response TLV with 0 entries is used to signal that a cycle of information exchange and bundle passing is completed . 	302	0
6693	TLV Flags	* Routing Information Base ( RIB ) TLV Flags ( Section 4.3.4 ) 	301	0
6696	Code	Code 	231	0
6696	Identifier	The Identifier field is one octet . The Identifier field MUST be the same if an EAP-Initiate packet is retransmitted due to a timeout while waiting for an EAP-Finish message . Any new ( non-retransmission ) EAP-Initiate message MUST use a new Identifier field . 	301	0
6696	Type	This field indicates that this is an ERP exchange . Two type values are defined in this document for this purpose -- Re-auth-Start ( Type 1 ) and Re-auth ( Type 2 ). 	231	0
6696	Reserved	Reserved : MUST be zero . Set to zero on transmission and ignored on reception . 	500	0
6696	SEQ	SEQ : An unsigned 16-bit sequence number is used for replay protection . The SEQ field is initialized to 0 every time a new rRK is derived . The field is encoded in network byte order . 	201	0
6696	Cryptosuite	Cryptosuite : This field indicates the integrity algorithm used for ERP . Key lengths and output lengths are either indicated or are obvious from the cryptosuite name . We specify some cryptosuites below : 	231	0
6696	Authentication Tag	Authentication Tag : This field contains the integrity checksum over the ERP packet , excluding the Authentication Tag field itself . The length of the field is indicated by the cryptosuite . 	400	0
6696	SEQ	SEQ : An unsigned 16-bit sequence number is used for replay protection . The SEQ field is initialized to 0 every time a new rRK is derived . The field is encoded in network byte order . 	201	0
6696	Cryptosuite	Cryptosuite : This field indicates the integrity algorithm and the PRF used for ERP . Key lengths and output lengths are either indicated or are obvious from the cryptosuite name . 	231	0
6696	Authentication Tag	Authentication Tag : This field contains the integrity checksum over the ERP packet , excluding the Authentication Tag field itself . The length of the field is indicated by the cryptosuite . 	400	0
6704	Code	Code Len Algorithms +-----+-----+----+----+----+ | 145 | n | A1 | A2 | A3 | .... +-----+-----+----+----+----+ 	240	0
6704	Code	Code : 90 ( Authentication ) per [ RFC3118 ] 	231	0
6704	Length	Length : contains the length of the protocol 	100	0
6704	Protocol	Protocol : 3 ( Reconfigure Key ) per [ RFC3118 ] 	302	0
6704	Algorithm	Algorithm : 1 ( HMAC-MD5 ) per [ RFC3118 ] and [ RFC3315 ] 	400	0
6704	RDM	Replay Detection Method ( RDM ): 0 	302	0
6704	Authentication Information	The format of the Authentication Information for the Forcerenew Nonce Authentication Protocol is as follows : 	400	0
6704	Type	Type : The type of data in Value field carried in this option : 	231	0
6705	Reserved	Lifetime : The requested time , in seconds , for which the sender wishes to have local forwarding . A value of 0xffff ( all ones ) indicates an infinite lifetime . When set to 0 , indicates a request to stop localized routing . 	500	0
6705	Lifetime	Lifetime : The requested time , in seconds , for which the sender wishes to have local forwarding . A value of 0xffff ( all ones ) indicates an infinite lifetime . When set to 0 , indicates a request to stop localized routing . 	120	0
6705	Reserved	Status : 8-bit unsigned integer indicating the result of processing the Localized Routing Acknowledgment message . Values of the Status field less than 128 indicate that the Localized Routing Acknowledgment was processed successfully by the mobility entities(LMA or MAG ). Values greater than or equal to 128 indicate that the Localized Routing Acknowledgment was rejected by the mobility entities . The following Status values are currently defined : 	301	0
6705	Status	Status : 8-bit unsigned integer indicating the result of processing the Localized Routing Acknowledgment message . Values of the Status field less than 128 indicate that the Localized Routing Acknowledgment was processed successfully by the mobility entities(LMA or MAG ). Values greater than or equal to 128 indicate that the Localized Routing Acknowledgment was rejected by the mobility entities . The following Status values are currently defined : 	301	0
6705	Lifetime	Lifetime : The time , in seconds , for which local forwarding is supported . It is typically copied from the corresponding field in the LRI message . 	120	0
6705	MAG IPv6 Address	The MAG IPv6 address mobility option contains the IPv6 address of a MAG involved in localized routing . The MAG IPv6 address option has an alignment requirement of 8n+4 . 	230	0
6705	Type	Type 	240	0
6705	Length	8-bit unsigned integer indicating the length of the option in octets , excluding the type and length fields . This field MUST be set to 18 . 	100	0
6705	Reserved	This 8-bit field is unused . The value MUST be initialized to 0 by the sender and MUST be ignored by the receiver . 	500	0
6705	Address Length	Address Length 	100	0
6705	MAG IPv6 Address	MAG IPv6 Address 	230	0
6716	...	o 252...255 : A second byte is needed . The total length is ( second_byte*4)+first_byte 	400	0
6716	s	the byte(s ) used to indicate the size of the padding . If the value is 255 , then the size of the additional padding is 254 bytes , plus the padding value encoded in the next byte . There MUST be at least one more byte in the packet in this case [ R6,R7 ]. The additional padding bytes appear at the end of the packet and MUST be set to zero by the encoder to avoid creating a covert channel . The decoder MUST accept any value for the padding bytes , however . 	400	0
6716	k	If fl[k ] is greater than zero , then the decoder updates rng using 	302	0
6716	k	The function silk_log2lin () ( log2lin.c ) computes an approximation of 2**(inLog_Q7/128.0 ), where inLog_Q7 is its Q7 input . Let i = inLog_Q7>>7 be the integer part of inLogQ7 and f = inLog_Q7&127 be the fractional part . Then , 	210	0
6716	k	res_Q10[k ] = ( k+1 < d_LPC ? ( res_Q10[k+1]*pred_Q8[k])>>8 : 0 ) + (((( I2[k]<<10 ) - sign(I2[k])*102)*qstep)>>16 ) , 	210	0
6716	k	res_Q10[k ] = ( k+1 < d_LPC ? ( res_Q10[k+1]*pred_Q8[k])>>8 : 0 ) + (((( I2[k]<<10 ) - sign(I2[k])*102)*qstep)>>16 ) , 	210	0
6716	k	w2_Q18[k ] = ( 1024/(cb1_Q8[k ] - cb1_Q8[k-1 ]) + 1024/(cb1_Q8[k+1 ] - cb1_Q8[k ])) << 16 	240	0
6716	k	w2_Q18[k ] = ( 1024/(cb1_Q8[k ] - cb1_Q8[k-1 ]) + 1024/(cb1_Q8[k+1 ] - cb1_Q8[k ])) << 16 	240	0
6716	k	i = ilog(w2_Q18[k ]) f = ( w2_Q18[k]>>(i-8 )) & 127 y = (( i&1 ) ? 32768 : 46214 ) >> (( 32-i)>>1 ) w_Q9[k ] = y + (( 213*f*y)>>16 ) 	240	0
6716	k	i = ilog(w2_Q18[k ]) f = ( w2_Q18[k]>>(i-8 )) & 127 y = (( i&1 ) ? 32768 : 46214 ) >> (( 32-i)>>1 ) w_Q9[k ] = y + (( 213*f*y)>>16 ) 	240	0
6716	k	Next , for each value of k from d_LPC-1 down to 0 , NLSF_Q15[k ] is set to 	201	0
6716	k	Next , for each value of k from d_LPC-1 down to 0 , NLSF_Q15[k ] is set to 	210	0
6716	k	Next , for each value of k from d_LPC-1 down to 0 , NLSF_Q15[k ] is set to 	201	0
6716	k	There is no need to check if the coefficients satisfy all the constraints before applying this fallback procedure . If they do , then it will not change their values . 	302	0
6716	k	This interpolation is performed in silk_decode_parameters () ( decode_parameters.c ). 	301	0
6716	k	This interpolation is performed in silk_decode_parameters () ( decode_parameters.c ). 	301	0
6716	k	This interpolation is performed in silk_decode_parameters () ( decode_parameters.c ). 	301	0
6716	k	p_Q16[k][j ] = p_Q16[k-1][j ] + p_Q16[k-1][j-2 ] - (( c_Q17[2*k]*p_Q16[k-1][j-1 ] + 32768)>>16 ) 	240	0
6716	k	p_Q16[k][j ] = p_Q16[k-1][j ] + p_Q16[k-1][j-2 ] - (( c_Q17[2*k]*p_Q16[k-1][j-1 ] + 32768)>>16 ) 	240	0
6716	k	q_Q16[k][j ] = q_Q16[k-1][j ] + q_Q16[k-1][j-2 ] - (( c_Q17[2*k+1]*q_Q16[k-1][j-1 ] + 32768)>>16 ) 	240	0
6716	k	q_Q16[k][j ] = q_Q16[k-1][j ] + q_Q16[k-1][j-2 ] - (( c_Q17[2*k+1]*q_Q16[k-1][j-1 ] + 32768)>>16 ) 	240	0
6716	k	a32_Q17[k ] = -( q_Q16[d2-1][k+1 ] - q_Q16[d2-1][k ]) - ( p_Q16[d2-1][k+1 ] + p_Q16[d2-1][k ])) 	240	0
6716	k	a32_Q17[k ] = ( a32_Q17[k]*sc_Q16[k ]) >> 16 	240	0
6716	k	a32_Q17[k ] = ( a32_Q17[k]*sc_Q16[k ]) >> 16 	240	0
6716	k	a32_Q17[k ] = ( a32_Q17[k]*sc_Q16[k ]) >> 16 	240	0
6716	0	The first multiply may require up to 48 bits of precision in the result to avoid overflow . The second multiply must be unsigned to avoid overflow with only 32 bits of precision . The reference implementation uses a slightly more complex formulation that avoids the 32-bit overflow using signed multiplication , but is otherwise equivalent . 	400	0
6716	k	The first multiply may require up to 48 bits of precision in the result to avoid overflow . The second multiply must be unsigned to avoid overflow with only 32 bits of precision . The reference implementation uses a slightly more complex formulation that avoids the 32-bit overflow using signed multiplication , but is otherwise equivalent . 	400	0
6716	k	Because this performs the actual saturation in the Q12 domain , but converts the coefficients back to the Q17 domain for the purposes of prediction gain limiting , this step must be performed after the 10th round of bandwidth expansion , regardless of whether or not the Q12 version of any coefficient still overflows a 16-bit integer . This saturation is not performed if maxabs_Q12 drops to 32767 or less prior to the 10th round . 	302	0
6716	k	Because this performs the actual saturation in the Q12 domain , but converts the coefficients back to the Q17 domain for the purposes of prediction gain limiting , this step must be performed after the 10th round of bandwidth expansion , regardless of whether or not the Q12 version of any coefficient still overflows a 16-bit integer . This saturation is not performed if maxabs_Q12 drops to 32767 or less prior to the 10th round . 	302	0
6716	k	However , silk_LPC_inverse_pred_gain_QA () approximates this using fixed-point arithmetic to guarantee reproducible results across platforms and implementations . Since small changes in the coefficients can make a stable filter unstable , it takes the real Q12 coefficients that will be used during reconstruction as input . Thus , let 	231	0
6716	k	However , silk_LPC_inverse_pred_gain_QA () approximates this using fixed-point arithmetic to guarantee reproducible results across platforms and implementations . Since small changes in the coefficients can make a stable filter unstable , it takes the real Q12 coefficients that will be used during reconstruction as input . Thus , let 	231	0
6716	k	However , silk_LPC_inverse_pred_gain_QA () approximates this using fixed-point arithmetic to guarantee reproducible results across platforms and implementations . Since small changes in the coefficients can make a stable filter unstable , it takes the real Q12 coefficients that will be used during reconstruction as input . Thus , let 	231	0
6716	k	rc_Q31[k ] = - a32_Q24[k][k ] << 7 	240	0
6716	k	rc_Q31[k ] = - a32_Q24[k][k ] << 7 	240	0
6716	k	rc_Q31[k ] = - a32_Q24[k][k ] << 7 	240	0
6716	k	div_Q30[k ] = ( 1<<30 ) - ( rc_Q31[k]*rc_Q31[k ] >> 32 ) 	240	0
6716	k	and if inv_gain_Q30[k ] < 107374 , the filter is unstable and the recurrence stops . The constant 107374 here is approximately 1/10000 in Q30 . If neither of these checks determine that the filter is unstable and k > 0 , row k-1 of a32_Q24 is computed from row k as 	302	0
6716	k	and if inv_gain_Q30[k ] < 107374 , the filter is unstable and the recurrence stops . The constant 107374 here is approximately 1/10000 in Q30 . If neither of these checks determine that the filter is unstable and k > 0 , row k-1 of a32_Q24 is computed from row k as 	302	0
6716	k	b1[k ] = ilog(div_Q30[k ]) 	210	0
6716	k	b1[k ] = ilog(div_Q30[k ]) 	210	0
6716	k	b2[k ] = b1[k ] - 16 	240	0
6716	k	b2[k ] = b1[k ] - 16 	240	0
6716	k	err_Q29[k ] = ( 1<<29 ) - (( div_Q30[k]<<(15-b2[k]))*inv_Qb2[k ] >> 16 ) 	240	0
6716	k	gain_Qb1[k ] = (( inv_Qb2[k ] << 16 ) + ( err_Q29[k]*inv_Qb2[k ] >> 13 )) 	240	0
6716	k	gain_Qb1[k ] = (( inv_Qb2[k ] << 16 ) + ( err_Q29[k]*inv_Qb2[k ] >> 13 )) 	240	0
6716	k	gain_Qb1[k ] = (( inv_Qb2[k ] << 16 ) + ( err_Q29[k]*inv_Qb2[k ] >> 13 )) 	240	0
6716	k	gain_Qb1[k ] = (( inv_Qb2[k ] << 16 ) + ( err_Q29[k]*inv_Qb2[k ] >> 13 )) 	240	0
6716	k	num_Q24[k-1][n ] = a32_Q24[k][n ] - (( a32_Q24[k][k-n-1]*rc_Q31[k ] + ( 1<<30 )) >> 31 ) 	240	0
6716	k	Otherwise , a round of bandwidth expansion is applied using the same procedure as in Section 4.2.7.5.7 , with 	302	0
6716	k	Otherwise , a round of bandwidth expansion is applied using the same procedure as in Section 4.2.7.5.7 , with 	302	0
6716	0	During round 15 , sc_Q16[0 ] becomes 0 in the above equation , so a_Q12[k ] is set to 0 for all k , guaranteeing a stable filter . 	302	0
6716	k	pitch_lags[k ] = clamp(lag_min , lag + lag_cb[contour_index][k ], lag_max ) 	231	0
6716	k	pitch_lags[k ] = clamp(lag_min , lag + lag_cb[contour_index][k ], lag_max ) 	231	0
6716	k	Let a_Q12[k ] be the LPC coefficients for the current subframe . If this is the first or second subframe of a 20 ms SILK frame and the LSF interpolation factor , w_Q2 ( see Section 4.2.7.5.5 ), is less than 4 , then these correspond to the final LPC coefficients produced by Section 4.2.7.5.8 from the interpolated LSF coefficients , n1_Q15[k ] ( computed in Section 4.2.7.5.5 ). Otherwise , they correspond to the final LPC coefficients produced from the uninterpolated LSF coefficients for the current frame , n2_Q15[k ]. 	210	0
6716	k	4 e_Q23[i ] __ b_Q7[k ] res[i ] = --------- + \ res[i - pitch_lags[s ] + 2 - k ] * ------- 2.0**23 /_ 128.0 k=0 	240	0
6716	k	1 . Let p = ( V(N-j-1,k ) + V(N-j,k))/2 . 	240	0
6716	k	1 . Let p = ( V(N-j-1,k ) + V(N-j,k))/2 . 	240	0
6716	k	k a_ana(k ) = a(k)*g_ana and 	210	0
6716	k	k a_ana(k ) = a(k)*g_ana and 	210	0
6716	k	k a_syn(k ) = a(k)*g_syn 	210	0
6716	k	k a_syn(k ) = a(k)*g_syn 	210	0
6716	s	The MDCT output is divided into bands that are designed to match the ear's critical bands for the smallest ( 2.5 ms ) frame size . The larger frame sizes use integer multiples of the 2.5 ms layout . For each band , the encoder computes the energy that will later be encoded . Each band is then normalized by the square root of the *unquantized* energy , such that each band now forms a unit vector X . The energy and the normalization are computed by compute_band_energies () and normalise_bands () ( bands.c ), respectively . 	400	0
6716	k	The index i is then encoded using the procedure in Section 5.1.4 with ft = V(N,K ). 	201	0
6716	k	The index i is then encoded using the procedure in Section 5.1.4 with ft = V(N,K ). 	201	0
6720	T	T , Targeted Hello As specified in [ RFC5036 ]. 	303	0
6720	R	R , Request Send Targeted Hellos As specified in [ RFC5036 ]. 	303	0
6726	V	This document specifies FLUTE version 2 . Hence , in any ALC packet that carries an FDT Instance and that belongs to the file delivery session as specified in this specification MUST set this field to ' 2 '. 	220	0
6726	FDT Instance ID	For each file delivery session , the numbering of FDT Instances starts from ' 0 ' and is incremented by one for each subsequent FDT Instance . After reaching the maximum value ( 2^20-1 ), the numbering starts from the smallest FDT Instance ID value assigned to an expired FDT Instance . When wraparound from a greater FDT Instance ID value to a smaller FDT Instance ID value occurs , the smaller FDT Instance ID value is considered logically higher than the greater FDT Instance ID value . Then , the subsequent FDT Instances are assigned the next available smallest FDT Instance ID value , in order to always keep the FDT Instance ID values logically increasing . 	201	0
6726	CENC	This field signals the content encoding algorithm used in the FDT Instance payload . This subsection reserves the Content Encoding Algorithm values 0 , 1 , 2 , and 3 for null , ZLIB [ RFC1950 ], DEFLATE [ RFC1951 ], and GZIP [ RFC1952 ], respectively . 	301	0
6726	Reserved	This field MUST be set to all ' 0's . This field MUST be ignored on reception . 	500	0
6731	Reserved	Reserved : Field reserved for the future . MUST be set to zero and MUST be ignored on receipt . 	500	0
6731	prf	prf : RDNSS preference : 	231	0
6731	Reserved	Reserved : Field reserved for the future . MUST be set to zero and MUST be ignored on receipt . 	500	0
6731	prf	prf : RDNSS preference : 	231	0
6733	Version	Version 	220	0
6733	Message Length	The Message Length field is three octets and indicates the length of the Diameter message including the header fields and the padded AVPs . Thus , the Message Length field is always a multiple of 4 . 	100	0
6733	Application-ID	Application-ID is four octets and is used to identify for which application the message is applicable . The application can be an authentication application , an accounting application , or a vendor-specific application . 	200	0
6733	Hop-by-Hop Identifier	The Hop-by-Hop Identifier is an unsigned 32-bit integer field ( in network byte order ) that aids in matching requests and replies . The sender MUST ensure that the Hop-by-Hop Identifier in a request is unique on a given connection at any given time , and it MAY attempt to ensure that the number is unique across reboots . The sender of an answer message MUST ensure that the Hop-by-Hop Identifier field contains the same value that was found in the corresponding request . The Hop-by-Hop Identifier is normally a monotonically increasing number , whose start value was randomly generated . An answer message that is received with an unknown Hop-by-Hop Identifier MUST be discarded . 	231	0
6733	End-to-End Identifier	The End-to-End Identifier is an unsigned 32-bit integer field ( in network byte order ) that is used to detect duplicate messages . Upon reboot , implementations MAY set the high order 12 bits to contain the low order 12 bits of current time , and the low order 20 bits to a random value . Senders of request messages MUST insert a unique identifier on each message . The identifier MUST remain locally unique for a period of at least 4 minutes , even across reboots . The originator of an answer message MUST ensure that the End-to-End Identifier field contains the same value that was found in the corresponding request . The End-to-End Identifier MUST NOT be modified by Diameter agents of any kind . The combination of the Origin-Host AVP ( Section 6.3 ) and this field is used to detect duplicates . Duplicate requests SHOULD cause the same answer to be transmitted ( modulo the Hop-by-Hop Identifier 	231	0
6733	AVP Code	The AVP Code , combined with the Vendor-Id field , identifies the attribute uniquely . AVP numbers 1 through 255 are reserved for reuse of RADIUS attributes , without setting the Vendor-Id field . AVP numbers 256 and above are used for Diameter , which are allocated by IANA ( see Section 11.1.1 ). 	231	0
6733	AVP Length	The AVP Length field is three octets , and indicates the number of octets in this AVP including the AVP Code field , AVP Length field , AVP Flags field , Vendor-ID field ( if present ), and the AVP Data field . If a message is received with an invalid attribute length , the message MUST be rejected . 	100	0
6743	Type	Type 156 	220	0
6743	Code	Code 0 	302	0
6743	Checksum	Checksum The 16-bit one's complement of the one's complement sum of the ICMP message , starting with the ICMP Type . For computing the checksum , the Checksum field is set to 0 . 	301	0
6743	Num of Locs	Num of Locs The number of 64-bit Locator values that are advertised in this message . This field MUST NOT be zero . 	302	0
6743	Operation	Operation The value in this field indicates whether this is a Locator Update Advertisement ( 0x01 ) or a Locator Update Acknowledgement ( 0x02 ). 	240	0
6743	RESERVED	RESERVED A field reserved for possible future use . At present , the sender MUST initialise this field to zero . Receivers should ignore this field at present . The field might be used for some protocol function in future . 	500	0
6744	Next Header	Next Header : 8-bit selector . Identifies the type of header immediately following the Destination Options header . This field uses the same values as the IPv4 Protocol field , as described in [ RFC2460 ]. 	231	0
6744	Hdr Ext Len	Hdr Ext Len : 8-bit unsigned integer . Length of the Destination Options header in 8-octet units , not including the first 8 octets . 	100	0
6744	Option Type	Option Type : This contains the value 0x8B ( 139 ). This is the first octet of the Nonce Option itself . 	231	0
6744	Option Length	Option Length : This indicates the length in 8-bit octets of the Nonce Value field of the Nonce Option . This value must be selected so that the enveloping IPv6 Destination Option complies with the IPv6 header alignment rules . Common values are 4 ( when the Nonce Value is 32 bits ) and 12 ( when the Nonce value is 96 bits ). 	100	0
6744	Nonce Value	Nonce Value : An unpredictable cryptographically random value [ RFC4086 ] used to prevent off-path attacks on an ILNP session . This field has variable length , with the length indicated by the Option Length field preceding it . Note that the overall IPv6 IPv6 Destination Option MUST comply with IPv6 header alignment rules . Implementations MUST support sending and receiving 32-bit and 96-bit Nonce values . 	400	0
6745	Type	Type 253 This type value is taken from Section 8 of [ RFC4727 ] and is allocated for experimental use . 	231	0
6745	Code	Code 0 	302	0
6745	Checksum	Checksum The 16-bit one's complement of the one's complement sum of the ICMP message , starting with the ICMP Type . For computing the checksum , the Checksum field is set to 0 . 	301	0
6745	Num of Locs	Num of Locs The number of 32-bit Locator values that are advertised in this message . 	231	0
6745	Operation	Operation The value in this field indicates whether this is a Locator Update Advertisement ( 0x01 ) or a Locator Update Acknowledgement ( 0x02 ). 	240	0
6745	RESERVED	RESERVED A field reserved for possible future use . At present , the sender MUST initialise this field to zero . Receivers should ignore this field at present . The field might be used for some protocol function in future . 	500	0
6754	Type	Type : 32 	240	0
6754	PIM Ver	PIM Ver : See Section 4.9 in [ RFC4601 ]. 	231	0
6754	Type	Type : 11 	220	0
6754	Reserved	Reserved : See Section 4.9 in [ RFC4601 ]. 	400	0
6754	Checksum	Group Address ( 64 or 160 bits ): Encoded-Group address as specified in Section 4.9.1 of [ RFC4601 ]. 	230	0
6754	Neighbor Address	Neighbor Address ( 32 or 128 bits ): Address of desired upstream neighbor where the downstream receiver redirects PIM Joins . 	230	0
6754	Preference	Preference ( 8 bits ): The first tiebreaker when ECMP Redirects from multiple upstream routers are compared against each other . A numerically smaller value is preferred . A reserved value ( 15 ) is used to indicate the metric value following the Preference field is a Network Time Protocol ( NTP ) timestamp , encoded in the format specified in [ RFC5905 ], taken at the moment the sending router started to forward out of this interface . 	110	0
6757	Operator-Identifier	The Operator-Identifier is the Structure of Management Information ( SMI ) Network Management Private Enterprise Code of the IANA - maintained " Private Enterprise Numbers " registry [ SMI ]. It identifies the operator running the network attached to a specific interface of the mobile access gateway . 	230	0
6757	Type	Type : MUST be set to the value of 52 , indicating that it is a Network-Identifier option . 	302	0
6757	Length	Length : 8-bit unsigned integer indicating the length in octets of the option , excluding the Type and Length fields . 	100	0
6757	ANI Type	ANI Type : 8-bit unsigned integer indicating the type of the Access Network Identifier sub-option . This specification defines the following types : 	231	0
6757	ANI Length	ANI Length : 8-bit unsigned integer indicating the number of octets needed to encode the Option Data , excluding the ANI Type and ANI Length fields of the sub-option . 	100	0
6757	ANI Type	ANI Type : MUST be set to the value of ( 1 ), indicating that it is a Network-Identifier sub-option 	210	0
6757	ANI Length	ANI Length : Total length of this sub-option in octets , excluding the ANI Type and ANI Length fields . The value can be in the range of 5 to 32 octets . 	100	0
6757	E	E : 1-bit flag indicating whether the Network Name is encoded in UTF-8 . If this flag is set to one ( 1 ), then the Network Name is encoded using UTF-8 [ RFC3629 ]. If the flag is set to zero ( 0 ), this indicates that the encoding is undefined and is determined by out-of-band mechanisms . Implementations SHOULD use UTF-8 encoding . 	210	0
6757	Reserved	Reserved : MUST be set to zero when sending and ignored when received . 	500	0
6757	ANI Type	ANI Type : MUST be set to the value of ( 2 ), indicating that it is the Geo-Location sub-option 	302	0
6757	ANI Length	ANI Length : Total length of this sub-option in octets , excluding the ANI Type and ANI Length fields . It MUST be set to a value of ( 6 ). 	100	0
6757	Latitude Degrees	Latitude Degrees : A 24-bit latitude degree value encoded as a two's complement , fixed point number with 9 whole bits . Positive degrees correspond to the Northern Hemisphere and negative degrees correspond to the Southern Hemisphere . The value ranges from - 90 to + 90 degrees . 	231	0
6757	Longitude Degrees	Longitude Degrees : A 24-bit longitude degree value encoded as a two's complement , fixed point number with 9 whole bits . The value ranges from - 180 to + 180 degrees . 	100	0
6757	ANI Type	ANI Type : It MUST be set to the value of ( 3 ), indicating that it is the Operator-Identifier sub-option 	301	0
6757	ANI Length	ANI Length : Total length of this sub-option in octets , excluding the ANI Type and ANI Length fields . 	100	0
6757	Operator-Identifier	Operator-Identifier 	230	0
6757	Operator-Identifier	o On receiving a Proxy Binding Update message [ RFC5213 ] from a mobile access gateway with the Access Network Information option , the local mobility anchor must process the option and update the corresponding fields in the Binding Cache entry . If the option is not understood by that LMA implementation , it will skip the option . 	301	0
6773	Length	This field is the length of the UDP datagram , including the UDP header and the payload ( for DCCP-UDP , the payload is a DCCP-UDP datagram ). 	100	0
6773	Checksum	This field is the Internet checksum of a network-layer pseudoheader and Length bytes of the UDP packet [ RFC0768 ]. The UDP checksum MUST NOT be zero for a UDP packet that carries DCCP - UDP . 	301	0
6775	Type	Type : 33 	220	0
6775	Length	Length : 8-bit unsigned integer . The length of the option in units of 8 bytes . Always 2 . 	100	0
6775	Status	Status : 8-bit unsigned integer . Indicates the status of a registration in the NA response . MUST be set to 0 in NS messages . See below . 	302	0
6775	Reserved	Reserved : This field is unused . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
6775	Registration Lifetime	Registration Lifetime : 16-bit unsigned integer . The amount of time in units of 60 seconds that the router should retain the NCE for the sender of the NS that includes this option . 	100	0
6775	Type	Type : 34 	220	0
6775	Length	Length : 8-bit unsigned integer . The length of the option ( including the Type and Length fields ) in units of 8 bytes . May be 2 or 3 , depending on the length of the Context Prefix field . 	100	0
6775	Context Length	Context Length : 8-bit unsigned integer . The number of leading bits in the Context Prefix field that are valid . The value ranges from 0 to 128 . If it is more than 64 , then the Length MUST be 3 . 	100	0
6775	C	C : 1-bit context Compression flag . This flag indicates if the context is valid for use in compression . A context that is not valid MUST NOT be used for compression but SHOULD be used in decompression in case another compressor has not yet received the updated context information . This flag is used to manage the context life cycle based on the recommendations in Section 7.2 . 	210	0
6775	CID	CID : 4-bit Context Identifier for this prefix information . The CID is used by context-based header compression as specified in [ RFC6282 ]. The list of CIDs for a LoWPAN is configured on the 6LBR that originates the context information for the 6LoWPAN . 	230	0
6775	Res	Res , Reserved : This field is unused . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
6775	Reserved	Res , Reserved : This field is unused . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
6775	Valid Lifetime	Valid Lifetime : 16-bit unsigned integer . The length of time in units of 60 seconds ( relative to the time the packet is received ) that the context is valid for the purpose of header compression or decompression . A value of all zero bits ( 0x0 ) indicates that this context entry MUST be removed immediately . 	120	0
6775	Type	Type : 35 	220	0
6775	Length	Length : 8-bit unsigned integer . The length of the option in units of 8 bytes . Always 3 . 	100	0
6775	Version Low	Version Low , Version High : Together , Version Low and Version High constitute the Version Number field , a 32-bit unsigned integer where Version Low is the least significant 16 bits and Version High is the most significant 	220	0
6775	Version High	Version Low , Version High : Together , Version Low and Version High constitute the Version Number field , a 32-bit unsigned integer where Version Low is the least significant 16 bits and Version High is the most significant 	220	0
6775	Valid Lifetime	Valid Lifetime : 16-bit unsigned integer . The length of time in units of 60 seconds ( relative to the time the packet is received ) that this set of border router information is valid . A value of all zero bits ( 0x0 ) assumes a default value of 10,000 (~ one week ). 	120	0
6775	Reserved	Reserved : This field is unused . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
6775	Type	Type : 157 for the DAR and 158 for the DAC . 	240	0
6775	Code	Code : Set to zero on transmit . MUST be ignored on receipt . 	500	0
6775	Checksum	Checksum : The ICMP checksum . See [ RFC4443 ]. 	301	0
6775	Status	Status : 8-bit unsigned integer . Indicates the status of a registration in the DAC . MUST be set to 0 in the DAR . See Table 1 . 	302	0
6775	Reserved	Reserved : This field is unused . It MUST be initialized to zero by the sender and MUST be ignored by the receiver . 	500	0
6775	Registration Lifetime	Registration Lifetime : 16-bit unsigned integer . The amount of time in units of 60 seconds that the 6LBR should retain the DAD table entry ( Section 8.2.2 ) for the Registered Address . A value of 0 indicates in a DAR that the DAD table entry should be removed . 	120	0
6775	Registered Address	Registered Address : 128-bit field . Carries the host address that was contained in the IPv6 Source field in the NS that contained the ARO sent by the host . 	230	0
6776	APSI	The application-specific identifier is an additional identifier that is useful in the context of a specific application , e.g ., an MPEG-2 transport identifier [ MPEG2 ]. This item MUST be ignored by applications that are not configured to make use of it . The identifier is variable length . Its length is described by the length field . The value of the length field does not include the two-octet SDES item header . 	231	0
6776	BT	Block type ( BT ): 8 bits 	400	0
6776	Reserved	These bits are reserved . They MUST be set to zero by senders and ignored by receivers . 	500	0
6776	Reserved	These bits are reserved . They MUST be set to zero by senders and ignored by receivers . 	500	0
6780	Association Type	Association Type : 16 bits 	400	0
6780	Association ID	Association ID : 16 bits 	231	0
6780	Global Association Source	This field contains a value that is a unique global identifier or the special value zero ( 0 ). When non-zero and not overridden by local policy , the Global_ID as defined in [ RFC6370 ] SHALL be used . The special value zero indicates that no global identifier is present . Use of the special value zero SHOULD be limited to entities contained within a single operator . 	303	0
6784	Priority	o Weight ( 16 bits ): the Priority and Weight fields provide a hint to the client as to which KDC to select . The usage of the Priority and Weight values MUST follow the specification for DNS SRV [ RFC2782 ]. 	231	0
6784	Weight	o Weight ( 16 bits ): the Priority and Weight fields provide a hint to the client as to which KDC to select . The usage of the Priority and Weight values MUST follow the specification for DNS SRV [ RFC2782 ]. 	231	0
6784	Transport Type	o Transport Type ( 8 bits ): The Transport Type specifies the transport protocol used for Kerberos . Kerberos [ RFC4120 ] defines UDP and TCP transports . Exchanges over TCP are further described in [ RFC5021 ], while the transport of Kerberos over Transport Layer Security ( TLS ) is described in [ RFC6251 ]. 	231	0
6784	Port Number	o Port Number ( 16 bits ): the port number on which the KDC listens . 	231	0
6788	Option Type	8-bit identifier of the type of option . The option identifier for the Line-Identification Option ( 0x8C ) has been allocated by the IANA . 	231	0
6788	Option Length	8-bit unsigned integer . The length of the option ( excluding the Option Type and Option Length fields ). The value MUST be greater than 0 . 	100	0
6788	LineIDLen	8-bit unsigned integer . The length of the Line ID field in number of octets . 	100	0
6790	U	U : Unknown bit . This bit MUST be set to 1 . If the ELC TLV is not understood by the receiver , then it MUST be ignored . 	210	0
6790	F	F : Forward bit . This bit MUST be set be set to 1 . Since the ELC TLV is going to be propagated hop-by-hop , it should be forwarded even by nodes that may not understand it . 	210	0
6798	BT	A Packet Delay Variation Metrics Block is identified by the constant 15 . 	231	0
6798	I	This field is used to indicate whether the Packet Delay Variation metrics are Sampled , Interval , or Cumulative metrics [ MONARCH ], that is , whether the reported values apply to the most recent measurement interval duration between successive metrics reports ( I=10 ) ( the Interval Duration ), or they apply to the accumulation period characteristic of cumulative measurements ( I=11 ) ( the Cumulative Duration ), or they are a sampled instantaneous value ( I=01 ) ( Sampled Value ). The value I=00 is reserved and MUST NOT be used . If the value I=00 is received , then the XR block MUST be ignored by the receiver . 	210	0
6798	pdvtyp	Packet Delay Variation Metric Type is of type enumerated and is interpreted as an unsigned , 4-bit integer . This field is used to identify the Packet Delay Variation Metric Type used in this report block , according to the following code : 	231	0
6798	Rsv	This field is reserved for future definition . In the absence of such a definition , the bits in this field MUST be set to zero and ignored by the receiver . 	500	0
6798	block length	The length of this report block is in 32-bit words , minus one . For the Packet Delay Variation Metrics Block , the block length is equal to 4 . 	100	0
6798	Mean PDV	The mean PDV value of data packets is expressed in milliseconds with Numeric format S11:4 format . 	200	0
6798	Reserved	These bits are reserved for future definition . They MUST be set to zero by the sender and ignored by the receiver . 	500	0
6802	L	The Last Seqno in Train bit ( L ) is the first flag . When the Value - Added Octets Version 1 feature is selected , the Session-Sender MAY set the Last Seqno in Train bit L to 1 . 	210	0
6802	I	The Desired Reverse Packet Interval bit ( I ) is the second flag . When the Value-Added Octets Version 1 feature is selected , the Session - Sender MAY set the Desired Reverse Packet Interval bit I to 1 . 	210	0
6807	Effective MTU	This document defines a new PIM Join Attribute type [ RFC5384 ] for the Join/Prune message as well as a new Hello option . The mechanism is applicable to IPv4 and IPv6 multicast . 	231	0
6807	Attr_Type	Attr_Type : 3 . 	240	0
6807	Length	Effective MTU : This contains the minimum MTU for any link in the oif-list . The sender of a Join/Prune message takes the minimum value for the MTU ( in bytes ) from each link in the oif-list . If this value is less than the value stored for the multicast route ( the one received from downstream joiners ), then the value should be reset and sent in a Join/Prune message . Otherwise , the value should remain unchanged . 	400	0
6807	Effective MTU	Effective MTU : This contains the minimum MTU for any link in the oif-list . The sender of a Join/Prune message takes the minimum value for the MTU ( in bytes ) from each link in the oif-list . If this value is less than the value stored for the multicast route ( the one received from downstream joiners ), then the value should be reset and sent in a Join/Prune message . Otherwise , the value should remain unchanged . 	400	0
6807	Flags	Unallocated/Reserved Flags : The flags that are currently not defined . If a new flag is defined and used by a new implementation , an old implementation should preserve the bit settings . This means that a router MUST preserve the settings of all Unallocated/Reserved Flags in PIM Join messages received from downstream routers in any PIM Join sent upstream . 	231	0
6807	Options Bitmap	Options Bitmap : This is a bitmap that shows which options are present . The format of the bitmap is as follows : 	400	0
6807	Minimum Speed Link	Minimum Speed Link : This contains the minimum bandwidth rate for any link in the oif-list and is encoded as specified in Section 3.1.1 . The sender of a Join/Prune message takes the minimum value for each link in the oif-list for the multicast route . If this value is less than the value stored for the multicast route ( the smallest value received from downstream joiners ), then the value should be reset and sent in a Join/Prune message . Otherwise , the value should remain unchanged . This , together with the Maximum 	400	0
6807	Maximum Speed Link	Maximum Speed Link : This contains the maximum bandwidth rate for any link in the oif-list and is encoded as specified in Section 3.1.1 . The sender of a Join/Prune message takes the maximum value for each link in the oif-list for the multicast route . If this value is greater than the value stored for the multicast route ( the largest value received from downstream joiners ), then the value should be reset and sent in a Join/Prune message . Otherwise , the value should remain unchanged . This , together with the Minimum Speed Link option , provides a way to obtain the lowest - and highest-speed links for the multicast distribution tree . Length is 2 octets . 	201	0
6807	Domain Count	Domain Count : This indicates the number of routing domains the distribution tree traverses . A router should increment this value if it is sending a Join/Prune message over a link that traverses a domain boundary . For this to work , an implementation needs a way of knowing that a neighbor or an interface is in a different domain . There is no standard way of doing this . Length is 1 octet . 	100	0
6807	Node Count	Node Count : This indicates the number of routers on the distribution tree . Each router will sum up all the Node Counts from all joiners on all oifs and increment by 1 before including this value in the Join/Prune message . Length is 1 octet . 	100	0
6807	Diameter Count	Diameter Count : This indicates the longest length of any given branch of the tree in router hops . Each router that sends a Join increments the max value received by all downstream joiners by 1 . Length is 1 octet . 	100	0
6807	TZ Count	TZ Count : This indicates the number of time zones the distribution tree traverses . A router should increment this value if it is sending a Join/Prune message over a link that traverses a time zone . This can be a configured link attribute , or using other means to determine the time zone is acceptable . Length is 1 octet . 	122	0
6816	S	o Strict ( S ) flag : when set to 1 , this flag indicates that the E parameter is the actual encoding symbol length value for each block of the session ( unless otherwise notified by an updated FFCI if this possibility is considered by the use-case or CDP ). When set to 0 , this flag indicates that the E parameter is the maximum encoding symbol length value for each block of the session ( unless otherwise notified by an updated FFCI if this possibility is considered by the use-case or CDP ). 	210	0
6816	n1m3	o N1 minus 3 ( n1m3 ): an integer between 0 ( default ) and 7 , inclusive . The number of " 1s " per column in the left side of the parity check matrix , N1 , is then equal to N1m3 + 3 , as specified in [ RFC5170 ]. 	302	0
6816	S	o Strict ( S ) flag : 1-bit field . 	231	0
6816	n1m3	o N1m3 parameter ( n1m3 ): 3-bit field . 	400	0
6816	S	o Strict ( S ) flag : flipping this S flag from 0 to 1 ( i.e ., E is now considered as a strict value ) enables an attacker to mislead the receiver if the actual symbol size varies over different source blocks . Flipping this S flag from 1 to 0 has no major consequences unless the receiver requires to have a fixed E value ( e.g ., because the receiver pre-allocates memory space ). 	210	0
6816	n1m3	o N1 minus 3 ( n1m3 ): changing this parameter leads the receiver to consider a different code , which enables an attacker to create a DoS . 	301	0
6826	RP	RP : PIM Rendezvous Point 	230	0
6826	Type	Type : 3 	240	0
6826	Length	Length : 8 ( octet size of Source and Group fields ) 	100	0
6826	Source	Source : IPv4 multicast source address , 4 octets 	230	0
6826	Group	Group : IPv4 multicast group address , 4 octets 	230	0
6826	Type	Type : 4 	240	0
6826	Length	Length : 32 ( octet size of Source and Group fields ) 	100	0
6826	Source	Source : IPv6 multicast source address , 16 octets 	230	0
6826	Group	Group : IPv6 multicast group address , 16 octets . 	230	0
6826	Type	Type : 5 	240	0
6826	Length	Mask Len : The number of contiguous one bits that are left-justified and used as a mask , 1 octet . Maximum value allowed is 32 . 	301	0
6826	Mask Len	Mask Len : The number of contiguous one bits that are left-justified and used as a mask , 1 octet . Maximum value allowed is 32 . 	301	0
6826	RP	RP : Rendezvous Point ( RP ) IPv4 address used for the encoded Group , 4 octets . 	230	0
6826	Group	Group : IPv4 multicast group address , 4 octets . 	230	0
6826	Type	Type : 6 	240	0
6826	Length	Mask Len : The number of contiguous one bits that are left-justified and used as a mask , 1 octet . Maximum value allowed is 128 . 	301	0
6826	Mask Len	Mask Len : The number of contiguous one bits that are left-justified and used as a mask , 1 octet . Maximum value allowed is 128 . 	301	0
6826	RP	RP : Rendezvous Point ( RP ) IPv6 address used for encoded group , 16 octets . 	230	0
6826	Group	Group : IPv6 multicast group address , 16 octets . 	230	0
6829	FEC 128 PW IPv6 Type	Length : Defines the length in octets of the value field of the sub - TLV and its value is 38 . 2 octets . 	100	0
6829	Length	Length : Defines the length in octets of the value field of the sub - TLV and its value is 38 . 2 octets . 	100	0
6829	Sender's PE IPv6 Address	Sender's PE IPv6 Address : The source IP address of the target IPv6 LDP session . 16 octets . 	230	0
6829	Remote PE IPv6 Address	Remote PE IPv6 Address : The destination IP address of the target IPv6 LDP session . 16 octets . 	230	0
6829	PW ID	PW ID : Same as FEC 128 Pseudowire IPv4 [ RFC4379 ]. 	231	0
6829	PW Type	PW Type : Same as FEC 128 Pseudowire IPv4 [ RFC4379 ]. 	231	0
6829	FEC 129 PW IPv6 Type	Length : Defines the length in octets of the value field of the sub - TLV . 2 octets 	100	0
6829	Length	Length : Defines the length in octets of the value field of the sub - TLV . 2 octets 	100	0
6829	Sender's PE IPv6 Address	Sender's PE IPv6 Address : The source IP address of the target IPv6 LDP session . 16 octets . 	230	0
6829	Remote PE IPv6 Address	Remote PE IPv6 Address : The destination IP address of the target IPv6 LDP session . 16 octets . 	230	0
6830	Locator	Locator-Status-Bits ( LSBs ): Locator-Status-Bits are present in the LISP header . They are used by ITRs to inform ETRs about the up/ down status of all ETRs at the local site . These bits are used as a hint to convey up/down router status and not path reachability status . The LSBs can be verified by use of one of the Locator reachability algorithms described in Section 6.3 . 	231	0
6830	IH	Inner Header ( IH ): The inner header is the header on the datagram received from the originating host . The source and destination IP addresses are EIDs [ RFC0791 ] [ RFC2460 ]. 	230	0
6830	UDP Checksum	UDP Checksum : The ' UDP Checksum ' field SHOULD be transmitted as zero by an ITR for either IPv4 [ RFC0768 ] or IPv6 encapsulation [ UDP-TUNNELS ] [ UDP-ZERO ]. When a packet with a zero UDP checksum is received by an ETR , the ETR MUST accept the packet for decapsulation . When an ITR transmits a non-zero value for the UDP checksum , it MUST send a correctly computed value in this field . When an ETR receives a packet with a non-zero UDP checksum , it MAY choose to verify the checksum value . If it chooses to perform such verification , and the verification fails , the packet MUST be silently dropped . If the ETR chooses not to perform the verification , or performs the verification successfully , the packet MUST be accepted for decapsulation . The handling of UDP 	301	0
6830	UDP Length	UDP Length : The ' UDP Length ' field is set for an IPv4-encapsulated packet to be the sum of the inner-header IPv4 Total Length plus the UDP and LISP header lengths . For an IPv6-encapsulated packet , the ' UDP Length ' field is the sum of the inner-header IPv6 Payload Length , the size of the IPv6 header ( 40 octets ), and the size of the UDP and LISP headers . 	100	0
6830	N	N : The N-bit is the nonce-present bit . When this bit is set to 1 , the low-order 24 bits of the first 32 bits of the LISP header contain a Nonce . See Section 6.3.1 for details . Both N - and V-bits MUST NOT be set in the same packet . If they are , a decapsulating ETR MUST treat the ' Nonce/Map-Version ' field as having a Nonce value present . 	210	0
6830	L	L : The L-bit is the ' Locator-Status-Bits ' field enabled bit . When this bit is set to 1 , the Locator-Status-Bits in the second 32 bits of the LISP header are in use . 	210	0
6830	E	E : The E-bit is the echo-nonce-request bit . This bit MUST be ignored and has no meaning when the N-bit is set to 0 . When the N-bit is set to 1 and this bit is set to 1 , an ITR is requesting that the nonce value in the ' Nonce ' field be echoed back in LISP - encapsulated packets when the ITR is also an ETR . See Section 6.3.1 for details . 	210	0
6830	V	V : The V-bit is the Map-Version present bit . When this bit is set to 1 , the N-bit MUST be 0 . Refer to Section 6.6.3 for more details . This bit indicates that the LISP header is encoded in this case as : 	210	0
6830	I	I : The I-bit is the Instance ID bit . See Section 5.5 for more details . When this bit is set to 1 , the ' Locator-Status-Bits ' field is reduced to 8 bits and the high-order 24 bits are used as an Instance ID . If the L-bit is set to 0 , then the low-order 8 bits are transmitted as zero and ignored on receipt . The format of the LISP header would look like this : 	210	0
6830	flags	flags : The ' flags ' field is a 3-bit field reserved for future flag use . It MUST be set to 0 on transmit and MUST be ignored on receipt . 	500	0
6830	Reserved	Reserved : 0 b'0000 ' LISP Map-Request : 1 b'0001 ' LISP Map-Reply : 2 b'0010 ' LISP Map-Register : 3 b'0011 ' LISP Map-Notify : 4 b'0100 ' LISP Encapsulated Control Message : 8 b'1000 ' 	240	0
6830	Type	Type : 1 ( Map-Request ) 	240	0
6830	A	A : This is an authoritative bit , which is set to 0 for UDP-based Map-Requests sent by an ITR . It is set to 1 when an ITR wants the destination site to return the Map-Reply rather than the mapping database system . 	210	0
6830	M	M : This is the map-data-present bit . When set , it indicates that a Map-Reply Record segment is included in the Map-Request . 	210	0
6830	P	P : This is the probe-bit , which indicates that a Map-Request SHOULD be treated as a Locator reachability probe . The receiver SHOULD respond with a Map-Reply with the probe-bit set , indicating that the Map-Reply is a Locator reachability probe reply , with the nonce copied from the Map-Request . See Section 6.3.2 for more details . 	210	0
6830	S	S : This is the Solicit-Map-Request ( SMR ) bit . See Section 6.6.2 for details . 	210	0
6830	p	p : This is the PITR bit . This bit is set to 1 when a PITR sends a Map-Request . 	210	0
6830	s	s : This is the SMR-invoked bit . This bit is set to 1 when an xTR is sending a Map-Request in response to a received SMR-based Map-Request . 	210	0
6830	Reserved	Reserved : This field MUST be set to 0 on transmit and MUST be ignored on receipt . 	500	0
6830	IRC	IRC : This 5-bit field is the ITR-RLOC Count , which encodes the additional number of (' ITR-RLOC-AFI ', ' ITR-RLOC Address ') fields present in this message . At least one ( ITR-RLOC-AFI , ITR-RLOC-Address ) pair MUST be encoded . Multiple ' ITR-RLOC Address ' fields are used , so a Map-Replier can select which destination address to use for a Map-Reply . The IRC value ranges from 0 to 31 . For a value of 0 , there is 1 ITR-RLOC address encoded; for a value of 1 , there are 2 ITR-RLOC addresses encoded , and so on up to 31 , which encodes a total of 32 ITR-RLOC addresses . 	301	0
6830	Record Count	Record Count : This is the number of records in this Map-Request message . A record is comprised of the portion of the packet that is labeled ' Rec ' above and occurs the number of times equal to Record Count . For this version of the protocol , a receiver MUST accept and process Map-Requests that contain one or more records , 	231	0
6830	Nonce	Nonce : This is an 8-octet random value created by the sender of the Map-Request . This nonce will be returned in the Map-Reply . The security of the LISP mapping protocol critically depends on the strength of the nonce in the Map-Request message . The nonce SHOULD be generated by a properly seeded pseudo-random ( or strong random ) source . See [ RFC4086 ] for advice on generating security - sensitive random data . 	301	0
6830	Type	Type : 2 ( Map-Reply ) 	240	0
6830	P	P : This is the probe-bit , which indicates that the Map-Reply is in response to a Locator reachability probe Map-Request . The ' Nonce ' field MUST contain a copy of the nonce value from the original Map-Request . See Section 6.3.2 for more details . 	210	0
6830	E	E : This bit indicates that the ETR that sends this Map-Reply message is advertising that the site is enabled for the Echo-Nonce Locator reachability algorithm . See Section 6.3.1 for more details . 	210	0
6830	S	S : This is the Security bit . When set to 1 , the following authentication information will be appended to the end of the Map-Reply . The detailed format of the Authentication Data Content is for further study . 	210	0
6830	Reserved	Reserved : This field MUST be set to 0 on transmit and MUST be ignored on receipt . 	500	0
6830	Record Count	Record Count : This is the number of records in this reply message . A record is comprised of that portion of the packet labeled ' Record ' above and occurs the number of times equal to Record Count . 	231	0
6830	Nonce	Nonce : This is a 24-bit value set in a Data-Probe packet , or a 64-bit value from the Map-Request is echoed in this ' Nonce ' field of the Map-Reply . When a 24-bit value is supplied , it resides in the low-order 64 bits of the ' Nonce ' field . 	201	0
6830	Record TTL	Record TTL : This is the time in minutes the recipient of the Map-Reply will store the mapping . If the TTL is 0 , the entry SHOULD be removed from the cache immediately . If the value is 0xffffffff , the recipient can decide locally how long to store the mapping . 	120	0
6830	Locator Count	Locator Count : This is the number of Locator entries . A Locator entry comprises what is labeled above as ' Loc '. The Locator count can be 0 , indicating that there are no Locators for the EID-Prefix . 	201	0
6830	ACT	ACT : This 3-bit field describes Negative Map-Reply actions . In any other message type , these bits are set to 0 and ignored on receipt . These bits are used only when the ' Locator Count ' field is set to 0 . The action bits are encoded only in Map-Reply messages . The actions defined are used by an ITR or PITR when a destination EID matches a negative Map-Cache entry . Unassigned values should cause a Map-Cache entry to be created , and when packets match this negative cache entry , they will be dropped . The current assigned values are : 	210	0
6830	A	A : The Authoritative bit , when sent , is always set to 1 by an ETR . When a Map-Server is proxy Map-Replying [ RFC6833 ] for a LISP site , the Authoritative bit is set to 0 . This indicates to requesting ITRs that the Map-Reply was not originated by a LISP node managed at the site that owns the EID-Prefix . 	210	0
6830	Priority	Priority : Each RLOC is assigned a unicast Priority . Lower values are more preferable . When multiple RLOCs have the same Priority , they MAY be used in a load-split fashion . A value of 255 means the RLOC MUST NOT be used for unicast forwarding . 	231	0
6830	Weight	Weight : When priorities are the same for multiple RLOCs , the Weight indicates how to balance unicast traffic between them . Weight is encoded as a relative weight of total unicast packets that match the mapping entry . For example , if there are 4 Locators in a Locator-Set , where the Weights assigned are 30 , 20 , 20 , and 10 , the first Locator will get 37.5% of the traffic , the 2nd and 3rd Locators will get 25% of the traffic , and the 4th Locator will get 12.5% of the traffic . If all Weights for a Locator-Set are equal , the receiver of the Map-Reply will decide how to load-split the traffic . See Section 6.5 for a suggested hash algorithm to distribute the load across Locators with the same Priority and equal Weight values . 	301	0
6830	M Priority	M Priority : Each RLOC is assigned a multicast Priority used by an ETR in a receiver multicast site to select an ITR in a source multicast site for building multicast distribution trees . A value of 255 means the RLOC MUST NOT be used for joining a multicast distribution tree . For more details , see [ RFC6831 ]. 	400	0
6830	M Weight	M Weight : When priorities are the same for multiple RLOCs , the Weight indicates how to balance building multicast distribution trees across multiple ITRs . The Weight is encoded as a relative weight ( similar to the unicast Weights ) of the total number of trees built to the source site identified by the EID-Prefix . If all Weights for a Locator-Set are equal , the receiver of the Map-Reply will decide how to distribute multicast state across ITRs . For more details , see [ RFC6831 ]. 	231	0
6830	Unused Flags	Unused Flags : These are set to 0 when sending and ignored on receipt . 	500	0
6830	L	L : When this bit is set , the Locator is flagged as a local Locator to the ETR that is sending the Map-Reply . When a Map-Server is doing proxy Map-Replying [ RFC6833 ] for a LISP site , the L-bit is set to 0 for all Locators in this Locator-Set . 	210	0
6830	p	p : When this bit is set , an ETR informs the RLOC-Probing ITR that the locator address for which this bit is set is the one being RLOC-probed and MAY be different from the source address of the Map-Reply . An ITR that RLOC-probes a particular Locator MUST use this Locator for retrieving the data structure used to store the fact that the Locator is reachable . The p-bit is set for a single Locator in the same Locator-Set . If an implementation sets more than one p-bit erroneously , the receiver of the Map-Reply MUST select the first Locator . The p-bit MUST NOT be set for Locator-Set records sent in Map-Request and Map-Register messages . 	210	0
6830	R	R : This is set when the sender of a Map-Reply has a route to the Locator in the Locator data record . This receiver may find this useful to know if the Locator is up but not necessarily reachable from the receiver's point of view . See also Section 6.4 for another way the R-bit may be used . 	201	0
6830	Locator	Locator : This is an IPv4 or IPv6 address ( as encoded by the ' Loc-AFI ' field ) assigned to an ETR . Note that the destination RLOC address MAY be an anycast address . A source RLOC can be an anycast address as well . The source or destination RLOC MUST NOT be the broadcast address ( 255.255.255.255 or any subnet broadcast address known to the router ) and MUST NOT be a link-local multicast address . The source RLOC MUST NOT be a multicast address . The destination RLOC SHOULD be a multicast address if it is being mapped from a multicast destination EID . 	230	0
6830	Type	Type : 3 ( Map-Register ) 	231	0
6830	P	P : This is the proxy Map-Reply bit . When set to 1 , an ETR sends a Map-Register message requesting the Map-Server to proxy a Map-Reply . The Map-Server will send non-authoritative Map-Replies on behalf of the ETR . Details on this usage can be found in [ RFC6833 ]. 	210	0
6830	Reserved	Reserved : This field MUST be set to 0 on transmit and MUST be ignored on receipt . 	500	0
6830	M	M : This is the want-map-notify bit . When set to 1 , an ETR is requesting a Map-Notify message to be returned in response to sending a Map-Register message . The Map-Notify message sent by a Map-Server is used to acknowledge receipt of a Map-Register message . 	210	0
6830	Record Count	Record Count : This is the number of records in this Map-Register message . A record is comprised of that portion of the packet labeled ' Record ' above and occurs the number of times equal to Record Count . 	231	0
6830	Nonce	Nonce : This 8-octet ' Nonce ' field is set to 0 in Map-Register messages . Since the Map-Register message is authenticated , the ' Nonce ' field is not currently used for any security function but may be in the future as part of an anti-replay solution . 	500	0
6830	Key ID	Key ID : This is a configured ID to find the configured Message Authentication Code ( MAC ) algorithm and key value used for the authentication function . See Section 14.4 for codepoint assignments . 	230	0
6830	Authentication Data Length	Authentication Data Length : This is the length in octets of the ' Authentication Data ' field that follows this field . The length of the ' Authentication Data ' field is dependent on the MAC algorithm used . The length field allows a device that doesn't know the MAC algorithm to correctly parse the packet . 	100	0
6830	Authentication Data	Authentication Data : This is the message digest used from the output of the MAC algorithm . The entire Map-Register payload is authenticated with this field preset to 0 . After the MAC is computed , it is placed in this field . Implementations of this specification MUST include support for HMAC-SHA-1-96 [ RFC2404 ], and support for HMAC-SHA-256-128 [ RFC4868 ] is RECOMMENDED . 	400	0
6830	Type	Type : 4 ( Map-Notify ) 	240	0
6830	OH	OH : The outer IPv4 or IPv6 header , which uses RLOC addresses in the source and destination header address fields . 	230	0
6830	LH	LH : Type 8 is defined to be a " LISP Encapsulated Control Message ", and what follows is either an IPv4 or IPv6 header as encoded by the first 4 bits after the ' Reserved ' field . 	301	0
6830	S	S : This is the Security bit . When set to 1 , the field following the ' Reserved ' field will have the following format . The detailed format of the Authentication Data Content is for further study . 	210	0
6830	IH	IH : The inner IPv4 or IPv6 header , which can use either RLOC or EID addresses in the header address fields . When a Map-Request is encapsulated in this packet format , the destination address in this header is an EID . 	230	0
6830	LCM	LCM : The format is one of the control message formats described in this section . At this time , only Map-Request messages are allowed to be encapsulated . In the future , PIM Join/Prune messages [ RFC6831 ] might be allowed . Encapsulating other types of LISP control messages is for further study . When Map-Requests are sent for RLOC-Probing purposes ( i.e ., the probe-bit is set ), they MUST NOT be sent inside Encapsulated Control Messages . 	301	0
6843	BT	Block type ( BT ): 8 bits 	400	0
6843	I	This field is used to indicate whether the delay metrics are Sampled , Interval or Cumulative metrics : 	301	0
6849	PT	Payload Type ( PT ): The assignment of an RTP payload type for this packet format is outside the scope of this document; it is either specified by the RTP profile under which this payload format is used or more likely signaled dynamically out-of-band ( e.g ., using SDP; Section 7.1.3 defines the name binding ). 	400	0
6849	M	Marker ( M ) bit : If the received RTP packet is looped back in multiple encapsulating RTP packets , the M bit is set to 1 in every fragment except the last packet; otherwise , it is set to 0 . 	210	0
6849	F	Possible values are First Fragment ( 00 ), Last Fragment ( 01 ), No Fragmentation ( 10 ), or Intermediate Fragment ( 11 ). This field identifies how much of the received packet is encapsulated in this packet by the loopback mirror . If the received packet is not fragmented , this field is set to 10; otherwise , the packet that contains the first fragments sets this field to 00 . The packet that contains the last fragment sets this field to 01 , and all other packets set this field to 11 . 	240	0
6849	PT	Payload Type ( PT ): The assignment of an RTP payload type for the encapsulating packet format is outside the scope of this document; it is either specified by the RTP profile under which this payload format is used or more likely signaled dynamically out-of-band ( e.g ., using SDP; Section 7.2.3 defines the name binding ). 	400	0
6849	M	Marker ( M ) bit : This bit is set to the value in the received packet . 	210	0
6865	m	m defines the length of the elements in the finite field , in bits . In this document , m is such that 2 <= m <= 16 . 	100	0
6865	S	o Strict ( S ) flag : when set to 1 , this flag indicates that the E parameter is the actual encoding symbol length value for each block of the session ( unless otherwise notified by an updated FFCI if this possibility is considered by the use case or CDP ). When set to 0 , this flag indicates that the E parameter is the maximum encoding symbol length value for each block of the session ( unless otherwise notified by an updated FFCI if this possibility is considered by the use case or CDP ). 	210	0
6865	m	o m parameter ( m ): an integer that defines the length of the elements in the finite field , in bits . We have : 2 <= m <= 16 . 	100	0
6865	S	o Strict ( S ) flag : 1-bit field . 	231	0
6865	m	o m parameter ( m ): 7-bit field . 	302	0
6865	m	o Encoding Symbol ID ( ESI ) ( m-bit field ): this field identifies the source symbol contained in this FEC source packet . This value is such that 0 <= ESI <= k - 1 for source symbols . 	210	0
6865	m	o Encoding Symbol ID ( ESI ) ( m-bit field ): this field identifies the repair symbol contained in this FEC repair packet . This value is such that k <= ESI <= n - 1 for repair symbols . 	231	0
6865	S	o Strict ( S ) flag : flipping this S flag from 0 to 1 ( i.e ., E is now considered as a strict value ) enables an attacker to mislead the receiver if the actual symbol size varies over different source blocks . Flipping this S flag from 1 to 0 has no major consequences unless the receiver requires to have a fixed E value ( e.g ., because the receiver pre-allocates memory space ). 	210	0
6876	Reserved	Reserved for future use . This field MUST be set to 0 on transmission and ignored upon reception . 	500	0
6876	Message Type Vendor ID	This field indicates the owner of the namespace associated with the message type . This is accomplished by specifying the 24-bit Structure of Management Information ( SMI ) Private Enterprise Number [ PEN ] ( Vendor ID ) of the party who owns the message type namespace . Consistent with PA-TNC and PB-TNC , we depend on the PEN fitting in 24 bits , so if IANA were to register a wider PEN , then that PEN could not be used with NEA . IETF namespace PT-TLS Message Types MUST use zero ( 0 ) in this field . For more information about the intended use of NEA namespace identifiers , see the PA-TNC specification ( RFC 5792 ), Sections 2.1 and 2.2 . 	400	0
6876	Message Type	This field defines the type of the PT-TLS message within the scope of the specified Message Type Vendor ID that is included in the Message Value field . The specific IETF-defined values allowable in this field when the Message Type Vendor ID is the IETF SMI Private Enterprise Number value ( 0 ) are defined in Section 3.6 . Recipients of a message containing a Message Type Vendor ID and a message type that is unrecognized SHOULD respond with a Type Not Supported error code in a PT-TLS Error message . 	231	0
6876	Message Length	This field contains the length in octets of the entire PT-TLS message ( including the entire header ). Therefore , this value MUST always be at least 16 . Any Posture Transport Client or Posture Transport Server that receives a message with a PT-TLS Message Length field whose value is less than 16 SHOULD respond with an Invalid Parameter PT-TLS Error Code . Similarly , if a Posture Transport Client or Posture Transport Server receives a PT-TLS message for a Message Type that has a known Message Length and the Message Length indicates a different value ( greater or less than the expected value ), the recipient SHOULD respond with an Invalid Parameter PT-TLS Error Code . 	100	0
6876	Message Identifier	This field contains a value that uniquely identifies the PT-TLS message on a per message sender ( Posture Transport Client or Server ) basis . This value is copied into the body of the PT-TLS Error message so the recipient can determine which message caused the error . 	230	0
6876	Reserved	Reserved for future use . This field MUST be set to 0 on transmission and ignored upon reception . 	500	0
6876	Min Vers	This field contains the minimum version of the PT-TLS protocol supported by the sender . This field MUST be set to 1 indicating support for the first version of PT-TLS . However , future versions of this specification will probably remove this requirement , so PT-TLS Responders MUST be prepared to receive other values . 	220	0
6876	Max Vers	This field contains the maximum version of the PT-TLS protocol supported by the sender . This field MUST be set to 1 indicating support for the first version of PT-TLS . However , future versions of this specification will probably remove this requirement , so PT-TLS Responders MUST be prepared to receive other values . 	220	0
6876	Pref Vers	This field contains the sender's preferred version of the PT-TLS protocol . This is a hint to the recipient that the sender would like this version selected if supported . The value of this field MUST fall within the range of Min Vers to Max Vers . This field MUST be set to 1 indicating support for the first version of PT-TLS . However , future versions of this specification will probably remove this requirement , so PT-TLS Responders MUST be prepared to receive other values . 	220	0
6876	Reserved	Reserved for future use . This field MUST be set to 0 on transmission and ignored upon reception . 	500	0
6876	Version	This field contains the version selected by the sender of this message . The version selected MUST be within the Min Vers to Max Vers inclusive range sent in the Version Request message . If a PT-TLS Initiator receives a message with an invalid Version selected , the PT-TLS Initiator MUST respond with a Version Not Supported PT-TLS Error message . 	220	0
6876	Rsvd	Reserved for future use . This field MUST be set to 0 on transmission and ignored upon reception . 	500	0
6876	Reserved	Reserved for future use . This field MUST be set to 0 on transmission and ignored upon reception . 	500	0
6876	Mech Len	Mech Len ( Mechanism Name Length ) 	100	0
6876	Rsvd	Reserved for future use . This field MUST be set to 0 on transmission and ignored upon reception . 	500	0
6876	Reserved	Reserved for future use . This field MUST be set to 0 on transmission and ignored upon reception . 	500	0
6876	Mech Len	Mech Len ( Mechanism Name Length ) 	100	0
6876	Optional Initial Mechanism Response	Initial set of authentication information required from the NEA Client to kick-start the authentication . This data is optional and if not provided would be solicited by the NEA Server in the first SASL Authentication Data TLV request . 	400	0
6876	Result Code	Result Code 	231	0
6876	Optional Result Data	This field contains a variable-length set of additional data for a successful result . This field MUST be zero length unless the NEA Server is returning a Result Code of Success and has more data to return . For more information on the additional data with success in SASL , see RFC 4422 . 	400	0
6876	Reserved	Reserved for future use . This field MUST be set to 0 on transmission and ignored upon reception . 	500	0
6876	Error Code Vendor ID	This field contains the IANA-assigned SMI Private Enterprise Number for the vendor whose Error Code namespace is being used in the message . For IETF namespace Error Code values , this field MUST be set to zero ( 0 ). For other vendor-defined Error Code namespaces , this field MUST be set to the SMI Private Enterprise Number of the vendor . 	302	0
6876	Error Code	This field contains the error code . This error code exists within the scope of Error Code Vendor ID in this message . Posture Transport Clients and Posture Transport Servers MUST NOT require support for particular vendor-specific PT-TLS Error Codes in order to interoperate with other PT-TLS-compliant implementations ( although implementations MAY permit administrators to configure them to require support for specific PT-TLS Error Codes ). 	400	0
6884	R	Reserved bit . MUST be set to zero by sender; SHOULD be ignored by receiver . 	500	0
6884	C	Must be set to zero by sender to indicate wideband encoding capable or set to one to indicate narrowband encoding capable only . 	210	0
6887	R	Opcode : A 7-bit value specifying the operation to be performed . MAP and PEER Opcodes are defined in Sections 11 and 12 . 	400	0
6887	Opcode	Opcode : A 7-bit value specifying the operation to be performed . MAP and PEER Opcodes are defined in Sections 11 and 12 . 	400	0
6887	Reserved	Reserved : 16 reserved bits . MUST be zero on transmission and MUST be ignored on reception . 	500	0
6887	Opcode	Opcode-specific information : Payload data for this Opcode . The length of this data is determined by the Opcode definition . 	400	0
6887	R	R : Indicates Request ( 0 ) or Response ( 1 ). All Responses MUST use 1 . This is set by the server . 	210	0
6887	Opcode	Opcode : The 7-bit Opcode value . The server copies this value from the request . 	231	0
6887	Reserved	Reserved : 8 reserved bits , MUST be sent as 0 , MUST be ignored when received . This is set by the server . 	500	0
6887	Result Code	Result Code : The result code for this response . See Section 7.4 for values . This is set by the server . 	400	0
6887	Reserved	Reserved : 96 reserved bits . For requests that were successfully parsed , this MUST be sent as 0 , MUST be ignored when received . This is set by the server . For requests that were not successfully parsed , the server copies the last 96 bits of the PCP Client's IP Address field from the request message into this corresponding 96-bit field of the response . 	500	0
6887	Opcode	Opcode-specific information : Payload data for this Opcode . The length of this data is determined by the Opcode definition . 	400	0
6887	Option Code	Option Code : 8 bits . Its most significant bit indicates if this option is mandatory ( 0 ) or optional ( 1 ) to process . 	231	0
6887	Reserved	Reserved : 8 bits . MUST be set to 0 on transmission and MUST be ignored on reception . 	500	0
6887	Option Length	Option Length : 16 bits . Indicates the length of the enclosed data , in octets . Options with length of 0 are allowed . Options that are not a multiple of 4 octets long are followed by one , two , or three 0 octets to pad their effective length in the packet to be a multiple of 4 octets . The Option Length reflects the semantic length of the option , not including any padding octets . 	100	0
6887	Protocol	Protocol : Upper-layer protocol associated with this Opcode . Values are taken from the IANA protocol registry [ proto_numbers ]. For example , this field contains 6 ( TCP ) if the Opcode is intended to create a TCP mapping . This field contains 17 ( UDP ) if the Opcode is intended to create a UDP mapping . The value 0 has a special meaning for ' all protocols '. 	231	0
6887	Reserved	Reserved : 24 reserved bits , MUST be sent as 0 and MUST be ignored when received . 	500	0
6887	Internal Port	Internal Port : Internal port for the mapping . The value 0 indicates ' all ports ', and is legal when the lifetime is zero ( a delete request ), if the protocol does not use 16-bit port numbers , or the client is requesting ' all ports '. If the protocol is zero ( meaning ' all protocols '), then internal port MUST be zero on transmission and MUST be ignored on reception . 	210	0
6887	Suggested External Port	Suggested External Port : Suggested external port for the mapping . This is useful for refreshing a mapping , especially after the PCP server loses state . If the PCP client does not know the external port , or does not have a preference , it MUST use 0 . 	400	0
6887	Protocol	Reserved : 24 reserved bits , MUST be sent as 0 and MUST be ignored when received . 	500	0
6887	Reserved	Reserved : 24 reserved bits , MUST be sent as 0 and MUST be ignored when received . 	500	0
6887	Internal Port	Assigned External Port : On a success response , this is the assigned external port for the mapping . On an error response , the suggested external port is copied from the request . 	230	0
6887	Assigned External Port	Assigned External Port : On a success response , this is the assigned external port for the mapping . On an error response , the suggested external port is copied from the request . 	400	0
6887	Protocol	Protocol : Upper-layer protocol associated with this Opcode . Values are taken from the IANA protocol registry [ proto_numbers ]. For example , this field contains 6 ( TCP ) if the Opcode is describing a TCP mapping . This field contains 17 ( UDP ) if the Opcode is describing a UDP mapping . Protocol MUST NOT be zero . 	400	0
6887	Reserved	Reserved : 24 reserved bits , MUST be set to 0 on transmission and MUST be ignored on reception . 	500	0
6887	Internal Port	Internal Port : Internal port for the mapping . Internal port MUST NOT be zero . 	230	0
6887	Suggested External Port	Suggested External Port : Suggested external port for the mapping . If the PCP client does not know the external port , or does not have a preference , it MUST use 0 . 	303	0
6887	Remote Peer Port	Remote Peer Port : Remote peer's port for the mapping . Remote peer port MUST NOT be zero . 	400	0
6887	Reserved	Reserved : 16 reserved bits , MUST be set to 0 on transmission and MUST be ignored on reception . 	500	0
6887	Protocol	Reserved : 24 reserved bits , MUST be set to 0 on transmission , MUST be ignored on reception . 	500	0
6887	Reserved	Reserved : 24 reserved bits , MUST be set to 0 on transmission , MUST be ignored on reception . 	500	0
6887	Internal Port	Assigned External Port : On a success response , this is the assigned external port for the mapping . On an error response , the suggested external port is copied from the request . 	230	0
6887	Assigned External Port	Assigned External Port : On a success response , this is the assigned external port for the mapping . On an error response , the suggested external port is copied from the request . 	230	0
6887	Remote Peer Port	Reserved : 16 reserved bits , MUST be set to 0 on transmission , MUST be ignored on reception . 	500	0
6887	Reserved	Reserved : 16 reserved bits , MUST be set to 0 on transmission , MUST be ignored on reception . 	500	0
6887	Reserved	Reserved : 8 reserved bits , MUST be sent as 0 and MUST be ignored when received . 	500	0
6887	Prefix Length	Prefix Length : indicates how many bits of the IPv4 or IPv6 address are relevant for this filter . The value 0 indicates " no filter ", and will remove all previous filters . See below for detail . 	100	0
6887	Remote Peer Port	Remote Peer Port : the port number of the remote peer . The value 0 indicates " all ports ". 	210	0
6898	S	This bit indicates support for the Trace behavior of SONET/SDH technology-specific defined in [ RFC4207 ]. 	231	0
6898	D	D : 1 bit 	210	0
6898	C	This bit indicates support for the data channel consistency check behavior defined in [ RFC5818 ]. 	210	0
6911	Type	Type 	240	0
6911	Length	Length 	100	0
6911	Address	Address 	202	0
6911	Type	Type 	240	0
6911	Length	Length 	100	0
6911	Address	Address 	202	0
6911	Type	Type 	240	0
6911	Length	Length , in bytes . At least 4 and no larger than 20; typically , 12 or less . 	100	0
6911	Length	Length , in bytes . At least 4 and no larger than 20; typically , 12 or less . 	100	0
6911	Type	Type 	240	0
6911	Length	Length 	100	0
6911	Length	Length , in bytes . At least 3 . 	100	0
6911	Type	Type 	240	0
6911	Length	Length 	100	0
6911	Length	Length , in bytes . At least 3 . 	100	0
6925	SUBOPT_RELAY_ID	SUBOPT_RELAY_ID 12 	202	0
6925	length	length the number of octets in the sub-option ( excluding the sub-option ID and length fields); the minimum length is one . 	100	0
6926	message-size	message-size the number of octets in the message that follows , as a 16-bit unsigned integer in network byte order . 	100	0
6926	Length	Length The option length , 1 octet . 	100	0
6926	State	State The state of the IP address . 	230	0
6926	Length	Length The option length , 1 octet . 	100	0
6926	Flags	Flags The source information for this message . 	230	0
6926	R	R : REMOTE flag 	302	0
6926	UNA	The REMOTE flag is used to indicate where the most recent change of state ( or other interesting change ) concerning this IPv4 address took place . If the value is local , then the change took place on the server from which this message was transmitted . If the value is remote , then the change took place on some other server and was made known to the server from which this message was transmitted . 	210	0
6929	Type	This field is identical to the Type field of the Attribute format defined in [ RFC2865 ] Section 5 . 	400	0
6929	Length	The Length field is one octet and indicates the length of this Attribute , including the Type , Length , " Extended-Type ", and " Value " fields . Permitted values are between 4 and 255 . If a client or server receives an Extended Attribute with a Length of 2 or 3 , then that Attribute MUST be considered to be an " invalid attribute " and handled as per Section 2.8 , below . 	100	0
6929	Extended-Type	The Extended-Type field is one octet . Up-to-date values of this field are specified according to the policies and rules described in Section 10 . Unlike the Type field defined in [ RFC2865 ] Section 5 , no values are allocated for experimental or implementation-specific use . Values 241-255 are reserved and MUST NOT be used . 	400	0
6929	Type	This field is identical to the Type field of the Attribute format defined in [ RFC2865 ] Section 5 . 	400	0
6929	Length	The Length field is one octet and indicates the length of this Attribute , including the Type , Length , Extended-Type , and " Value " fields . Permitted values are between 5 and 255 . If a client or 	100	0
6929	Extended-Type	This field is identical to the Extended-Type field defined above in Section 2.1 . 	400	0
6929	M	The More field is one ( 1 ) bit in length and indicates whether or not the current attribute contains " more " than 251 octets of data . The More field MUST be clear ( 0 ) if the Length field has a value of less than 255 . The More field MAY be set ( 1 ) if the Length field has a value of 255 . 	210	0
6929	Reserved	This field is 7 bits long and is reserved for future use . Implementations MUST set it to zero ( 0 ) when encoding an attribute for sending in a packet . The contents SHOULD be ignored on reception . 	500	0
6929	TLV-Type	The TLV-Type field is one octet . Up-to-date values of this field are specified according to the policies and rules described in Section 10 . Values 254-255 are " Reserved " for use by future extensions to RADIUS . The value 26 has no special meaning and MUST NOT be treated as a Vendor-Specific Attribute . 	302	0
6929	TLV-Length	The TLV-Length field is one octet and indicates the length of this TLV , including the TLV-Type , TLV-Length , and TLV-Value fields . It MUST have a value between 3 and 255 . If a client or server receives a TLV with an invalid TLV-Length , then the Attribute that encapsulates that TLV MUST be considered to be an " invalid attribute " and handled as per Section 2.8 , below . 	100	0
6929	Vendor-Id	The 4 octets of the Vendor-Id field are the Network Management Private Enterprise Code [ PEN ] of the vendor in network byte order . 	231	0
6929	EVS-Type	The EVS-Type field is one octet . Values are assigned at the sole discretion of the vendor . 	301	0
6929	Type	Type Name ---- ---- 241 Extended-Type-1 242 Extended-Type-2 243 Extended-Type-3 244 Extended-Type-4 245 Long-Extended-Type-1 246 Long-Extended-Type-2 	240	0
6929	Type	Type 	240	0
6929	Length	Length 	100	0
6929	Extended-Type	The Extended-Type field is one octet . Up-to-date values of this field are specified in the 241.{1-255 } RADIUS Attribute Type space , according to the policies and rules described in Section 10 . Further definition of this field is given in Section 2.1 , above . 	231	0
6929	Type	Type 	240	0
6929	Length	Length 	100	0
6929	Extended-Type	The Extended-Type field is one octet . Up-to-date values of this field are specified in the 242.{1-255 } RADIUS Attribute Type space , according to the policies and rules described in Section 10 . Further definition of this field is given in Section 2.1 , above . 	400	0
6929	Type	Type 	240	0
6929	Length	Length 	100	0
6929	Extended-Type	The Extended-Type field is one octet . Up-to-date values of this field are specified in the 243.{1-255 } RADIUS Attribute Type space , according to the policies and rules described in Section 10 . Further definition of this field is given in Section 2.1 , above . 	301	0
6929	Type	Type 	240	0
6929	Length	Length 	100	0
6929	Extended-Type	The Extended-Type field is one octet . Up-to-date values of this field are specified in the 244.{1-255 } RADIUS Attribute Type space , according to the policies and rules described in Section 10 . Further definition of this field is given in Section 2.1 , above . 	400	0
6929	Type	Type 	240	0
6929	Length	Length 	100	0
6929	Extended-Type	The Extended-Type field is one octet . Up-to-date values of this field are specified in the 245.{1-255 } RADIUS Attribute Type space , according to the policies and rules described in Section 10 . Further definition of this field is given in Section 2.1 , above . 	400	0
6929	M	The More field is one ( 1 ) bit in length and indicates whether or not the current attribute contains " more " than 251 octets of data . Further definition of this field is given in Section 2.2 , above . 	210	0
6929	Reserved	This field is 7 bits long and is reserved for future use . Implementations MUST set it to zero ( 0 ) when encoding an attribute for sending in a packet . The contents SHOULD be ignored on reception . 	500	0
6929	Type	Type 	240	0
6929	Length	Length 	100	0
6929	Extended-Type	The Extended-Type field is one octet . Up-to-date values of this field are specified in the 246.{1-255 } RADIUS Attribute Type space , according to the policies and rules described in Section 10 . Further definition of this field is given in Section 2.1 , above . 	400	0
6929	M	The More field is one ( 1 ) bit in length and indicates whether or not the current attribute contains " more " than 251 octets of data . Further definition of this field is given in Section 2.2 , above . 	210	0
6929	Reserved	This field is 7 bits long and is reserved for future use . Implementations MUST set it to zero ( 0 ) when encoding an attribute for sending in a packet . The contents SHOULD be ignored on reception . 	500	0
6929	Length	Length 	100	0
6929	Vendor-Id	The 4 octets of the Vendor-Id field are the Network Management Private Enterprise Code [ PEN ] of the vendor in network byte order . 	231	0
6929	Vendor-Type	The Vendor-Type field is one octet . Values are assigned at the sole discretion of the vendor . 	231	0
6929	Length	Length 	100	0
6929	Vendor-Id	The 4 octets of the Vendor-Id field are the Network Management Private Enterprise Code [ PEN ] of the vendor in network byte order . 	231	0
6929	Vendor-Type	The Vendor-Type field is one octet . Values are assigned at the sole discretion of the vendor . 	231	0
6929	Length	Length 	100	0
6929	Vendor-Id	The 4 octets of the Vendor-Id field are the Network Management Private Enterprise Code [ PEN ] of the vendor in network byte order . 	231	0
6929	Vendor-Type	The Vendor-Type field is one octet . Values are assigned at the sole discretion of the vendor . 	231	0
6929	Length	Length 	100	0
6929	Vendor-Id	The 4 octets of the Vendor-Id field are the Network Management Private Enterprise Code [ PEN ] of the vendor in network byte order . 	231	0
6929	Vendor-Type	The Vendor-Type field is one octet . Values are assigned at the sole discretion of the vendor . 	231	0
6929	Length	Length 	100	0
6929	M	The More field is one ( 1 ) bit in length and indicates whether or not the current attribute contains " more " than 251 octets of data . Further definition of this field is given in Section 2.2 , above . 	210	0
6929	Reserved	This field is 7 bits long and is reserved for future use . Implementations MUST set it to zero ( 0 ) when encoding an attribute for sending in a packet . The contents SHOULD be ignored on reception . 	500	0
6929	Vendor-Id	The 4 octets of the Vendor-Id field are the Network Management Private Enterprise Code [ PEN ] of the vendor in network byte order . 	231	0
6929	Vendor-Type	The Vendor-Type field is one octet . Values are assigned at the sole discretion of the vendor . 	231	0
6929	Length	Length 	100	0
6929	M	The More field is one ( 1 ) bit in length and indicates whether or not the current attribute contains " more " than 251 octets of data . Further definition of this field is given in Section 2.2 , above . 	210	0
6929	Reserved	This field is 7 bits long and is reserved for future use . Implementations MUST set it to zero ( 0 ) when encoding an attribute for sending in a packet . The contents SHOULD be ignored on reception . 	500	0
6929	Vendor-Id	The 4 octets of the Vendor-Id field are the Network Management Private Enterprise Code [ PEN ] of the vendor in network byte order . 	231	0
6929	Vendor-Type	The Vendor-Type field is one octet . Values are assigned at the sole discretion of the vendor . 	231	0
6930	Type	Type 	240	0
6930	Length	28 + n*6 ( the length of the entire attribute in octets , where n is the number of BR IPv4 addresses and minimum n is 1 ) 	100	0
6930	IPv4MaskLen	The number of high-order bits that are identical across all CE IPv4 addresses within a given 6rd domain . This may be any value between 0 and 32 . Any value greater than 32 is invalid . Since [ RFC6158 ], Appendix A.2.1 , has forbidden 8-bit fields , a 32-bit field is used here . 	303	0
6930	Reserved	Set to all 0 for now . Reserved for future use . To be compatible with other IPv6 prefix attributes in the RADIUS protocol , the bits MUST be set to zero by the sender and MUST be ignored by the receiver . 	500	0
6930	6rdPrefixLen	The IPv6 Prefix length of the Service Provider's 6rd IPv6 prefix in number of bits . The 6rdPrefixLen MUST be less than or equal to 128 . 	100	0
6930	6rdPrefix	The Service Provider's 6rd IPv6 prefix represented as a 16-octet IPv6 address . The bits after the 6rdPrefixlen number of bits in the prefix SHOULD be set to zero . 	303	0
6930	6rdBRIPv4Address	One or more IPv4 addresses of the 6rd Border Relay(s ) for a given 6rd domain . The maximum RADIUS attribute length of 255 octets results in a limit of 37 IPv4 addresses . 	230	0
6958	BT	Block Type ( BT ): 8 bits 	400	0
6958	I	This field is used to indicate whether the burst/gap loss metrics are Sampled , Interval , or Cumulative metrics : 	210	0
6958	C	The ' C ' flag is used to indicate whether the loss/discard report is combined with the burst/gap loss report in the same compound RTCP packet . The value is set to ' 1 ' if the loss/discard report and the burst gap loss report are combined . Otherwise , the value is set to ' 0 '. If the ' C ' flag is set to ' 1 ' but the burst/gap discard was not sent , the receiver MUST discard the burst/gap loss . 	210	0
6958	resv .	These bits are reserved . They MUST be set to zero by senders and ignored by receivers ( see [ RFC6709 ], Section 4.2 ). 	500	0
6958	SSRC of Source	SSRC of Source : 32 bits 	302	0
6958	Threshold	The Threshold is equivalent to Gmin in [ RFC3611 ], i.e ., the number of successive packets that must be received prior to and following a lost packet in order for this lost packet to be regarded as part of a gap . Note that the threshold is calculated in accordance with the Gmin Calculation defined in Section 4.7.2 of RFC 3611 . 	100	0
6958	Packets Lost in Bursts	Packets Lost in Bursts : 24 bits 	400	0
6958	Number of Bursts	The number of bursts in the period of the report ( Interval or Cumulative ). 	202	0
6971	VER	Version ( VER ) - This 2-bit value indicates the version of DFF that is used . This specification defines value ' 00 '. Packets with other values of the version MUST be forwarded using the route-over MoP and mesh-under MoP as defined in [ RFC2460 ] and [ RFC4944 ], respectively . 	220	0
6971	Sequence Number	Sequence Number - A 16-bit field , containing an unsigned integer sequence number generated by the Originator , unique to each router for each packet to which the DFF has been added , as specified in Section 12 . The Originator Address concatenated with the sequence number represents an identifier of previously seen data packets . Refer to Section 12 for further information about sequence numbers . 	200	0
6971	Next Header	Next Header - 8-bit selector . Identifies the type of header immediately following the Hop-by-Hop Options header , as specified in [ RFC2460 ]. 	231	0
6971	Hdr Ext Len	Hdr Ext Len - 8-bit unsigned integer . Length of the Hop-by-Hop Options header in 8-octet units , not including the first 8 octets , as specified in [ RFC2460 ]. This value is set to 0 ( zero ). 	100	0
6971	OptTypeDFF	OptTypeDFF - 8-bit identifier of the type of option , as specified in [ RFC2460 ]. This value is set to IP_DFF . The two high-order bits of the option type MUST be set to ' 11 ', and the third bit is equal to ' 1 '. With these bits , according to [ RFC2460 ], routers that do not understand this option on a received packet discard the packet and , only if the packet's Destination Address was not a multicast address , send an ICMP Parameter Problem ( Code 2 ) message to the 	231	0
6971	OptDataLenDFF	OptDataLenDFF - 8-bit unsigned integer . Length of the option data field of this option , in octets , as specified in [ RFC2460 ]. This value is set to 2 ( two ). 	100	0
6971	Sequence Number	Sequence Number - A 16-bit field , containing an unsigned integer sequence number , as specified in Section 7 . 	200	0
6971	Pad1	Pad1 - Since the Hop-by-Hop Options header must have a length that is a multiple of 8 octets , a Pad1 option is used , as specified in [ RFC2460 ]. All bits of this octet are 0 . 	301	0
6971	Mesh Forw	Mesh Forw - A 6-bit identifier that allows for the use of different mesh-forwarding mechanisms . As specified in [ RFC4944 ], additional mesh-forwarding mechanisms should use the reserved dispatch byte values following LOWPAN_BC0; therefore , ' 0 1 ' MUST precede Mesh Forw . The value of Mesh Forw is LOWPAN_DFF . 	231	0
6971	Sequence Number	Sequence Number - A 16-bit field , containing an unsigned integer sequence number , as specified in Section 7 . 	200	0
6990	BT	The MPEG-2 TS PSI-Independent Decodability Statistics Metrics Block is identified by the constant 22 . 	231	0
6990	Reserved	These bits are reserved . They MUST be set to zero by senders and ignored by receivers ( see [ RFC6709 ] Section 4.2 ). 	500	0
6990	Block Length	The constant 11 , in accordance with the definition of this field in Section 3 of RFC 3611 . The block MUST be discarded if the block length is set to a different value . 	200	0
6990	begin_seq	The RTP sequence number corresponding to the start of the measurement period , as defined in Section 4.1 of RFC 3611 . 	121	0
6990	end_seq	The RTP sequence number corresponding to the end of the measurement period , as defined in Section 4.1 of RFC 3611 . 	121	0
6990	TS_sync_loss_count	A count of the number of TS_sync_loss errors that occurred in the above sequence number interval . A TS_sync_loss error occurs when there are two or more consecutive incorrect sync bytes within the MPEG-2 TS , as defined in Section 5.2.1 of [ ETSI ]. 	110	0
6990	Sync_byte_error_count	A count of the number of Sync_byte_errors that occurred in the above sequence number interval . A sync byte error occurs when the sync byte is not equal to 0x47 in any TS packet contained in the MPEG-2 TS , as defined in Section 5.2.1 of [ ETSI ]. 	200	0
6990	Continuity_count_error_count	A count of the number of Continuity_count_errors that occurred in the above sequence number interval . A Continuity_count_error occurs when any of the following faults happen within the MPEG-2 TS -- incorrect packet order , a packet occurs more than twice , or a packet is lost , as defined in Section 5.2.1 of [ ETSI ]. 	110	0
6990	Transport_error_count	A count of the number of Transport_errors that occurred in the above sequence number interval . A Transport_error occurs when an erroneous TS packet cannot be corrected within the MPEG-2 TS , as defined in Section 5.2.2 of [ ETSI ]. 	200	0
6990	PCR_error_count	A count of the number of PCR_errors that occurred in the above sequence number interval . A PCR_error occurs if the primary clock reference ( PCR ) is not seen for more than 100 ms within the MPEG-2 TS , as defined in Section 5.2.2 of [ ETSI ]. The time interval between two consecutive PCR values should be no more than 40 ms . 	200	0
6990	PCR_repetition_error_count	A count of the number of PCR_repetition_errors that occurred in the above sequence number interval . A PCR_repetition_error occurs when the time interval between two consecutive PCR values is more than 40 ms within the MPEG-2 TS , as defined in Section 5.2.2 of [ ETSI ]. 	200	0
6990	PCR_discontinuity_indicator_error_count	A count of the number of PCR_discontinuity_indicator_errors that occurred in the above sequence number interval . A PCR_discontinuity_indicator_error occurs if the time interval between two consecutive PCR values is more than 100 ms within the MPEG-2 TS , as defined in Section 5.2.2 of [ ETSI ]. 	200	0
6990	PCR_accuracy_error_count	A count of the number of PCR_accuracy_errors that occurred in the above sequence number interval . A PCR_accuracy_error occurs when the PCR accuracy of the selected program is outside the range of +/- 500 ns within the MPEG-2 TS , as defined in Section 5.2.2 of [ ETSI ]. 	200	0
6990	PTS_error_count	A count of the number of PTS_errors that occurred in the above sequence number interval . A PTS_error occurs when the PTS repetition is more than 700 ms within the MPEG-2 TS , as defined in Section 5.2.2 of [ ETSI ]. Note that the PTS is contained in the MPEG-2 TS and is used to aid the decoder in presenting the program on time , at the correct speed , and synchronized . 	110	0
6997	RPLInstanceID	o RPLInstanceID : RPLInstanceID MUST be a local value as described in Section 5.1 of [ RFC6550 ]. The Origin chooses the RPLInstanceID to be used for a particular route discovery in accordance with the following rules : 	400	0
6997	DODAGID	o The other fields in the DIO Base object can be set in the desired fashion as per the rules described in [ RFC6550 ]. 	400	0
6997	Option Length	o Option Length : This field is an 8-bit unsigned integer representing the length in octets of the option , not including the Option Type and Option Length fields . 	100	0
6997	R	o Reply ( R ): The Origin sets this flag to one to allow the Target(s ) to send P2P-DRO messages back to the Origin . If this flag is set to zero , a Target MUST NOT generate any P2P-DRO messages . 	210	0
6997	N	o Number of Routes ( N ): This field is valid only if the R flag is set to one and the H flag is set to zero , i.e ., the Targets are allowed to generate P2P-DRO messages carrying discovered Source Routes back to the Origin . In this case , the value in the N field plus one indicates the number of Source Routes that each Target should convey to the Origin . When Hop-by-hop Routes are being discovered , the N field MUST be set to zero on transmission and ignored on reception . 	210	0
6997	Compr	o Compr : This field is a 4-bit unsigned integer indicating the number of prefix octets that are elided from the Target field and the Address vector . For example , the Compr value will be zero if full IPv6 addresses are carried in the Target field and the Address vector . 	301	0
6997	L	o Lifetime ( L ): This is a 2-bit field that indicates the exact duration that a router joining the temporary DAG , including the Origin and the Target(s ), MUST maintain its membership in the DAG . A router MUST leave the temporary DAG once the time elapsed since it joined reaches the value indicated by this field . The mapping between the value in this field and the duration of the router's membership in the temporary DAG is as follows : 	120	0
6997	TargetAddr	o TargetAddr : This is an IPv6 address of the Target after eliding Compr number of prefix octets . When the P2P-RDO is included in a P2P mode DIO , this field may contain a unicast address or a multicast address . If a unicast address is specified , it MUST be a global address or a unique-local address . Any additional Target addresses can be specified by including one or more RPL Target options [ RFC6550 ] in the DIO . When the P2P-RDO is included in a P2P-DRO , this field MUST contain a unicast global or unique-local IPv6 address of the Target generating the P2P-DRO . 	230	0
6997	RPLInstanceID	o RPLInstanceID : This field provides the RPLInstanceID of the temporary DAG used for route discovery . 	400	0
6997	Version	o Version : This field provides the Version of the temporary DAG used for route discovery . Since a temporary DAG always has value zero for the Version , this field MUST always be set to zero . 	220	0
6997	S	o Stop ( S ): This flag , when set to one by a Target , indicates that the P2P-RPL route discovery is over . All the routers receiving such a P2P-DRO , including those not listed in the route carried inside a P2P-RDO , 	210	0
6997	A	o Ack Required ( A ): This flag , when set to one by the Target , indicates that the Origin MUST unicast a P2P-DRO-ACK message ( defined in Section 10 ) to the Target when it receives the P2P-DRO . 	210	0
6997	Seq	o Sequence Number ( Seq ): This 2-bit field indicates the sequence number for the P2P-DRO . This field is relevant when the A flag is set to one , i.e ., the Target requests an acknowledgement from the Origin for a received P2P-DRO . The Origin includes the RPLInstanceID , the DODAGID , and the Sequence Number of the received P2P-DRO inside the P2P-DRO-ACK message it sends back to the Target . 	201	0
6997	Reserved	o Reserved : These bits are reserved for future use . These bits MUST be set to zero on transmission and MUST be ignored on reception . 	500	0
6997	DODAGID	o DODAGID : This field provides the DODAGID of the temporary DAG used for route discovery . The DODAGID also identifies the Origin . The RPLInstanceID , the Version , and the DODAGID together uniquely identify the temporary DAG used for route discovery and can be copied from the DIO message advertising the temporary DAG . 	231	0
6997	R	o Reply ( R ): This flag MUST be set to zero on transmission and ignored on reception . 	500	0
6997	N	o Number of Routes ( N ): This field MUST be set to zero on transmission and ignored on reception . 	500	0
6997	L	o Lifetime ( L ): This field MUST be set to zero on transmission and ignored on reception . 	500	0
6997	TargetAddr	o TargetAddr : This field MUST contain a unicast global or unique - local IPv6 address of the Target generating the P2P-DRO . 	230	0
6997	NH	o If an Address[NH ] element inside the P2P-RDO lists the router's own unicast IPv6 address , the router is a part of the route carried in the P2P-RDO . In this case , the router MUST do the following : 	230	0
6998	RPLInstanceID	o RPLInstanceID : This field specifies the RPLInstanceID of the Hop-by-hop Route along which the Measurement Request travels ( or traveled initially until it switched over to a Source Route ). 	400	0
6998	Compr	o Compr : In many LLN deployments , IPv6 addresses share a well-known , common prefix . In such cases , the common prefix can be elided when specifying IPv6 addresses in the Start Point/End Point Address fields and the Address vector . The " Compr " field , a 4-bit unsigned integer , is set by the Start Point to specify the number of prefix octets that are elided from the IPv6 addresses in Start Point/End Point Address fields and the Address vector . The Start Point will set the Compr value to zero if full IPv6 addresses are to be carried in the Start Point Address/End Point Address fields and the Address vector . 	230	0
6998	T	o Type ( T ): This flag is set to one if the MO represents a Measurement Request . The flag is set to zero if the MO is a Measurement Reply . 	210	0
6998	A	o Accumulate Route ( A ): A value of 1 in this flag indicates that the Measurement Request is accumulating a Source Route for use by the End Point to send the Measurement Reply back to the Start Point . Route accumulation MUST NOT be used ( i.e ., this flag MUST NOT be set to one ) inside a Measurement Request , unless it travels along a Hop-by-hop Route represented by a local RPLInstanceID ( i.e ., H = 1 and RPLInstanceID has a local value ). Route accumulation MAY be used ( i.e ., this flag MAY be set to one ) if the Measurement Request is traveling along a Hop-by-hop Route with a local RPLInstanceID . In this case , if the route accumulation is on , an Intermediate Point adds its unicast global/unique-local IPv6 address ( after eliding Compr number of prefix octets ) to the Address vector in the manner specified in Section 5.3 . In other cases , this flag MUST be set to zero on transmission and ignored on reception . Route accumulation is not allowed when the Measurement Request travels along a Hop-by-hop Route with a global RPLInstanceID , i.e ., along a global DAG , because : 	210	0
6998	R	o Reverse ( R ): A value of 1 in this flag inside a Measurement Request indicates that the Address vector contains a complete Source Route from the Start Point to the End Point , which can be used , after reversal , by the End Point to send the Measurement Reply back to the Start Point . This flag MAY be set to one inside a Measurement Request only if a Source Route , from the Start Point to the End Point , is being measured . Otherwise , this flag MUST be set to zero on transmission and ignored on reception . 	210	0
6998	B	o Back Request ( B ): A value of 1 in this flag serves as a request to the End Point to send a Measurement Request towards the Start Point . On receiving a Measurement Request with the B flag set to one , the End Point SHOULD generate a Measurement Request to measure the cost of its current ( or the most preferred ) route to the Start Point . Receipt of this Measurement Request would allow the Start Point to know the cost of the back route from the End Point to itself and thus determine the round-trip cost of reaching the End Point . 	302	0
6998	I	o Intermediate Reply ( I ): A value of 1 in this flag serves as permission to an Intermediate Point to generate a Measurement Reply if it knows the aggregated values of the routing metrics being measured for the rest of the route . Setting this flag to one may be useful in scenarios where the Hop Count [ RFC6551 ] is the routing metric of interest and an Intermediate Point ( e.g ., the root of a non-storing global DAG or a common ancestor of the Start Point and the End Point in a storing global DAG ) may know the Hop Count of the remainder of the route to the End Point . This flag MAY be set to one only if a Hop-by-hop Route with a global RPLInstanceID is being measured ( i.e ., H = 1 and RPLInstanceID has a global value ). Otherwise , this flag MUST be set to zero on transmission and ignored on reception . 	302	0
6998	SeqNo	o SeqNo : This is a 6-bit sequence number , assigned by the Start Point , that allows the Start Point to uniquely identify a Measurement Request and the corresponding Measurement Reply . 	231	0
6998	Num	o Num : This field indicates the number of elements , each ( 16 - Compr ) octets in size , inside the Address vector . If the value of this field is zero , the Address vector is not present in the MO . 	400	0
6998	Index	o Index : If the Measurement Request is traveling along a Source Route contained in the Address vector ( i.e ., H = 0 ), this field indicates the index in the Address vector of the next hop on the route . If the Measurement Request is traveling along a Hop-by-hop Route with a local RPLInstanceID and the route accumulation is on ( i.e ., H = 1 , RPLInstanceID has a local value , and A = 1 ), this 	210	0
6998	Start Point Address	o Start Point Address : This is a unicast global or unique-local IPv6 address of the Start Point after eliding Compr number of prefix octets . If the Measurement Request is traveling along a Hop-by - hop Route and the RPLInstanceID field indicates a local value , the Start Point Address field MUST specify the DODAGID value that , along with the RPLInstanceID and the End Point Address , uniquely identifies the Hop-by-hop Route being measured . 	230	0
6998	End Point Address	o End Point Address : This is a unicast global or unique-local IPv6 address of the End Point after eliding Compr number of prefix octets . 	230	0
6998	RPLInstanceID	o RPLInstanceID : This field MUST be set to the RPLInstanceID of the route being measured . 	400	0
6998	Compr	o Compr : This field MUST be set to specify the number of prefix octets that are elided from the IPv6 addresses in Start Point/ End Point Address fields . 	231	0
6998	T	o Type ( T ): This flag MUST be set to one , since the MO represents a Measurement Request . 	302	0
6998	A	o Accumulate Route ( A ): This flag MUST be set to zero . 	500	0
6998	R	o Back Request ( B ): This flag MAY be set to one to request that the End Point send a Measurement Request to the Start Point . 	302	0
6998	B	o Back Request ( B ): This flag MAY be set to one to request that the End Point send a Measurement Request to the Start Point . 	302	0
6998	I	o Intermediate Reply ( I ): This flag MAY be set to one if the Start Point expects an Intermediate Point to know the values of the routing metrics being measured for the remainder of the route . 	210	0
6998	SeqNo	o SeqNo : This is assigned by the Start Point so that it can uniquely identify the Measurement Request and the corresponding Measurement Reply . 	231	0
6998	Num	o Num : This field MUST be set to zero . 	302	0
6998	Index	o Start Point Address : This field MUST be set to a unicast global/unique-local IPv6 address of the Start Point after eliding Compr number of prefix octets . 	230	0
6998	Start Point Address	o Start Point Address : This field MUST be set to a unicast global/unique-local IPv6 address of the Start Point after eliding Compr number of prefix octets . 	230	0
6998	End Point Address	o End Point Address : This field MUST be set to a unicast global/unique-local IPv6 address of the End Point after eliding Compr number of prefix octets . 	230	0
6998	RPLInstanceID	o RPLInstanceID : This field MUST be set to the RPLInstanceID of the route being measured . 	400	0
6998	Compr	o Compr : This field MUST be set to specify the number of prefix octets that are elided from the IPv6 addresses in Start Point/ End Point Address fields . 	231	0
6998	T	o Type ( T ): This flag MUST be set to one , since the MO represents a Measurement Request . 	302	0
6998	A	o Accumulate Route ( A ): This flag MUST be set to zero . 	500	0
6998	R	o Back Request ( B ): This flag MAY be set to one to request that the End Point send a Measurement Request to the Start Point . 	302	0
6998	B	o Back Request ( B ): This flag MAY be set to one to request that the End Point send a Measurement Request to the Start Point . 	302	0
6998	I	o SeqNo : This is assigned by the Start Point so that it can uniquely identify the Measurement Request and the corresponding Measurement Reply . 	231	0
6998	SeqNo	o SeqNo : This is assigned by the Start Point so that it can uniquely identify the Measurement Request and the corresponding Measurement Reply . 	231	0
6998	Num	o Num : This field MUST be set to zero . 	302	0
6998	Index	o Start Point Address : This field MUST contain the DODAGID value ( after eliding Compr number of prefix octets ) associated with the route being measured . This DODAGID MUST also be a global or unique-local IPv6 address of the Start Point . 	230	0
6998	Start Point Address	o Start Point Address : This field MUST contain the DODAGID value ( after eliding Compr number of prefix octets ) associated with the route being measured . This DODAGID MUST also be a global or unique-local IPv6 address of the Start Point . 	230	0
6998	End Point Address	o End Point Address : This field MUST be set to a unicast global or unique-local IPv6 address of the End Point after eliding Compr number of prefix octets . 	230	0
6998	RPLInstanceID	o RPLInstanceID : This field MUST be set to the RPLInstanceID of the route being measured . 	400	0
6998	Compr	o Compr : This field MUST be set to specify the number of prefix octets that are elided from the IPv6 addresses in Start Point/ End Point Address fields and the Address vector . 	231	0
6998	T	o Type ( T ): This flag MUST be set to one , since the MO represents a Measurement Request . 	302	0
6998	A	o Accumulate Route ( A ): This flag MUST be set to one . 	302	0
6998	R	o Back Request ( B ): This flag MAY be set to one to request that the End Point send a Measurement Request to the Start Point . 	302	0
6998	B	o Back Request ( B ): This flag MAY be set to one to request that the End Point send a Measurement Request to the Start Point . 	302	0
6998	I	o SeqNo : This is assigned by the Start Point so that it can uniquely identify the Measurement Request and the corresponding Measurement Reply . 	231	0
6998	SeqNo	o SeqNo : This is assigned by the Start Point so that it can uniquely identify the Measurement Request and the corresponding Measurement Reply . 	231	0
6998	Num	o Num : This field MUST specify the number of address elements , each ( 16 - Compr ) octets in size , that can fit inside the Address vector . 	230	0
6998	Index	o Index : This field MUST be set to zero to indicate the position in the Address vector where the next hop must store its IPv6 address . 	201	0
6998	Start Point Address	o Start Point Address : This field MUST contain the DODAGID value ( after eliding Compr number of prefix octets ) associated with the route being measured . This DODAGID MUST also be a global or unique-local IPv6 address of the Start Point . 	230	0
6998	End Point Address	o End Point Address : This field MUST be set to a unicast global or unique-local IPv6 address of the End Point after eliding Compr number of prefix octets . 	230	0
6998	RPLInstanceID	o RPLInstanceID : This field does not have any significance when a Source Route is being measured and hence can be set to any value . 	303	0
6998	Compr	o Compr : This field MUST be set to specify the number of prefix octets that are elided from the IPv6 addresses in Start Point/ End Point Address fields and the Address vector . 	231	0
6998	T	o Type ( T ): This flag MUST be set to one , since the MO represents a Measurement Request . 	302	0
6998	A	o Reverse ( R ): This flag SHOULD be set to one if the Source Route in the Address vector can be reversed and used by the End Point to send the Measurement Reply message back to the Start Point . Otherwise , this flag MUST be set to zero . 	210	0
6998	R	o Reverse ( R ): This flag SHOULD be set to one if the Source Route in the Address vector can be reversed and used by the End Point to send the Measurement Reply message back to the Start Point . Otherwise , this flag MUST be set to zero . 	210	0
6998	B	o Back Request ( B ): This flag MAY be set to one to request that the End Point send a Measurement Request to the Start Point . 	302	0
6998	I	o SeqNo : This is assigned by the Start Point so that it can uniquely identify the Measurement Request and the corresponding Measurement Reply . 	231	0
6998	SeqNo	o SeqNo : This is assigned by the Start Point so that it can uniquely identify the Measurement Request and the corresponding Measurement Reply . 	231	0
6998	Num	o Num : This field MUST specify the number of address elements , each ( 16 - Compr ) octets in size , inside the Address vector . 	230	0
6998	Index	o Index : This field MUST be set to zero to indicate the position in the Address vector of the next hop on the route . 	302	0
6998	Start Point Address	o Start Point Address : This field MUST be set to a unicast global or unique-local IPv6 address of the Start Point after eliding Compr number of prefix octets . 	230	0
6998	End Point Address	o End Point Address : This field MUST be set to a unicast global or unique-local IPv6 address of the End Point after eliding Compr number of prefix octets . 	230	0
7002	BT	Block Type ( BT ): 8 bits 	400	0
7002	I	This field indicates whether the reported metric is an Interval , Cumulative , or Sampled metric [ RFC6792 ]: 	220	0
7002	DT	This field is used to identify the discard type used in this report block . The discard type is defined as follows : 	231	0
7002	resv	These bits are reserved . They MUST be set to zero by senders and ignored by receivers ( see [ RFC6709 ], Section 4.2 ). 	500	0
7002	SSRC of Source	SSRC of Source : 32 bits 	302	0
7002	Discard Count	Number of packets discarded over the period ( Interval or Cumulative ) covered by this report . 	100	0
7003	BT	Block Type ( BT ): 8 bits 	400	0
7003	I	This field is used to indicate whether the burst/gap discard metrics are Sampled , Interval , or Cumulative metrics [ RFC6792 ]: 	301	0
7003	Reserved	These bits are reserved . They MUST be set to zero by senders and ignored by receivers ( see [ RFC6709 ], Section 4.2 ). 	500	0
7003	resv	These bits are reserved . They MUST be set to zero by senders and ignored by receivers ( see [ RFC6709 ], Section 4.2 ). 	500	0
7003	SSRC of Source	SSRC of Source : 32 bits 	302	0
7003	Threshold	The Threshold is equivalent to Gmin in [ RFC3611 ], i.e ., the number of successive packets that must not be discarded prior to and following a discard packet in order for this discarded packet to be regarded as part of a gap . Note that the Threshold is set in accordance with the Gmin calculation defined in Section 4.7.2 of [ RFC3611 ]. 	100	0
7003	Packets Discarded in Bursts	Packets Discarded in Bursts : 24 bits 	100	0
7003	Total Packets Expected in Bursts	The total number of packets expected during discard bursts ( that is , the sum of received packets and lost packets ). 	201	0
7003	Reserved	These bits are reserved . They MUST be set to zero by senders and ignored by receivers ( See [ RFC6709 ], Section 4.2 ). 	500	0
7004	BT	A Burst/Gap Loss Summary Statistics Block is identified by the constant 17 . 	302	0
7004	I	This field is used to indicate whether the burst/gap loss summary statistics metrics are Sampled , Interval , or Cumulative metrics : 	231	0
7004	Reserved	This field is reserved for future definition . In the absence of such a definition , the bits in this field MUST be set to zero and ignored by the receiver ( see [ RFC6709 ], Section 4.2 ). 	500	0
7004	Block Length	The constant 3 , in accordance with the definition of this field in Section 3 of RFC 3611 [ RFC3611 ]. 	100	0
7004	SSRC of Source	SSRC of Source : 32 bits 	302	0
7004	Burst Loss Rate	The fraction of packets lost during bursts since the beginning of reception , expressed as a fixed point number with the binary point immediately after the left-most bit . This value is calculated by dividing Packets Lost in Bursts by Total Packets Expected in Bursts , multiplying the result of the division by 32768 ( 0x8000 ), and keeping only the integer part . The maximum value is thus 0x8000 . Representing this as a formula : 	200	0
7004	Gap Loss Rate	The fraction of packets lost during gaps since the beginning of reception expressed as a fixed point number with the binary point immediately after the left-most bit . This value is calculated by dividing the difference between number of packets lost and Packets Lost in Bursts by the difference between Packets Expected and Total Packets Expected in Bursts , multiplying the result of the division by 32768 ( 0x8000 ), and keeping only the integer part . The maximum value is thus 0x8000 . Representing this as a formula : 	110	0
7004	Burst Duration Mean	Burst Duration Mean : 16 bits 	100	0
7004	Burst Duration Variance	The variance of the burst duration is obtained using the standard result : 	200	0
7004	BT	A Burst/Gap Discard Summary Statistics Block is identified by the constant 18 . 	302	0
7004	I	This field is used to indicate whether the burst/gap discard summary statistics metrics are Sampled , Interval , or Cumulative metrics : 	210	0
7004	Reserved	This field is reserved for future definition . In the absence of such a definition , the bits in this field MUST be set to zero and ignored by the receiver ( see [ RFC6709 ], Section 4.2 ). 	500	0
7004	Block Length	The constant 2 , in accordance with the definition of this field in Section 3 of RFC 3611 [ RFC3611 ]. 	100	0
7004	SSRC of Source	SSRC of Source : 32 bits 	302	0
7004	Burst Discard Rate	The fraction of packets discarded during bursts since the beginning of reception , expressed as a fixed point number with the binary point immediately after the left-most bit . This value is calculated by dividing Packets Discarded in Bursts by Total Packets Expected in Bursts , multiplying the result of the division by 32768 ( 0x8000 ), and keeping only the integer part , according to the formula : 	200	0
7004	Gap Discard Rate	The fraction of packets discarded during gaps since the beginning of reception expressed as a fixed point number with the binary point immediately after the left-most bit . This value is calculated by dividing the difference between number of packets discarded and Packets Discarded in Bursts by the difference between Packets Expected and Total Packets Expected in Bursts , 	200	0
7004	BT	A Frame Impairment Statistics Summary Block is identified by the constant 19 . 	302	0
7004	T	This field is used to indicate the frame type to be reported . The bit is set to 0 if the full_lost_frames , partial_lost_frames , dup_frames , and discarded_frames fields contain Key frame ( reference frame ) counts or 1 if they contain Derived frame counts . Note that if both the Key frame and Derivation frame report are sent , they should be sent in the same RTCP compound packet using two Frame Impairment Statistics Summary Blocks . 	210	0
7004	Reserved	This field is reserved for future definition . In the absence of such a definition , the bits in this field MUST be set to zero and ignored by the receiver ( see [ RFC6709 ], Section 4.2 ). 	500	0
7004	Block Length	The constant 6 , in accordance with the definition of this field in Section 3 of RFC 3611 [ RFC3611 ]. 	100	0
7004	SSRC of Source	SSRC of Source : 32 bits 	302	0
7004	begin_seq	begin_seq : 16 bits 	400	0
7004	end_seq	end_seq : 16 bits 	200	0
7004	discarded_frames	Number of discarded frames ( discarded_frames ): 32 bits 	200	0
7004	dup_frames	Number of duplicate frames received in the above sequence number interval . 	200	0
7004	full_lost_frames	A frame is either split across multiple packets or carried in only one packet . If the whole frame or all the packets of the frame are lost , this frame is regarded as one full_lost_frame . The full_lost_frames can be inferred from packet(s ) that comprise the frame . The full_lost_frames is equivalent to the number of full lost frames in the above sequence number interval . 	200	0
7004	partial_lost_frames	When a frame is split across multiple packets and some packets of the frame are lost , this frame is regarded as one partial_lost_frame . The partial_lost_frames can be inferred from packets that comprise the frame . The value of the partial_lost_frames field is equivalent to the number of partial lost frames in the above sequence number interval . 	110	0
7005	BT	A De-Jitter Buffer Metrics Report Block is identified by the constant 23 . 	301	0
7005	I	This field is used to indicate whether the de-jitter buffer metrics are Sampled , Interval , or Cumulative metrics : 	210	0
7005	C	This field is used to identify the de-jitter buffer method in use at the receiver , according to the following code : 	400	0
7005	resv	These bits are reserved . They MUST be set to zero by senders and ignored by receivers ( see [ RFC6709 ], Section 4.2 ). 	500	0
7005	Block Length	The length of this report block in 32-bit words , minus one , in accordance with the definition in [ RFC3611 ]. This field MUST be set to 3 to match the fixed length of the report block . 	100	0
7005	SSRC of Source	SSRC of Source : 32 bits 	302	0
7011	Information Element	An Information Element is a protocol - and encoding-independent description of an attribute that may appear in an IPFIX Record . Information Elements are defined in the IANA " IPFIX Information Elements " registry [ IANA-IPFIX ]. The type associated with an Information Element indicates constraints on what it may contain and also determines the valid encoding mechanisms for use in IPFIX . 	400	0
7011	Length	Total length of the IPFIX Message , measured in octets , including Message Header and Set(s ). 	100	0
7011	Export Time	Export Time 	121	0
7011	Sequence Number	Incremental sequence counter modulo 2^32 of all IPFIX Data Records sent in the current stream from the current Observation Domain by the Exporting Process . Each SCTP Stream counts sequence numbers separately , while all messages in a TCP connection or UDP session are considered to be part of the same stream . This value can be used by the Collecting Process to identify whether any IPFIX Data Records have been missed . Template and Options Template Records do not increase the Sequence Number . 	201	0
7011	Observation Domain ID	A 32-bit identifier of the Observation Domain that is locally unique to the Exporting Process . The Exporting Process uses the Observation Domain ID to uniquely identify to the Collecting Process the Observation Domain that metered the Flows . It is RECOMMENDED that this identifier also be unique per IPFIX Device . Collecting Processes SHOULD use the Transport Session and the Observation Domain ID field to separate different export streams originating from the same Exporter . The Observation Domain ID SHOULD be 0 when no specific Observation Domain ID is relevant for the entire IPFIX Message , for example , when exporting the Exporting Process Statistics , or in the case of a hierarchy of Collectors when aggregated Data Records are exported . 	230	0
7011	E	Enterprise bit . This is the first bit of the Field Specifier . If this bit is zero , the Information Element identifier identifies an Information Element in [ IANA-IPFIX ], and the four-octet Enterprise Number field MUST NOT be present . If this bit is one , the Information Element identifier identifies an enterprise-specific Information Element , and the Enterprise Number field MUST be present . 	231	0
7011	Field Length	The length of the corresponding encoded Information Element , in octets . Refer to [ IANA-IPFIX ]. The Field Length may be smaller than that listed in [ IANA-IPFIX ] if the reduced-size encoding is used ( see Section 6.2 ). The value 65535 is reserved for variable - length Information Elements ( see Section 7 ). 	100	0
7011	Enterprise Number	IANA enterprise number [ IANA-PEN ] of the authority defining the Information Element identifier in this Template Record . 	231	0
7011	Padding	The Exporting Process MAY insert some padding octets , so that the subsequent Set starts at an aligned boundary . For security reasons , the padding octet(s ) MUST be composed of octets with value zero ( 0 ). The padding length MUST be shorter than any allowable record in this Set . If padding of the IPFIX Message is desired in combination with very short records , then the padding Information Element ' paddingOctets ' can be used for padding 	302	0
7011	Set ID	Identifies the Set . A value of 2 is reserved for Template Sets . A value of 3 is reserved for Options Template Sets . Values from 4 to 255 are reserved for future use . Values 256 and above are used for Data Sets . The Set ID values of 0 and 1 are not used , for historical reasons [ RFC3954 ]. 	500	0
7011	Length	Total length of the Set , in octets , including the Set Header , all records , and the optional padding . Because an individual Set MAY contain multiple records , the Length value MUST be used to determine the position of the next Set . 	100	0
7011	Field Count	Field Count 	400	0
7011	Field Count	Number of all fields in this Options Template Record , including the Scope Fields . 	100	0
7011	Scope Field Count	Number of scope fields in this Options Template Record . The Scope Fields are normal Fields , except that they are interpreted as scope at the Collector . A scope field count of N specifies that the first N Field Specifiers in the Template Record are Scope Fields . The Scope Field Count MUST NOT be zero . 	231	0
7011	exportedMessageTotalCount	exportedMessageTotalCount 	400	0
7016	port	port : The 16-bit port number , in network byte order . 	231	0
7016	chunkType	chunkType : The chunk type code . 	231	0
7016	chunkLength	chunkPayload : The type-specific payload of this chunk , chunkLength bytes in length ( may be empty ). 	400	0
7016	reserved	packetID : VLU , the identifier of this segmented packet . All fragments of the same packet have the same packetID . 	231	0
7016	packetID	packetID : VLU , the identifier of this segmented packet . All fragments of the same packet have the same packetID . 	231	0
7016	fragmentNum	fragmentNum : VLU , the index of this fragment of the indicated packet . The first fragment of the packet MUST be index 0 . Fragments are numbered consecutively . 	200	0
7016	initiatorSessionID	initiatorSessionID : The session ID to be used by the responder when sending packets to the initiator . 	230	0
7016	responderSessionID	responderSessionID : The session ID to be used by the initiator when sending packets to the responder . 	230	0
7074	...	The content of the Switching Capability-specific information field depends on the value of the Switching Capability field . 	231	0
7074	Switching Type	Indicates the type of switching that should be performed on a particular link . This field is needed for links that advertise more than one type of switching capability . This field should 	231	0
7078	Reserved	Reserved : Reserved field . The server MUST set this value to 0 , and the client MUST ignore its content . 	500	0
7078	A	A : Automatic Row Addition flag . This flag toggles the Automatic Row Addition flag at client hosts , which is described in Section 2.1 of [ RFC6724 ]. If this flag is set to 1 , it does not change client host behavior; that is , a client MAY automatically add additional site-specific rows to the policy table . If set to 0 , the Automatic Row Addition flag is disabled , and a client SHOULD NOT automatically add rows to the policy table . If the option contains a POLICY TABLE option , this flag is meaningless , 	210	0
7078	P	P : Privacy Preference flag . This flag toggles the Privacy Preference flag on client hosts , which is described in Section 5 of [ RFC6724 ]. If this flag is set to 1 , it does not change client host behavior; that is , a client will prefer temporary addresses [ RFC4941 ]. If set to 0 , the Privacy Preference flag is disabled , and a client will prefer public addresses . This flag SHOULD be set to 0 only when the temporary addresses should not be preferred for site-specific reasons . 	210	0
7078	label	label : An 8-bit unsigned integer; this value is for correlation of source address prefixes and destination address prefixes . This field is used to deliver a label value in the [ RFC6724 ] policy table . 	231	0
7078	precedence	precedence : An 8-bit unsigned integer; this value is used for sorting destination addresses . This field is used to deliver a precedence value in the [ RFC6724 ] policy table . 	231	0
7097	BT	Block Type ( BT , 8 bits ): A Discard RLE report block is identified by the constant 25 . 	400	0
7097	rsvd	rsvd ( 3 bits ): This field is reserved for future definition . In the absence of such definition , the bits in this field MUST be set to zero and MUST be ignored by the receiver . 	500	0
7109	Trigger	Trigger 8-bit unsigned integer indicating the event that triggered the home agent to send the Flow Binding Indication message . The following Trigger values are currently defined : 	231	0
7109	Status	Status 8-bit unsigned integer indicating the result of processing the Flow Binding Indication message by the receiving mobile node . Values less than 128 in the Status field indicate that the Flow Binding Indication was processed successfully by the receiving node . Values greater than or equal to 128 indicate that the Flow Binding Indication was rejected by the receiving node . The following status values are currently defined : 	301	0
7109	Action	Action-1 This specification defines a new Mobility Header Type , " Flow Binding Message ". This Mobility Header message is described in Section 6.1 , and the type value for this messages is 21 , which has been assigned in the " Mobility Header Types - for the MH Type field in the Mobility Header " registry . 	240	0
7109	Action	Action-2 This specification defines " Flow Binding Type ". IANA has created a new sub-registry within the " Mobile IPv6 parameters " registry . Flow Binding Type is described in Sections 6.1.1 and 6.1.2 , which reserve the following values : 	240	0
7109	Action	Action-3 This specification defines " Flow Binding Indication Triggers ". IANA has created a new sub-registry within the " Mobile IPv6 parameters " registry . The trigger values are described in Section 6.1.1 , which reserves the following values : 	231	0
7109	Action	Action-4 This specification defines " Flow Binding Acknowledgement Status Codes ". IANA has created a new sub-registry within the " Mobile IPv6 parameters " registry . The status codes are described in Section 6.1.2 , which reserves the following values : 	231	0
7109	Action	Action-5 This specification defines two new Flow Identification sub - options : the " Flow Binding Action " sub-option and " Target Care-of Address " sub-option . These sub-options are described in Sections 6.2.1 and 6.2.2 , and the sub-option values are 4 and 5 , respectively , as assigned in the " Flow Identification Sub-options " registry . 	231	0
7109	Action	Action-6 This specification defines " Flow Binding Action Values ". IANA has created a new sub-registry within the " Mobile IPv6 parameters " registry . The action values are described in Section 6.2.1 , which reserves the following values : 	231	0
7110	Reply Path	The Reply Path ( RP ) TLV is an optional TLV within the LSP ping protocol . However , if the Reply via Specified Path mode requested , as described in Section 4.1 , the Reply Path ( RP ) TLV MUST be included in an echo request message , and its absence is treated as a malformed echo request , as described in [ RFC4379 ]. Furthermore , if a Reply Path ( RP ) TLV is included in an echo request message , a Reply Path ( RP ) TLV MUST be included in the corresponding echo reply message sent by an implementation that is conformant to this specification . 	400	0
7110	Reply Path TLV Type	Reply Path TLV Type : It is 2 octets in length , and the type value is 21 . 	231	0
7110	Length	Length : It is 2 octets in length . It defines the length in octets of the Reply Path return code , Flags , and Reply Path fields . 	100	0
7110	Reply Path return code	Reply Path return code : The Reply Path return code field is 2 octets in length . It is defined for the egress LSR of the forward LSP to report the results of Reply Path TLV processing and return path selection . This field MUST be set to zero in a Reply Path TLV carried on an echo request message and MUST be ignored on receipt . This document defines the following Reply Path return codes for inclusion in a Reply Path TLV carried on an echo reply : 	400	0
7110	Flags	Flags : It is also 2 octets in length , it is used to notify the egress how to process the Reply Paths field when performing return path selection . The Flags field is a bit vector and has following format : 	400	0
7110	A	A ( Alternative path ): the egress LSR MUST select a non-default path as the return path . This is very useful when reverse default path problems are suspected that can be confirmed when the echo reply is forced to follow a non-default return path . Here , the default path refers to the path that the egress LSR will use to send the echo reply when Reply Mode 2 or 3 is used . If A bit is set , there is no need to carry any specific reply path sub-TLVs , and when received , the sub-TLVs SHOULD be ignored . 	301	0
7110	B	B ( Bidirectional ): the return path is required to follow the reverse direction of the tested bidirectional LSP . If B bit is set , there is no need to carry any specific reply path sub - TLVs , and when received , the sub-TLVs SHOULD be ignored . 	210	0
7110	Reply Path	Reply Path : It is used to describe the return path that an echo reply will be send along . It is variable in length and can contain zero , one or more Target FEC sub-TLVs [ RFC4379 ]. In an echo request , it carries sub-TLVs that describe the specified path that the echo reply message is required to follow . In an echo reply , the sub-TLVs describe the FEC Stack information of the return path ( when the return path is an MPLS path ) that the echo reply will be sent along . 	400	0
7110	P	P ( Primary ): the return path MUST be chosen from the LSPs that belong to the specified Tunnel and the LSP MUST be the primary LSP . 	230	0
7110	S	S ( Secondary ): the return path MUST be chosen from the LSPs that belong to the specified Tunnel and the LSP MUST be the secondary LSP . Primary and secondary LSPs are defined in [ RFC4872 ]. 	301	0
7138	Signal Type	o Signal Type ( 8 bits ): Indicates the ODU type being advertised . Values are defined in [ RFC7139 ]. 	231	0
7138	Num of stages	o Num of stages ( 8 bits ): This field indicates the number of multiplexing stages used to transport the indicated Signal Type . It MUST be set to the number of stages represented in the sub-TLV . 	200	0
7138	TSG	o TSG ( 3 bits ): Tributary Slot Granularity . Used for the advertisement of the supported tributary slot granularity . The following values MUST be used : 	231	0
7138	Res	o Res ( 3 bits ): Reserved bits . MUST be set to 0 and ignored on receipt . 	500	0
7138	Priority	o Priority ( 8 bits ): A bitmap used to indicate which priorities are being advertised . The bitmap is in ascending order , with the leftmost bit representing priority level 0 ( i.e ., the highest ) and the rightmost bit representing priority level 7 ( i.e ., the lowest ). A bit MUST be set ( 1 ) corresponding to each priority represented in the sub-TLV and MUST NOT be set ( 0 ) when the corresponding priority is not represented . At least one priority level MUST be advertised that , unless overridden by local policy , SHALL be at priority level 0 . 	210	0
7138	Padding	o Padding ( variable ): The Padding field is used to ensure the 32-bit alignment of stage fields . The length of the Padding field is always a multiple of 8 bits ( 1 byte ). Its length can be calculated , in bytes , as : 4 - ( " value of Num of stages field " % 4 ). The Padding field MUST be set to a zero ( 0 ) value on transmission and MUST be ignored on receipt . 	400	0
7138	Unreserved Padding	o Unreserved Padding ( 16 bits ): The Padding field is used to ensure the 32-bit alignment of the Unreserved ODUj fields . When present , the Unreserved Padding field is 16 bits ( 2 bytes ) long . When the number of priorities is odd , the Unreserved Padding field MUST be included . When the number of priorities is even , the Unreserved Padding MUST be omitted . 	301	0
7138	S	In this example , an interface with tributary slot type 1.25 Gbps and fallback procedure enabled is considered ( TS granularity=1 ). It supports the simple ODU1->ODU2->ODU3 hierarchy and priorities 0 and 3 . Suppose that in this interface , the ODU3 Signal Type can be both switched or terminated , the ODU2 can only be terminated , and the ODU1 can only be switched . Please note that since the ODU1 is not being advertised to support ODU0 , the value of its TSG field is " ignored " ( TS granularity=0 ). For the advertisement of the capabilities of such an interface , a single ISCD is used . Its format is as follows : 	240	0
7139	Signal Type	As defined in Section 3.2.1 of [ RFC4328 ], with the following additional values : 	400	0
7139	NVC	As defined in Section 3.2.3 of [ RFC4328 ]. This field MUST be set to 0 for ODUflex Signal Types . 	302	0
7139	Bit_Rate	In the case of ODUflex , including ODUflex(CBR ) and ODUflex(GFP ) Signal Types , this field indicates the nominal bit rate of ODUflex expressed in bytes per second , encoded as a 32-bit IEEE single - precision floating-point number ( referring to [ RFC4506 ] and [ IEEE ]). For other Signal Types , this field MUST be set to zero on transmission , MUST be ignored on receipt , and SHOULD be passed unmodified by transit nodes . 	231	0
7139	TPN	TPN : 12 bits 	400	0
7139	Length	Indicates the number of bits of the Bit Map field , i.e ., the total number of TSs in the HO ODUk link . The TS granularity , 1.25 Gbps or 2.5 Gbps , may be derived by dividing the HO ODUk link's rate by 	100	0
7140	U	U-bit : Unknown TLV bit , as described in [ RFC5036 ]. The value MUST be 1 . The unknown TLV MUST be silently ignored and the rest of the message processed as if the unknown TLV did not exist . 	210	0
7140	F	F-bit : Forward unknown TLV bit , as described in [ RFC5036 ]. The value of this bit MUST be 0 since a Capability Parameter TLV is sent only in Initialization and Capability messages , which are not forwarded . 	210	0
7140	Length	Length : SHOULD be 1 . 	100	0
7140	S	S-bit : As defined in Section 3 of [ RFC5561 ]. 	231	0
7140	Reserved	Reserved : As defined in Section 3 of [ RFC5561 ]. 	400	0
7145	Opcode	Opcode - Operation Code : 4 bits 	231	0
7145	WSV	This flag indicates the validity of the Write STag field and the Write Base Offset field of the iSER Header . If set to one , the Write STag field and the Write Base Offset field in this iSER Header are valid . If set to zero , the Write STag field and the Write Base Offset field in this iSER Header MUST be ignored at the receiver . The Write STag Valid flag is set to one when there is solicited data to be transferred for a SCSI Write or bidirectional command , or when there are non-immediate unsolicited and solicited data to be transferred for the referenced task specified in a Task Management Function Request with the TASK REASSIGN function . 	302	0
7145	RSV	This flag indicates the validity of the Read STag field and the Read Base Offset field of the iSER Header . If set to one , the Read STag field and the Read Base Offset field in this iSER Header 	220	0
7145	Write STag	This field contains the Write STag when the Write STag Valid flag is set to one . For a SCSI Write or bidirectional command , the Write STag is used to Advertise the initiator's I/O Buffer containing the solicited data . For a Task Management Function Request with the TASK REASSIGN function , the Write STag is used to Advertise the initiator's I/O Buffer containing the non-immediate unsolicited data and solicited data . This Write STag is used as the Data Source STag in the resultant RDMA Read operation(s ). When the Write STag Valid flag is set to zero , this field MUST be set to zero and ignored on receive . 	400	0
7145	Write Base Offset	This field contains the Base Offset associated with the I/O Buffer for the SCSI Write command when the Write STag Valid flag is set to one . When the Write STag Valid flag is set to zero , this field MUST be set to zero and ignored on receive . 	400	0
7145	Read STag	This field contains the Read STag when the Read STag Valid flag is set to one . The Read STag is used to Advertise the initiator's Read I/O Buffer of a SCSI Read or bidirectional command , or a Task Management Function Request with the TASK REASSIGN function . This Read STag is used as the Data Sink STag in the resultant RDMA Write operation(s ). When the Read STag Valid flag is zero , this field MUST be set to zero and ignored on receive . 	400	0
7145	Read Base Offset	This field contains the Base Offset associated with the I/O Buffer for the SCSI Read command when the Read STag Valid flag is set to one . When the Read STag Valid flag is set to zero , this field MUST be set to zero and ignored on receive . 	400	0
7145	MaxVer	This field specifies the maximum version of the iSER protocol supported . It MUST be set to 10 to indicate the version of the specification described in this document . 	220	0
7145	MinVer	This field specifies the minimum version of the iSER protocol supported . It MUST be set to 10 to indicate the version of the specification described in this document . 	220	0
7145	Reserved	Reserved fields MUST be set to zero on transmit and MUST be ignored on receive . 	500	0
7145	Rsvd	Reserved fields MUST be set to zero on transmit and MUST be ignored on receive . 	500	0
7145	REJ	This flag indicates whether the target is rejecting this connection . If set to one , the target is rejecting the connection . 	210	0
7145	MaxVer	This field specifies the maximum version of the iSER protocol supported . It MUST be set to 10 to indicate the version of the specification described in this document . 	220	0
7145	CurVer	This field specifies the current version of the iSER protocol supported . It MUST be set to 10 to indicate the version of the specification described in this document . 	220	0
7145	Reserved	Reserved fields MUST be set to zero on transmit and MUST be ignored on receive . 	500	0
7145	Rsvd	Reserved fields MUST be set to zero on transmit and MUST be ignored on receive . 	500	0
7148	Type	Type 	240	0
7148	Length	8-bit unsigned integer indicating the length of the option in octets , excluding the Type and Length fields . 	100	0
7148	V	If the IPv4 Prefix ( V ) flag is set to a value of ( 1 ), then it indicates that the prefix that is included in the DMNP field is an IPv4 prefix . If the IPv4 Prefix ( V ) flag is set to a value of ( 0 ), then it indicates that the prefix that is included in the DMNP field is an IPv6 prefix . 	210	0
7148	Reserved	This field is unused for now . The value MUST be initialized to 0 by the sender and MUST be ignored by the receiver . 	500	0
7148	Prefix Length	8-bit unsigned integer indicating the number of leftmost bits covering the network part of the address contained in the Prefix field . 	230	0
7150	Enterprise Number	A unique identifier of an organization encoded as a 32-bit integer . Enterprise Numbers are assigned by IANA and managed through an IANA registry [ RFC2578 ]. 	231	0
7150	Enterprise-Specific Information	The detailed enterprise-specific constraint information carried by the object . The format and interpretation of this information is a matter for the enterprise identified by the Enterprise Number . Such formats and interpretation may be published by the enterprise 	400	0
7161	H	A basic solution for providing support of multicast in a network - based mobility management environment has been specified in [ RFC6224 ] without introducing changes on the original PMIPv6 specification [ RFC5213 ]. The focus of the present document is on improving the efficiency of the base solution regarding handover performance . 	400	0
7161	Multicast Membership Context	Multicast Membership Context : In this document , multicast membership context makes reference to the information relative to the currently active multicast subscription of an MN in a handover event that is transferred between the PMIPv6 entities to support the handover optimization . 	231	0
7161	I	The multicast Information flag I specifies whether or not there is multicast subscription information available for the MN . The meaning is the following : 	240	0
7161	H	As the MN moves from one access gateway to another , the mobility - related signaling due to the handover event is carried out independently by the pMAG and the nMAG . That signaling process is not synchronized; thus , two scenarios need to be considered depending on the order in which the LMA receives notification of the MN registration and de-registration in the nMAG and the pMAG , respectively . 	400	0
7161	H	5.1 . Handover of Proactive Type 	240	0
7161	H	5.2 . Handover of Reactive Type 	240	0
7166	Authentication Type	This 16-bit field identifies the type of authentication . The following values are defined in this specification : 	231	0
7166	Auth Data Len	This is the length in octets of the Authentication Trailer ( AT ), including both the 16-octet fixed header and the variable-length message digest . 	100	0
7166	Reserved	This field is reserved . It SHOULD be set to 0 when sending protocol packets and MUST be ignored when receiving protocol packets . 	500	0
7170	Version	Tunnel Extensible Authentication Protocol ( TEAP ) Version 1 	220	0
7170	Code	Code 	231	0
7170	Identifier	The Identifier field is one octet and aids in matching responses with requests . The Identifier field MUST be changed on each Request packet . The Identifier field in the Response packet MUST match the Identifier field from the corresponding request . 	301	0
7170	Length	The Length field is two octets and indicates the length of the EAP packet including the Code , Identifier , Length , Type , Flags , Ver , Message Length , TLS Data , and Outer TLVs fields . Octets outside the range of the Length field should be treated as Data Link Layer padding and should be ignored on reception . 	100	0
7170	Type	Type 	240	0
7170	Flags	L Length included; set to indicate the presence of the four-octet Message Length field . It MUST be present for the first fragment of a fragmented message . It MUST NOT be present for any other message . 	100	0
7170	M	S TEAP start; set in a TEAP Start message sent from the server to the peer . 	110	0
7170	R	R Reserved ( MUST be zero and ignored upon receipt ) 	500	0
7170	Ver	This field contains the version of the protocol . This document describes version 1 ( 001 in binary ) of TEAP . 	220	0
7170	Message Length	The Message Length field is four octets and is present only if the L bit is set . This field provides the total length of the message that may be fragmented over the data fields of multiple packets . 	100	0
7170	Outer TLV Length	The Outer TLV Length field is four octets and is present only if the O bit is set . This field provides the total length of the Outer TLVs if present . 	100	0
7170	M	M 	240	0
7170	R	R 	302	0
7170	Reserved	Reserved , set to zero ( 0 ) 	500	0
7170	TLV Type	TLV Type 	231	0
7170	Length	Length 	100	0
7170	M	M 	240	0
7170	M	Mandatory , set to one ( 1 ) 	302	0
7170	R	R 	302	0
7170	Reserved	Reserved , set to zero ( 0 ) 	500	0
7170	TLV Type	TLV Type 	231	0
7170	Length	The Length field is two octets and contains the length of the ID field in octets . 	100	0
7170	M	M 	240	0
7170	R	R 	302	0
7170	Reserved	Reserved , set to zero ( 0 ) 	500	0
7170	TLV Type	TLV Type 	231	0
7170	Length	Length 	100	0
7170	Identity-Type	Identity-Type 	301	0
7170	M	M 	240	0
7170	M	Mandatory , set to one ( 1 ) 	302	0
7170	R	R 	302	0
7170	Reserved	Reserved , set to zero ( 0 ) 	500	0
7170	TLV Type	TLV Type 	231	0
7170	Length	Length 	100	0
7170	Status	Status 	240	0
7170	M	M 	240	0
7170	M	Mandatory , set to one ( 1 ) 	302	0
7170	R	R 	302	0
7170	Reserved	Reserved , set to zero ( 0 ) 	500	0
7170	TLV Type	TLV Type 	231	0
7170	Length	Length 	100	0
7170	Vendor-Id	The Vendor-Id field is four octets and contains the Vendor-Id of the TLV that was not supported . The high-order octet is 0 , and the low-order three octets are the Structure of Management 	301	0
7170	NAK-Type	The NAK-Type field is two octets . The field contains the type of the TLV that was not supported . A TLV of this type MUST have been included in the previous packet . 	231	0
7170	M	M 	240	0
7170	M	Mandatory , set to one ( 1 ) 	302	0
7170	R	R 	302	0
7170	Reserved	Reserved , set to zero ( 0 ) 	500	0
7170	TLV Type	TLV Type 	231	0
7170	Length	Length 	100	0
7170	Error-Code	The Error-Code field is four octets . Currently defined values for Error-Code include : 	231	0
7170	M	M 	240	0
7170	R	R 	302	0
7170	Reserved	Reserved , set to zero ( 0 ) 	500	0
7170	TLV Type	TLV Type 	231	0
7170	Length	Length 	100	0
7170	M	M 	240	0
7170	R	R 	302	0
7170	Reserved	Reserved , set to zero ( 0 ) 	500	0
7170	TLV Type	TLV Type 	231	0
7170	Length	Length 	100	0
7170	Vendor-Id	The Vendor-Id field is four octets and contains the Vendor-Id of the TLV . The high-order octet is 0 , and the low-order 3 octets are the SMI Network Management Private Enterprise Number of the Vendor in network byte order . 	301	0
7170	M	M 	240	0
7170	M	Mandatory , set to one ( 1 ) 	302	0
7170	R	R 	302	0
7170	Reserved	Reserved , set to zero ( 0 ) 	500	0
7170	TLV Type	TLV Type 	231	0
7170	Length	Length 	100	0
7170	Status	The Status field is one octet . This indicates the result if the server does not process the action requested by the peer . Values include : 	301	0
7170	Action	Action 	303	0
7170	M	M 	240	0
7170	M	Mandatory , set to one ( 1 ) 	302	0
7170	R	R 	302	0
7170	Reserved	Reserved , set to zero ( 0 ) 	500	0
7170	TLV Type	TLV Type 	231	0
7170	Length	Length 	100	0
7170	M	M 	240	0
7170	M	Mandatory , set to one ( 1 ) 	302	0
7170	R	R 	302	0
7170	Reserved	Reserved , set to zero ( 0 ) 	500	0
7170	TLV Type	TLV Type 	231	0
7170	Length	Length 	100	0
7170	Status	Status 	240	0
7170	M	M 	240	0
7170	R	R 	302	0
7170	Reserved	Reserved , set to zero ( 0 ) 	500	0
7170	TLV Type	TLV Type 	231	0
7170	Length	Two octets containing the length of the PAC Attributes field in octets . 	100	0
7170	Type	The Type field is two octets , denoting the attribute type . Allocated types include : 	231	0
7170	Length	Length 	100	0
7170	Type	Type 	240	0
7170	Length	Length 	100	0
7170	Key	Key 	302	0
7170	Type	Type 	240	0
7170	Length	The Length field is two octets , which contains the length of the Value field in octets . 	100	0
7170	Type	Type 	240	0
7170	Length	Length 	100	0
7170	4	The A-ID is the identity of the authority that issued the PAC . The A-ID is intended to be unique across all issuing servers to avoid namespace collisions . The A-ID is used by the peer to determine which PAC to employ . The A-ID is treated as an opaque octet string . This attribute MUST be included in the PAC-Info attribute . The A-ID MUST match the Authority-ID the server used to establish the tunnel . One method for generating the A-ID is to use a high-quality random number generator to generate a random number . An alternate method would be to take the hash of the public key or public key certificate belonging to a server represented by the A-ID . 	230	0
7170	Type	Type 	240	0
7170	Length	Length 	100	0
7170	Result	Result 	302	0
7170	Type	Type 	240	0
7170	Length	Length 	100	0
7170	PAC-Type	This 2-octet field defines the type of PAC being requested or provisioned . The following values are defined : 	231	0
7170	M	M 	240	0
7170	M	Mandatory , set to one ( 1 ) 	302	0
7170	R	R 	302	0
7170	Reserved	Reserved , set to zero ( 0 ) 	500	0
7170	TLV Type	TLV Type 	231	0
7170	Length	Length 	100	0
7170	Reserved	Reserved 	500	0
7170	Reserved	Reserved , set to zero ( 0 ) 	500	0
7170	Version	The Version field is a single octet , which is set to the version of Crypto-Binding TLV the TEAP method is using . For an implementation compliant with this version of TEAP , the version number MUST be set to one ( 1 ). 	220	0
7170	Flags	Flags 	202	0
7170	Sub-Type	Sub-Type 	231	0
7170	Nonce	The Nonce field is 32 octets . It contains a 256-bit nonce that is temporally unique , used for Compound MAC key derivation at each end . The nonce in a request MUST have its least significant bit set to zero ( 0 ), and the nonce in a response MUST have the same value as the request nonce except the least significant bit MUST be set to one ( 1 ). 	301	0
7170	EMSK Compound MAC	The EMSK Compound MAC field is 20 octets . This can be the Server MAC ( B1_MAC ) or the Client MAC ( B2_MAC ). The computation of the MAC is described in Section 5.3 . 	400	0
7170	MSK Compound MAC	The MSK Compound MAC field is 20 octets . This can be the Server MAC ( B1_MAC ) or the Client MAC ( B2_MAC ). The computation of the MAC is described in Section 5.3 . 	400	0
7170	M	M 	240	0
7170	R	R 	302	0
7170	Reserved	Reserved , set to zero ( 0 ) 	500	0
7170	TLV Type	TLV Type 	231	0
7170	Length	Length 	100	0
7170	M	M 	240	0
7170	R	R 	302	0
7170	Reserved	Reserved , set to zero ( 0 ) 	500	0
7170	TLV Type	TLV Type 	231	0
7170	Length	Length 	100	0
7170	Userlen	Userlen 	110	0
7170	Username	Username 	302	0
7170	Passlen	Passlen 	500	0
7170	Password	Password 	302	0
7170	M	M 	240	0
7170	R	R 	302	0
7170	Reserved	Reserved , set to zero ( 0 ) 	500	0
7170	TLV Type	TLV Type 	231	0
7170	Length	Length 	100	0
7170	M	M 	240	0
7170	R	R 	302	0
7170	Reserved	Reserved , set to zero ( 0 ) 	500	0
7170	TLV Type	TLV Type 	231	0
7170	Length	Length 	100	0
7170	M	M 	240	0
7170	R	R 	302	0
7170	Reserved	Reserved , set to zero ( 0 ) 	500	0
7170	TLV Type	TLV Type 	231	0
7170	Length	Length 	100	0
7170	Credential-Format	Credential-Format 	231	0
7171	Code	The Code field is one octet and identifies the type of the EAP message . The only values used for PT-EAP are : 	231	0
7171	Identifier	The Identifier field is one octet and aids in matching Responses with Requests . 	301	0
7171	Length	The Length field is two octets and indicates the length in octets of this PT-EAP message , starting from the Code field . 	100	0
7171	Type	Type 	240	0
7171	Flags	Flags 	302	0
7174	Flow Entropy	Edge TRILL Switches , like traditional 802.1 bridges , are required to learn MAC address associations . Learning is accomplished either by snooping data packets or through other methods . The Flow Entropy field of TRILL OAM messages mimics real packets and may impact the address-learning process of the TRILL data plane . TRILL OAM is required to provide methods to prevent any learning of addresses from 	400	0
7174	OAM Message Channel	The OAM Message Channel provides methods to communicate OAM-specific details between RBridges . CFM [ 802.1Q ] and [ RFC4379 ] have implemented OAM message channels . It is desirable to select an appropriate technology and reuse it , instead of redesigning yet another OAM channel . TRILL is a transport layer that carries Ethernet frames , so the TRILL OAM model specified earlier is based on the CFM [ 802.1Q ] model . The use of the CFM [ 802.1Q ] encoding format for the OAM Message Channel is one possible choice . [ TRILL-OAM ] presents a proposal on the use of CFM [ 802.1Q ] payload as the OAM Message Channel . 	400	0
7176	Type	o Type : TLV type , set to GADDR-TLV 142 . 	240	0
7176	Length	o sub-TLVs : The Group Address TLV value consists of sub-TLVs formatted as described in [ RFC5305 ]. 	400	0
7176	Type	o Length : 5 + m + k*n = 5 + m + 6*n , where m is the number of group records and n is the sum of the number of group and source addresses . 	100	0
7176	Length	o Length : 5 + m + k*n = 5 + m + 6*n , where m is the number of group records and n is the sum of the number of group and source addresses . 	100	0
7176	RESV	o RESV : Reserved . 4-bit fields that MUST be sent as zero and ignored on receipt . 	500	0
7176	VLAN ID	o VLAN ID : This carries the 12-bit VLAN identifier for all subsequent MAC addresses in this sub-TLV , or the value zero if no VLAN is specified . 	230	0
7176	Num Group Recs	o Num Group Recs : A 1-byte unsigned integer that is the number of group records in this sub-TLV . 	231	0
7176	Type	o Length : 5 + m + k*n = 5 + m + 4*n , where m is the number of group records and n is the sum of the number of group and source addresses . 	100	0
7176	Length	o Length : 5 + m + k*n = 5 + m + 4*n , where m is the number of group records and n is the sum of the number of group and source addresses . 	100	0
7176	RESV	o RESV : Must be sent as zero on transmission and is ignored on receipt . 	500	0
7176	VLAN ID	o VLAN ID : This carries a 12-bit VLAN identifier that is valid for all subsequent addresses in this sub-TLV , or the value zero if no VLAN is specified . 	230	0
7176	Num Group Recs	o Num Group Recs : A 1-byte unsigned integer that is the number of group records in this sub-TLV . 	231	0
7176	Type	o Length : 5 + m + k*n = 5 + m + 16*n , where m is the number of group records and n is the sum of the number of group and source addresses . 	100	0
7176	Length	o Length : 5 + m + k*n = 5 + m + 16*n , where m is the number of group records and n is the sum of the number of group and source addresses . 	100	0
7176	RESV	o RESV : Must be sent as zero on transmission and is ignored on receipt . 	500	0
7176	VLAN ID	o VLAN ID : This carries a 12-bit VLAN identifier that is valid for all subsequent addresses in this sub-TLV , or the value zero if no VLAN is specified . 	230	0
7176	Num Group Recs	o Num Group Recs : A 1-byte unsigned integer that is the number of group records in this sub-TLV . 	231	0
7176	Type	o Length : 6 + m + k*n = 6 + m + 6*n , where m is the number of group records and n is the sum of the number of group and source addresses . 	100	0
7176	Length	o Length : 6 + m + k*n = 6 + m + 6*n , where m is the number of group records and n is the sum of the number of group and source addresses . 	100	0
7176	RESV	o RESV : Reserved . 4-bit field that MUST be sent as zero and ignored on receipt . 	500	0
7176	Num Group Recs	o Num Group Recs : A 1-byte unsigned integer that is the number of group records in this sub-TLV . 	231	0
7176	Type	o Length : 6 + m + k*n = 6 + m + 4*n , where m is the number of group records and n is the sum of the number of group and source addresses . 	100	0
7176	Length	o Length : 6 + m + k*n = 6 + m + 4*n , where m is the number of group records and n is the sum of the number of group and source addresses . 	100	0
7176	RESV	o RESV : Must be sent as zero on transmission and is ignored on receipt . 	500	0
7176	Num Group Recs	o Num Group Recs : A 1-byte unsigned integer that is the number of group records in this sub-TLV . 	231	0
7176	Type	o Length : 6 + m + k*n = 6 + m + 16*n , where m is the number of group records and n is the sum of the number of group and source addresses . 	100	0
7176	Length	o Length : 6 + m + k*n = 6 + m + 16*n , where m is the number of group records and n is the sum of the number of group and source addresses . 	100	0
7176	RESV	o RESV : Must be sent as zero on transmission and is ignored on receipt . 	500	0
7176	Num Group Recs	o Num Group Recs : A 1-byte unsigned integer that is the number of group records in this sub-TLV . 	231	0
7176	Type	o Type : sub-TLV type , set to MT-Port-Cap-TLV VLAN-FLAGS sub-TLV 1 . 	240	0
7176	Length	o Port ID : An ID for the port on which the enclosing TRILL IIH PDU is being sent as specified in [ RFC6325 ], Section 4.4.2 . 	230	0
7176	R	o R : Reserved bit . MUST be sent as zero and ignored on receipt . 	500	0
7176	Type	o Type : sub-TLV type , set to MT-Port-Cap-TLV Enabled-VLANs sub-TLV 2 . 	240	0
7176	Length	o RESV : 4 reserved bits that MUST be sent as zero and ignored on receipt . 	500	0
7176	RESV	o RESV : 4 reserved bits that MUST be sent as zero and ignored on receipt . 	500	0
7176	Start VLAN ID	o Start VLAN ID : The 12-bit VLAN ID that is represented by the high - order bit of the first byte of the VLAN bit-map . 	230	0
7176	Type	o Type : sub-TLV type , set to MT-Port-Cap-TLV AppointedFwrdrs sub-TLV 3 . 	240	0
7176	Length	o Appointee Nickname : The nickname of the IS being appointed a forwarder . 	231	0
7176	Appointee Nickname	o Appointee Nickname : The nickname of the IS being appointed a forwarder . 	231	0
7176	RESV	o Start.VLAN , End.VLAN : This VLAN ID range is inclusive . Setting both Start.VLAN and VLAN.end to the same value indicates a range of one VLAN ID . If Start.VLAN is not equal to VLAN.end and Start.VLAN is 0x000 , the sub-TLV is interpreted as if Start.VLAN was 0x001 . If Start.VLAN is not equal to VLAN.end and VLAN.end is 0xFFF , the sub-TLV is interpreted as if VLAN.end was 0xFFE . If VLAN.end is less than Start.VLAN , the sub-TLV is ignored . If both Start.VLAN and VLAN.end are 0x000 or both are 0xFFF , the sub-TLV is ignored . The values 0x000 or 0xFFF are not valid VLAN IDs , and a port cannot be enabled for them . 	240	0
7176	Start.VLAN	o Start.VLAN , End.VLAN : This VLAN ID range is inclusive . Setting both Start.VLAN and VLAN.end to the same value indicates a range of one VLAN ID . If Start.VLAN is not equal to VLAN.end and Start.VLAN is 0x000 , the sub-TLV is interpreted as if Start.VLAN was 0x001 . If Start.VLAN is not equal to VLAN.end and VLAN.end is 0xFFF , the sub-TLV is interpreted as if VLAN.end was 0xFFE . If VLAN.end is less than Start.VLAN , the sub-TLV is ignored . If both Start.VLAN and VLAN.end are 0x000 or both are 0xFFF , the sub-TLV is ignored . The values 0x000 or 0xFFF are not valid VLAN IDs , and a port cannot be enabled for them . 	240	0
7176	End.VLAN	o Start.VLAN , End.VLAN : This VLAN ID range is inclusive . Setting both Start.VLAN and VLAN.end to the same value indicates a range of one VLAN ID . If Start.VLAN is not equal to VLAN.end and Start.VLAN is 0x000 , the sub-TLV is interpreted as if Start.VLAN was 0x001 . If Start.VLAN is not equal to VLAN.end and VLAN.end is 0xFFF , the sub-TLV is interpreted as if VLAN.end was 0xFFE . If VLAN.end is less than Start.VLAN , the sub-TLV is ignored . If both Start.VLAN and VLAN.end are 0x000 or both are 0xFFF , the sub-TLV is ignored . The values 0x000 or 0xFFF are not valid VLAN IDs , and a port cannot be enabled for them . 	240	0
7176	Type	o Type : MT-Port-Cap-TLV sub-TLV type , set to 7 ( PORT-TRILL-VER ). 	240	0
7176	Length	o Max-version : A one-byte unsigned integer set to the maximum version supported . 	220	0
7176	Type	o Type : sub-TLV type , set to MT-Port-Cap-TLV VLANS-Appointed sub-TLV 8 . 	240	0
7176	Length	o RESV : 4 reserved bits that MUST be sent as zero and ignored on receipt . 	500	0
7176	RESV	o RESV : 4 reserved bits that MUST be sent as zero and ignored on receipt . 	500	0
7176	Start VLAN ID	o Start VLAN ID : The 12-bit VLAN ID that is represented by the high - order bit of the first byte of the VLAN bit-map . 	230	0
7176	Type	o Type : Router Capability sub-TLV type , set to 13 ( TRILL-VER ). 	231	0
7176	Length	o Max-version : A one-byte unsigned integer set to the maximum version supported . 	220	0
7176	Type	o Type : Router Capability and MT-Capability sub-TLV type , set to 6 ( NICKNAME ). 	240	0
7176	Length	o Nickname.Pri : An 8-bit unsigned integer priority to hold a nickname as specified in Section 3.7.3 of [ RFC6325 ]. 	230	0
7176	Nickname.Pri	o Nickname.Pri : An 8-bit unsigned integer priority to hold a nickname as specified in Section 3.7.3 of [ RFC6325 ]. 	231	0
7176	Tree Root Priority	o Tree Root Priority : This is an unsigned 16-bit integer priority to be a tree root as specified in Section 4.5 of [ RFC6325 ]. 	230	0
7176	Nickname	o Nickname : This is an unsigned 16-bit integer as specified in Section 3.7 of [ RFC6325 ]. 	231	0
7176	Type	o Type : Router Capability and MT-Capability sub-TLV type , set to 7 ( TREES ). 	240	0
7176	Length	o Number of trees to compute : An unsigned 16-bit integer as specified in Section 4.5 of [ RFC6325 ]. 	100	0
7176	Number of trees to compute	o Number of trees to compute : An unsigned 16-bit integer as specified in Section 4.5 of [ RFC6325 ]. 	100	0
7176	Maximum trees able to compute	o Maximum trees able to compute : An unsigned 16-bit integer as specified in Section 4.5 of [ RFC6325 ]. 	400	0
7176	Number of trees to use	o Number of trees to use : An unsigned 16-bit integer as specified in Section 4.5 of [ RFC6325 ]. 	400	0
7176	Type	o Type : Router Capability and MT-Capability sub-TLV type , set to 8 ( TREE-RT-IDs ). 	231	0
7176	Length	o Starting Tree Number : This identifies the starting tree number of the nicknames that are trees for the domain . This is set to 1 for the sub-TLV containing the first list . Other Tree-Identifiers sub-TLVs will have the number of the starting list they contain . In the event the same tree identifier can be computed from two such sub-TLVs and they are different , then it is assumed that this is a transient condition that will get cleared . During this transient time , such a tree SHOULD NOT be computed unless such computation is indicated by all relevant sub-TLVs present . 	240	0
7176	Starting Tree Number	o Starting Tree Number : This identifies the starting tree number of the nicknames that are trees for the domain . This is set to 1 for the sub-TLV containing the first list . Other Tree-Identifiers sub-TLVs will have the number of the starting list they contain . In the event the same tree identifier can be computed from two such sub-TLVs and they are different , then it is assumed that this is a transient condition that will get cleared . During this transient time , such a tree SHOULD NOT be computed unless such computation is indicated by all relevant sub-TLVs present . 	231	0
7176	Nickname	o Nickname : The nickname at which a distribution tree is rooted . 	231	0
7176	Type	o Type : Router Capability and MT-Capability sub-TLV type , set to 10 ( INT-VLAN ). 	231	0
7176	Length	o Nickname : As specified in [ RFC6325 ], Section 4.2.4.4 , this field may be used to associate a nickname held by the originating IS with the VLAN range indicated . When not used in this way , it is set to zero . 	231	0
7176	Nickname	o Nickname : As specified in [ RFC6325 ], Section 4.2.4.4 , this field may be used to associate a nickname held by the originating IS with the VLAN range indicated . When not used in this way , it is set to zero . 	231	0
7176	Interested VLANS	o Interested VLANS : The Interested VLANs field is formatted as shown below . 	400	0
7176	Appointed Forwarder Status Lost Counter	o Appointed Forwarder Status Lost Counter : This is a count of how many times a port that was Appointed Forwarder for the VLANs in the range given has lost the status of being an Appointed Forwarder for some port as discussed in Section 4.8.3 of [ RFC6325 ]. It is initialized to zero at an IS when the zeroth LSP sequence number is initialized . No special action need be taken at rollover; the counter just wraps around . 	240	0
7176	Root Bridges	o Root Bridges : The list of zero or more spanning tree root bridge IDs is the set of root bridge IDs seen for all ports for which the IS is Appointed Forwarder for the VLANs in the specified range as discussed in [ RFC6325 ], Section 4.9.3.2 . While , of course , at most one spanning tree root could be seen on any particular port , there may be multiple ports in the same VLANs connected to different bridged LANs with different spanning tree roots . 	231	0
7176	Type	o Type : Router Capability and MT-Capability sub-TLV type , set to 14 ( VLAN-GROUP ). 	231	0
7176	Length	o Length : 4 + 2*n , where n is the number of secondary VLAN ID fields beyond the first . n MAY be zero . 	100	0
7176	RESV	o RESV : a 4-bit field that MUST be sent as zero and ignored on receipt . 	500	0
7176	Primary VLAN ID	o Secondary VLAN ID : This identifies a secondary VLAN in the VLAN Group . 	231	0
7176	Secondary VLAN ID	o Secondary VLAN ID : This identifies a secondary VLAN in the VLAN Group . 	231	0
7176	Interested Labels	An IS that can handle fine-grained labeling [ RFC7172 ] announces its fine-grained label connectivity and related information in the Interested Labels and Spanning Tree Roots sub-TLV ( INT-LABEL ). It is a variation of the Interested VLANs and Spanning Tree Roots sub-TLV ( INT-VLAN ) and is structured as follows . 	400	0
7176	Type	o Type : Router Capability and MT-Capability sub-TLV type , set to 15 ( INT-LABEL ). 	231	0
7176	Length	o Nickname : This field may be used to associate a nickname held by the originating IS with the Interested Labels indicated . When not used in this way , it is set to zero . 	210	0
7176	Nickname	o Nickname : This field may be used to associate a nickname held by the originating IS with the Interested Labels indicated . When not used in this way , it is set to zero . 	302	0
7176	Interested Labels	o Interested Labels : The Interested Labels field is seven bytes long and formatted as shown below . 	400	0
7176	Appointed Forwarder Status Lost Counter	o Appointed Forwarder Status Lost Counter : This is a count of how many times a port that was Appointed Forwarder for a VLAN mapping to the fine-grained label in the range or bit-map given has lost the status of being an Appointed Forwarder as discussed in Section 4.8.3 of [ RFC6325 ]. It is initialized to zero at an IS when the zeroth LSP sequence number is initialized . No special action need be taken at rollover; the counter just wraps around . 	240	0
7176	Root Bridges	o Root Bridges : The list of zero or more spanning tree root bridge IDs is the set of root bridge IDs seen for all ports for which the IS is Appointed Forwarder for a VLAN mapping to the fine-grained label in the specified range or bit-map . ( See [ RFC6325 ], Section 4.9.3.2 .) While , of course , at most one spanning tree root could be seen on any particular port , there may be multiple relevant ports connected to different bridged LANs with different spanning tree roots . 	230	0
7176	Type	o Type : Router Capability and MT-Capability RBridge Channel Protocols sub-TLV , set to 16 ( RBCHANNELS ). 	240	0
7176	Length	o Bit Vectors : Zero or more byte-aligned bit vectors where a one bit indicates support of a particular RBridge Channel protocol . Each byte-aligned bit vector is formatted as follows : 	400	0
7176	Type	o Type : Router Capability and MT-Capability sub-TLV type , set to 17 ( AFFINITY ). 	240	0
7176	Length	o Length : size of all Affinity Records included , where an Affinity Record listing n tree roots is 4+2*n bytes long . 	100	0
7176	Nickname	o Nickname : 16-bit nickname of the IS whose associations to the multi-destination trees listed in the Affinity Record are through the originating IS . 	231	0
7176	Affinity Flags	o Affinity Flags : 8 bits reserved for future needs to provide additional information about the affinity being announced . MUST be sent as zero and ignored on receipt . 	500	0
7176	Number of trees	o Number of trees : A one-byte unsigned integer giving the number of trees for which affinity is being announced by this Affinity Record . 	100	0
7176	Type	o Type : Router Capability and MT-Capability sub-TLV type , set to 18 ( LABEL-GROUP ). 	231	0
7176	Length	o Length : 6 + 3*n , where n is the number of secondary VLAN ID fields beyond the first . n MAY be zero . 	100	0
7176	Primary Label ID	o Secondary Label ID : This identifies a secondary Label ID in the Label Group . 	231	0
7176	Secondary Label ID	o Secondary Label ID : This identifies a secondary Label ID in the Label Group . 	231	0
7176	Type	o Type : Extended Reachability and MT-ISN sub-TLV type , set to MTU sub-TLV 28 . 	240	0
7176	Length	o F : Failed . This bit is a one if MTU testing failed on this link at the required campus-wide MTU . 	210	0
7176	F	o F : Failed . This bit is a one if MTU testing failed on this link at the required campus-wide MTU . 	210	0
7176	RESV	o MTU : This field is set to the largest successfully tested MTU size for this link or zero if it has not been tested , as specified in Section 4.3.2 of [ RFC6325 ]. 	400	0
7176	MTU	o MTU : This field is set to the largest successfully tested MTU size for this link or zero if it has not been tested , as specified in Section 4.3.2 of [ RFC6325 ]. 	400	0
7176	Type	o Length : 1 + ( SIZE+3)*n , where n is the number of neighbor records , which may be zero . 	100	0
7176	Length	o Length : 1 + ( SIZE+3)*n , where n is the number of neighbor records , which may be zero . 	100	0
7176	S	o S : Smallest flag . If this bit is a one , then the list of neighbors includes the neighbor with the smallest MAC address considered as an unsigned integer . 	231	0
7176	L	o L : Largest flag . If this bit is a one , then the list of neighbors includes the neighbor with the largest MAC address considered as an unsigned integer . 	231	0
7176	R	o R , RESV : These bits are reserved and MUST be sent as zero and ignored on receipt . 	500	0
7176	RESV	o R , RESV : These bits are reserved and MUST be sent as zero and ignored on receipt . 	500	0
7176	SIZE	o SIZE : The SNPA size as an unsigned integer in bytes except that 6 is encoded as zero . An actual size of zero is meaningless and cannot be encoded . The meaning of the value 6 in this field is reserved , and TRILL Neighbor TLVs received with a SIZE of 6 are ignored . The SIZE is inherent to the technology of a link and is fixed for all TRILL Neighbor TLVs on that link but may vary 	400	0
7176	F	o F : Failed . This bit is a one if MTU testing to this neighbor failed at the required campus-wide MTU ( see [ RFC6325 ], Section 4.3.1 ). 	302	0
7176	O	o O : OOMF . This bit is a one if the IS sending the enclosing TRILL Neighbor TLV is willing to offer the Overload Originated Multi - destination Frame ( OOMF ) service [ RFC7180 ] to the IS whose port has the SNPA in the enclosing Neighbor RECORD . 	210	0
7176	MTU	o MTU : This field is set to the largest successfully tested MTU size for this neighbor or to zero if it has not been tested . 	400	0
7178	CHV	CHV - Channel Header Version 	220	0
7178	RBridge Channel Header	As shown in Figure 2 , the RBridge Channel Header starts with the RBridge-Channel Ethertype ( see Section 7.2 ). Following that is a four-byte quantity with four sub-fields as follows : 	400	0
7178	CHV	CHV : A 4-bit field that gives the RBridge Channel Header Version . This document specifies version zero . 	220	0
7178	Channel Protocol	Channel Protocol : A 12-bit unsigned integer that specifies the particular RBridge Channel protocol to which the message applies . 	231	0
7178	Flags	ERR : A 4-bit unsigned integer used in connection with error reporting at the RBridge Channel level as described in Section 3 . 	231	0
7178	ERR	ERR : A 4-bit unsigned integer used in connection with error reporting at the RBridge Channel level as described in Section 3 . 	231	0
7181	Hop Limit	The parameter TC_HOP_LIMIT is the hop limit set in each TC message . TC_HOP_LIMIT MAY be a single fixed value or MAY be different in TC messages sent by the same router . However , each other router , at any hop count distance , MUST see a regular pattern of TC messages in order that meaningful values of TLVs with Type = INTERVAL_TIME and Type = VALIDITY_TIME at each hop count distance can be included as defined in [ RFC5497 ]. Thus , the pattern of TC_HOP_LIMIT MUST be 	301	0
7181	NBR_ADDR_TYPE	Note : This section does not require any IANA action , as the required information is included in the descriptions of the MPR and NBR_ADDR_TYPE Address Block TLVs allocated in Section 24.5 . This information is recorded here for clarity and for use elsewhere in this specification . 	400	0
7212	Version	Version ( 4 bits ): Protocol version . This is set to zero . 	220	0
7212	Reserved	Message Length ( 16 bits ): Size in octets of this message , i.e ., of the portion of the packet following the Associated Channel Header . 	100	0
7212	Message Length	Message Length ( 16 bits ): Size in octets of this message , i.e ., of the portion of the packet following the Associated Channel Header . 	100	0
7212	Message Identifier	Message Identifier ( MI ) ( 32 bits ): Unique identifier of this message . For disambiguation , a sender MUST NOT reuse an MI over a given channel until it is confident that all ADBs associated with it have been expired by the receiver . The sole purpose of this field is duplicate detection in the event of a message burst ( Section 5.1 ). 	231	0
7212	Timestamp	Timestamp : 64-bit Network Time Protocol ( NTP ) transmit timestamp , as specified in Section 6 of [ RFC5905 ]. 	121	0
7212	Application ID	Application ID ( 16 bits ): Identifies the application this element describes; an IANA registry has been created to track the values for this field . More than one block element with the same Application ID may be present in the same ADB , and block elements with different Application IDs may also be present in the same ADB . The protocol rules for the mechanism , including what ADB elements are present and which TLVs are contained in an ADB element , are to be defined in the document that specifies the application-specific usage . 	230	0
7212	Element Length	Element Length ( 16 bits ): Specifies the total length in octets of this block element ( including the Application ID and Element Length fields ). 	100	0
7212	Type	Type ( 8 bits ): Identifies the TLV Object and is scoped to a specific application; each application creates an IANA registry to track its Type values . 	231	0
7212	Reserved	Length ( 16 bits ): The length in octets of the Value field . The Value field need not be padded to provide alignment . 	100	0
7212	Length	Length ( 16 bits ): The length in octets of the Value field . The Value field need not be padded to provide alignment . 	100	0
7222	Type	o Length : 8-bit unsigned integer indicating the length of the option in octets , excluding the Type and Length fields . 	100	0
7222	Length	o Length : 8-bit unsigned integer indicating the length of the option in octets , excluding the Type and Length fields . 	100	0
7222	TC	o Traffic Class ( TC ): Traffic Class consists of a 6-bit DSCP field followed by a 2-bit reserved field . 	400	0
7222	Reserved	The last two bits in the Traffic Class field are currently unused . These bits MUST be initialized by the sender to ( 0 ) and MUST be ignored by the receiver . 	500	0
7222	OC	o Operational Code ( OC ): 1-octet Operational code indicates the type of QoS request . 	231	0
7222	Reserved	Reserved : ( 6 ) to ( 255 ) Currently not used . Receiver MUST ignore the option received with any value in this range . 	500	0
7222	Reserved	o Reserved : This field is unused for now . The value MUST be initialized to a value of ( 0 ) by the sender and MUST be ignored by the receiver . 	500	0
7222	Type	o Type : 8-bit unsigned integer indicating the type of the QoS attribute . This specification reserves the following values . 	231	0
7222	Length	o Length : 8-bit unsigned integer indicating the number of octets needed to encode the Value , excluding the Type and Length fields . 	100	0
7222	Value	o Value : The format of this field is based on the Type value . 	240	0
7222	Type	o Length : The length in octets of the attribute , excluding the Type and Length fields . This value is set to ( 6 ). 	100	0
7222	Length	o Length : The length in octets of the attribute , excluding the Type and Length fields . This value is set to ( 6 ). 	100	0
7222	Reserved	o Reserved : This field is unused for now . The value MUST be initialized by the sender to 0 and MUST be ignored by the receiver . 	500	0
7222	Type	o Length : The length in octets of the attribute , excluding the Type and Length fields . This value is set to ( 6 ). 	100	0
7222	Length	o Length : The length in octets of the attribute , excluding the Type and Length fields . This value is set to ( 6 ). 	100	0
7222	Reserved	o Reserved : This field is unused for now . The value MUST be initialized by the sender to 0 and MUST be ignored by the receiver . 	500	0
7222	Type	o Length : The length of the attribute in octets , excluding the Type and Length fields . This value is set to ( 6 ). 	100	0
7222	Length	o Length : The length of the attribute in octets , excluding the Type and Length fields . This value is set to ( 6 ). 	100	0
7222	S	o Service ( S ) flag : This flag is used for extending the scope of the target flows for Per-Session-Agg-Max-DL-Bit-Rate to the mobile node's other mobility sessions sharing the same Service Identifier . 3GPP Access Point Name ( APN ) is an example of a Service Identifier , and that identifier is carried using the Service Selection mobility option [ RFC5149 ]. 	231	0
7222	E	o Exclude ( E ) flag : This flag is used to request that the downlink flows for which the network is providing Guaranteed-Bit-Rate service be excluded from the target IP flows for which Per - Session-Agg-Max-DL-Bit-Rate is measured . 	210	0
7222	Reserved	o Reserved : This field is unused for now . The value MUST be initialized by the sender to 0 and MUST be ignored by the receiver . 	500	0
7222	Type	o Length : The length of the attribute in octets , excluding the Type and Length fields . This value is set to ( 6 ). 	100	0
7222	Length	o Length : The length of the attribute in octets , excluding the Type and Length fields . This value is set to ( 6 ). 	100	0
7222	S	o Service ( S ) flag : This flag is used for extending the scope of the target flows for Per-Session-Agg-Max-UL-Bit-Rate to the mobile node's other mobility sessions sharing the same Service Identifier . 3GPP Access Point Name ( APN ) is an example of a Service Identifier , and that identifier is carried using the Service Selection mobility option [ RFC5149 ]. 	240	0
7222	E	o Exclude ( E ) flag : This flag is used to request that the uplink flows for which the network is providing Guaranteed-Bit-Rate service be excluded from the target IP flows for which Per - Session-Agg-Max-UL-Bit-Rate is measured . 	210	0
7222	Reserved	o Reserved : This field is unused for now . The value MUST be initialized by the sender to 0 and MUST be ignored by the receiver . 	500	0
7222	Type	o Length : The length of the attribute in octets , excluding the Type and Length fields . This value is set to ( 2 ). 	100	0
7222	Length	o Length : The length of the attribute in octets , excluding the Type and Length fields . This value is set to ( 2 ). 	100	0
7222	Reserved	o Reserved : This field is unused for now . The value MUST be initialized by the sender to 0 and MUST be ignored by the receiver . 	500	0
7222	Type	o Length : The length of the attribute in octets , excluding the Type and Length fields . This value is set to ( 6 ). 	100	0
7222	Length	o Length : The length of the attribute in octets , excluding the Type and Length fields . This value is set to ( 6 ). 	100	0
7222	Reserved	o Reserved : This field is unused for now . The value MUST be initialized by the sender to 0 and MUST be ignored by the receiver . 	500	0
7222	Type	o Length : The length of the attribute in octets , excluding the Type and Length fields . This value is set to ( 6 ). 	100	0
7222	Length	o Length : The length of the attribute in octets , excluding the Type and Length fields . This value is set to ( 6 ). 	100	0
7222	Reserved	o Reserved : This field is unused for now . The value MUST be initialized by the sender to 0 and MUST be ignored by the receiver . 	500	0
7222	Type	o Length : The length of the attribute in octets , excluding the Type and Length fields . This value is set to ( 6 ). 	100	0
7222	Length	o Length : The length of the attribute in octets , excluding the Type and Length fields . This value is set to ( 6 ). 	100	0
7222	Reserved	o Reserved : This field is unused for now . The value MUST be initialized by the sender to 0 and MUST be ignored by the receiver . 	500	0
7222	Type	o Length : The length of the attribute in octets , excluding the Type and Length fields . This value is set to ( 6 ). 	100	0
7222	Length	o Length : The length of the attribute in octets , excluding the Type and Length fields . This value is set to ( 6 ). 	100	0
7222	Reserved	o Reserved : This field is unused for now . The value MUST be initialized by the sender to 0 and MUST be ignored by the receiver . 	500	0
7222	Type	o Length : The length of the attribute in octets , excluding the Type and Length fields . 	100	0
7222	Length	o Length : The length of the attribute in octets , excluding the Type and Length fields . 	100	0
7222	Reserved	o Reserved : This field is unused for now . The value MUST be initialized by the sender to 0 and MUST be ignored by the receiver . 	500	0
7222	TS Format	o TS Format : An 8-bit unsigned integer indicating the Traffic Selector Format . The values are allocated from the " Traffic Selector Format " namespace for the traffic selector sub-option defined in [ RFC6089 ]; those defined in [ RFC6089 ] are repeated here for clarity . Value ( 0 ) is reserved and MUST NOT be used . When the value of the TS Format field is set to ( 1 ), the format that follows is the IPv4 Binary Traffic Selector specified in Section 3.1 of [ RFC6088 ], and when the value of TS Format field is set to ( 2 ), the format that follows is the IPv6 Binary Traffic Selector specified in Section 3.2 of [ RFC6088 ]. 	231	0
7222	Type	o Length : The length of the attribute in octets , excluding the Type and Length fields . 	100	0
7222	Length	o Length : The length of the attribute in octets , excluding the Type and Length fields . 	100	0
7222	Reserved	o Reserved : This field is unused for now . The value MUST be initialized by the sender to 0 and MUST be ignored by the receiver . 	500	0
7222	Vendor ID	o Vendor ID : The Vendor ID is the SMI ( Structure of Management Information ) Network Management Private Enterprise Code of the IANA-maintained " Private Enterprise Numbers " registry [ SMI ]. 	231	0
7222	SR-ID	( OC=ALLOCATE , SR-ID , QoS attributes , etc .). The equivalent QoS treatment is provided by the Wi-Fi AP toward the MN on the Wi-Fi link . 	231	0
7222	E	( E ): AP may enforce uplink QoS rules according to priority class set by the MN ( F ): MAG can enforce a default QoS class until the local mobility anchor classifies the new flow ( notified with PBA ) or the mobile access gateway classifies new flow and proposes the associated QoS class to the local mobility anchor for validation ( proposed with PBU , notification of validation result with PBA ) 	231	0
7225	Option Code	o Reserved : This field is initialized as specified in Section 7.3 of [ RFC6887 ]. 	400	0
7225	Reserved	o Reserved : This field is initialized as specified in Section 7.3 of [ RFC6887 ]. 	400	0
7225	Option Length	o Option Length : Indicates in octets the length of the enclosed data . 	100	0
7225	Prefix64 Length	o Prefix64 Length : Indicates in octets the length of the Pref64::/n . The allowed values are specified in [ RFC6052 ] ( i.e ., 4 , 5 , 6 , 7 , 8 , or 12 ). 	100	0
7242	flags	flags : A one-byte field containing optional connection flags . The first four bits are unused and MUST be set to zero upon transmission and MUST be ignored upon reception . The last four bits are interpreted as shown in Table 1 below . 	500	0
7242	type	type : Indicates the type of the message as per Table 2 below 	231	0
7242	flags	flags : Optional flags defined based on message type . 	231	0
7243	BT	Block Type ( BT ): 8 bits . A Bytes Discarded Packets Report Block is identified by the constant 26 . 	400	0
7243	I	Interval Metric flag ( I ): 2 bits . It is used to indicate whether the discard metric is an Interval or a Cumulative metric , that is , whether the reported value applies to the most recent measurement 	210	0
7243	E	Early bit ( E ): It is introduced to distinguish between packets discarded due to early arrival and those discarded due to late arrival . The E bit is set to ' 1 ' if it reports bytes discarded due to early arrival and is set to ' 0 ' if it reports bytes discarded due to late arrival . If a duplicate packet is received and discarded , these duplicate packets are ignored and not reported . In case both early and late discarded packets shall be reported , two Bytes Discarded report blocks MUST be included . 	210	0
7243	Reserved	Reserved : 5 bits . This field is reserved for future definition . In the absence of such definition , the bits in this field MUST be set to zero and MUST be ignored by the receiver . 	500	0
7243	Block length	Block length : 16 bits . It MUST be set to 2 , in accordance with the definition of this field in [ RFC3611 ]. The block MUST be discarded if the block length is set to a different value . 	100	0
7243	Number of RTP payload bytes discarded	Number of RTP payload bytes discarded : It is a 32-bit unsigned integer value indicating the total number of bytes discarded . The ' bytes discarded ' corresponds to the RTP payload size of every RTP packet that is discarded ( due to early or late arrival ). Hence , the ' bytes discarded ' ignores the size of any RTP header extensions and the size of the padding bits . Also the discarded packet is associated to the interval in which it was discarded , not when it was expected . 	100	0
7244	BT	The RTP Flow Initial Synchronization Delay Metrics Block is identified by the constant 27 . 	231	0
7244	Reserved	This field is reserved for future definition . In the absence of such a definition , the bits in this field MUST be set to zero and ignored by the receiver . 	500	0
7244	Block length	The constant 2 , in accordance with the definition of this field in Section 3 of RFC 3611 [ RFC3611 ]. 	302	0
7244	SSRC of source	The SSRC of the media source SHALL be set to the value of the SSRC identifier carried in any arbitrary component of RTP sessions belonging to the same multimedia session . 	231	0
7244	Initial Synchronization Delay	The average delay , expressed in units of 1/65536 seconds , from the beginning of the multimedia session [ RFC6051 ] to the time when RTCP packets are received on all of the component RTP sessions . It is recommended that the beginning of the multimedia session is 	121	0
7244	BT	The RTP Flow General Synchronization Offset Metrics Block is identified by the constant 28 . 	231	0
7244	I	This field is used to indicate whether the Burst/Gap Discard Summary Statistics metrics are Sampled , Interval , or Cumulative metrics : 	210	0
7244	Reserved	This field is reserved for future definition . In the absence of such a definition , the bits in this field MUST be set to zero and MUST be ignored by the receiver . 	500	0
7244	Block length	The constant 3 , in accordance with the definition of this field in Section 3 of RFC 3611 [ RFC3611 ]. 	200	0
7244	SSRC of Source	The SSRC of the media source SHALL be set to the value of the SSRC identifier of the reporting RTP stream to which the XR relates . 	231	0
7246	RD	RD : Route Distinguisher , an identifier that makes a route unique in the context of a VRF . 	230	0
7246	Type	Type : 250 	220	0
7246	Length	Length : 16 	100	0
7246	Source	Source : IPv4 multicast source address , 4 octets . 	230	0
7246	Group	Group : IPv4 multicast group address , 4 octets . 	230	0
7246	RD	RD : Route Distinguisher , 8 octets . 	100	0
7246	Type	Type : 251 	220	0
7246	Length	Length : 40 	100	0
7246	Source	Source : IPv6 multicast source address , 16 octets . 	230	0
7246	Group	Group : IPv6 multicast group address , 16 octets . 	230	0
7246	RD	RD : Route Distinguisher , 8 octets . 	100	0
7246	Type	Type : 9 	240	0
7246	Length	Mask Len : The number of contiguous one bits that are left justified and used as a mask , 1 octet . 	231	0
7246	Mask Len	Mask Len : The number of contiguous one bits that are left justified and used as a mask , 1 octet . 	231	0
7246	RP	RP : Rendezvous Point ( RP ) IPv4 address used for the encoded Group , 4 octets . 	230	0
7246	Group	Group : IPv4 multicast group address , 4 octets . 	230	0
7246	RD	RD : Route Distinguisher , 8 octets . 	100	0
7246	Type	Type : 10 	220	0
7246	Length	Mask Len : The number of contiguous one bits that are left justified and used as a mask , 1 octet . 	231	0
7246	Mask Len	Mask Len : The number of contiguous one bits that are left justified and used as a mask , 1 octet . 	231	0
7246	RP	RP : Rendezvous Point ( RP ) IPv6 address used for the encoded group , 16 octets . 	230	0
7246	Group	Group : IPv6 multicast group address , 16 octets . 	230	0
7246	RD	RD : Route Distinguisher , 8 octets . 	100	0
7252	Ver	Version ( Ver ): 2-bit unsigned integer . Indicates the CoAP version number . Implementations of this specification MUST set this field to 1 ( 01 binary ). Other values are reserved for future versions . Messages with unknown version numbers MUST be silently ignored . 	220	0
7252	T	Type ( T ): 2-bit unsigned integer . Indicates if this message is of type Confirmable ( 0 ), Non-confirmable ( 1 ), Acknowledgement ( 2 ), or Reset ( 3 ). The semantics of these message types are defined in Section 4 . 	240	0
7252	TKL	Token Length ( TKL ): 4-bit unsigned integer . Indicates the length of the variable-length Token field ( 0-8 bytes ). Lengths 9-15 are reserved , MUST NOT be sent , and MUST be processed as a message format error . 	100	0
7252	Code	Code : 8-bit unsigned integer , split into a 3-bit class ( most significant bits ) and a 5-bit detail ( least significant bits ), documented as " c.dd " where " c " is a digit from 0 to 7 for the 3-bit subfield and " dd " are two digits from 00 to 31 for the 5-bit subfield . The class can indicate a request ( 0 ), a success response ( 2 ), a client error response ( 4 ), or a server error response ( 5 ). ( All other class values are reserved .) As a special case , Code 0.00 indicates an Empty message . In case of a request , the Code field indicates the Request Method; in case of a response , a Response Code . Possible values are maintained in the CoAP Code Registries ( Section 12.1 ). The semantics of requests and responses are defined in Section 5 . 	231	0
7252	Message ID	Message ID : 16-bit unsigned integer in network byte order . Used to detect message duplication and to match messages of type Acknowledgement/Reset to messages of type Confirmable/Non - confirmable . The rules for generating a Message ID and matching messages are defined in Section 4 . 	301	0
7252	GET	The GET method retrieves a representation for the information that currently corresponds to the resource identified by the request URI . If the request includes an Accept Option , that indicates the preferred content-format of a response . If the request includes an ETag Option , the GET method requests that ETag be validated and that the representation be transferred only if validation failed . Upon success , a 2.05 ( Content ) or 2.03 ( Valid ) Response Code SHOULD be present in the response . 	400	0
7252	GET	The GET method requests the proxy to return a representation of the HTTP resource identified by the request URI . 	303	0
7252	GET	The GET method requests the proxy to return a representation of the CoAP resource identified by the Request-URI . 	303	0
7256	Multicast-Service-Profile-Name TLV	o Multicast-Service-Profile-Name TLV ( defined in Section 5.2 ). This TLV associates a Multicast Service Profile with the access line specified by the extension block and , in the case of white and black lists , delegates conditional access to the AN for the specified access line and channels . 	400	0
7256	Target TLV	o Target TLV : The Target TLV is defined in Section 4.3 of [ RFC6320 ]. It MUST appear once and only once . It is encoded as specified in [ RFC6320 ] or extensions and identifies the AN port subject to the request for admission or release . 	400	0
7256	Accounting	o Accounting : Meaningful only when the Command Code is " Add " ( 1 ). In that case , 0 indicates flow accounting is disabled , and 1 indicates that octet accounting for the flow is requested . The sender MUST set the Accounting field to 0 , and the receiver MUST ignore the Accounting field for other Command Code values . 	210	0
7256	Reserved	o Reserved : Reserved for future use . MUST be set to zeroes by the sender and ignored by the receiver . 	500	0
7256	Other embedded TLV data	o Other embedded TLV data : No other embedded TLVs are currently specified within the Multicast Replication Control message and Command TLV . However , see the description of the Multicast Admission Control message ( Section 4.4 ). Unrecognized embedded TLVs SHOULD be silently discarded . 	400	0
7256	x	0x64 Command error . 	302	0
7256	x	0x65 Invalid flow address . 	230	0
7256	x	0x66 Multicast flow does not exist . 	240	0
7256	Target TLV	o Target TLV : The Target TLV is defined in [ RFC6320 ]. It MUST appear once and only once in the Multicast Admission Control message . It is encoded as specified in [ RFC6320 ] or extensions and identifies the AN port subject to the request for admission or release . 	400	0
7256	x	Where detected : control application at the receiver of the Bandwidth Reallocation Request message . 	400	0
7256	x	0x68 Inconsistent views of delegated bandwidth amount . 	240	0
7256	x	0x69 Bandwidth request conflict . 	240	0
7256	Target TLV	o Target TLV(s ). The Target TLV MUST appear once per AN port on which the multicast flow identified in the preceding Multicast - Flow TLV is active . 	400	0
7256	TLV Length	o Multicast-Service-Profile-Name TLV : described in Section 5.2 . The Multicast-Service-Profile-Name TLV MUST contain an identifier that is unique over all profiles provisioned to the same AN partition . This identifier will be used to refer to the profile when activating it for a given target within a Port Management message ( see Section 4.2 ). 	230	0
7256	Multicast-Service-Profile-Name TLV	The Multicast-Service-Profile-Name TLV carries the identifier of a multicast service profile provisioned on the AN . It is illustrated in Figure 8 . 	231	0
7256	TLV Length	o Multicast service profile identifier : an opaque sequence of octets identifying a specific multicast service profile . 	231	0
7256	Multicast service profile identifier	o Multicast service profile identifier : an opaque sequence of octets identifying a specific multicast service profile . 	231	0
7256	List-Action TLV	The List-Action TLV identifies multicast flows to be added to or removed from a list of white -, black -, or grey-listed flows . It is meaningful only in association with a Multicast-Service-Profile-Name TLV identifying the profile to which the List-Action TLV applies . Such an association can be achieved by placing both TLVs in the same base message payload or as embedded TLVs of another TLV such as the Multicast-Service-Profile TLV . The List-Action TLV is shown in Figure 9 . 	231	0
7256	TLV Length	o Operation : operation to be performed upon the white , black , or grey list identified by the List Type field within the profile identified by the associated Multicast-Service-Profile-Name embedded TLV . The possible values are : 	240	0
7256	Operation	o Operation : operation to be performed upon the white , black , or grey list identified by the List Type field within the profile identified by the associated Multicast-Service-Profile-Name embedded TLV . The possible values are : 	240	0
7256	List Type	o List Type : the list type being modified by this List-Action TLV . The possible values are 1 " White ", 2 " Black ", or 3 " Grey ". 	240	0
7256	Reserved	o Reserved : a sender MUST set this field to zeroes . A receiver MUST ignore the contents of this field . 	500	0
7256	Address Family	o Address Family : the IP version of the set of multicast flow fields that follow , encoded according to [ PIMreg ]. Possible values are 1 " IPv4 " or 2 " IPv6 ". Either an IPv4 list or an IPv6 list or both MAY be present in the List-Action TLV . 	240	0
7256	Number of flow fields	o Number of flow fields : the number of multicast flow fields of the given address family that follows . 	400	0
7256	TLV Length	o Sequence number : the sequence number of a specific entity within a series , where numbering starts from 1 for the first entity in the series . Represented as a 32-bit binary number , most significant bit first . 	200	0
7256	Sequence number	o Sequence number : the sequence number of a specific entity within a series , where numbering starts from 1 for the first entity in the series . Represented as a 32-bit binary number , most significant bit first . 	200	0
7256	TLV Length	o Delegated amount : the bandwidth amount delegated to the AN for admission of multicast video on a given port , kilobits per second . Represented as a 32-bit binary value , most significant bit first . 	100	0
7256	TLV Length	o TLV Length : 0 , since the TLV contains no data other than the TLV header . 	100	0
7256	TLV Length	o TLV Length : 0 , since the TLV contains no data other than the TLV header . 	100	0
7256	TLV Length	o Required amount : the minimum or maximum amount , depending on whether the sender is the AN or the NAS respectively , of delegated video bandwidth that is being requested , in kilobits per second . Represented as a 32-bit binary value , most significant bit first . 	400	0
7256	TLV Length	o Unicast address : IP address of the source of a multicast flow join request , in network byte order . 	230	0
7256	TLV Length	o TLV Length : either 6 octets ( MAC-48 or EUI-48 ) or 8 octets ( EUI - 64 ). 	100	0
7256	TLV Length	o Identifier value : local device identifier value , known to the AN and AAA . Given that the scope of the identifier is a single customer network , 32 bits is a more-than-sufficient numbering space . 	230	0
7256	Identifier value	o Identifier value : local device identifier value , known to the AN and AAA . Given that the scope of the identifier is a single customer network , 32 bits is a more-than-sufficient numbering space . 	230	0
7256	TLV Length	o TLV Length : ranges from a minimum of 8 ( for an ASM IPv4 flow ) upwards . Total length is 4 + 4*(Number of Source Addresses + 1 ) for IPv4 or 4 + 16*(Number of Source Addresses + 1 ) for IPv6 . 	100	0
7256	Flow Type	o Flow Type : 1 " Any-Source Multicast ( ASM )", 2 " Source-Specific Multicast ( SSM )". 	240	0
7256	Addr Family	o Addr Family : address family of the multicast source and group addresses , encoded in accordance with the IANA " PIM Address Family " registry ([ PIMreg ]). 1 indicates IPv4; 2 indicates IPv6 . 	240	0
7256	Number of Source Addresses	o Multicast Group Address : a multicast group address within the given address family . The group address MUST always be present . 	230	0
7256	Multicast Group Address	o Multicast Group Address : a multicast group address within the given address family . The group address MUST always be present . 	230	0
7256	TLV Length	o Buffering Time is a 32-bit unsigned integer containing a time value in milliseconds ( ms ). 	120	0
7256	TLV Length	o TLV Length : 4 octets plus the length of the Target TLV , including its header and any padding . 	100	0
7256	Target TLV	o Target TLV : identifies the access line to which this amount of multicast bandwidth is currently committed . 	400	0
7260	OAM Type	OAM Type : specifies the technology-specific OAM method . When carried in the LSP_REQUIRED_ATTRIBUTES object , if the requested OAM method is not supported at any given node an error MUST be generated : " OAM Problem/Unsupported OAM Type ". When carried in the LSP_ATTRIBUTES object , intermediate nodes not supporting the OAM Type pass the object forward unchanged as specified in [ RFC5420 ]. Ingress and egress nodes that support the OAM Configuration TLV but that do not support a specific OAM Type MUST respond with an error indicating " OAM Problem/Unsupported OAM Type ". 	231	0
7260	Length	Length : indicates the total length of the TLV in octets . The TLV MUST be zero-padded so that the TLV is 4-octet aligned . 	100	0
7266	BT	Block type ( BT ): 8 bits 	400	0
7266	I	This field is used to indicate whether the MOS Metrics are Sampled , Interval , or Cumulative [ RFC6792 ]: 	301	0
7266	Reserved	This field is reserved for future definition . In the absence of such a definition , the bits in this field MUST be set to zero and ignored by the receiver ( see RFC 6709 , Section 4.2 ). 	500	0
7266	Block Length	The length of this report block in 32-bit words , minus one . For the MOS Metrics Block , the block length is variable length . 	100	0
7266	SSRC of source	SSRC of source : 32 bits 	230	0
7266	S	This field is used to identify the segment type used in this report block . A zero identifies this as a single-channel audio/video per SSRC segment . Single channel means there is only one media stream carried in one RTP stream . The single-channel audio/video per SSRC segment can be used to report the MOS value associated with the media stream identified by SSRC . If there are multiple media streams and they want to use the single-channel audio/video per SSRC segment to report the MOS value , they should be carried in the separate RTP streams with each identified by different SSRC . In this case , multiple MOS Metrics Blocks are 	231	0
7266	CAID	The 8-bit CAID is the session specific reference to the calculation algorithm and associated qualifiers indicated in SDP ( see Section 4.1 ) and used to compute the MOS score for this segment . 	231	0
7266	PT	MOS Metrics reporting depends on the payload format in use . This field identifies the RTP payload type in use during the reporting interval . The binding between RTP payload types and RTP payload formats is configured via a signaling protocol , for example , an SDP offer/answer exchange . If the RTP payload type used is changed during an RTP session , separate reports SHOULD be sent for each RTP payload type , with corresponding measurement information blocks indicating the time period to which they relate . 	231	0
7266	MOS Value	The estimated mean opinion score ( MOS ) for multimedia application performance is estimated using an algorithm that includes the impact of delay , loss , jitter and other impairments that affect media quality . This is an unsigned fixed-point 7:9 value representing the MOS , allowing the MOS score up to 127 in the integer part . MOS ranges are defined as part of the specification of the MOS estimation algorithm ( Calculation Algorithm in this document ), and are normally ranges like 1-5 , 0-10 , or 0-100 . Two values are reserved : a value of 0xFFFE indicates that the measurement is out of range and a value of 0xFFFF indicates that the measurement is unavailable . Values outside of the range defined by the Calculation Algorithm , other than the two reserved values , MUST NOT be sent and MUST be ignored by the receiving system . 	231	0
7266	S	This field is used to identify the segment type used in this report block . A one identifies this as a multi-channel audio segment . 	231	0
7266	CAID	The 8-bit CAID is the session specific reference to the calculation algorithm and associated qualifiers indicated in SDP ( see Section 4.1 ) and used to compute the MOS score for this segment . 	231	0
7266	PT	Payload Type ( PT ): 7 bits 	400	0
7266	CHID	If multiple channels of audio are carried in one RTP stream , each channel of audio will be viewed as an independent channel ( e.g ., left channel audio , right channel audio ). This field is used to identify each channel carried in the same media stream . The default channel mapping follows static ordering rule described in Section 4.1 of [ RFC3551 ]. However , there are some payload formats that use different channel mappings , e.g ., AC-3 audio over RTP [ RFC4184 ] only follow AC-3 channel order scheme defined in [ ATSC ]. Enhanced AC-3 audio over RTP [ RFC4598 ] uses a dynamic channel transform mechanism . In order for the appropriate channel mapping to be determined , MOS metrics reports need to be tied to an RTP payload format . The reports should include the payload type of the reported media according to [ RFC6792 ], so that it can be used to determine the appropriate channel mapping . 	400	0
7266	MOS Value	The estimated MOS for multimedia application performance is defined as including the effects of delay , loss , discard , jitter and other effects that would affect media quality . This is an unsigned fixed-point 7:6 value representing the MOS , allowing the MOS score up to 127 in the integer part . MOS ranges are defined as part of the specification of the MOS estimation algorithm 	200	0
7268	Type	Type 	240	0
7268	Length	Length 	100	0
7268	Type	Type 	240	0
7268	Length	Length 	100	0
7268	Type	Type 	240	0
7268	Length	Length 	100	0
7268	Type	Type 	240	0
7268	Length	Length 	100	0
7268	Type	Type 	240	0
7268	Length	Length 	100	0
7268	Value	The Value field is four octets , containing a 32-bit unsigned integer . The two most significant octets MUST be set to zero by the sender and are ignored by the receiver; the two least significant octets contain the Mobility Domain Identifier ( MDID ) defined in Section 8.4.2.49 of [ IEEE-802.11 ]. 	301	0
7268	Type	Type 	240	0
7268	Length	Length 	100	0
7268	Value	The field is 4 octets , containing a 32-bit unsigned integer encoding the maximum time in seconds that pre-authentication state should be retained by the NAS . 	120	0
7268	Type	Type 	240	0
7268	Length	Length 	100	0
7268	Type	Type 	240	0
7268	Length	Length 	100	0
7268	Type	Type 	240	0
7268	Length	Length 	100	0
7268	Type	Type 	240	0
7268	Length	Length 	100	0
7268	Value	The Value field is four octets , containing a 32-bit unsigned integer . The two most significant octets MUST be set to zero by the sender , and are ignored by the receiver; the two least significant octets contain the Venue Group and Venue Type fields . 	500	0
7268	Venue Group	The Venue Group field is a single octet and describes the broad category of the venue , e.g ., " Assembly ". See Section 8.4.1.34 of [ IEEE-802.11 ] for Venue Group codes and descriptions . 	231	0
7268	Venue Type	The Venue Type field is a single octet and describes the venue in a finer granularity within the Venue Group , e.g ., " Library ". See Section 8.4.1.34 of [ IEEE-802.11 ] for Venue Type codes and descriptions . 	110	0
7268	Type	Type 	240	0
7268	Length	Length 	100	0
7268	Type	Type 	240	0
7268	Length	Length 	100	0
7268	Type	Type 	240	0
7268	Length	Length 	100	0
7268	Value	The Value field is four octets , containing a 32-bit unsigned integer . The two most significant octets MUST be set to zero by the sender and are ignored by the receiver; the two least significant octets contain the Reason Code values defined in Table 8-36 of Section 8.4.1.7 of [ IEEE-802.11 ]. 	302	0
7268	Type	Type 	240	0
7268	Length	Length 	100	0
7268	Value	The Value field is four octets , containing a 32-bit unsigned integer , in Suite selector format as specified in Figure 8-187 within Section 8.4.2.27.2 of [ IEEE-802.11 ], with values of OUI and Suite Type drawn from Table 8-99 . 	200	0
7268	Type	Type 	240	0
7268	Length	Length 	100	0
7268	Value	The Value field is four octets , containing a 32-bit unsigned integer , in Suite selector format as specified in Figure 8-187 within Section 8.4.2.27.2 of [ IEEE-802.11 ], with values of OUI and Suite Type drawn from Table 8-99 . 	200	0
7268	Type	Type 	240	0
7268	Length	Length 	100	0
7268	Value	The Value field is four octets , containing a 32-bit unsigned integer , in Suite selector format as specified in Figure 8-187 within Section 8.4.2.27.2 of [ IEEE-802.11 ], with values of OUI and Suite Type drawn from Table 8-101 : 	200	0
7268	Type	Type 	240	0
7268	Length	Length 	100	0
7268	Value	The Value field is four octets , containing a 32-bit unsigned integer , in Suite selector format as specified in Figure 8-187 within Section 8.4.2.27.2 of [ IEEE-802.11 ], with values of OUI and Suite Type drawn from Table 8-99 : 	200	0
7268	Type	Type 	240	0
7268	Length	Length 	100	0
7268	Value	The Value field is four octets , containing a 32-bit unsigned integer . The three most significant octets MUST be set to zero by the sender and are ignored by the receiver; the least significant octet contains the RF Band field , whose values are defined by the IEEE 802.11 Band ID field ( Table 8-53a of [ IEEE-802.11ad ]) 	301	0
7272	BT	Block Type ( BT ): 8 bits . It identifies the block format . Its value is set to 12 . 	302	0
7272	SPST	Synchronization Packet Sender Type ( SPST ): 4 bits . This field identifies the role of the packet sender for this specific Extended Report . It can have the following values , as enumerated in a registry maintained by IANA ( see Section 13.4 ): 	231	0
7272	Resrv	Reserved bits ( Resrv ): 3 bits . These bits are reserved for future definition . In the absence of such a definition , the bits in this field MUST be set to zero at transmission and MUST be ignored by the receiver . 	500	0
7272	P	Packet Presented NTP timestamp flag ( P ): 1 bit . Bit set to 1 if the Packet Presented NTP timestamp field contains a value , 0 if it is empty . If this flag is set to 0 , then the Packet Presented NTP timestamp SHALL be ignored by the receiver . 	210	0
7272	PT	Payload Type ( PT ): 7 bits . This field identifies the format of the media payload , according to [ RFC3551 ]. This is the payload type of the RTP packet reported upon . The PT field is needed in the case where the MSAS is neither the media server nor a receiver of the media stream , i.e ., it is implemented as a third-party entity . In such cases , the MSAS needs the PT to determine the rate of advancement of the timestamps of the RTP media stream to be able to relate reports from different SCs on different RTP timestamp values . 	400	0
7272	Resrv	Reserved bits ( Resrv ): 25 bits . These bits are reserved for future use and SHALL be set to 0 at transmission and MUST be ignored by the receiver . 	500	0
7272	Media Stream Correlation Identifier	Media Stream Correlation Identifier : 32 bits . This identifier is used to correlate synchronized media streams . The value 0 ( all bits are set " 0 ") indicates that this field is empty . The value 2^32-1 ( all bits are set " 1 ") is reserved for future use . If the RTCP Packet Sender is an SC ( SPST=1 ), then the Media Stream Correlation Identifier field contains the Synchronization Group Identifier ( SyncGroupId ) to which the report applies . 	210	0
7272	Packet Received RTP timestamp	Packet Received RTP timestamp : 32 bits . This timestamp has the value of the RTP timestamp carried in the RTP header [ RFC3550 ] of the RTP packet to which the XR IDMS relates . Several consecutive RTP packets will have equal timestamps if they are ( logically ) generated at once , e.g ., belong to the same video frame . It may well be the case that one receiver reports on the first RTP packet that has a certain RTP timestamp , and a second receiver reports on the last RTP packet that has that same RTP timestamp . This would lead to an error in the 	122	0
7272	Packet Presented NTP timestamp	Packet Presented NTP timestamp : 32 bits . This timestamp reflects the wallclock time at the moment the rendered media unit ( e.g ., video frame or audio sample ) contained in the first byte of the associated RTP packet is presented to the user . It is based on the time format used by NTP and consists of the least significant 16 bits of the NTP seconds part and the most significant 16 bits of the NTP fractional second part . If no Packet Presented NTP timestamp is available , this field SHALL be set to 0 and be considered empty , and the Packet Presented NTP timestamp flag ( P ) SHALL be set to 0 . With regards to NTP epoch and rollover , the value of the Packet Presented NTP timestamp is considered to always be greater than the Packet Received NTP timestamp and to be within 2^16 seconds of it . Presented in this context means the moment the data is played out to the user of the system , i.e ., sound played out through speakers , video images being displayed on some display , etc . The accuracy resulting from the synchronization algorithm will only be as good as the accuracy with which the SCs can determine the delay between receiving packets and presenting them to the end user . If no presentation timestamps are reported by SCs , the ability to accurately synchronize playout may be limited . 	121	0
7272	PT	SSRC : 32 bits . The SSRC of the media source is set to the value of the SSRC identifier of the media source carried in the RTP header [ RFC3550 ] of the RTP packet to which the RTCP IDMS Settings Packet relates . 	230	0
7272	Media Stream Correlation Identifier	Media Stream Correlation Identifier : 32 bits . This identifier is used to correlate synchronized media streams . The value 0 ( all bits are set " 0 ") indicates that this field is empty . The value 2^32-1 ( all bits are set " 1 ") is reserved for future use . The Media Stream Correlation Identifier contains the SyncGroupId of the group to which this packet is sent . 	210	0
7272	Packet Received RTP timestamp	Packet Received RTP timestamp : 32 bits . This timestamp has the value of the RTP timestamp carried in the RTP header [ RFC3550 ] of the RTP packet to which the XR IDMS relates . This SHOULD relate to the first arriving RTP packet containing this particular RTP timestamp , in case multiple consecutive RTP packets contain the same RTP timestamp . 	121	0
7272	Packet Presented NTP timestamp	Packet Presented NTP timestamp : 64 bits . This timestamp reflects the wallclock time at the reference client at the moment it presented the rendered media unit ( e.g ., video frame or audio sample ) contained in the first octet of the associated RTP packet to the user . The timestamp is formatted based on the NTP timestamp format as specified in [ RFC5905 ]. If no Packet Presented NTP timestamp is available , this field SHALL be set to 0 and be considered empty . This field MAY be left empty if none or only one of the receivers reported on presentation timestamps . Presented here means the moment the data is played out to the user of the system . 	121	0
7291	Code	o Length : Length of all included data in octets . The minimum length is 5 . 	100	0
7291	Length	o Length : Length of all included data in octets . The minimum length is 5 . 	100	0
7294	BT	Block type ( BT ): 8 bits 	400	0
7294	I	This field is used to indicate whether the loss concealment metrics are Sampled , Interval , or Cumulative metrics : 	231	0
7294	plc	This field is used to identify the packet loss concealment method in use at the receiver , according to the following code : 	400	0
7294	Reserved	These bits are reserved . They MUST be set to zero by senders and ignored by receivers ( see [ RFC6709 ], Section 4.2 ). 	500	0
7294	resv	These bits are reserved . They MUST be set to zero by senders and ignored by receivers ( see [ RFC6709 ], Section 4.2 ). 	500	0
7294	block length	The length of this report block in 32-bit words , minus one . For the Loss Concealment Metrics Block , the block length is equal to 6 . 	100	0
7294	SSRC of Source	SSRC of Source : 32 bits 	302	0
7294	Loss Concealment Duration	The duration , expressed in units of RTP timestamp , of audio playout corresponding to Loss-Type concealment . 	100	0
7294	Buffer Adjustment Concealment Duration	The duration , expressed in units of RTP timestamp , of audio playout corresponding to Buffer Adjustment-Type concealment , if known . 	100	0
7294	Playout Interrupt Count	The number of interruptions to normal playout that occurred during the reporting period . 	121	0
7294	Reserved	These bits are reserved . They MUST be set to zero by senders and ignored by receivers ( see [ RFC6709 ], Section 4.2 ). 	500	0
7294	Mean Playout Interrupt Size	The mean duration , expressed in units of RTP timestamp , of interruptions to normal playout that occurred during the reporting period . 	122	0
7294	BT	Block type ( BT ): 8 bits 	400	0
7294	I	This field is used to indicate whether the Concealed Seconds metrics are Sampled , Interval , or Cumulative metrics : 	301	0
7294	plc	This field is used to identify the packet loss concealment method in use at the receiver , according to the following code : 	400	0
7294	Reserved	These bits are reserved . They MUST be set to zero by senders and ignored by receivers ( see [ RFC6709 ], Section 4.2 ). 	500	0
7294	resv	These bits are reserved . They MUST be set to zero by senders and ignored by receivers ( see [ RFC6709 ], Section 4.2 ). 	500	0
7294	SSRC of Source	SSRC of Source : 32 bits 	302	0
7294	Unimpaired Seconds	Unimpaired Seconds : 32 bits 	302	0
7294	Concealed Seconds	Concealed Seconds : 32 bits 	201	0
7294	Severely Concealed Seconds	Severely Concealed Seconds : 16 bits 	201	0
7294	Reserved	These bits are reserved . They MUST be set to zero by senders and ignored by receivers ( see [ RFC6709 ], Section 4.2 ). 	500	0
7294	SCS Threshold	The SCS Threshold is defined as the percentage of packets corresponding to lost or discarded frames that must occur within a one second period in order for the second to be classified as a Severely Concealed Second . This is expressed in numeric format 0:8 and hence can represent a range of 0 to 99.6 percent loss or discard . 	110	0
7296	Next Payload	o Next Payload ( 1 octet ) - Indicates the type of payload that immediately follows the header . The format and value of each payload are defined below . 	231	0
7296	Exchange Type	o Exchange Type ( 1 octet ) - Indicates the type of exchange being used . This constrains the payloads sent in each message in an exchange . The values in the following table are only current as of the publication date of RFC 4306 . Other values may have been added since then or will be added after the publication of this document . Readers should refer to [ IKEV2IANA ] for the latest values . 	231	0
7296	Flags	o Flags ( 1 octet ) - Indicates specific options that are set for the message . Presence of options is indicated by the appropriate bit in the flags field being set . The bits are as follows : 	240	0
7296	R	* R ( Response ) - This bit indicates that this message is a response to a message containing the same Message ID . This bit MUST be cleared in all request messages and MUST be set in all responses . An IKE endpoint MUST NOT generate a response to a message that is marked as being a response ( with one exception; see Section 2.21.2 ). 	210	0
7296	V	* V ( Version ) - This bit indicates that the transmitter is capable of speaking a higher major version number of the protocol than the one indicated in the major version number field . Implementations of IKEv2 MUST clear this bit when sending and MUST ignore it in incoming messages . 	220	0
7296	I	* I ( Initiator ) - This bit MUST be set in messages sent by the original initiator of the IKE SA and MUST be cleared in messages sent by the original responder . It is used by the recipient to determine which eight octets of the SPI were generated by the recipient . This bit changes to reflect who initiated the last rekey of the IKE SA . 	210	0
7296	Message ID	o Message ID ( 4 octets , unsigned integer ) - Message identifier used to control retransmission of lost packets and matching of requests and responses . It is essential to the security of the protocol because it is used to prevent message replay attacks . See Sections 2.1 and 2.2 . 	231	0
7296	Length	o Length ( 4 octets , unsigned integer ) - Length of the total message ( header + payloads ) in octets . 	100	0
7296	Next Payload	o Next Payload ( 1 octet ) - Identifier for the payload type of the next payload in the message . If the current payload is the last in the message , then this field will be 0 . This field provides a " chaining " capability whereby additional payloads can be added to a message by appending each one to the end of the message and setting the Next Payload field of the preceding payload to indicate the new payload's type . An Encrypted payload , which must always be the last payload of a message , is an exception . It contains data structures in the format of additional payloads . In the header of an Encrypted payload , the Next Payload field is set to the payload type of the first contained payload ( instead of 0); conversely , the Next Payload field of the last contained payload is set to zero . The payload type values are listed here . The values in the following table are only current as of the publication date of RFC 4306 . Other values may have been added since then or will be added after the publication of this document . Readers should refer to [ IKEV2IANA ] for the latest values . 	231	0
7296	RESERVED	o RESERVED ( 7 bits ) - MUST be sent as zero; MUST be ignored on receipt . 	500	0
7296	Payload Length	o Payload Length ( 2 octets , unsigned integer ) - Length in octets of the current payload , including the generic payload header . 	100	0
7296	Last Substruc	o Last Substruc ( 1 octet ) - Specifies whether or not this is the last Proposal Substructure in the SA . This field has a value of 0 if this was the last Proposal Substructure , and a value of 2 if there are more Proposal Substructures . This syntax is inherited from ISAKMP , but is unnecessary because the last Proposal could be identified from the length of the SA . The value ( 2 ) corresponds to a payload type of Proposal in IKEv1 , and the first four octets of the Proposal structure are designed to look somewhat like the header of a payload . 	210	0
7296	RESERVED	o RESERVED ( 1 octet ) - MUST be sent as zero; MUST be ignored on receipt . 	500	0
7296	Proposal Length	o Proposal Length ( 2 octets , unsigned integer ) - Length of this proposal , including all transforms and attributes that follow . 	100	0
7296	Proposal Num	o Proposal Num ( 1 octet ) - When a proposal is made , the first proposal in an SA payload MUST be 1 , and subsequent proposals MUST be one more than the previous proposal ( indicating an OR of the two proposals ). When a proposal is accepted , the proposal number in the SA payload MUST match the number on the proposal sent that was accepted . 	302	0
7296	Protocol ID	o Protocol ID ( 1 octet ) - Specifies the IPsec protocol identifier for the current negotiation . The values in the following table are only current as of the publication date of RFC 4306 . Other values may have been added since then or will be added after the publication of this document . Readers should refer to [ IKEV2IANA ] for the latest values . 	231	0
7296	SPI Size	o SPI Size ( 1 octet ) - For an initial IKE SA negotiation , this field MUST be zero; the SPI is obtained from the outer header . During subsequent negotiations , it is equal to the size , in octets , of the SPI of the corresponding protocol ( 8 for IKE , 4 for ESP and AH ). 	231	0
7296	Num Transforms	o Num Transforms ( 1 octet ) - Specifies the number of transforms in this proposal . 	202	0
7296	Last Substruc	o Last Substruc ( 1 octet ) - Specifies whether or not this is the last Transform Substructure in the Proposal . This field has a value of 0 if this was the last Transform Substructure , and a 	210	0
7296	RESERVED	o Transform Length - The length ( in octets ) of the Transform Substructure including Header and Attributes . 	100	0
7296	Transform Length	o Transform Length - The length ( in octets ) of the Transform Substructure including Header and Attributes . 	100	0
7296	Transform Type	o Transform Type ( 1 octet ) - The type of transform being specified in this transform . Different protocols support different Transform Types . For some protocols , some of the transforms may be optional . If a transform is optional and the initiator wishes to propose that the transform be omitted , no transform of the given type is included in the proposal . If the initiator wishes to make use of the transform optional to the responder , it includes a transform substructure with Transform ID = 0 as one of the options . 	231	0
7296	Transform ID	o Transform ID ( 2 octets ) - The specific instance of the Transform Type being proposed . 	231	0
7296	Transform Attributes	Each transform in a Security Association payload may include attributes that modify or complete the specification of the transform . The set of valid attributes depends on the transform . Currently , only a single attribute type is defined : the Key Length attribute is used by certain encryption transforms with variable - length keys ( see below for details ). 	231	0
7296	AF	o Attribute Format ( AF ) ( 1 bit ) - Indicates whether the data attribute follows the Type/Length/Value ( TLV ) format or a shortened Type/Value ( TV ) format . If the AF bit is zero ( 0 ), then the attribute uses TLV format; if the AF bit is one ( 1 ), the TV format ( with two-byte value ) is used . 	210	0
7296	Attribute Type	o Attribute Type ( 15 bits ) - Unique identifier for each type of attribute ( see below ). 	231	0
7296	ID Type	o ID Type ( 1 octet ) - Specifies the type of Identification being used . 	231	0
7296	RESERVED	o Identification Data ( variable length ) - Value , as indicated by the Identification Type . The length of the Identification Data is computed from the size in the ID payload header . 	400	0
7296	Identification Data	o Identification Data ( variable length ) - Value , as indicated by the Identification Type . The length of the Identification Data is computed from the size in the ID payload header . 	400	0
7296	Certificate Data	o Certificate Data ( variable length ) - Actual encoding of certificate data . The type of certificate is indicated by the Certificate Encoding field . 	231	0
7296	Certification Authority	o Certification Authority ( variable length ) - Contains an encoding of an acceptable certification authority for the type of certificate requested . 	303	0
7296	Auth Method	o Auth Method ( 1 octet ) - Specifies the method of authentication used . The types of signatures are listed here . The values in the following table are only current as of the publication date of RFC 4306 . Other values may have been added since then or will be added after the publication of this document . Readers should refer to [ IKEV2IANA ] for the latest values . 	231	0
7296	RESERVED	o RESERVED - MUST be sent as zero; MUST be ignored on receipt . 	500	0
7296	Authentication Data	o Authentication Data ( variable length ) - see Section 2.15 . 	400	0
7296	Nonce Data	o Nonce Data ( variable length ) - Contains the random data generated by the transmitting entity . 	400	0
7296	Protocol ID	o Protocol ID ( 1 octet ) - If this notification concerns an existing SA whose SPI is given in the SPI field , this field indicates the type of that SA . For notifications concerning Child SAs , this field MUST contain either ( 2 ) to indicate AH or ( 3 ) to indicate ESP . Of the notifications defined in this document , the SPI is included only with INVALID_SELECTORS , REKEY_SA , and CHILD_SA_NOT_FOUND . If the SPI field is empty , this field MUST be sent as zero and MUST be ignored on receipt . 	231	0
7296	SPI Size	o SPI Size ( 1 octet ) - Length in octets of the SPI as defined by the IPsec protocol ID or zero if no SPI is applicable . For a notification concerning the IKE SA , the SPI Size MUST be zero and the field must be empty . 	100	0
7296	Notify Message Type	o Notify Message Type ( 2 octets ) - Specifies the type of notification message . 	231	0
7296	Notification Data	o Notification Data ( variable length ) - Status or error data transmitted in addition to the Notify Message Type . Values for this field are type specific ( see below ). 	400	0
7296	Protocol ID	o Protocol ID ( 1 octet ) - Must be 1 for an IKE SA , 2 for AH , or 3 for ESP . 	240	0
7296	SPI Size	o SPI Size ( 1 octet ) - Length in octets of the SPI as defined by the protocol ID . It MUST be zero for IKE ( SPI is in message header ) or four for AH and ESP . 	100	0
7296	Num of SPIs	o Num of SPIs ( 2 octets , unsigned integer ) - The number of SPIs contained in the Delete payload . The size of each SPI is defined by the SPI Size field . 	231	0
7296	Number of TSs	o Number of TSs ( 1 octet ) - Number of Traffic Selectors being provided . 	400	0
7296	RESERVED	o RESERVED - This field MUST be sent as zero and MUST be ignored on receipt . 	500	0
7296	TS Type	o IP protocol ID ( 1 octet ) - Value specifying an associated IP protocol ID ( such as UDP , TCP , and ICMP ). A value of zero means that the protocol ID is not relevant to this Traffic Selector -- the SA can carry all protocols . 	400	0
7296	Selector Length	o Selector Length ( 2 octets , unsigned integer ) - Specifies the length of this Traffic Selector substructure including the header . 	100	0
7296	Next Payload	o Next Payload - The payload type of the first embedded payload . Note that this is an exception in the standard header format , since the Encrypted payload is the last payload in the message and therefore the Next Payload field would normally be zero . But because the content of this payload is embedded payloads and there was no natural place to put the type of the first one , that type is placed here . 	231	0
7296	Payload Length	o Payload Length - Includes the lengths of the header , initialization vector ( IV ), Encrypted IKE payloads , Padding , Pad Length , and Integrity Checksum Data . 	100	0
7296	CFG Type	o CFG Type ( 1 octet ) - The type of exchange represented by the Configuration Attributes . The values in the following table are only current as of the publication date of RFC 4306 . Other values may have been added since then or will be added after the publication of this document . Readers should refer to [ IKEV2IANA ] for the latest values . 	231	0
7296	RESERVED	o RESERVED ( 3 octets ) - MUST be sent as zero; MUST be ignored on receipt . 	500	0
7296	Configuration Attributes	o Configuration Attributes ( variable length ) - These are type length value ( TLV ) structures specific to the Configuration payload and are defined below . There may be zero or more Configuration Attributes in this payload . 	231	0
7296	Configuration Attributes	3.15.1 . Configuration Attributes 	240	0
7296	Attribute Type	o Attribute Type ( 15 bits ) - A unique identifier for each of the Configuration Attribute Types . 	231	0
7296	Length	o Value ( 0 or more octets ) - The variable-length value of this Configuration Attribute . The following lists the attribute types . 	231	0
7296	Value	o Value ( 0 or more octets ) - The variable-length value of this Configuration Attribute . The following lists the attribute types . 	231	0
7296	Code	o Code ( 1 octet ) - Indicates whether this message is a Request ( 1 ), Response ( 2 ), Success ( 3 ), or Failure ( 4 ). 	240	0
7296	Identifier	o Identifier ( 1 octet ) - Used in PPP to distinguish replayed messages from repeated ones . Since in IKE , EAP runs over a reliable protocol , the Identifier serves no function here . In a response message , this octet MUST be set to match the identifier in the corresponding request . 	231	0
7296	Length	o Length ( 2 octets , unsigned integer ) - The length of the EAP message . MUST be four less than the Payload Length of the encapsulating payload . 	100	0
7296	Type	o Type ( 1 octet ) - Present only if the Code field is Request ( 1 ) or Response ( 2 ). For other codes , the EAP message length MUST be four octets and the Type and Type_Data fields MUST NOT be present . In a Request ( 1 ) message , Type indicates the data being requested . In a Response ( 2 ) message , Type MUST either be Nak or match the type of the data requested . Note that since IKE passes an indication of initiator identity in the first message in the IKE_AUTH exchange , the responder SHOULD NOT send EAP Identity requests ( type 1 ). The initiator MAY , however , respond to such requests if it receives them . 	240	0
7298	KeyID	o KeyID 	202	0
7298	Length	Length The length , in octets , of the body , exclusive of the Type and Length fields . 	100	0
7298	PacketCounter	PacketCounter A 16-bit unsigned integer in network byte order -- the PC part of a TS/PC number stored in this TLV . 	231	0
7298	Timestamp	Timestamp A 32-bit unsigned integer in network byte order -- the TS part of a TS/PC number stored in this TLV . 	121	0
7298	Length	Length The length , in octets , of the body , exclusive of the Type and Length fields . 	100	0
7298	KeyID	KeyID A 16-bit unsigned integer in network byte order . 	231	0
7298	KeyID	KeyID Set to LocalKeyID modulo 2^16 of the current key of the current CSA . 	231	0
7298	Length	Length Set to 6 . 	100	0
7298	PacketCounter	PacketCounter Set to the current value of the LocalPC variable of the current outgoing interface . 	231	0
7298	Timestamp	Timestamp Set to the current value of the LocalTS variable of the current outgoing interface . 	121	0
7298	Length	Length Set to 2 plus the digest length of HashAlgo of the current ESA . 	100	0
7298	KeyID	KeyID Set to KeyID of the current ESA . 	231	0
7306	Immediate Data	Immediate Data - a small fixed-size portion of data sent from the Data Source to a Data Sink . 	400	0
7306	RV	The RDMA Version ( RV ) field : 01b . 	220	0
7306	Invalidate STag	Invalidate STag : Set to zero by the sender , ignored by the receiver . 	500	0
7306	}	The FetchAdd operation is performed in the endian format of the target memory . The " Original Remote Data Value " is converted from the endian format of the target memory for return and returned to the Requester . The fields are in big-endian format on the wire . 	400	0
7306	Remote STag	o Remote STag 	400	0
7306	Remote Tagged Offset	o Remote Tagged Offset 	400	0
7306	Remote STag	o Remote STag 	400	0
7306	Remote Tagged Offset	o Remote Tagged Offset 	400	0
7306	Compare Data	o Compare Data 	400	0
7306	Compare Mask	o Compare Mask 	301	0
7306	Original Remote Data Value	The following pseudocode describes the masked CmpSwap operation result . 	301	0
7306	Compare Mask	Compare Mask )) 	231	0
7306	AOpCode	See Figure 5 . All Atomic Operation Codes from Figure 5 MUST be implemented by an RNIC that supports Atomic Operations . 	231	0
7306	Request Identifier	The Request Identifier specifies a number that is used to identify the Atomic Operation Request Message . The value used in this field is selected by the RNIC that sends the message , and it is reflected back to the Local Peer in the Atomic Operation Response message . 	230	0
7306	Remote STag	The Remote STag identifies the Remote Peer's Tagged Buffer targeted by the Atomic Operation . The Remote STag is associated with the RDMAP Stream through a mechanism that is outside the scope of the RDMAP specification . 	231	0
7306	Remote Tagged Offset	The Remote Tagged Offset specifies the starting offset , in octets , from the base of the Remote Peer's Tagged Buffer targeted by the Atomic Operation . The Remote Tagged Offset MAY start at an arbitrary offset but MUST represent a ULP Buffer address that is 64-bit aligned . 	110	0
7306	Add or Swap Data	The Add or Swap Data field specifies the 64-bit " Add Data " value in an Atomic FetchAdd Operation or the 64-bit " Swap Data " value in an Atomic Swap or CmpSwap Operation . 	231	0
7306	Add or Swap Mask	This field is used in masked Atomic Operations ( FetchAdd and CmpSwap ) to perform a bitwise logical AND operation as specified in the definition of these operations . For non - masked Atomic Operations ( Swap ), this field is set to ffffffffffffffffh on transmit and ignored by the receiver . 	400	0
7306	Compare Data	The Compare Data field specifies the 64-bit " Compare Data " value in an Atomic CmpSwap Operation . For Atomic Operations FetchAdd and Atomic Swap , the Compare Data field is set to zero on transmit and ignored by the receiver . 	400	0
7306	Compare Mask	This field is used in masked Atomic Operation CmpSwap to perform a bitwise logical AND operation as specified in the definition of these operations . For Atomic Operations FetchAdd and Swap , this field is set to ffffffffffffffffh on transmit and ignored by the receiver . 	400	0
7306	Original Request Identifier	The Original Request Identifier is set to the value specified in the Request Identifier field that was originally provided in the corresponding Atomic Operation Request Message . 	231	0
7306	Original Remote Data Value	The Original Remote Value specifies the original 64-bit value stored at the ULP Buffer address targeted by the Atomic Operation . 	230	0
7306	Immediate Data	The Immediate Data operation is typically used in conjunction with an RDMA Write Operation to improve ULP processing efficiency . The efficiency is gained by causing an RDMA Completion to be generated immediately following the RDMA Write operation . This RDMA Completion delivers 8 bytes of Immediate Data at the Remote Peer . The combination of an RDMA Write Message followed by an Immediate Data Operation has the same behavior as the RDMA Write with Immediate Data operation found in InfiniBand . An Immediate Data operation that is not preceded by an RDMA Write operation causes an RDMA Completion . 	400	0
7306	Immediate Data	Immediate Data : 64 bits . 8 bytes of data transferred from the Data Source to an untagged Buffer at the Data Sink . 	400	0
7306	Immediate Data	0x8 , Immediate Data , this specification 	240	0
7307	U	o U-bit : MUST be 1 so that the TLV will be silently ignored by a recipient if it is unknown , according to the rules of [ RFC5036 ]. 	210	0
7307	F	o F-bit : MUST be 0 as per Section 3 (" Specifying Capabilities in LDP Messages ") of LDP Capabilities [ RFC5561 ]. 	302	0
7307	S	o S-bit : MUST be 1 if used in LDP " Initialization " message . MAY be set to 0 or 1 in dynamic " Capability " message to advertise or withdraw the capability , respectively . 	210	0
7307	Length	o The encoding of the Typed Wildcard FEC element , as defined in [ RFC5918 ], is defined in Section 4.1 (" Typed Wildcard FEC element ") of this document . The MT-ID field of the MT Typed Wildcard FEC element MUST be set to " Wildcard Topology " when it is specified in the MT Capability TLV . 	400	0
7310	MSB	MSB : Most Significant Byte of a 24-bit coded sample 	400	0
7310	MB	MB : Middle Byte of a 24-bit coded sample 	400	0
7310	LSB	LSB : Least Significant Byte of a 24-bit coded sample 	400	0
7341	flags	flags : Specifies flags providing additional information required by the server to process the DHCPv4 message encapsulated in the DHCPv4-query message , or required by the client to process a DHCPv4 message encapsulated in the DHCPv4-response message . 	231	0
7341	U	U : Unicast flag . If set to 1 , it indicates that the DHCPv4 message encapsulated within the DHCPv4-query message would be sent to a unicast address if it were sent using IPv4 . If this flag is set to 0 , it indicates that the DHCPv4 message would be sent to the broadcast address if it were sent using IPv4 . The usage of the flag is described in detail in Section 8 . 	210	0
7341	MBZ	MBZ : Bits MUST be set to zero when sending and MUST be ignored when receiving . 	500	0
7347	MEL	o Maintenance Entity group Level ( MEL ): The MEL value to set and check MUST be configurable . The DEFAULT value MUST be " 111 ". With co-routed bidirectional transport paths , the configured MEL MUST be the same in both directions . 	400	0
7347	Version	o Version : 0x00 	220	0
7347	OpCode	o OpCode : 0x27 (= 0d39 ) 	302	0
7347	Flags	o Flags : 0x00 	302	0
7347	TLV Offset	o TLV Offset : 4 	240	0
7347	End TLV	o End TLV : 0x00 	240	0
7347	Pr.Type	o Protection Type ( Pr.Type ): 	231	0
7347	A	A : reserved ( set by default to 1 ) B : 0 - 1+1 ( permanent bridge ) 1 - 1:1 ( no permanent bridge ) D : 0 - Unidirectional switching 1 - Bidirectional switching R : 0 - Non-revertive operation 1 - Revertive operation 	240	0
7347	A	A Z | | ( 1 ) |---- NR(0,0)----->| |<----- NR(0,0)----| | | | | ( 2 ) | ( SF on W(Z->A )) | |---- SF(1,1)----->| ( 3 ) |<----- NR(1,1)----| ( 4 ) | | | | ( 5 ) | ( Recovery ) | |---- WTR(1,1)---->| /| | WTR timer | | \| | ( 6 ) |---- NR(0,0)----->| ( 7 ) ( 8 ) |<----- NR(0,0)----| | | 	240	0
7347	A	A Z | | ( 1 ) |---- NR(0,0)----->| ( 1 ) |<----- NR(0,0)----| | | | | ( 2 ) | ( SF on W(Z<->A )) | ( 2 ) |<---- SF(1,1)---->| ( 3 ) | | ( 3 ) | | ( 4 ) | ( Recovery ) | ( 4 ) |<---- NR(1,1)---->| ( 5 ) |<--- WTR(1,1)---->| ( 5 ) /| |\ WTR timer | | WTR timer \| |/ ( 6 ) |<---- NR(1,1)---->| ( 6 ) ( 7 ) |<----- NR(0,0)--->| ( 7 ) ( 8 ) | | ( 8 ) 	240	0
7347	A	A Z | | ( 1 ) |---- NR(0,0)----->| ( 1 ) |<----- NR(0,0)----| | | | | ( 2 ) | ( SF on W(Z<->A )) | ( 2 ) |<---- SF(1,1)---->| ( 3 ) | | ( 3 ) | | ( 4 ) | ( Recovery ) | ( 4 ) |<---- NR(1,1)---->| ( 5 ) |<--- WTR(1,1)---->| ( 5 ) /| |\ WTR timer | | | \| | WTR timer ( 6 ) |----- NR(1,1)---->| | ( 7 ) | |/ ( 9 ) |<----- NR(0,0)----| ( 8 ) |---- NR(0,0)----->| ( 10 ) 	240	0
7347	A	A Z | | ( 1 ) |---- NR(0,0)----->| ( 1 ) |<----- NR(0,0)----| | | | | ( 2 ) | ( SF on W(Z->A )) | |----- SF(1,1)---->| ( 3 ) ( 4 ) |<----- NR(1,1)----| | | | | ( 5 ) | ( Recovery ) | |----- DNR(1,1)--->| ( 6 ) |<--- DNR(1,1)---->| | | | | | ( SF on P(A->Z )) | ( 7 ) ( 8 ) |<--- SF-P(0,0)----| |---- NR(0,0)----->| | | | | | ( Recovery ) | ( 9 ) |<----- NR(0,0)----| | | 	240	0
7347	A	A Z | | ( 1 ) |---- NR(0,0)----->| ( 1 ) |<----- NR(0,0)----| | | | | ( 2 ) | ( SF on W(A<->Z )) | ( 2 ) ( 3 ) |<---- SF(1,1)---->| ( 3 ) | | | | ( 4 ) | ( Recovery ) | ( 4 ) ( 5 ) |<---- NR(1,1)---->| ( 5 ) |<--- DNR(1,1)---->| | | | | ( 6 ) | ( SF on P(A<->Z )) | ( 6 ) ( 7 ) |<--- SF-P(0,0)--->| ( 7 ) | | | | ( 8 ) | ( Recovery ) | ( 8 ) |<---- NR(0,0)---->| | | 	240	0
7349	Length	o Length : The length in octets of the value field , including the Security Association ID and Cryptographic Sequence Number fields . 	100	0
7349	Security Association ID	o Security Association ID : The 32-bit field that maps to the authentication algorithm and the secret key used to create the message digest carried in LDP payload . 	230	0
7357	Type	Type : Set to ESADI-PARAM sub-TLV ( TRILL APPsub-TLV type 0x0001 ). Two bytes , because this APPsub-TLV appears in an extended TLV [ RFC7356 ]. 	400	0
7357	Length	Length : Variable , with a minimum of 3 , but must fit within the ESADI packet . This field is encoded as an unsigned integer in network byte order [ RFC7356 ]. 	100	0
7357	R	Priority : Gives the originating RBridge's priority for being the DRB on the ESADI instance virtual link ( see Section 3 ) for the Data Label in which the PDU containing the parameter data was sent . It is an unsigned 7-bit integer with the larger magnitude indicating higher priority . It defaults to 0x40 for an RBridge participating in ESADI for which it has not been configured . 	230	0
7357	Priority	Priority : Gives the originating RBridge's priority for being the DRB on the ESADI instance virtual link ( see Section 3 ) for the Data Label in which the PDU containing the parameter data was sent . It is an unsigned 7-bit integer with the larger magnitude indicating higher priority . It defaults to 0x40 for an RBridge participating in ESADI for which it has not been configured . 	230	0
7357	CSNP Time	CSNP Time : An unsigned byte that gives the amount of time in seconds during which the originating RBridge , if it is the DRB on the ESADI virtual link , will send at least three ESADI-CSNP PDUs . It defaults to 30 seconds for an RBridge participating in ESADI for which it has not been configured . 	120	0
7357	Type	Type Name Reference ---------- -------- ----------- 0 Reserved [ RFC7357 ] 1 ESADI-PARAM [ RFC7357 ] 2-254 Unassigned [ RFC7357 ] 255 Reserved [ RFC7357 ] 256-65534 Unassigned [ RFC7357 ] 65535 Reserved [ RFC7357 ] 	240	0
7361	C	C-flag : Used to indicate the context of the PBB-VPLS component in which MAC flushing is required . For PBB-VPLS , there are two contexts of MAC flushing -- the Backbone VPLS ( B-component VPLS ) and the Customer VPLS ( I-component VPLS ). The C-flag MUST be ZERO ( C = 0 ) when a MAC flush action for the B-VPLS is required and MUST be set ( C = 1 ) when the MAC flush action for the I-component is required . In the regular H-VPLS case , the C-flag MUST be ZERO ( C = 0 ) to indicate that the flush applies to the current VPLS context . 	210	0
7361	N	N-flag : Used to indicate whether a positive ( N = 0 , flush-all-but-mine ) or negative ( N = 1 , flush-all-from-me ) MAC flush action is required . The source ( mine/me ) is defined as the PW associated with either the LDP session on which the LDP MAC withdraw was received or the B-MAC(s ) listed in the B-MAC Sub-TLV . For the optimized MAC flush procedure described in this section , the flag MUST be set ( N = 1 ). 	210	0
7361	Length	Length : Value length in octets . At least one B-MAC address MUST be present in the list . 	100	0
7361	Length	Length : Value length in octets . Zero indicates an empty I-SID list . An empty I-SID list means that the flushing applies to all the I-SIDs mapped to the B-VPLS indicated by the FEC TLV . 	100	0
7369	Length	Length : Indicates the total length of the TLV including padding and including the Type and Length fields . 	100	0
7369	Version	Version : Identifies the CFM protocol version according to [ IEEE.802.1Q-2011 ]. If a node does not support a specific CFM version , an error MUST be generated : " OAM Problem/Unsupported OAM Version ". 	220	0
7369	MD L .	MD L . ( MD Level ): Indicates the desired MD Level . Possible values are defined according to [ IEEE.802.1Q-2011 ]. If a node does not support a specific MD Level , an error MUST be generated : " OAM Problem/Unsupported MD Level ". 	231	0
7369	Length	Length : Indicates the total length of the TLV , including padding and the Type and Length fields . 	100	0
7369	Format	Name Length : The length of the MD Name field in bytes . This is necessary to allow non-4-byte padded MD Name lengths . 	100	0
7369	Name Length	Name Length : The length of the MD Name field in bytes . This is necessary to allow non-4-byte padded MD Name lengths . 	100	0
7369	MD Name	MD Name : Variable-length field , formatted according to the format specified in the Format field . 	400	0
7369	Length	Length : Indicates the total length of the TLV , including padding and the Type and Length fields . 	100	0
7369	Format	Name Length : The length of the Short MA Name field in bytes . This is necessary to allow non-4-byte padded MA Name lengths . 	100	0
7369	Name Length	Name Length : The length of the Short MA Name field in bytes . This is necessary to allow non-4-byte padded MA Name lengths . 	100	0
7369	Short MA Name	Short MA Name : Variable-length field formatted according to the format specified in the Format field . 	400	0
7369	Length	Length : Indicates the total length of the TLV , including padding and the Type and Length fields . 	100	0
7369	Local MEP ID	Local MEP ID : A 16-bit integer value in the range 1-8191 of the MEP ID on the initiator side . 	230	0
7369	Remote MEP ID	Remote MEP ID : A 16-bit integer value in the range 1-8191 of the MEP ID to be set for the MEP established at the receiving side . This value is determined by the initiator node . This is possible since a new MAID is assigned to each PBB-TE connection , and MEP IDs must be only unique within the scope of the MAID . 	400	0
7369	Length	Length : Indicates the total length of the TLV , including padding and the Type and Length fields . 	100	0
7369	Prio	Prio : Indicates the priority to be set for CCM frames . In Ethernet , 3 bits carried in VLAN TAGs identify priority information . Setting the priority is optional . If the most significant bit is set to zero , the subsequent 3 priority bits will be ignored , and priority bits of the Ethernet CCM frame will be set based on default values specified in the Ethernet nodes . If the most significant bit is set to 1 , the subsequent 3 bits will be used to set the priority bits of the Ethernet CCM frame . 	210	0
7369	CCM I	CCM I ( CCM Interval ): MUST be set according to the 3-bit encoding [ IEEE.802.1Q-2011 ] shown in Table 1 . As a consequence , the most significant bit will be set to 0 . Four bits are allocated to support the configuration of CCM Intervals that may be specified in the future . If a node does not support the requested CCM Interval , an error MUST be generated : " OAM Problem/Unsupported CC Interval ". 	302	0
7380	BT	The MPEG2 TS PSI Decodability Metrics Block is identified by the constant 32 ;. 	231	0
7380	Reserved	These bits are reserved . They MUST be set to zero by senders ignored by receivers ( see Section 4.2 of [ RFC6709 ]). 	500	0
7380	block length	The constant 6 , in accordance with the definition of this field in Section 3 of [ RFC3611 ]. The block MUST be discarded if the block length is set to a different value . 	302	0
7380	begin_seq	begin_seq : 16 bits 	400	0
7380	end_seq	end_seq : 16 bits 	200	0
7380	PAT_error_count	A count of the number of PAT errors that occurred in the above sequence number interval . The Program Association Table ( PAT ) is the only packet with Packet Identifier ( PID ) 0x0000 . A PAT error occurs when ( 1 ) a packet with PID 0x0000 does not occur at least every 0.5 seconds , ( 2 ) a packet with PID 0x0000 does not contain table_id 0x00 ( i.e ., a PAT ), or ( 3 ) the Scrambling_control_field in the TS packet header is not 00 for a packet with PID 0x0000 . See Section 5.2.1 of [ ETSI ]. Every program within the MPEG TS stream is listed in the PAT; if it is missing , then no programs can be decoded . 	201	0
7380	PAT_error_2_count	A count of the number of PAT2 errors that occurred in the above sequence number interval . A PAT2 error occurs when ( 1 ) a packet with PID 0x0000 containing table_id 0x00 does not occur at least every 0.5 seconds , ( 2 ) a packet with PID 0x0000 contains a table with a table_id other than 0x00 , or ( 3 ) the Scrambling_control_field in the TS packet header is not 00 for a packet with PID 0x0000 . See Section 5.2.1 of [ ETSI ]. 	240	0
7380	PMT_error_count	A count of the number of PMT errors that occurred in the above sequence number interval . A PMT_error occurs when ( 1 ) a packet containing a table with table_id 0x02 ( i.e ., a PMT ) does not occur at least every 0.5 seconds on the PID that is referred to in the PAT or ( 2 ) the Scrambling_control_field in the TS packet header is not 00 for all packets with PID containing a table with table_id 0x02 ( i.e ., a PMT ). See Section 5.2.1 of [ ETSI ]. 	110	0
7380	PMT_error_2_count	A count of the number of PMT2 errors that occurred in the above sequence number interval . A PMT2_error occurs when ( 1 ) a packet containing table_id 0x02 ( i.e ., a PMT ) does not occur at least every 0.5 seconds on each program_map_PID that is referred to in the PAT or ( 2 ) the Scrambling_control_field in the TS packet header is not 00 for all packets containing a table with table_id 0x02 ( i.e ., a PMT ) on each program_map_PID that is referred to in the PAT . See Section 5.2.1 of [ ETSI ]. 	110	0
7380	PID_error_count	A count of the number of PID errors that occurred in the above sequence number interval . A PID error occurs when no data stream is present corresponding to a given PID . This may be caused by multiplexing or demultiplexing , then remultiplexing . See Section 5.2.1 of [ ETSI ]. 	200	0
7380	CRC_error_count	A count of the number of CRC errors that occurred in the above sequence number interval . A CRC_error occurs if data corruption occurred in any of the following tables -- CAT , PAT , PMT , Network Information Table ( NIT ), Event Information Table ( EIT ), Bouquet Association Table ( BAT ), Service Description Table ( SDT ), or Time Offset Table ( TOT ), as defined in Section 5.2.2 of [ ETSI ]. 	110	0
7380	CAT_error_count	A count of the number of CAT errors that occurred in the above sequence number interval . A CAT_error occurs when ( 1 ) a packet with PID 0x0001 contains a table with a table_id other than 0x01 ( i.e ., not a CAT ) or ( 2 ) a packet does not contain a table with table_id = 0x01 ( i.e ., a CAT ) when scrambling is employed ( i.e ., the Scrambling_control_field is set as a value other than 00 ). See Section 5.2.2 of [ ETSI ]. 	200	0
7380	Reserved	These bits are reserved . They MUST be set to zero by senders ignored by receivers ( see Section 4.2 of [ RFC6709 ]). 	500	0
7383	Notify Message Type	o Notify Message Type ( 2 octets ) - MUST be 16430 , the value assigned for the IKEV2_FRAGMENTATION_SUPPORTED notification . 	240	0
7383	Next Payload	o Next Payload ( 1 octet ) - in the very first fragment ( with Fragment Number equal to 1 ), this field MUST be set to the payload type of the first inner payload ( the same as for the Encrypted payload ). In the rest of the Fragment messages ( with Fragment Number greater than 1 ), this field MUST be set to zero . 	231	0
7383	Fragment Number	o Fragment Number ( 2 octets , unsigned integer ) - current Fragment message number , starting from 1 . This field MUST be less than or equal to the next field ( Total Fragments ). This field MUST NOT be zero . 	100	0
7383	Total Fragments	o Total Fragments ( 2 octets , unsigned integer ) - number of Fragment messages into which the original message was divided . This field MUST NOT be zero . With PMTU discovery , this field plays an additional role . See Section 2.5.2 for details . 	200	0
7389	LMA User-Plane Address	The IP address on the LMA that is used for sending and receiving user-plane traffic from the MAG . 	230	0
7389	Type	Type 	240	0
7389	Length	An 8-bit , unsigned integer indicating the length of the option in octets , excluding the Type and Length fields . 	100	0
7389	Reserved	This field is unused in this specification . The value MUST be set to zero ( 0 ) by the sender and MUST be ignored by the receiver . 	500	0
7389	LMA User-Plane Address	Contains the 32-bit IPv4 address or the 128-bit IPv6 address of the LMA user plane . When the LMA User-Plane Address mobility option is included in a PBU message , this field can be a zero - length field , or it can have a value of ALL_ZERO , with all bits in the 32-bit IPv4 address or the 128-bit IPv6 address set to zero . 	230	0
7394	Value	Value 	400	0
7394	Flags	Flags 	302	0
7401	Host Identity	Host Identity ( HI ): The public key of the signature algorithm that represents the identity of the host . In HIP , a host proves its identity by creating a signature with the private key belonging to its HI ( cf . Section 3 ). 	230	0
7401	Host Identity	In this section , the properties of the Host Identity and Host Identity Tag are discussed , and the exact format for them is defined . In HIP , the public key of an asymmetric key pair is used as the Host Identity ( HI ). Correspondingly , the host itself is defined as the entity that holds the private key of the key pair . See the HIP architecture specification [ HIP-ARCH ] for more details on the difference between an identity and the corresponding identifier . 	400	0
7401	Checksum	Since the checksum covers the source and destination addresses in the IP header , it MUST be recomputed on HIP-aware NAT devices . 	230	0
7401	A	A - Anonymous : If this is set , the sender's HI in this packet is anonymous , i.e ., one not listed in a directory . Anonymous HIs SHOULD NOT be stored . This control is set in packets using anonymous sender HIs . The peer receiving an anonymous HI in an R1 or I2 may choose to refuse it . 	303	0
7401	HIP Parameters	The HIP parameters carry information that is necessary for establishing and maintaining a HIP association . For example , the peer's public keys as well as the signaling for negotiating ciphers and payload handling are encapsulated in HIP parameters . Additional information , meaningful for end hosts or middleboxes , may also be included in HIP parameters . The specification of the HIP parameters and their mapping to HIP packets and packet types is flexible to allow HIP extensions to define new parameters and new protocol behavior . 	400	0
7401	Type	Type Type code for the parameter . 16 bits long , C-bit being part of the Type code . C Critical . One if this parameter is critical and MUST be recognized by the recipient , zero otherwise . The C-bit is considered to be a part of the Type field . Consequently , critical parameters are always odd , and non-critical ones have an even value . Length Length of the Contents , in bytes , excluding Type , Length , and Padding Contents Parameter specific , defined by Type Padding Padding , 0-7 bytes , added if needed 	231	0
7401	Type	Type 129 Length 12 R1 generation counter The current generation of valid puzzles 	100	0
7401	Type	Type 321 Length 4 + RHASH_len / 4 #K #K is the number of verified bits Reserved zero when sent , ignored when received Opaque copied unmodified from the received PUZZLE parameter Random #I random number of size RHASH_len bits Puzzle solution #J random number of size RHASH_len bits 	100	0
7401	Type	Type 511 Length number of DH Group IDs DH GROUP ID identifies a DH GROUP ID supported by the host . The list of IDs is ordered by preference of the host . The possible DH Group IDs are defined in the DIFFIE_HELLMAN parameter . Each DH Group ID is one octet long . 	100	0
7401	Type	Type 513 Length length in octets , excluding Type , Length , and Padding Group ID identifies values for p and g as well as the KDF Public Value length of the following Public Value in octets Length Public Value the sender's public Diffie-Hellman key 	100	0
7401	Reserved	Reserved 0 DEPRECATED 1 DEPRECATED 2 1536-bit MODP group [ RFC3526 ] HKDF [ RFC5869 ] 3 3072-bit MODP group [ RFC3526 ] HKDF [ RFC5869 ] 4 DEPRECATED 5 DEPRECATED 6 NIST P-256 [ RFC5903 ] HKDF [ RFC5869 ] 7 NIST P-384 [ RFC5903 ] HKDF [ RFC5869 ] 8 NIST P-521 [ RFC5903 ] HKDF [ RFC5869 ] 9 SECP160R1 [ SECG ] HKDF [ RFC5869 ] 10 2048-bit MODP group [ RFC3526 ] HKDF [ RFC5869 ] 11 	240	0
7401	Type	Type 579 Length length in octets , excluding Type , Length , and Padding Cipher ID identifies the cipher algorithm to be used for encrypting the contents of the ENCRYPTED parameter 	100	0
7401	Type	Type 705 Length length in octets , excluding Type , Length , and Padding HI Length length of the Host Identity in octets DI-Type type of the following Domain Identifier field DI Length length of the Domain Identifier field in octets Algorithm index to the employed algorithm Host Identity actual Host Identity Domain Identifier the identifier of the sender 	100	0
7401	Type	Type Value 	240	0
7401	ECC Curve	ECC Curve Curve label Public Key Represented in octet-string format [ RFC6090 ] 	231	0
7401	Algorithm	Algorithm Curve Values 	301	0
7401	Algorithm	Algorithm Curve Values 	301	0
7401	Type	Type 715 Length number of HIT Suite IDs ID identifies a HIT Suite ID supported by the host . The list of IDs is ordered by preference of the host . Each HIT Suite ID is one octet long . The four higher-order bits of the ID field correspond to the HIT Suite ID in the ORCHID OGA ID field . The four lower-order bits are reserved and set to 0 by the sender . The reception of an ID with the four lower-order bits not set to 0 SHOULD be considered as an error that MAY result in a NOTIFICATION of type UNSUPPORTED_HIT_SUITE . 	100	0
7401	Type	Type 2049 Length 2x number of TF types TF Type identifies a transport format ( TF ) type supported by the host . The TF type numbers correspond to the HIP parameter type numbers of the respective transport format parameters . The list of TF types is ordered by preference of the sender . 	231	0
7401	Type	Type 61505 Length length in octets , excluding Type , Length , and Padding HMAC HMAC computed over the HIP packet , excluding the HIP_MAC parameter and any following parameters , such as HIP_SIGNATURE , HIP_SIGNATURE_2 , ECHO_REQUEST_UNSIGNED , or ECHO_RESPONSE_UNSIGNED . The Checksum field MUST be set to zero , and the HIP header length in the HIP common header MUST be calculated not to cover any excluded parameters when the HMAC is calculated . The size of the HMAC is the natural size of the hash computation output depending on the used hash function . 	100	0
7401	Type	Type 61569 Length length in octets , excluding Type , Length , and Padding HMAC HMAC computed over the HIP packet , excluding the HIP_MAC_2 parameter and any following parameters such as HIP_SIGNATURE , HIP_SIGNATURE_2 , ECHO_REQUEST_UNSIGNED , or ECHO_RESPONSE_UNSIGNED , and including an additional sender's HOST_ID parameter during the HMAC calculation . The Checksum field MUST be set to zero , and the HIP 	100	0
7401	Type	Type 61697 Length length in octets , excluding Type , Length , and Padding SIG alg signature algorithm Signature the signature is calculated over the HIP packet , excluding the HIP_SIGNATURE parameter and any parameters that follow the HIP_SIGNATURE parameter . When the signature is calculated , the Checksum field MUST be set to zero , and the HIP header length in the HIP common header MUST be calculated only up to the beginning of the HIP_SIGNATURE parameter . 	100	0
7401	Type	Type 61633 Length length in octets , excluding Type , Length , and Padding SIG alg signature algorithm Signature Within the R1 packet that contains the HIP_SIGNATURE_2 parameter , the Initiator's HIT , the Checksum field , and the Opaque and Random #I fields in the PUZZLE parameter MUST be set to zero while computing the HIP_SIGNATURE_2 signature . Further , the HIP packet length in the HIP header MUST be adjusted as if the HIP_SIGNATURE_2 was not in the packet during the signature calculation , i.e ., the HIP packet length points to the beginning of the HIP_SIGNATURE_2 parameter during signing and verification . 	100	0
7401	Type	Type 385 Length 4 Update ID 32-bit sequence number 	100	0
7401	Type	Type 449 Length length in octets , excluding Type and Length peer Update ID 32-bit sequence number corresponding to the Update ID being ACKed 	100	0
7401	Type	Type 641 Length length in octets , excluding Type , Length , and Padding Reserved zero when sent , ignored when received 	100	0
7401	IV	IV Initialization vector , if needed , otherwise nonexistent . The length of the IV is inferred from the HIP_CIPHER . Encrypted The data is encrypted using the encryption algorithm data defined in the HIP_CIPHER parameter . 	100	0
7401	Type	Type 832 Length length in octets , excluding Type , Length , and Padding Reserved zero when sent , ignored when received Notify Message specifies the type of notification Type Notification informational or error data transmitted in Data addition to the Notify Message Type . Values for this field are type specific ( see below ). 	100	0
7401	Type	Type 897 Length length of the opaque data in octets Opaque data opaque data , supposed to be meaningful only to the node that sends ECHO_REQUEST_SIGNED and receives a corresponding ECHO_RESPONSE_SIGNED or ECHO_RESPONSE_UNSIGNED 	100	0
7401	Type	Type 63661 Length length of the opaque data in octets Opaque data opaque data , supposed to be meaningful only to the node that sends ECHO_REQUEST_UNSIGNED and receives a corresponding ECHO_RESPONSE_UNSIGNED 	100	0
7401	Type	Type 961 Length length of the opaque data in octets Opaque data opaque data , copied unmodified from the ECHO_REQUEST_SIGNED or ECHO_REQUEST_UNSIGNED parameter that triggered this response 	100	0
7401	Type	Type 63425 Length length of the opaque data in octets Opaque data opaque data , copied unmodified from the ECHO_REQUEST_SIGNED or ECHO_REQUEST_UNSIGNED parameter that triggered this response 	100	0
7401	Packet Type	The 7-bit Packet Type field in a HIP protocol packet describes the type of a HIP protocol message . It is defined in Section 5.1 . All existing values referring to [ RFC5201 ] have been updated to refer to this specification . Other values have been left unchanged . 	231	0
7401	Group ID	The eight-bit Group ID values appear in the DIFFIE_HELLMAN parameter and the DH_GROUP_LIST parameter and are defined in Section 5.2.7 . This registry has been updated based on the new values specified in Section 5.2.7; values noted as being DEPRECATED can be left in the table with reference to [ RFC5201 ]. New values are assigned through IETF Review . 	231	0
7401	DI-Type	The four-bit DI-Type values in a HOST_ID parameter are defined in Section 5.2.9 . New values are assigned through IETF Review . All existing values referring to [ RFC5201 ] have been updated to refer to this specification . 	231	0
7401	Notify Message Type	The 16-bit Notify Message Type values in a NOTIFICATION parameter are defined in Section 5.2.19 . 	231	0
7402	Type	Type 65 Length 12 KEYMAT Index index , in bytes , where to continue to draw ESP keys from KEYMAT . If the packet includes a new Diffie-Hellman key and the ESP_INFO is sent in an UPDATE packet , the field MUST be zero . If the ESP_INFO is included in base exchange messages , the KEYMAT Index must have the index value of the point from where the ESP SA keys are drawn . Note that the length of this field limits the amount of keying material that can be drawn from KEYMAT . If that amount is exceeded , the packet MUST contain a new Diffie-Hellman key . OLD SPI old SPI for data sent to address(es ) associated with this SA . If this is an initial SA setup , the OLD SPI value is zero . NEW SPI new SPI for data sent to address(es ) associated with this SA . 	100	0
7402	Type	Type 4095 Length length in octets , excluding Type , Length , and padding . Reserved zero when sent , ignored when received . Suite ID defines the ESP Suite to be used . 	100	0
7411	Type	Length : 8-bit unsigned integer . The length of this option in 32-bit words , not including the Type , Length , Option-Code , and Reserved fields . 	100	0
7411	Length	Length : 8-bit unsigned integer . The length of this option in 32-bit words , not including the Type , Length , Option-Code , and Reserved fields . 	100	0
7411	Reserved	Reserved : MUST be set to zero by the sender and MUST be ignored by the receiver . 	500	0
7411	MLD or IGMP Report Payload	MLD or IGMP Report Payload : This field is composed of the Membership Report message after stripping its ICMP header . This Report Payload always contains an integer number of multicast records . Corresponding message formats are defined for MLDv2 in [ RFC3810 ] and for IGMPv3 in [ RFC3376 ]. This field MUST always contain the first header line ( Reserved field and No of Mcast Address Records ). 	400	0
7411	Type	Length : 8-bit unsigned integer . The length of this option in 32-bit words , not including the Type , Length , Option-Code , and Status fields . 	100	0
7411	Length	Length : 8-bit unsigned integer . The length of this option in 32-bit words , not including the Type , Length , Option-Code , and Status fields . 	100	0
7411	MLD or IGMP Unsupported Report Payload	MLD or IGMP Unsupported Report Payload : This field is syntactically identical to the MLD and IGMP Report Payload field described in Section 5.3 but is only composed of those Multicast Address Records that are not supported or prohibited in the new access network . This field MUST always contain the first header line ( Reserved field and No of Mcast Address Records ) but MUST NOT contain any Mcast Address Records if the status code equals 1 . 	400	0
7425	0x0f	The use of these options for selecting certificates is described in Section 4.4.3 . 	400	0
7425	0x1e	An implementation MUST ignore a session keying component option type that is not understood . 	302	0
7425	hmacLength	hmacLength : If the sender negotiates to send an HMAC on its packets , the HMAC field will be this many bytes long . This value MUST be between 4 and 32 inclusive , or 0 if and only if willSendAlways and willSendOnRequest are clear . 	302	0
7425	streamID	streamID : If the streamIDPresent flag is set , this field is present and is the RTMP stream ID to which the messages in this flow belong . In this profile , this field MUST be present . 	400	0
7425	messageType	messageType : The RTMP Message Type; 	231	0
7425	timestamp	timestamp : The RTMP Timestamp , in network byte order; 	121	0
7425	syncID	count : The number of flows being synchronized by syncID . This field MUST be at least 1 and SHOULD be at least 2 . 	201	0
7425	count	count : The number of flows being synchronized by syncID . This field MUST be at least 1 and SHOULD be at least 2 . 	302	0
7425	serverKeepalivePeriodMsec	serverKeepalivePeriodMsec : The keepalive period , in milliseconds , that the client is advised to set on its RTMFP session with the server; 	121	0
7425	peerKeepalivePeriodMsec	peerKeepalivePeriodMsec : The keepalive period , in milliseconds , that the client is advised to use on its RTMFP sessions with any peer that is not the server . 	121	0
7427	Auth Method	o Auth Method ( 1 octet ) - Specifies the method of authentication used . 	231	0
7427	Authentication Data	o Authentication Data ( variable length ) - See Section 2.15 of [ RFC7296 ]. For " Digital Signature " format , the Authentication Data is formatted as follows : 	400	0
7427	ASN.1 Length	* ASN.1 Length ( 1 octet ) - This field contains the length of the ASN.1-encoded AlgorithmIdentifier object . 	100	0
7427	Signature Value	* Signature Value ( variable length ) - This field contains the actual signature value . 	230	0
7428	NodeID	Non-link-layer-derived address : IPv6 address assigned by a managed process , e.g ., DHCPv6 	230	0
7428	Dispatch	Dispatch : Identifies the header type immediately following the Dispatch Header . 	231	0
7428	Type	The dispatch value may be treated as an unstructured namespace . Only a few symbols are required to represent current 6LoWPAN functionality . Although some additional savings could be achieved by encoding additional functionality into the dispatch byte , these measures would tend to constrain the ability to address future alternatives . 	400	0
7428	Type	Type : The value 1 signifies the Source Link-layer address . The value 2 signifies the Destination Link-layer address . 	240	0
7428	Length	Length : This is the length of this option ( including the Type and Length fields ) in units of 8 octets . The value of this field is always 1 for G.9959 NodeIDs . 	100	0
7428	NodeID	NodeID : This is the G.9959 NodeID to which the actual interface currently responds . The link-layer address may change if the interface joins another network at a later time . 	230	0
7436	Address Family	Address Family Address Encoding 	202	0
7436	Address Family	Address Family Address Encoding 	202	0
7442	Type	Type : 11 	220	0
7442	Length	Length : 8 	100	0
7442	RP	RP : IPv4 RP address , 4 octets . 	230	0
7442	Group	Group : IPv4 multicast group address , 4 octets . 	230	0
7442	Type	Type : 12 	220	0
7442	Length	Length : 32 	100	0
7442	RP	RP : IPv6 RP address , 16 octets . 	230	0
7442	Group	Procedures for in-band signaling for IP multicast shared trees with mLDP follow the same procedures as those for in-band signaling for IP multicast source trees , as specified in [ RFC6826 ], except that while the latter signals ( S,G ) state using Transit IPv4/IPv6 Source TLVs , the former signals (*, G ) state using Transit IPv4/IPv6 Shared Tree TLVs . 	400	0
7450	V	5.1.1.1 . Version ( V ) 	220	0
7450	Type	5.1.1.2 . Type 	240	0
7450	Reserved	Reserved bits that MUST be set to zero by the gateway and ignored by the relay . 	500	0
7450	Discovery Nonce	A 32-bit random value generated by the gateway and echoed by the relay in a Relay Advertisement message . This value is used by the gateway to correlate Relay Advertisement messages with Relay Discovery messages . Discovery nonce generation is described in Section 5.2.3.4.5 . 	301	0
7450	V	5.1.2.1 . Version ( V ) 	220	0
7450	Type	5.1.2.2 . Type 	240	0
7450	Reserved	Reserved bits that MUST be set to zero by the relay and ignored by the gateway . 	500	0
7450	Discovery Nonce	A 32-bit value copied from the Discovery Nonce field ( Section 5.1.1.4 ) contained in the Relay Discovery message . The gateway uses this value to match a Relay Advertisement to a Relay Discovery message . 	230	0
7450	V	5.1.3.1 . Version ( V ) 	220	0
7450	Type	5.1.3.2 . Type 	240	0
7450	Reserved	Reserved bits that MUST be set to zero by the gateway and ignored by the relay . 	500	0
7450	Request Nonce	A 32-bit random value generated by the gateway and echoed by the relay in a Membership Query message . This value is used by the relay to compute the Response MAC value and is used by the gateway to correlate Membership Query messages with Request messages . Request Nonce generation is described in Section 5.2.3.5.6 . 	301	0
7450	V	5.1.4.1 . Version ( V ) 	220	0
7450	Type	5.1.4.2 . Type 	240	0
7450	Reserved	Reserved bits that MUST be set to zero by the relay and ignored by the gateway . 	500	0
7450	L	A 1-bit flag set to 1 to indicate that the relay is NOT accepting Membership Update messages from new gateway tunnel endpoints and that it will ignore any that are . A value of 0 has no special significance -- the relay may or may not be accepting Membership Update messages from new gateway tunnel endpoints . A gateway checks this flag before attempting to create new group subscription state on the relay to determine whether it should restart relay discovery . A gateway that has already created group subscriptions on the relay may ignore this flag . Support for this flag is RECOMMENDED . 	210	0
7450	G	A 1-bit flag set to 0 to indicate that the message does NOT carry the Gateway Port Number and Gateway IP Address fields , and 1 to indicate that it does . A relay implementation that supports the optional teardown procedure ( see Section 5.3.3.5 ) SHOULD set this flag as well as the Gateway Port Number and Gateway IP Address field values . If a relay sets this flag , it MUST also include the Gateway Port Number and Gateway IP Address fields in the message . A gateway implementation that does not support the optional teardown procedure ( see Section 5.2.3.7 ) MAY ignore this flag and the Gateway Address fields if they are present . 	210	0
7450	Response MAC	A 48-bit source authentication value generated by the relay as described in Section 5.3.5 . The gateway echoes this value in subsequent Membership Update messages to allow the relay to verify that the sender of a Membership Update message was the intended receiver of a Membership Query sent by the relay . 	230	0
7450	Request Nonce	A 32-bit value copied from the Request Nonce field ( Section 5.1.3.5 ) carried by a Request message . The relay will have included this value in the Response MAC computation . The gateway echoes this value in subsequent Membership Update messages . The gateway also uses this value to match a Membership Query to a Request message . 	230	0
7450	Gateway Port Number	5.1.4.9.1 . Gateway Port Number 	240	0
7450	V	5.1.5.1 . Version ( V ) 	220	0
7450	Type	5.1.5.2 . Type 	240	0
7450	Reserved	Reserved bits that MUST be set to zero by the gateway and ignored by the relay . 	500	0
7450	Response MAC	A 48-bit value copied from the Response MAC field ( Section 5.1.4.6 ) in a Membership Query message . Used by the relay to perform source authentication . 	230	0
7450	Request Nonce	A 32-bit value copied from the Request Nonce field in a Request or Membership Query message . Used by the relay to perform source authentication . 	230	0
7450	V	5.1.6.1 . Version ( V ) 	220	0
7450	Type	5.1.6.2 . Type 	240	0
7450	Reserved	Reserved bits that MUST be set to zero by the relay and ignored by the gateway . 	500	0
7450	V	5.1.7.1 . Version ( V ) 	220	0
7450	Type	5.1.7.2 . Type 	240	0
7450	Reserved	Reserved bits that MUST be set to zero by the gateway and ignored by the relay . 	500	0
7450	Response MAC	A 48-bit value copied from the Response MAC field ( Section 5.1.4.6 ) in the last Membership Query message the relay sent to the gateway endpoint address of the tunnel to be torn down . The gateway endpoint address is provided by the Gateway IP Address and Gateway Port Number fields carried by the Membership Query message . The relay validates the Teardown message by comparing this value with one computed from the Gateway IP Address field , Gateway Port Number field , Request Nonce field , and a private secret ( just as it does in the Membership Update message ). 	230	0
7450	Request Nonce	A 32-bit value copied from the Request Nonce field ( Section 5.1.4.7 ) in the last Membership Query message the relay sent to the gateway endpoint address of the tunnel to be torn down . The gateway endpoint address is provided by the Gateway IP Address and Gateway Port Number fields carried by the Membership Query message . This value must match that used by the relay to compute the value stored in the Response MAC field . 	230	0
7450	Gateway Port Number	A 16-bit UDP port number that , when combined with the value contained in the Gateway IP Address field , forms the tunnel endpoint address that the relay will use to identify the tunnel instance to tear down . The relay provides this value to the gateway using the Gateway Port Number field ( Section 5.1.4.9.1 ) in a Membership Query message . This port number must match that used by the relay to compute the value stored in the Response MAC field . 	230	0
7455	Link Header	o Link Header : Media-dependent header . For Ethernet , this includes the Destination MAC , Source MAC , VLAN ( optional ), and Ethertype fields . 	400	0
7455	TRILL Header	o TRILL Header : Fixed size of 6 bytes when the Extended Header is not included [ RFC6325 ]. 	400	0
7455	Flow Entropy	o Flow Entropy : A 96-byte , fixed-size field . The rightmost bits of the field MUST be padded with zeros , up to 96 bytes , when the flow-entropy information is less than 96 bytes . Flow Entropy enables emulation of the forwarding behavior of the desired data packets . The Flow Entropy field starts with the Inner.MacDA . The offset of the Inner.MacDA depends on whether extensions are included or not as specified in [ RFC7179 ] and [ RFC6325 ]. Such extensions are not commonly supported in current TRILL implementations . 	400	0
7455	OAM Ethertype	o OAM Ethertype : A 16-bit Ethertype that identifies the OAM Message Channel that follows . This document specifies using the Ethertype 0x8902 allocated for CFM [ 8021Q ]. 	400	0
7455	OAM Message Channel	o OAM Message Channel : A variable-size section that carries OAM - related information . The message format is as specified in [ 8021Q ]. 	400	0
7455	Link Trailer	o Link Trailer : Media-dependent trailer . For Ethernet , this is the FCS ( Frame Check Sequence ). 	301	0
7455	A	o A ( 1 bit ): Indicates this is a possible OAM frame and is subject to specific handling as specified in this document . 	210	0
7455	O	O - OAM capable 	231	0
7455	B	A capability announcement with the " O " flag set to 1 and the " B " flag set to 1 indicates that the originating RBridge is OAM capable but utilizes the backwards-compatibility method defined in Appendix A . A capability announcement with the " O " flag set to 1 and the " B " flag set to 0 indicates that the originating RBridge is OAM capable and utilizes the method specified in Section 3.2 . 	210	0
7455	M	o M : The post-processing merge that merges data and OAM messages that are passed through . Additionally , the merge component ensures , as explained earlier , that OAM packets are not forwarded out as native frames . 	301	0
7455	M	o M : The intermediate point processing merge that merges data and OAM messages that are passed through . 	240	0
7455	Version	o Version : Indicates the version ( 5 bits ) as specified in [ 8021Q ]. This document does not require changing the Version defined in [ 8021Q ]. 	220	0
7455	OpCode	o OpCode : Operation Code ( 8 bits ). Specifies the operation performed by the message . See Section 8.2 . 	231	0
7455	Flags	o Flags : Includes operational flags ( 1 byte ). The definition of flags is OpCode-specific and is covered in the applicable sections . 	231	0
7455	FirstTLVOffset	o FirstTLVOffset : Defines the location of the first TLV , in bytes , starting from the end of the FirstTLVOffset field ( 1 byte ). ( Refer to [ 8021Q ] for the definition of the FirstTLVOffset .) 	400	0
7455	OpCode	o OpCode-Specific Information : May contain Session Identification Number , timestamp , etc . 	400	0
7455	Type	o Type ( 1 octet ): Specifies the type of the TLV ( see Section 8.4 for TLV types ). 	231	0
7455	Length	o Length ( 2 octets ): Specifies the length of the Value field in octets . Length of the Value field can be zero or more octets . 	100	0
7455	Type	o Type ( 1 octet ): 64 , TRILL OAM Application Identifier TLV 	231	0
7455	Length	o Version ( 1 octet ): Currently set to zero . Indicates the TRILL OAM version . The TRILL OAM version can be different than the [ 8021Q ] version . 	220	0
7455	Version	o Version ( 1 octet ): Currently set to zero . Indicates the TRILL OAM version . The TRILL OAM version can be different than the [ 8021Q ] version . 	220	0
7455	Reserved1	o Reserved1 ( 3 octets ): Set to zero on transmission and ignored on reception . 	500	0
7455	Return Code	o Return Code ( 1 octet ): Set to zero on requests . Set to an appropriate value in response messages . 	302	0
7455	Reserved2	o Reserved2 ( 12 bits ): Set to zero on transmission and ignored on reception . 	500	0
7455	F	o F ( 1 bit ): Final flag . When set , indicates this is the last response . 	210	0
7455	C	o C ( 1 bit ): Cross-Connect Error flag ( VLAN/FGL mapping error ). If set , indicates that the label ( VLAN/FGL ) in the Flow Entropy is different than the label included in the Diagnostic Label TLV . This field is ignored in request messages and MUST only be interpreted in response messages . 	210	0
7455	O	o O ( 1 bit ): If set , indicates OAM out-of-band response requested . 	210	0
7455	I	NOTE : When both O and I bits are set to zero , this indicates that no response is required ( silent mode ). Users MAY specify both O and I , one of them , or none . When both O and I bits are set , the response is sent both in-band and out-of-band . 	210	0
7455	Type	o Length ( 2 octets ): Variable . Minimum length is 2 + the length ( in octets ) of the shortest address . Currently , the minimum value of this field is 4 , but this could change in the future if a new address shorter than the TRILL nickname is defined . 	100	0
7455	Length	o Length ( 2 octets ): Variable . Minimum length is 2 + the length ( in octets ) of the shortest address . Currently , the minimum value of this field is 4 , but this could change in the future if a new address shorter than the TRILL nickname is defined . 	100	0
7455	Address Type	o Address Type ( 1 octet ): 	240	0
7455	Addr Length	o Addr Length ( 1 octet ): Depends on the Address Type . Currently , defined values are : 	100	0
7455	Reply Address	o Reply Address ( variable ): Address where the reply needs to be sent . Length depends on the address specification . 	230	0
7455	Type	o Type ( 1 octet ): 66 , Diagnostic Label TLV 	240	0
7455	Length	o Length ( 2 octets ): 5 	100	0
7455	1	o Reserved ( 1 octet ): Set to zero on transmission and ignored on reception . 	500	0
7455	Reserved	o Reserved ( 1 octet ): Set to zero on transmission and ignored on reception . 	500	0
7455	Label	RBridges do not perform label error checking when the Diagnostic Label TLV is not included in the OAM message . In certain deployments , intermediate devices may perform label translation . In such scenarios , the originator should not include the Diagnostic Label TLV in OAM messages . Inclusion of Diagnostic Label TLV will generate unwanted label error notifications . 	303	0
7455	Type	o Type ( 1 octet ): 67 , Original Data Payload TLV 	400	0
7455	Length	o Original Payload : The original TRILL Header and Flow Entropy . Used in constructing replies to the Loopback Message ( see Section 9 ) and the Path Trace Message ( see Section 10 ). 	400	0
7455	Original Payload	o Original Payload : The original TRILL Header and Flow Entropy . Used in constructing replies to the Loopback Message ( see Section 9 ) and the Path Trace Message ( see Section 10 ). 	400	0
7455	Type	o Type ( 1 octet ): 68 , RBridge Scope TLV 	240	0
7455	Length	o nOfnicknames ( 1 octet ): Indicates the number of nicknames included in this TLV . Zero ( 0 ) indicates no nicknames are included in the TLV . When this field is set to zero ( 0 ), the Length field MUST be set to 1 . 	210	0
7455	nOfnicknames	o nOfnicknames ( 1 octet ): Indicates the number of nicknames included in this TLV . Zero ( 0 ) indicates no nicknames are included in the TLV . When this field is set to zero ( 0 ), the Length field MUST be set to 1 . 	302	0
7455	Nickname	o Nickname ( 2 octets ): 16-bit RBridge nickname 	231	0
7455	Type	o Type ( 1 octet ): 69 , Previous RBridge Nickname TLV 	240	0
7455	Length	o Reserved ( 3 octet ): Set to zero on transmission and ignored on reception . 	500	0
7455	Reserved	o Reserved ( 3 octet ): Set to zero on transmission and ignored on reception . 	500	0
7455	Nickname	o Nickname ( 2 octets ): RBridge nickname 	231	0
7455	Type	o Type ( 1 octet ): 70 , Next-Hop RBridge List TLV 	231	0
7455	Length	o nOfnicknames ( 1 octet ): Indicates the number of nicknames included in this TLV . Zero ( 0 ) indicates no nicknames are included in the TLV . When this field is set to zero ( 0 ), the Length field MUST be set to 1 . 	210	0
7455	nOfnicknames	o nOfnicknames ( 1 octet ): Indicates the number of nicknames included in this TLV . Zero ( 0 ) indicates no nicknames are included in the TLV . When this field is set to zero ( 0 ), the Length field MUST be set to 1 . 	302	0
7455	Nickname	o Nickname ( 2 octets ): 16-bit RBridge nickname 	231	0
7455	Type	o Type ( 1 octet ): 71 , Multicast Receiver Port Count TLV 	240	0
7455	Length	o Reserved ( 1 octet ): Set to zero on transmission and ignored on reception . 	500	0
7455	Reserved	o Reserved ( 1 octet ): Set to zero on transmission and ignored on reception . 	500	0
7455	Number of Receivers	o Number of Receivers ( 4 octets ): Indicates the number of multicast receivers available on the responding RBridge on the label specified by the diagnostic label . 	230	0
7455	Type	o Type ( 1 octet ): 72 , Flow Identifier TLV 	231	0
7455	Length	o Reserved ( 1 octet ): Set to 0 on transmission and ignored on reception . 	500	0
7455	Reserved	o Reserved ( 1 octet ): Set to 0 on transmission and ignored on reception . 	500	0
7455	Type	o Type ( 1 octet ): 73 , Reflector Entropy TLV 	240	0
7455	Length	o Reserved ( 1 octet ): Set to zero on transmission and ignored by the recipient . 	500	0
7455	Reserved	o Reserved ( 1 octet ): Set to zero on transmission and ignored by the recipient . 	500	0
7455	Reflector Entropy	o Reflector Entropy ( 96 octets ): Flow Entropy to be used by the responder . May be padded with zeros if the desired flow-entropy information is less than 96 octets . 	400	0
7455	Type	o Type ( 1 octet ): 74 , Authentication TLV 	240	0
7455	Length	o The Auth Type and following Authentication Value are the same as the Auth Type and following value for the [ IS-IS ] Authentication TLV . It is RECOMMENDED that Auth Type 3 be used . Auth Types 0 , 1 , 2 , and 54 MUST NOT be used . With Auth Type 3 , the Authentication TLV is as follows : 	302	0
7455	1	o If in-band response was requested , dispatch the frame to the TRILL data plane with request-originator RBridge nickname as the egress RBridge nickname . 	400	0
7455	.	o If in-band response was requested , dispatch the frame to the TRILL data plane with request-originator RBridge nickname as the egress RBridge nickname . 	400	0
7455	.	o The TRILL OAM Application Identifier TLV MUST be included as the first TLV with the flags set to applicable values . 	231	0
7455	.	Additionally , the CCM process updates the CCM Management object with the sequence number of the received CCM packet . Note : The last received CCM sequence number and CCM timeout are tracked per each remote MEP . 	200	0
7455	Return Code	Return Code Assignment References ----------- ---------- ---------- 0 Request message RFC 7455 1 Reply message RFC 7455 2-255 Unassigned RFC 7455 	240	0
7455	Maintenance Domain Name	Maintenance Domain Name : set to TrillBaseMode 	400	0
7455	Short MA Name Format	Short MA Name Format : set to value 3 	202	0
7455	Short MA Name Length	Short MA Name Length : set to value 2 	100	0
7455	Short MA Name	Short MA Name : set to FFFC 	231	0
7455	Padding	Padding : set of zero up to 48 octets of total length of the MAID 	100	0
7456	MD-L	MD-L Maintenance Domain Level 	400	0
7456	Version	o Version : indicates the version of this protocol . Always zero in the context of this document . 	220	0
7456	OpCode	o OpCode : Operation Code ( 8 bits ). Specifies the operation performed by the message . Specific packet formats are presented in Sections 6.2 and 6.3 of this document . A list of the PM message OpCodes is provided in Section 6.4 . 	231	0
7456	Flags	o Flags : The definition of flags is OpCode-specific . The value of this field is zero unless otherwise stated . 	231	0
7456	FirstTLVOffset	o FirstTLVOffset : defines the location of the first TLV , in octets , starting from the end of the FirstTLVOffset field . 	400	0
7456	TLVs	o TLVs : one or more TLV fields . The last TLV field is always an End TLV . 	400	0
7456	OpCode	o FirstTLVOffset : defines the location of the first TLV , in octets , starting from the end of the FirstTLVOffset field . The value of this field MUST be 16 in 1SL packets . 	230	0
7456	FirstTLVOffset	o FirstTLVOffset : defines the location of the first TLV , in octets , starting from the end of the FirstTLVOffset field . The value of this field MUST be 16 in 1SL packets . 	230	0
7456	Sender MEP ID	o Sender MEP ID : the MEP ID of the MEP that initiated the 1SL . 	230	0
7456	Test ID	o Counter TX : the value of the sender's transmission counter , including this packet , at the time of transmission . 	202	0
7456	Counter TX	o Counter TX : the value of the sender's transmission counter , including this packet , at the time of transmission . 	202	0
7456	OpCode	o FirstTLVOffset : defines the location of the first TLV , in octets , starting from the end of the FirstTLVOffset field . The value of this field MUST be 16 in SLM packets . 	230	0
7456	FirstTLVOffset	o FirstTLVOffset : defines the location of the first TLV , in octets , starting from the end of the FirstTLVOffset field . The value of this field MUST be 16 in SLM packets . 	230	0
7456	Sender MEP ID	o Reserved for Reflector MEP ID : this field is reserved for the reflector's MEP ID , to be added in the SLR . 	231	0
7456	Reserved for Reflector MEP ID	o Reserved for Reflector MEP ID : this field is reserved for the reflector's MEP ID , to be added in the SLR . 	231	0
7456	Test ID	o Counter TX : the value of the sender's transmission counter , including this packet , at the time of transmission . 	202	0
7456	Counter TX	o Counter TX : the value of the sender's transmission counter , including this packet , at the time of transmission . 	231	0
7456	Reserved for SLR	o Reserved for SLR : this field is reserved for the SLR corresponding to this packet . The reflector uses this field in the SLR for carrying TRX , the value of its reception counter . 	231	0
7456	OpCode	o FirstTLVOffset : defines the location of the first TLV , in octets , starting from the end of the FirstTLVOffset field . The value of this field MUST be 16 in SLR packets . 	230	0
7456	FirstTLVOffset	o FirstTLVOffset : defines the location of the first TLV , in octets , starting from the end of the FirstTLVOffset field . The value of this field MUST be 16 in SLR packets . 	230	0
7456	Sender MEP ID	o Sender MEP ID : the MEP ID of the MEP that initiated the SLM that this SLR replies to . 	230	0
7456	Reflector MEP ID	o Reflector MEP ID : the MEP ID of the MEP that transmits this SLR message . 	230	0
7456	Test ID	o Test ID : a 32-bit unique test identifier , copied from the corresponding SLM message . 	231	0
7456	Counter TX	o Counter TX : the value of the sender's transmission counter at the time of the SLM transmission . 	121	0
7456	Counter TRX	o Counter TRX : the value of the reflector's reception counter , including this packet , at the time of reception of the corresponding SLM packet . 	231	0
7456	OpCode	o Reserved ( 0 ): Upper part of Flags field . Set to 0 by the sender and ignored by the receiver . 	500	0
7456	T	o T : Type flag . When this flag is set , it indicates proactive operation; when cleared , it indicates on-demand mode . 	210	0
7456	FirstTLVOffset	o FirstTLVOffset : defines the location of the first TLV , in octets , starting from the end of the FirstTLVOffset field . The value of this field MUST be 16 in 1DM packets . 	230	0
7456	OpCode	o Reserved ( 0 ): Upper part of Flags field . Set to 0 by the sender and ignored by the receiver . 	500	0
7456	T	o T : Type flag . When this flag is set , it indicates proactive operation; when cleared , it indicates on-demand mode . 	210	0
7456	FirstTLVOffset	o FirstTLVOffset : defines the location of the first TLV , in octets , starting from the end of the FirstTLVOffset field . The value of this field MUST be 32 in DMM packets . 	230	0
7456	OpCode	o Reserved ( 0 ): Upper part of Flags field . Set to 0 by the sender and ignored by the receiver . 	500	0
7456	T	o T : Type flag . When this flag is set , it indicates proactive operation; when cleared , it indicates on-demand mode . 	210	0
7456	FirstTLVOffset	o FirstTLVOffset : defines the location of the first TLV , in octets , starting from the end of the FirstTLVOffset field . The value of this field MUST be 32 in DMR packets . 	230	0
7456	OpCode	OpCode OAM packet value type ------ ---------- 	231	0
7458	Connectivity Type	An MN indicates its preference for connectivity using the AT_CONNECTIVITY_TYPE attribute in the EAP-Response/AKA-Challenge message . The preference indicates whether the MN wishes connectivity to the Evolved Packet Core ( the so-called " EPC PDN connectivity ") or Internet Offload ( termed as " Non-Seamless Wireless Offload "). 	210	0
7458	AT_CONNECTIVITY_TYPE	An MN uses this attribute to indicate whether it wishes the connectivity type to be Non-Seamless WLAN Offload or EPC . This attribute is applicable for multiple PDN connections only . 	231	0
7458	AT_CONNECTIVITY_TYPE	o AT_CONNECTIVITY_TYPE ( Section 5.3 ): 147 	302	0
7458	Connectivity Type	o Connectivity Type ( Section 5.3 ): 3 	240	0
7458	Access Technology	o Access Technology ( Section 5.5 ): 4 	240	0
7458	Serial ID Type	o Serial ID Type ( Section 5.6 ): 5 	240	0
7470	Enterprise Number	A unique identifier of an organization encoded as a 32-bit integer . Enterprise Numbers are assigned by IANA and managed through an IANA registry [ RFC2578 ]. 	231	0
7470	Enterprise-Specific Information	The detailed enterprise-specific constraint information carried by the object . The format and interpretation of this information is a matter for the enterprise identified by the Enterprise Number . Such formats and interpretation may be published by the enterprise ( possibly through an Informational RFC or through commercial documentation ) so that PCCs or PCEs that are not part of the organization can use the information . 	400	0
7471	A	A ) Determine whether the link referenced in the sub-TLV affects any of the LSPs for which it is ingress . If there are , then : 	400	0
7471	A	This field represents the Anomalous ( A ) bit . The A bit is set when the measured value of this parameter exceeds its configured maximum threshold . The A bit is cleared when the measured value falls below its configured reuse threshold . If the A bit is clear , the sub-TLV represents steady state link performance . 	210	0
7471	A	This field represents the Anomalous ( A ) bit . The A bit is set when the measured value of this parameter exceeds its configured maximum threshold . The A bit is cleared when the measured value falls below its configured reuse threshold . If the A bit is clear , the sub-TLV represents steady state link performance . 	210	0
7471	A	This field represents the Anomalous ( A ) bit . The A bit is set when one or more measured values exceed a configured maximum threshold . The A bit is cleared when the measured value falls below its configured reuse threshold . If the A bit is clear , the sub-TLV represents steady state link performance . 	210	0
7471	A	This field represents the Anomalous ( A ) bit . The A bit is set when one or more measured values exceed a configured maximum threshold . The A bit is cleared when the measured value falls below its configured reuse threshold . If the A bit is clear , the sub-TLV represents steady state link performance . 	210	0
7471	Min Delay	This 24-bit field carries minimum measured link delay value ( in microseconds ) over a configurable interval , encoded as an integer value . 	200	0
7471	Max Delay	This 24-bit field carries the maximum measured link delay value ( in microseconds ) over a configurable interval , encoded as an integer value . 	200	0
7471	Delay Variation	This 24-bit field carries the average link delay variation over a configurable interval in microseconds , encoded as an integer value . When set to 0 , it has not been measured . When set to the maximum value 16,777,215 ( 16.777215 sec ), then the delay is at least that value , and it may be larger . 	122	0
7471	A	This field represents the Anomalous ( A ) bit . The A bit is set when the measured value of this parameter exceeds its configured maximum threshold . The A bit is cleared when the measured value falls below its configured reuse threshold . If the A bit is clear , the sub-TLV represents steady state link performance . 	210	0
7471	A	This field represents the Anomalous ( A ) bit . The A bit is set when the measured value of this parameter exceeds its configured maximum threshold . The A bit is cleared when the measured value falls below its configured reuse threshold . If the A bit is clear , the sub-TLV represents steady state link performance . 	210	0
7471	Link Loss	This 24-bit field carries link packet loss as a percentage of the total traffic sent over a configurable interval . The basic unit is 0.000003 %, where ( 2^24 - 2 ) is 50.331642 %. This value is the highest packet loss percentage that can be expressed ( the assumption being that precision is more important on high speed links than the ability to advertise loss rates greater than this , and that high speed links with over 50% loss are unusable ). Therefore , measured values that are larger than the field maximum SHOULD be encoded as the maximum value . 	301	0
7473	App	App : Defines the legacy application type whose state advertisement is to be controlled . The value of this field is defined as follows : 	231	0
7473	Unused	The " Length " field of the SAC Capability TLV ( in octets ) is computed as follows : 	100	0
7473	Length	For example , if there are two SAC elements present , then the " Length " field is set to 3 octets . A receiver of this capability TLV can deduce the number of elements present in the TLV by using the " Length " field . 	100	0
7487	G	G-ACh - Generic Associated Channel 	231	0
7487	TC	TC - Traffic Class 	231	0
7487	Length	Length : Indicates the total length in octets , including sub-TLVs as well as the Type and Length fields . 	100	0
7487	MPLS-TP Global_ID	MPLS-TP Global_ID 	202	0
7487	MPLS-TP Node Identifier	MPLS-TP Node Identifier 	231	0
7487	Tunnel_Num	Tunnel_Num 	301	0
7487	LSP_Num	These values need to be correctly set by both ingress and egress when transmitting a CV packet , and both ingress and egress need to know what to expect when receiving a CV packet . Most of these values can be derived from the Path and Resv messages [ RFC3473 ], which use a 5-tuple to uniquely identify an LSP within an operator's network . This tuple is composed of a Tunnel Sender Address , Tunnel Endpoint Address , Tunnel_ID , Extended Tunnel ID , and ( GMPLS ) LSP_ID . 	231	0
7487	Length	Length : Indicates the total length in octets , including sub-TLVs as well as the Type and Length fields . 	100	0
7487	N	BFD Negotiation ( N ): If set timer negotiation/re-negotiation via BFD Control messages is enabled , when cleared it is disabled . 	302	0
7487	S	Symmetric Session ( S ): If set , the BFD session MUST use symmetric timing values . 	302	0
7487	I	Integrity ( I ): If set , BFD Authentication MUST be enabled . If the BFD Configuration Sub-TLV does not include a BFD Authentication Sub - TLV , the authentication MUST use Keyed SHA1 with an empty pre-shared key ( all 0s ). If the egress LSR does not support BFD Authentication , an error MUST be generated : " OAM Problem/BFD Authentication unsupported ". 	400	0
7487	G	Encapsulation Capability ( G ): If set , it shows the capability of encapsulating BFD messages into The G-Ach channel . If both the G bit and U bit are set , configuration gives precedence to the G bit . If the egress LSR does not support any of the ingress LSR Encapsulation Capabilities , an error MUST be generated : " OAM Problem/Unsupported BFD Encapsulation format ". 	210	0
7487	U	Encapsulation Capability ( U ): If set , it shows the capability of encapsulating BFD messages into UDP packets . If both the G bit and U bit are set , configuration gives precedence to the G bit . If the egress LSR does not support any of the ingress LSR Encapsulation Capabilities , an error MUST be generated : " OAM Problem/Unsupported BFD Encapsulation Format ". 	210	0
7487	B	Bidirectional ( B ): If set , it configures BFD in the Bidirectional mode . If it is not set , it configures BFD in unidirectional mode . In the second case , the source node does not expect any Discriminator values back from the destination node . 	210	0
7487	Reserved	Reserved : Reserved for future specifications; set to 0 on transmission and ignored when received . 	500	0
7487	Length	Length : Indicates the TLV total length in octets , including the Type and Length fields ( 20 ). 	100	0
7487	Local Discriminator	Local Discriminator : A unique , non-zero discriminator value generated by the transmitting system and referring to itself; it is used to de - multiplex multiple BFD sessions between the same pair of systems as defined in [ RFC5880 ]. 	230	0
7487	Length	Length : Indicates the TLV total length in octets , including Type and Length fields ( 16 ). 	100	0
7487	Acceptable Min . Asynchronous TX interval	Acceptable Min . Asynchronous TX interval : If the S flag is set in the BFD Configuration Sub-TLV , it expresses the desired time interval ( in microseconds ) at which the ingress LER intends to both transmit and receive BFD periodic control packets . If the egress LSR cannot support the value , it SHOULD reply with a supported interval . 	110	0
7487	Acceptable Min . Asynchronous RX interval	Acceptable Min . Asynchronous RX interval : If the S flag is set in the BFD Configuration Sub-TLV , this field MUST be set equal to " Acceptable Min . Asynchronous TX interval " on transmit and MUST be ignored on receipt since it has no additional meaning with respect to the one described for " Acceptable Min . Asynchronous TX interval ". 	301	0
7487	Required Echo TX Interval	Required Echo TX Interval : The minimum interval ( in microseconds ) between received BFD Echo packets that this system is capable of supporting , less any jitter applied by the sender as described in Section 6.8.9 of [ RFC5880 ]. This value is also an indication for the receiving system of the minimum interval between transmitted BFD Echo packets . If this value is zero , the transmitting system does not support the receipt of BFD Echo packets . If the LSR node cannot support this value , it SHOULD reply with a supported value ( which may be zero if Echo is not supported ). 	122	0
7487	Length	Length : Indicates the TLV total length in octets , including Type and Length fields ( 8 ). 	100	0
7487	Auth Type	Auth Type : Indicates which type of authentication to use . The same values are used as are defined in Section 4.1 of [ RFC5880 ]. If the egress LSR does not support this type , an " OAM Problem/Unsupported BFD Authentication Type " error MUST be generated . 	231	0
7487	Auth Key ID	Auth Key ID : Indicates which authentication key or password ( depending on Auth Type ) should be used . How the key exchange is performed is out of scope of this document . If the egress LSR does not support this Auth Key ID , an " OAM Problem/Mismatch of BFD Authentication Key ID " error MUST be generated . 	231	0
7487	Reserved	Reserved : Reserved for future specifications; set to 0 on transmission and ignored when received . 	500	0
7487	Length	Traffic Class ( TC ): Identifies the TC [ RFC5462 ] for periodic continuity monitoring messages or packets with fault management information . 	231	0
7487	TC	Traffic Class ( TC ): Identifies the TC [ RFC5462 ] for periodic continuity monitoring messages or packets with fault management information . 	231	0
7487	Length	Length : Indicates the TLV total length in octets , including sub-TLVs as well as Type and Length fields . 	100	0
7487	D	o D : Delay inferred/direct ( 0=INFERRED , 1=DIRECT ). If the egress LSR does not support the specified mode , an " OAM Problem/ Unsupported Delay Mode " error MUST be generated . 	210	0
7487	L	o L : Loss inferred/direct ( 0=INFERRED , 1=DIRECT ). If the egress LSR does not support the specified mode , an " OAM Problem/Unsupported Loss Mode " error MUST be generated . 	210	0
7487	J	o J : Delay variation/jitter ( 1=ACTIVE , 0=NOT ACTIVE ). If the egress LSR does not support Delay variation measurements and the J flag is set , an " OAM Problem/Delay variation unsupported " error MUST be generated . 	210	0
7487	Y	o Y : Dyadic ( 1=ACTIVE , 0=NOT ACTIVE ). If the egress LSR does not support Dyadic mode and the Y flag is set , an " OAM Problem/Dyadic mode unsupported " error MUST be generated . 	210	0
7487	K	o K : Loopback ( 1=ACTIVE , 0=NOT ACTIVE ). If the egress LSR does not support Loopback mode and the K flag is set , an " OAM Problem/ Loopback mode unsupported " error MUST be generated . 	210	0
7487	C	o C : Combined ( 1=ACTIVE , 0=NOT ACTIVE ). If the egress LSR does not support Combined mode and the C flag is set , an " OAM Problem/ Combined mode unsupported " error MUST be generated . 	210	0
7487	Reserved	Reserved : Reserved for future specifications; set to 0 on transmission and ignored when received . 	500	0
7487	Length	Length : Indicates the length of the parameters in octets , including Type and Length fields ( 20 ). 	100	0
7487	OTF	Origin Timestamp Format ( OTF ): Origin Timestamp Format of the Origin Timestamp field described in [ RFC6374 ]. By default , it is set to IEEE 1588 version 1 . If the egress LSR cannot support this value , an " OAM Problem/Unsupported Timestamp Format " error MUST be generated . 	302	0
7487	T	o T : Traffic-class-specific measurement indicator . Set to 1 when the measurement operation is scoped to packets of a particular traffic class ( Differentiated Service Code Point ( DSCP ) value ) and zero otherwise . When set to 1 , the Differentiated Services ( DS ) field of the message indicates the measured traffic class . By default , it is set to 1 . 	210	0
7487	B	o B : Octet ( byte ) count . When set to 1 , it indicates that the Counter 1-4 fields represent octet counts . When set to 0 , it indicates that the Counter 1-4 fields represent packet counts . By default , it is set to 0 . 	210	0
7487	Reserved	Reserved : Reserved for future specifications; set to 0 on transmission and ignored when received . 	500	0
7487	Measurement Interval	Measurement Interval : The time interval ( in milliseconds ) at which Loss Measurement query messages MUST be sent in both directions . If the egress LSR cannot support the value , it SHOULD reply with a supported interval . By default , it is set to 100 milliseconds as per [ RFC6375 ]. 	120	0
7487	Test Interval	Test Interval : Test messages interval ( in milliseconds ) as described in [ RFC6374 ]. By default , it is set to 10 milliseconds as per [ RFC6375 ]. If the egress LSR cannot support the value , it SHOULD reply with a supported interval . 	122	0
7487	Loss Threshold	Loss Threshold : The threshold value of measured lost packets per measurement over which action(s ) SHOULD be triggered . 	400	0
7487	Length	Length : Indicates the length of the parameters in octets , including Type and Length fields ( 20 ). 	100	0
7487	OTF	OTF : Origin Timestamp Format of the Origin Timestamp field described in [ RFC6374 ]. By default , it is set to IEEE 1588 version 1 . If the egress LSR cannot support this value , an " OAM Problem/Unsupported Timestamp Format " error MUST be generated . 	302	0
7487	T	o T : Traffic-class-specific measurement indicator . Set to 1 when the measurement operation is scoped to packets of a particular traffic class ( Differentiated Services Code Point ( DSCP ) value ) and zero otherwise . When set to 1 , the Differentiated Service ( DS ) field of the message indicates the measured traffic class . By default , it is set to 1 . 	210	0
7487	B	o B : Octet ( byte ) count . When set to 1 , it indicates that the Counter 1-4 fields represent octet counts . When set to 0 , it indicates that the Counter 1-4 fields represent packet counts . By default , it is set to 0 . 	210	0
7487	Reserved	Reserved : Reserved for future specifications; set to 0 on transmission and ignored when received . 	500	0
7487	Measurement Interval	Measurement Interval : The time interval ( in milliseconds ) at which Delay Measurement query messages MUST be sent on both directions . If the egress LSR cannot support the value , it SHOULD reply with a supported interval . By default , it is set to 1000 milliseconds as per [ RFC6375 ]. 	120	0
7487	Test Interval	Test Interval : Test messages interval ( in milliseconds ) as described in [ RFC6374 ]. By default , it is set to 10 milliseconds as per [ RFC6375 ]. If the egress LSR cannot support the value , it SHOULD reply with a supported interval . 	122	0
7487	Delay Threshold	Delay Threshold : The threshold value of measured two-way delay ( in milliseconds ) over which action(s ) SHOULD be triggered . 	122	0
7487	Length	Length : Indicates the TLV total length in octets , including Type and Length fields ( 8 ). 	100	0
7487	E	E : Enable Alarm Indication Signal ( AIS ) and Lock Report ( LKR ) signaling as described in [ RFC6427 ]. The default value is 1 ( enabled ). If the egress MEP does not support FMS signal generation , an " OAM Problem/Fault management signaling unsupported " error MUST be generated . 	210	0
7487	S	S : Indicate to a server MEP that it should transmit AIS and LKR signals on client LSPs . The default value is 0 ( disabled ). If a server MEP , which is capable of generating FMS messages , is for some reason unable to do so for the LSP being signaled an " OAM Problem/Unable to create fault management association " error MUST be generated . 	210	0
7487	T	T : Set timer value , enabled by the configuration of a specific timer value . The Default value is 0 ( disabled ). 	302	0
7487	Refresh Timer	Refresh Timer : Indicates ( in seconds ) the refresh timer of fault indication messages . The value MUST be between 1 to 20 seconds as specified for the Refresh Timer field in [ RFC6427 ]. If the egress LSR cannot support the value , it SHOULD reply with a supported timer value . 	122	0
7494	Profile	o Profile : Each profile is identified by a value specified in Section 3.2 . 	400	0
7494	Profile	* 0 : This refers to the IEEE 802.11 Split MAC Profile with WTP encryption 	302	0
7494	Profile	Profile Type Value Reference Split MAC with WTP encryption 0 RFC 7494 Split MAC with AC encryption 1 RFC 7494 	240	0
7499	Type	Type 	240	0
7499	Length	Length 	100	0
7499	Extended-Type	Extended-Type 	231	0
7499	Code	4 bytes . Integer indicating the code . The values defined in this specification are : 	400	0
7499	Type	Type 	240	0
7499	Length	Length 	100	0
7499	Extended-Type	Extended-Type 	231	0
7499	Value	4 bytes . Total length ( in bytes ) of received Proxy-State attributes ( including headers ). As the RADIUS Length field cannot take values over 4096 bytes , values of Proxy-State-Length MUST be less than that maximum length . 	100	0
7499	Type	Type Name Length Meaning ---- ---- ------ ------- 241.1 Frag-Status 7 Signals fragmentation 241.2 Proxy-State-Length 7 Indicates the length of the received Proxy-State attributes 	100	0
7509	BT	A Post-Repair Loss Count Metrics Report Block is identified by the constant 33 . 	231	0
7509	Reserved	These bits are reserved for future use . They MUST be set to zero by senders and ignored by receivers ( see Section 4.2 of [ RFC6709 ]). 	500	0
7509	begin_seq	The first sequence number that this block reports on . It can remain fixed when calculating metrics over several RTCP reporting intervals . 	200	0
7509	end_seq	end_seq : 16 bits 	400	0
7509	Repaired loss count	Total number of packets fully repaired after applying one or more loss-repair methods , e.g ., FEC and/or retransmission , during the actual sequence number range indicated by begin_seq and end_seq . Note that this metric MUST measure only primary source RTP packets . 	200	0
7510	UDP Length	The usage of this field is in accordance with the current UDP specification [ RFC768 ]. 	231	0
7510	UDP Checksum	For IPv4 UDP encapsulation , this field is RECOMMENDED to be set to zero for performance or implementation reasons because the IPv4 header includes a checksum and use of the UDP checksum is optional with IPv4 , unless checksum protection of VPN labels is important ( see Section 6 ). For IPv6 UDP encapsulation , the IPv6 header does not include a checksum , so this field MUST contain a UDP checksum that MUST be used as specified in [ RFC768 ] and [ RFC2460 ] unless one of the exceptions that allows use of UDP zero-checksum mode ( as specified in [ RFC6935 ]) applies . See Section 3.1 for specification of these exceptions and additional requirements that apply when UDP zero-checksum mode is used for MPLS-in-UDP traffic over IPv6 . 	301	0
7510	MPLS Label Stack	MPLS Label Stack 	231	0
7510	Message Body	Message Body 	400	0
7511	Option Type	8-bit identifier of the type of option . The option identifier 0x0A ( On Air ) is proposed for Scenic Routing . 	231	0
7511	Option Length	8-bit unsigned integer . The length of the option in octets ( excluding the Option Type and Option Length fields ). The value MUST be greater than 0 . 	100	0
7511	SRO Param	8-bit identifier indicating Scenic Routing parameters encoded as a bit string . 	231	0
7514	Type	Type 	240	0
7514	Code	Code 	231	0
7514	Checksum	The checksum is the 16-bit ones's complement of the one's complement sum of the ICMP message starting with the ICMP type field . When an RECN message is encapsulated in an IPv6 packet , the computation includes a " pseudo-header " of IPv6 header fields as specified in Section 8.1 of [ RFC2460 ]. For computing the checksum , the checksum field is first set to zero . 	301	0
7514	Explicit Notification	A 4-byte value that conveys an explicit notification in the ASCII format defined in [ RFC20 ]. This field MUST NOT be set to zero . 	302	0
7553	Priority	This field holds the priority of the target URI in this RR . Its range is 0-65535 . A client MUST attempt to contact the URI with the lowest-numbered priority it can reach; URIs with the same priority SHOULD be selected according to probabilities defined by the weight field . 	230	0
7553	Weight	This field holds the server selection mechanism . The weight field specifies a relative weight for entries with the same priority . Larger weights SHOULD be given a proportionately higher probability of being selected . The range of this number is 0-65535 . 	231	0
7553	Target	This field holds the URI of the target , enclosed in double-quote characters ('"'), where the URI is as specified in RFC 3986 [ RFC3986 ]. Resolution of the URI is according to the definitions for the Scheme of the URI . 	230	0
7553	Priority	The remaining data in the RDATA contains the Target field . The Target field contains the URI as a sequence of octets ( without the enclosing double-quote characters used in the presentation format ). 	400	0
7555	Address Type	The type and length of the address found in the in the Destination IP Address and Next Hop IP Addresses fields . The values are shared with the Downstream Mapping Address Type Registry . 	231	0
7555	Reply Mode	The reply mode to be sent in the MPLS Echo Request message; the values are as specified in [ RFC4379 ]. 	301	0
7555	Proxy Flags	The Proxy Request Initiator sets zero , one , or more of these flags to request actions at the Proxy LSR . 	302	0
7555	TTL	The TTL to be used in the label stack entry corresponding to the topmost FEC in the MPLS Echo Request packet . Valid values are in the range [ 1,255 ]. 	120	0
7555	Source UDP Port	Source UDP Port 	302	0
7555	Global Flags	Global Flags 	302	0
7555	MPLS Payload Size	Used to request that the MPLS payload ( IP header + UDP header + MPLS Echo Request ) be padded using a zero-filled Pad TLV so that the IP header , UDP header , and MPLS Echo Request total the specified size . Having the field set to zero means no size request is being made . If the requested size is less than the minimum size required to form the MPLS Echo Request , the request will be treated as a best-effort request with the Proxy LSR building the smallest possible packet ( i.e ., not using a Pad TLV ). The IP header DF bit MUST be set when this field is non-zero . 	400	0
7555	Destination IP Address	If the Address Type is IPv4 , an address from the range 127/8; if the Address Type is IPv6 , an address from the range :: ffff:7f00:0/104 	230	0
7555	Sub-TLVs	Sub-TLVs 	231	0
7555	Address Type	Type Type of Next Hop Addr Length Interface Field ( IF ) Length 1 IPv4 Numbered 4 4 2 IPv4 Unnumbered 4 4 3 IPv6 Numbered 16 16 4 IPv6 Unnumbered 16 4 5 Reserved 6 IPv4 Protocol Adj 4 0 7 IPv6 Protocol Adj 16 0 	240	0
7555	Address Type	Address Type 	240	0
7555	Upstream Address	The address of the immediate upstream neighbor for the topmost FEC in the FEC stack . If the protocol adjacency exists by which the label for this FEC was exchanged , this address MUST be the address used in that protocol exchange . 	230	0
7555	Local Address	The local address used in the protocol adjacency by which the label for this FEC was exchanged . 	230	0
7555	Downstream Address	The address of an immediate downstream neighbor for the topmost FEC in the FEC stack . If the protocol adjacency exists by which the label for this FEC was exchanged , this address MUST be the address used in that protocol exchange . 	230	0
7555	Local Address	The local address used in the protocol adjacency by which the label for this FEC was exchanged . 	230	0
7555	Proxy Flags	IANA has created and maintains a new registry for the Proxy Flags that are used with the Proxy Echo Parameters TLV . See Section 5.1 for details . The registry is in the " Multi-Protocol Label Switching ( MPLS ) Label Switched Paths ( LSPs ) Ping Parameters " registry in the " Multiprotocol Label Switching Architecture ( MPLS )" name space . The registration procedure is Standards Action [ RFC5226 ]. The initial values are as follows . 	231	0
7557	Type	Type The type of the sub-TLV . 	231	0
7557	Length	Length The length of the body , in octets , exclusive of the Type and Length fields . 	100	0
7557	Type	Type Set to 0 to indicate a Pad1 sub-TLV . 	302	0
7557	Type	Type Set to 1 to indicate a PadN sub-TLV . 	302	0
7557	Length	Length The length of the body , in octets , exclusive of the Type and Length fields . 	100	0
7563	ANI Type	ANI Length : Total length of this sub-option in octets , excluding the ANI Type and ANI Length fields . 	100	0
7563	ANI Length	ANI Length : Total length of this sub-option in octets , excluding the ANI Type and ANI Length fields . 	100	0
7563	Format	Format : This specifies the encoding format of the civic location . The value 0 is defined in this specification as described below . The remaining values ( 1 through 255 ) are reserved . 	303	0
7563	Reserved	Reserved : This MUST be set to zero when sending and ignored when received . 	500	0
7563	civic location	civic location : This field will contain the civic location . The format ( encoding ) type is specified in the format field of this sub-option . Note that the length SHALL NOT exceed 253 bytes . 	400	0
7563	ANI Type	ANI Length : Total length of this sub-option in octets , excluding the ANI Type and ANI Length fields . The value is always 2 . 	100	0
7563	ANI Length	ANI Length : Total length of this sub-option in octets , excluding the ANI Type and ANI Length fields . The value is always 2 . 	100	0
7563	group identifier	group identifier : This is a 3-octet unsigned integer value assigned to a group of MAGs . 	231	0
7563	ANI Type	ANI Length : Total length of this sub-option in octets , excluding the ANI Type and ANI Length fields . The value is always 2 . 	100	0
7563	ANI Length	ANI Length : Total length of this sub-option in octets , excluding the ANI Type and ANI Length fields . The value is always 2 . 	100	0
7563	civic location	* civic location 	230	0
7563	civic location	* civic location 	230	0
7570	Reserved	Reserved : Reserved MUST be set to 0 when the subobject is inserted in the ERO , MUST NOT be changed when a node processes the ERO , and MUST be ignored on the node addressed by the preceding ERO subobjects . 	500	0
7570	R	R : This bit reflects the LSP_REQUIRED_ATTRIBUTE and LSP_ATTRIBUTE semantic defined in [ RFC5420 ]. When set , it indicates required hop attributes to be processed by the node . When cleared , it indicates that the hop attributes are not required as described in Section 2.3 . 	210	0
7570	Reserved	Reserved : Reserved MUST be set to 0 when the subobject is inserted in the RRO , MUST NOT be changed when a node processes the RRO , and MUST be ignored on the node addressed by the preceding RRO subobjects . 	500	0
7574	HANDSHAKE	For Peer P to establish communication with Peer Q in Swarm S , the peers must first exchange HANDSHAKE messages by means of a handshake procedure . The initiating Peer P needs to know the metadata of Swarm S , which consists of : 	400	0
7574	HAVE	The HAVE message is used to convey which chunks a peer has available for download . The set of chunks it has available may be expressed using different chunk addressing and availability map compression schemes , described in Section 4 . HAVE messages can be used both for sending a complete overview of a peer's chunk availability as well as for updates to that set . 	400	0
7574	DATA	The DATA message is used to transfer chunks of content . The DATA message MUST contain the chunk ID of the chunk and chunk itself . A peer MAY send the DATA messages for multiple chunks in the same datagram . The DATA message MAY contain additional information if needed by the specific congestion control mechanism used . At present , PPSPP uses LEDBAT [ RFC6817 ] for congestion control , which requires the current system time to be sent along with the DATA message , so the current system time MUST be included . 	301	0
7574	ACK	ACK messages MUST be sent to acknowledge received chunks if PPSPP is run over an unreliable transport protocol . ACK messages MAY be sent if a reliable transport protocol is used . In the former case , a receiving peer that has successfully checked the integrity of a chunk , or interval of chunks C , MUST send an ACK message containing a chunk specification for C . As LEDBAT is used , an ACK message MUST contain the one-way delay , computed from the peer's current system time received in the DATA message . A peer MAY delay sending ACK messages as defined in the LEDBAT specification [ RFC6817 ]. 	303	0
7574	REQUEST	While bulk download protocols normally do explicit requests for certain ranges of data ( i.e ., use a pull model , for example , BitTorrent [ BITTORRENT ]), live streaming protocols quite often use a push model without requests to save round trips . PPSPP supports both models of operation . 	400	0
7574	PEX_REQ	Peer Exchange ( PEX ) messages are common in many peer-to-peer protocols . They allow peers to exchange the transport addresses of the peers they are currently interacting with , thereby reducing the need to contact a central tracker ( or Distributed Hash Table ) to discovery new peers . The strength of this mechanism is therefore that it enables decentralized peer discovery : after an initial bootstrap , a central tracker is no longer needed . Its weakness is that it enables a number of attacks , so it should not be used on the Internet unless extra security measures are in place . 	231	0
7574	Protocol Options	The HANDSHAKE message in PPSPP can contain the following protocol options . Unless stated otherwise , a protocol option consists of an 8-bit code followed by an 8-bit value . Larger values are all encoded 	231	0
7574	Version	A peer MUST include the maximum version of the PPSPP it supports as the first protocol option in the list . The code for this option is 0 . Defined values are listed in Table 3 . 	220	0
7574	Chunk Size	A peer in a swarm MUST include the chunk size the swarm uses . The code for this option is 9 . Its value is a 32-bit integer denoting the size of the chunks in bytes in big-endian format . When variable chunk sizes are used , this option MUST be set to the special value 0xFFFFFFFF . Section 8.1 explains how content publishers can determine a value for this option . 	100	0
7574	Chunk Size	In general , a UDP datagram containing PPSPP messages SHOULD fit inside a single IP packet , so its maximum size depends on the MTU of the network . If the UDP datagram does not fit , its chance of getting lost in the network increases as the loss of a single fragment of the datagram causes the loss of the complete datagram . 	400	0
7574	HANDSHAKE	A channel is established with a handshake . To start a handshake , the initiating peer needs to know the swarm metadata , defined in Section 3.1 and the IP address and UDP port of a peer . A datagram containing a HANDSHAKE message then looks as follows : 	400	0
7574	Protocol Options	Protocol Options : A list of protocol options encoding the swarm's metadata , as defined in Section 7 . 	400	0
7574	HAVE	A HAVE message ( type 0x03 ) consists of a single chunk specification that states that the sending peer has those chunks and successfully checked their integrity . The single chunk specification represents a consecutive range of verified chunks . A bin consists of a single integer , and a chunk or byte range of two integers , of the width specified by the Chunk Addressing protocol options , encoded big - endian . 	400	0
7574	DATA	A DATA message ( type 0x01 ) consists of a chunk specification , a timestamp , and the actual chunk . In case a datagram contains one DATA message , a sender MUST always put the DATA message in the tail of the datagram . A datagram MAY contain multiple DATA messages when the chunk size is fixed and when none of the DATA messages carry the last chunk , if that is smaller than the chunk size . As LEDBAT congestion control is used , a sender MUST include a timestamp , in 	400	0
7574	ACK	An ACK message ( type 0x02 ) acknowledges data that was received from its addressee; to comply with the LEDBAT delay-based congestion control , an ACK message consists of a chunk specification and a timestamp representing a one-way delay sample . The one-way delay sample is a 64-bit integer with microsecond accuracy , and it is computed from the timestamp received from the previous DATA message containing the chunk being acknowledged following the LEDBAT specification . 	301	0
7574	REQUEST	A REQUEST message ( type 0x08 ) consists of a chunk specification for the chunks the requester wants to download . 	400	0
7574	PEX_REQ	A PEX_REQ ( 0x06 ) message has no payload . A PEX_RESv4 ( 0x05 ) message consists of an IPv4 address in big-endian format followed by a UDP port number in big-endian format . A PEX_RESv6 ( 0x0c ) message contains a 128-bit IPv6 address instead of an IPv4 one . If a PEX_REQ message does not originate from a private , unique-local , link-local , or multicast address [ RFC1918 ] [ RFC4193 ] [ RFC4291 ], then the PEX_RES* messages sent in reply MUST NOT contain such addresses . This is to prevent leaking of internal addresses to external peers . 	400	0
7574	Version	Version : 1 	220	0
7574	Chunk Size	The receiving peer MAY respond , in which case the returned datagram MUST consist of the channel ID from the sender's HANDSHAKE message ( 0x00000001 ); a HANDSHAKE message , whose payload is a locally unused; a random channel ID ( 0x00000008 ); and a list of protocol options; followed by any other messages it wants to send . 	303	0
7574	HANDSHAKE	o Secured against DoS Amplification attacks as described in Section 12.1 . 	400	0
7574	HAVE	o Threat HAVE.1 : Malicious Peer T can claim to have content that it does not . Subsequently , Peer T won't respond to requests . 	302	0
7574	DATA	12.6.3 . DATA 	240	0
7574	ACK	12.6.4 . ACK 	240	0
7574	REQUEST	o Threat REQUEST.1 : Peer T could request lots from Peer A , leaving Peer A without resources for others . 	240	0
7579	Encoding	This section provides encodings for the information elements defined in [ RFC7446 ] that have applicability to WSON . The encodings are designed to be suitable for use in the GMPLS routing protocols OSPF [ RFC4203 ] and IS-IS [ RFC5307 ] and in the PCE Communication Protocol ( PCEP ) [ RFC5440 ]. Note that the information distributed in [ RFC4203 ] and [ RFC5307 ] is arranged via the nesting of sub-TLVs within TLVs; this document defines elements to be used within such constructs . Specific constructs of sub-TLVs and the nesting of sub-TLVs of the information element defined by this document will be defined in the respective protocol enhancement documents . 	400	0
7579	Conn	Connectivity ( Conn ) ( 4 bits ) is the device type . 	231	0
7579	0	1 - the device is switched ( e.g ., Reconfigurable Optical Add/Drop Multiplexer / Optical Cross-Connect ( ROADM/OXC )) 	210	0
7579	MatrixID	MatrixID : either is the value in the corresponding Connectivity Matrix Field or takes the value 0xFF to indicate the restriction applies to the port regardless of any connectivity matrix . 	231	0
7579	RstType	RstType ( Restriction Type ) can take the following values and meanings : 	231	0
7579	Link Set Field	We will frequently need to describe properties of groups of links . To do so efficiently , we can make use of a link set concept similar to the label set concept of [ RFC3471 ]. The Link Set Field is used in the < ConnectivityMatrix >, which is defined in Section 2.1 . The information carried in a link set is defined as follows : 	400	0
7579	Action	Action : 8 bits 	400	0
7579	0	Indicates that one or more link identifiers are included in the link set . Each identifies a separate link that is part of the set . 	231	0
7579	Dir	Dir : Directionality of the link set ( 2 bits ) 	231	0
7579	Format	Format : The format of the link identifier ( 6 bits ) 	231	0
7579	0	Indicates that the links in the link set are identified by link local identifiers . All link local identifiers are supplied in the context of the advertising node . 	231	0
7579	Length	Length : 16 bits 	100	0
7579	PRI	PRI ( Priority Flags , 8 bits ): A bitmap used to indicate which priorities are being advertised . The bitmap is in ascending order , with the leftmost bit representing priority level 0 ( i.e ., the highest ) and the rightmost bit representing priority level 7 ( i.e ., the lowest ). A bit MUST be set ( 1 ) corresponding to each priority represented in the sub-TLV and MUST NOT be set ( 0 ) when the corresponding priority is not represented . If a label is available at priority M , it MUST be advertised available at each priority N < M . At least one priority level MUST be advertised . 	231	0
7579	PRI	PRI ( Priority Flags , 8 bits ): A bitmap used to indicate which priorities are being advertised . The bitmap is in ascending order , with the leftmost bit representing priority level 0 ( i.e ., the highest ) and the rightmost bit representing priority level 7 ( i.e ., the lowest ). A bit MUST be set ( 1 ) corresponding to each priority represented in the sub-TLV and MUST NOT be set ( 0 ) when the corresponding priority is not represented . If a label is available at priority M , it MUST be advertised available at each priority N < M . At least one priority level MUST be advertised . 	231	0
7579	Label Set Field	The Label Set Field is used within the Available Labels Field or the Shared Backup Labels Field , defined in Sections 2.4 and 2.5 , respectively . It is also used within SIMPLE_LABEL , LABEL_RANGE , or SIMPLE_LABEL & CHANNEL_COUNT , defined in Sections 2.2.1 , 2.2.3 , and 2.2.4 , respectively . 	400	0
7579	4	Num Labels is generally the number of labels . It has a specific meaning depending on the Action value . See Sections 2.6.1 , 2.6.2 , and 2.6.3 for details . Num Labels is a 12-bit integer . 	231	0
7579	Link Set Field	Suppose that we wish to describe a set of input ports that have link local identifiers numbered 3 through 42 . In the Link Set Field , we set Action = 1 to denote an inclusive range , Dir = 1 to denote input links , and Format = 0 to denote link local identifiers . Thus , we have : 	240	0
7579	Label Set Field	In this example , we use a 40-channel C-Band Dense Wavelength Division Multiplexing ( DWDM ) system with 100 GHz spacing with lowest frequency 192.0 THz ( 1561.4 nm ) and highest frequency 195.9 THz ( 1530.3 nm ). These frequencies correspond to n = - 11 and n = 28 , respectively . Now suppose the following channels are available : 	400	0
7581	Action	Action : 8 bits 	400	0
7581	0	Indicates that the TLV contains one or more RB elements that are included in the list . 	231	0
7581	1	Indicates that the TLV contains one or more ranges of RBs . Each individual range is denoted by two 32-bit RB identifiers . The first 32 bits is the RB identifier for the start of the range , and the next 32 bits is the RB identifier for the end of the range . Note that the Length field is used to determine the number of ranges . 	240	0
7581	C	Set to 0 to denote fixed ( possibly multicast ) connectivity , and set to 1 to denote potential ( switched ) connectivity . Used in Resource Accessibility field . Ignored elsewhere . 	210	0
7581	Reserved	This field is reserved . It MUST be set to zero on transmission and MUST be ignored on receipt . 	500	0
7581	Length	Length : 16 bits 	100	0
7581	C	C ( Connectivity bit ): Connectivity indicates how the input/output ports connect to the resource blocks . 	210	0
7581	I	I ( Input ): 	231	0
7581	O	O ( Output ): 	302	0
7581	B	1 - indicates that a single Wavelength Constraints field represents both Input and Output Wavelength Constraints fields . 	210	0
7581	RB Usage State Bitmap	RB Usage State Bitmap : Variable length but must be a multiple of 4 bytes . 	100	0
7581	I	1 - indicates the presence of the Input Available Wavelength Set Field . 	210	0
7581	O	1 - indicates the presence of the Output Available Wavelength Set Field . 	210	0
7581	B	1 - indicates that a single Available Wavelength Set Field represents both Input and Output Available Wavelength Set Fields . 	210	0
7581	I	1 - indicates if the resource blocks identified in the RB Set Field utilized a shared fiber for input access . 	210	0
7581	O	1 - indicates if the resource blocks identified in the RB Set Field utilized a shared fiber for output access . 	210	0
7581	B	1 - indicates if the resource blocks identified in the RB Set Field utilized a shared fiber for both input and output access . 	210	0
7581	0	Currently , the only valid combinations of ( I,O,B ) are ( 1,0,0 ), ( 0,1,0 ), ( 1,1,0 ), and ( 0,0,1 ). 	210	0
7581	I	I O ----- 0 0 Invalid 	210	0
7581	S	S ( Standard bit ): 	210	0
7581	B	B : means Bidirectional 	231	0
7581	D	S : takes values N ( narrow spectral excursion ) or W ( wide spectral excursion ) 	210	0
7581	S	S : takes values N ( narrow spectral excursion ) or W ( wide spectral excursion ) 	210	0
7581	c	c : Channel Spacing ( GHz ) 	240	0
7581	W	W : takes values S ( short-haul ) or L ( long-haul ) 	210	0
7581	y	y : takes values 1 ( NRZ 2.5G ) or 2 ( NRZ 10G ) 	240	0
7581	t	t : only D value is defined ( link does not contain optical amplifier ) 	302	0
7581	z	z : takes values 2 ([ G.652 ] fibre ), 3 ([ G.653 ] fibre ), or 5 ([ G.655 ] fibre ) 	240	0
7581	v	v : takes values S ( Short wavelength ), C ( Conventional ), or L ( Long wavelength ) 	210	0
7581	B	B : 1 bidirectional , 0 otherwise 	210	0
7581	D	D ( prefix ): 0 reserved , 1 ( D ) 	210	0
7581	S	c : Channel Spacing , 4 bits mapped according to the same definition as in the third figure in Section 3.2 of [ RFC6205 ] ( note that DWDM spacing applies here ). 	400	0
7581	c	c : Channel Spacing , 4 bits mapped according to the same definition as in the third figure in Section 3.2 of [ RFC6205 ] ( note that DWDM spacing applies here ). 	400	0
7581	W	W : 0 reserved , 2 ( S ), 3 ( L ) 	240	0
7581	y	y : 0 reserved , 1 ( 1 ), 2 ( 2 ) 	240	0
7581	t	t : 0 reserved , 4 ( D ) 	302	0
7581	z	z : 0 reserved , 2 ( 2 ), 3 ( 3 ), 5 ( 5 ) 	240	0
7581	v	F ( suffix ): 0 No FEC encoding suffix present , 1 FEC encoding suffix present 	210	0
7581	F	F ( suffix ): 0 No FEC encoding suffix present , 1 FEC encoding suffix present 	210	0
7581	suffix	F ( suffix ): 0 No FEC encoding suffix present , 1 FEC encoding suffix present 	210	0
7581	B	B : means Bidirectional 	231	0
7581	D	S : takes values N ( narrow spectral excursion ) or W ( wide spectral excursion ) 	210	0
7581	S	S : takes values N ( narrow spectral excursion ) or W ( wide spectral excursion ) 	210	0
7581	c	W : takes values C ( link is dispersion compensated ) or U ( link is dispersion uncompensated ) 	210	0
7581	W	W : takes values C ( link is dispersion compensated ) or U ( link is dispersion uncompensated ) 	210	0
7581	y	y : takes values 1 ( NRZ 2.5G ) or 2 ( NRZ 10G ) 	240	0
7581	t	z : takes values 2 ([ G.652 ] fibre ), 3 ([ G.653 ] fibre ), or 5 ([ G.655 ] fibre ) 	240	0
7581	z	z : takes values 2 ([ G.652 ] fibre ), 3 ([ G.653 ] fibre ), or 5 ([ G.655 ] fibre ) 	240	0
7581	v	v : takes values S ( Short wavelength ), C ( Conventional ), or L ( Long wavelength ) 	210	0
7581	B	B : 1 bidirectional , 0 otherwise 	210	0
7581	D	D ( prefix ): 0 reserved , 1 ( D ) 	210	0
7581	S	c : Channel Spacing , 4 bits mapped according to the same definition as in the third figure in Section 3.2 of [ RFC6205 ] ( note that DWDM spacing applies here ). 	400	0
7581	c	c : Channel Spacing , 4 bits mapped according to the same definition as in the third figure in Section 3.2 of [ RFC6205 ] ( note that DWDM spacing applies here ). 	400	0
7581	W	W : 0 reserved , 10 ( C ), 11 ( U ) 	302	0
7581	y	y : 0 reserved , 1 ( 1 ), 2 ( 2 ) 	240	0
7581	t	t : 0 reserved , 1 ( A ) 	210	0
7581	z	z : 0 reserved , 2 ( 2 ), 3 ( 3 ), 5 ( 5 ) 	240	0
7581	v	v : 0 reserved , 1 ( S ), 2 ( C ), 3 ( L ) 	240	0
7581	F	Values not mentioned here are not allowed in this application code . The last 32 bits are reserved and shall be set to zero . 	500	0
7581	suffix	Values not mentioned here are not allowed in this application code . The last 32 bits are reserved and shall be set to zero . 	500	0
7581	P	n : maximum number of channels supported by the application code ( i.e ., an integer number ) 	400	0
7581	B	n : maximum number of channels supported by the application code ( i.e ., an integer number ) 	400	0
7581	n	n : maximum number of channels supported by the application code ( i.e ., an integer number ) 	400	0
7581	W	W : takes values I ( intra-office ), S ( short-haul ), L ( long-haul ), V ( very long-haul ), or U ( ultra long-haul ) 	240	0
7581	x	x : maximum number of spans allowed within the application code ( i.e ., an integer number ) 	100	0
7581	y	y : takes values 1 ( NRZ 2.5G ), 2 ( NRZ 10G ), 9 ( NRZ 25G ), 3 ( NRZ 40G ), or 7 ( RZ 40G ) 	240	0
7581	t	t : takes values A ( power levels suitable for a booster amplifier in the originating ONE and power levels suitable for a pre - amplifier in the terminating ONE ), B ( booster amplifier only ), C ( pre-amplifier only ), or D ( no amplifiers ) 	240	0
7581	z	z : takes values 1 ( 1310 nm sources on [ G.652 ] fibre ), 2 ( 1550 nm sources on [ G.652 ] fibre ), 3 ( 1550 nm sources on [ G.653 ] fibre ), or 5 ( 1550 nm sources on [ G.655 ] fibre ). 	240	0
7581	F	F : FEC encoding 	302	0
7581	D	D : Adaptive dispersion compensation 	210	0
7581	E	E : receiver capable of dispersion compensation 	231	0
7581	r	r : reduced target distance 	302	0
7581	a	a : power levels appropriate to APD receivers 	231	0
7581	b	b : power levels appropriate to PIN receivers 	231	0
7581	p	p ( prefix ): 0 otherwise , 1 Bidirectional ( B ) 	210	0
7581	P	P ( optional ): 0 not present , 2 ( P ). 	210	0
7581	n	n : maximum number of channels ( 10 bits , up to 1023 channels ) 	400	0
7581	W	W : 0 reserved , 1 ( I ), 2 ( S ), 3 ( L ), 4 ( V ), 5 ( U ) 	240	0
7581	x	x : number of spans ( 6 bits , up to 64 spans ) 	100	0
7581	y	y : 0 reserved , 1 ( 1 ), 2 ( 2 ), 3 ( 3 ), 7 ( 7 ), 9 ( 9 ) 	240	0
7581	t	t : 0 reserved , 1 ( A ), 2 ( B ), 3 ( C ), 4 ( D ) 	240	0
7581	z	suffix : a 6-bit bitmap , where a " 1 " in the appropriate slot indicates that the corresponding suffix has been added . 	210	0
7581	suffix	suffix : a 6-bit bitmap , where a " 1 " in the appropriate slot indicates that the corresponding suffix has been added . 	210	0
7581	B	B : Bidirectional 	240	0
7581	S	S : a system using a black link approach 	301	0
7581	C	n : maximum number of channels supported by the application code ( i.e ., an integer number ) 	400	0
7581	n	n : maximum number of channels supported by the application code ( i.e ., an integer number ) 	400	0
7581	W	W : takes values S ( short-haul ) or L ( long-haul ) 	210	0
7581	x	x : maximum number of spans allowed 	100	0
7581	y	y : takes values 0 ( NRZ 1.25G ), 1 ( NRZ 2.5G ), or 2 ( NRZ 10G ). 	240	0
7581	t	z : takes values 1 ( 1310 nm region for [ G.652 ] fibre ), 2 ( ITU-T [ G.652 ] fibre ), 3 ([ G.653 ] fibre ), or 5 ([ G.655 ] fibre ) 	240	0
7581	z	z : takes values 1 ( 1310 nm region for [ G.652 ] fibre ), 2 ( ITU-T [ G.652 ] fibre ), 3 ([ G.653 ] fibre ), or 5 ([ G.655 ] fibre ) 	240	0
7581	F	Since the application codes are very similar to the ones from the [ G.959.1 ] section , most of the fields are reused . The 64-bit Optical Interface Class field is encoded as follows : 	231	0
7581	p	p : 0 no prefix , 1 ( B ) bidirectional , 2 ( S ) black link 	240	0
7581	C	C : 0 reserved , 3 ( C ) 	210	0
7581	n	n : maximum number of channels ( 10 bits , up to 1023 channels ) 	100	0
7581	W	W : 0 reserved , 1 reserved , 2 ( S ), 3 ( L ), > 3 reserved 	240	0
7581	x	x : number of spans ( 6 bits , up to 64 spans ) 	100	0
7581	y	y : 0 ( 0 ), 1 ( 1 ), 2 ( 2 ), > 2 reserved 	240	0
7581	t	t : 4 ( D ), all other values are reserved 	500	0
7581	z	suffix : a 6-bit bitmap , where a " 1 " in the appropriate slot indicates that the corresponding suffix has been added . 	210	0
7581	suffix	suffix : a 6-bit bitmap , where a " 1 " in the appropriate slot indicates that the corresponding suffix has been added . 	210	0
7596	IPv4 Address	PSID : Port Set ID . Allocated to the client; left-padded with zeros to 16 bits . If no PSID is provisioned , all zeros . 	230	0
7596	PSID	PSID : Port Set ID . Allocated to the client; left-padded with zeros to 16 bits . If no PSID is provisioned , all zeros . 	231	0
7598	flags	o flags : 8 bits long; carries flags applicable to the rule . The meanings of the specific bits are explained in Figure 2 . 	231	0
7598	Reserved	o F-flag : 1-bit field that specifies whether the rule is to be used for forwarding ( FMR ). If set , this rule is used as an FMR; if not set , this rule is a BMR only and MUST NOT be used for forwarding . Note : A BMR can also be used as an FMR for forwarding if the F-flag is set . The BMR is determined by a longest-prefix match of the Rule IPv6 prefix against the End-user IPv6 prefix(es ). 	210	0
7598	F	o F-flag : 1-bit field that specifies whether the rule is to be used for forwarding ( FMR ). If set , this rule is used as an FMR; if not set , this rule is a BMR only and MUST NOT be used for forwarding . Note : A BMR can also be used as an FMR for forwarding if the F-flag is set . The BMR is determined by a longest-prefix match of the Rule IPv6 prefix against the End-user IPv6 prefix(es ). 	210	0
7598	PSID	o PSID-len : 8 bits long; specifies the number of significant bits in the PSID field ( also known as ' k '). When set to 0 , the PSID field is to be ignored . After the first ' a ' bits , there are k bits in the port number representing the value of the PSID . Consequently , the address-sharing ratio would be 2^k . 	210	0
7598	PSID	o PSID : 16 bits long . The PSID value algorithmically identifies a set of ports assigned to a CE . The first k bits on the left of this field contain the PSID binary value . The remaining ( 16 - k ) bits on the right are padding zeros . 	400	0
7600	encapsulated 4rd rule options	o encapsulated 4rd rule options : The OPTION_4RD DHCPv6 option contains at least one encapsulated OPTION_4RD_MAP_RULE option and a maximum of one encapsulated OPTION_4RD_NON_MAP_RULE option . Since DHCP servers normally send whatever options the operator configures , operators are advised to configure these options appropriately . DHCP servers MAY check to see that the configuration follows these rules and notify the operator in an implementation-dependent manner if the settings for these options aren't valid . The length of encapsulated options is in octets . 	240	0
7600	W	o W : WKP authorized , = 1 if set 	302	0
7600	H	o H : Hub-and-spoke topology (= 1 if Yes ) 	302	0
7600	T	o T : Traffic Class flag (= 1 if a Tunnel Traffic Class is provided ) 	210	0
7609	Link number	o Link number : This is a 1-byte value that identifies an SMC-R link within a link group . Both the server and the client use this number to distinguish an SMC-R link from other links within the same link group . It is only unique within a link group . In order to prevent timing windows that may occur when a server creates a new link while the client is still cleaning up a previously existing link , link numbers cannot be reused until the entire link numbering space has been exhausted . 	400	0
7609	Instance ID	A 2-byte instance count that ensures that if the same RNIC MAC is later used in the peer ID for a different TCP/IP stack -- for example , if an RNIC is redeployed to another stack -- the values are unique . It also ensures that if a TCP/IP stack is restarted , the instance ID changes . The value is implementation defined , with one suggestion being 2 bytes of the system clock . 	200	0
7609	Length	The length of this CLC message . If this is an IPv4 flow , this value is 52 . Otherwise , it is variable , depending upon how many prefixes are listed . 	100	0
7609	Version	Version of the SMC-R protocol . Version 1 is the only currently defined value . 	220	0
7609	IPv4 Subnet Mask	If this message is flowing over an IPv4 TCP connection , the value of the subnet mask associated with the interface over which the client sent this message . If this is an IPv6 flow , this field is all zeros . 	302	0
7609	IPv4 Mask Lgth	If this message is flowing over an IPv4 TCP connection , the number of significant bits in the IPv4 Subnet Mask field . If this is an IPv6 flow , this field is zero . 	303	0
7609	Num IPv6 prfx	If this message is flowing over an IPv6 TCP connection , the number of IPv6 prefixes that follow , with a maximum value of 8 . If this is an IPv4 flow , this field is zero and is immediately followed by the ending eye catcher . 	301	0
7609	Length	Length 	100	0
7609	Version	Version of the SMC-R protocol . Version 1 is the only currently defined value . 	220	0
7609	MTU	An enumerated value indicating this peer's QP MTU size . The two peers exchange their MTU values , and whichever value is smaller will be used for the QP . This field should only be validated in the first contact exchange . 	200	0
7609	Server's initial packet sequence number	The starting packet sequence number that this peer will use when sending to the other peer , so that the other peer can prepare its QP for the sequence number to expect . 	200	0
7609	Length	Length 	100	0
7609	Version	Version of the SMC-R protocol . Version 1 is the only currently defined value . 	220	0
7609	MTU	An enumerated value indicating this peer's QP MTU size . The two peers exchange their MTU values , and whichever value is smaller will be used for the QP . The values are enumerated in Appendix A.2.3 . This value should only be validated in the first contact exchange . 	240	0
7609	Client's initial packet sequence number	The starting packet sequence number that this peer will use when sending to the other peer , so that the other peer can prepare its QP for the sequence number to expect . 	200	0
7609	Length	Length 	100	0
7609	Version	Version of the SMC-R protocol . Version 1 is the only currently defined value . 	220	0
7609	Peer Diagnosis Information	4 bytes of diagnosis information provided by the peer . These values are defined by the individual peers , and it is necessary to consult the peer's system documentation to interpret the results . 	400	0
7609	Length	Length 	100	0
7609	R	R 	302	0
7609	Link number	An identifier assigned by the server that uniquely identifies the link within the link group . This identifier is ONLY unique within a link group . Provided by the server and echoed back by the client . 	230	0
7609	Max links	The maximum number of links the sender can support in a link group . The maximum for this link group is the smaller of the values provided by the two peers . 	400	0
7609	Length	Length 	100	0
7609	RsnCode	If the Z ( rejection ) flag is set , this field provides the reason code . Values can be : 	240	0
7609	R	R 	302	0
7609	Z	Rejection flag . When set on reply , indicates that the server's ADD LINK was rejected by the client . When this flag is set , the reason code will also be set . 	301	0
7609	Link number	An identifier for the new SMC-R link . This is assigned by the server and uniquely identifies the link within the link group . This identifier is ONLY unique within a link group . Provided by the server and echoed back by the client . 	231	0
7609	MTU	An enumerated value indicating this peer's QP MTU size . The two peers exchange their MTU values , and whichever value is smaller will be used for the QP . The values are enumerated in Appendix A.2.3 . 	240	0
7609	Initial PSN	The starting packet sequence number ( PSN ) that this peer will use when sending to the other peer , so that the other peer can prepare its QP for the sequence number to expect . 	200	0
7609	Length	Length 	100	0
7609	R	Reply flag . When set , indicates that this is an ADD LINK CONTINUATION reply . 	302	0
7609	NumRTokens	Number of RTokens remaining to be communicated ( including the ones in this message ). If the value is less than or equal to 2 , this is the last message . If it is greater than 2 , another continuation message will be required , and its value will be the value in this message minus 2 , and so on until all RKeys are communicated . The maximum value for this field is 255 . 	240	0
7609	Reference RKey	The RKey of the RMB as it is already known on the SMC-R link over which this message is being sent . Required so that the peer knows with which RMB to associate the new RToken . 	230	0
7609	New RKey	New RKey 	303	0
7609	Length	Length 	100	0
7609	R	R 	302	0
7609	A	" All " flag . When set , indicates that all links in the link group are to be terminated . This terminates the link group . 	210	0
7609	O	Orderly flag . Indicates orderly termination . Orderly termination is generally caused by an operator command rather than an error on the link . When the client requests orderly termination , the server may wait to complete other work before terminating . 	231	0
7609	RsnCode	RsnCode 	302	0
7609	Length	Length 	100	0
7609	R	R 	302	0
7609	Z	Z 	302	0
7609	C	Configuration Retry bit . If this is a negative response and this flag is set , the originator should recalculate the RKey set and retry this exchange as soon as the current configuration change is completed . If this flag is not set on a negative response , the originator must wait for the next natural stimulus ( for example , a new TCP connection started that requires a new RMB ) before retrying . 	210	0
7609	NumTkns	The number of other link/RToken pairs , including those provided in this message , to be communicated . Note that this value does not include the RToken for the link on which this message was sent ( i.e ., the maximum value is 2 ). If this value is 3 or less , this is the only message in the exchange . If this value is greater than 3 , a CONFIRM RKEY CONTINUATION message will be required . 	400	0
7609	New RMB virtual address for this link	The new RMB's virtual address as assigned on the link over which this message is being sent . 	230	0
7609	Link number	Link number 	231	0
7609	RMB's virtual address for the specified link	The virtual address used to reach the RMB over the link whose number was specified in the Link number field . 	230	0
7609	Length	Length 	100	0
7609	R	Reply flag . When set , indicates that this is a CONFIRM RKEY CONTINUATION reply . 	302	0
7609	Z	Z 	302	0
7609	NumTknsLeft	The number of link/RToken pairs , including those provided in this message , that are remaining to be communicated . If this value is 3 or less , this is the last message in the exchange . If this value is greater than 3 , another CONFIRM RKEY CONTINUATION message will be required . Note that in this version of the architecture , eight is the maximum number of links supported in a link group . 	303	0
7609	Length	Length 	100	0
7609	R	R 	302	0
7609	Z	Z 	302	0
7609	Count	Count 	202	0
7609	Error Mask	If this is a negative response , indicates which RMBs were not successfully deleted . Each bit corresponds to a listed RMB; for example , b'01010000 ' indicates that the second and fourth RKeys weren't successfully deleted . 	210	0
7609	Length	Length 	100	0
7609	R	R 	302	0
7609	Type = x'FE '	This type number has the two high-order bits turned on to enable processing to quickly distinguish it from an LLC message . 	231	0
7609	Sequence number	A 2-byte unsigned integer that represents a wrapping sequence number . The initial value is 1 , and this value can wrap to 0 . Incremented with every control message sent , except for the failover data validation message , and used to guard against processing an old control message out of sequence . Also used in failover data validation . In normal usage , if this number is less 	201	0
7609	SMC-R alert token	The endpoint-assigned alert token that identifies to which TCP connection on the link group this control message refers . 	230	0
7609	Producer cursor wrap seqno	A 2-byte unsigned integer that represents a wrapping counter incremented by the producer whenever the data written into this RMBE receive buffer causes a wrap ( i.e ., the producer cursor wraps ). This is used by the receiver to determine when new data is available even though the cursors appear unchanged , such as when a full window size write is completed ( producer cursor of this RMBE sent by peer = local consumer cursor ) or in scenarios where the producer cursor sent for this RMBE < local consumer cursor . 	301	0
7609	Producer Cursor	A 4-byte unsigned integer that is a wrapping offset into the RMBE data area . Points to the next byte of data to be written by the sender . Can advance up to the receiver's consumer cursor as known by the sender . When the urgent data present indicator is on , points 1 byte beyond the last byte of urgent data . When computing this cursor , the presence of the eye catcher in the RMBE data area must be accounted for . The first writable data location in the RMBE is at offset 4 , so this cursor begins at 4 and wraps to 4 . 	230	0
7609	Consumer cursor wrap seqno	A 2-byte unsigned integer that mirrors the value of the producer cursor wrap sequence number when the last read from this RMBE occurred . Used as an indicator of how far along the consumer is in reading data ( i.e ., processed last wrap point or not ). The producer side can use this indicator to detect whether or not more data can be written to the partner in full window write scenarios ( where the producer cursor = consumer cursor as known on the 	200	0
7609	Consumer Cursor	A 4-byte unsigned integer that is a wrapping offset into the sender's RMBE data area . Points to the offset of the next byte of data to be consumed by the peer in its own RMBE . When computing this cursor , the presence of the eye catcher in the RMBE data area must be accounted for . The first writable data location in the RMBE is at offset 4 , so this cursor begins at 4 and wraps to 4 . The sender cannot write beyond this cursor into the peer's RMBE without causing data loss . 	110	0
7629	Type	Type 	240	0
7629	Type	Type : Multipath-Extension-Type ( 154 ) 	400	0
7629	Subtype	Subtype 	231	0
7629	Length	The length of the extension in octets , excluding Type , Subtype , and Length fields . This field MUST be set to a value of 4 . 	100	0
7629	If-ATT	This 8-bit field identifies the Access Technology type of the interface through which the mobile node is connected . The permitted values for this are from the Access Technology Type registry defined in [ RFC5213 ]. 	231	0
7629	If-Label	This 8-bit field represents the interface label represented as an unsigned integer . The mobile node identifies the label for each of the interfaces through which it registers a CoA with the home agent . When using static traffic flow policies on the mobile node and the home agent , the label can be used for indexing forwarding policies . For example , the operator may have a policy that binds an IP flow " F1 " to any interface with the label " Blue ". When a registration through an interface matching the label " Blue " gets activated , the home agent and the mobile node establish an IP tunnel and the tunnel is marked with that label . Both the home agent and the mobile node generate traffic rules for forwarding IP flow traffic " F1 " through the mobile IP tunnel matching the label " Blue ". The permitted values for If-Label are 1 through 255 . 	231	0
7629	B	The ( B ) flag , if set to a value of ( 1 ), notifies the home agent to update the binding lifetime of all the mobile node's bindings upon accepting this request . The ( B ) flag MUST NOT be set to a value of ( 1 ) if the value of the Registration Overwrite Flag ( O ) flag is set to a value of ( 1 ). 	210	0
7629	O	The ( O ) flag , if set to a value of ( 1 ), notifies the home agent that upon accepting this request it should replace all of the mobile node's existing bindings with the new binding that will be created upon accepting this request . The ( O ) flag MUST NOT be set to a value of ( 1 ) if the value of the Bulk Re-registration Flag ( B ) is set to a value of ( 1 ). This flag MUST be set to a value of ( 0 ) in De-Registration requests . 	210	0
7629	Reserved	This 6-bit field is unused for now . The value MUST be initialized to ( 0 ) by the sender and MUST be ignored by the receiver . 	500	0
7629	Type	Type 	240	0
7629	Type	Type : Multipath-Extension-Type ( 154 ) 	400	0
7629	Subtype	Subtype 	231	0
7629	Length	The length of the extension in octets , excluding Type , Subtype , and Length fields . 	100	0
7629	Action	The Action field identifies the traffic rule that needs to be enforced . Following are the possible values . 	231	0
7629	BID Count	Total number of binding identifiers that follow this field . The permitted values for this field are 1 through 8; each binding identifier is represented as an unsigned integer in a single octet field . There is no delimiter between two binding identifier values; they are spaced consecutively . 	231	0
7629	TS Format	An 8-bit unsigned integer indicating the Traffic Selector ( TS ) Format . The value ( 0 ) is reserved and MUST NOT be used . When the value of the TS Format field is set to ( 1 ), the format that follows is the IPv4 Binary Traffic Selector specified in Section 3.1 of [ RFC6088 ], and when the value of the TS Format field is set to ( 2 ), the format that follows is the IPv6 Binary Traffic Selector specified in Section 3.2 of [ RFC6088 ]. The IPv6 traffic selectors are only relevant when the mobile node registers IPv6 prefixes per [ RFC5454 ]. 	302	0
7629	Traffic Selector	A variable-length opaque field for including the traffic specification identified by the TS Format field . It identifies the traffic selectors for matching the IP traffic and binding them to specific binding identifiers . 	400	0
7629	Action	o Action 1 : This specification defines two new Mobile IP extensions , the Multipath Extension and the Flow-Binding Extension . The format of the Multipath Extension is described in Section 4.1 , and the format of the Flow-Binding Extension is described in Section 4.2 . Both of these extensions are non-skippable extensions to the Mobile IPv4 header in accordance to the long extension format of [ RFC5944 ]. Both of these extensions use a common Type value , Multipath-Extension ( 154 ), but are identified using different Subtype values . The Type value 154 for these extensions has been allocated from the " Extensions to Mobile IP Registration Messages " registry at the URL < http://www.iana.org/assignments/mobileip-numbers >. The field " Permitted for Notification Messages " for this extension MUST be set to " N ". 	400	0
7629	Action	o Action 2 : This specification defines a new message subtype space , Multipath Extension subtype . This field is described in Section 4.1 . The values for this subtype field are managed by IANA under the " Multipath Extension subtypes ( Value 154 )" registry . This specification reserves the following Type values . Approvals of new Multipath Extension subtype values are to be made through IANA Expert Review [ RFC5226 ]. 	240	0
7629	Action	o Action 3 : This document defines new status code values , MULTIPATH_NOT_ALLOWED ( 152 ) and INVALID_FB_IDENTIFIER ( 153 ), for use by the home agent in the Code field of the Registration Reply , as described in Section 4.3 . These values have been assigned from the " Registration denied by the home agent " registry at < http://www.iana.org/assignments/mobileip-numbers >. 	231	0
7651	Attribute Type	Attribute Type ( 15 bits ) 20 	231	0
7651	Length	Length ( 2 octets ) Length of the IPv4 address field that follows . Possible values are ( 0 ) and ( 4 ). A value of ( 4 ) indicates the size of the 4-octet IPv4 address that follows . A value of ( 0 ) indicates that it's an empty attribute with a zero-length IPv4 address field primarily used as a request indicator . 	100	0
7651	IPv4 Address	IPv4 Address ( 4 octets ) An IPv4 address of the P-CSCF server . 	230	0
7651	Attribute Type	Attribute Type ( 15 bits ) 21 	231	0
7651	Length	Length ( 2 octets ) Length of the IPv6 address field that follows . Possible values are ( 0 ) and ( 16 ). A value of ( 16 ) indicates the size of the 16-octet IPv6 address that follows . A value of ( 0 ) indicates that it's an empty attribute with a zero-length IPv6 address field primarily used as a request indicator . 	100	0
7651	IPv6 Address	IPv6 Address ( 16 octets ) An IPv6 address of the P-CSCF server . 	230	0
7652	Session ID	Sequence Number : This field contains a 32-bit sequence number . A sequence number needs to be incremented on every new ( non-retransmission ) outgoing PA message in order to provide an ordering guarantee for PA messages . 	200	0
7652	Sequence Number	Sequence Number : This field contains a 32-bit sequence number . A sequence number needs to be incremented on every new ( non-retransmission ) outgoing PA message in order to provide an ordering guarantee for PA messages . 	200	0
7652	Option Code	Reserved : 8 bits . MUST be set to zero on transmission and MUST be ignored on reception . 	500	0
7652	Reserved	Reserved : 8 bits . MUST be set to zero on transmission and MUST be ignored on reception . 	500	0
7652	Nonce	Nonce : A random 32-bit number that is transported within a PA-Initiation message and the corresponding reply message from the PCP server . 	400	0
7652	Option Code	Reserved : 8 bits . MUST be set to zero on transmission and MUST be ignored on reception . 	500	0
7652	Reserved	Reserved : 8 bits . MUST be set to zero on transmission and MUST be ignored on reception . 	500	0
7652	Session ID	Session ID : A 32-bit field used to identify the session to which the message belongs and identify the secret key used to create the message digest appended to the PCP message . 	230	0
7652	Sequence Number	Sequence Number : A 32-bit sequence number . In this option , a sequence number needs to be incremented on every new ( non-retransmission ) outgoing common PCP message in order to provide an ordering guarantee for common PCP messages . 	200	0
7652	Key ID	Key ID : The ID associated with the transport key used to generate authentication data . This field is filled with zeros if the MSK is directly used to secure the message . 	230	0
7652	Option Code	Reserved : 8 bits . MUST be set to zero on transmission and MUST be ignored on reception . 	500	0
7652	Reserved	Reserved : 8 bits . MUST be set to zero on transmission and MUST be ignored on reception . 	500	0
7652	Key ID	Key ID : The ID associated with the transport key used to generate authentication data . This field is filled with zeros if the MSK is directly used to secure the message . 	230	0
7652	Option Code	Reserved : 8 bits . MUST be set to zero on transmission and MUST be ignored on reception . 	500	0
7652	Reserved	Reserved : 8 bits . MUST be set to zero on transmission and MUST be ignored on reception . 	500	0
7652	EAP Message	EAP Message : The EAP message transferred . Note that this field MUST end on a 32-bit boundary , padded with zeros when necessary . 	301	0
7652	Option Code	Reserved : 8 bits . MUST be set to zero on transmission and MUST be ignored on reception . 	500	0
7652	Reserved	Reserved : 8 bits . MUST be set to zero on transmission and MUST be ignored on reception . 	500	0
7652	PRF	PRF : The pseudorandom function that the sender supports to generate an MSK . This field contains a value indicating Internet Key Exchange Protocol version 2 ( IKEv2 ) Transform Type 2 [ RFC7296 ] [ RFC4868 ]. A PCP implementation MUST support PRF_HMAC_SHA2_256 ( transform ID = 5 ). 	240	0
7652	Option Code	Reserved : 8 bits . MUST be set to zero on transmission and MUST be ignored on reception . 	500	0
7652	Reserved	Reserved : 8 bits . MUST be set to zero on transmission and MUST be ignored on reception . 	500	0
7652	MAC Algorithm ID	MAC Algorithm ID : Indicates the MAC algorithm that the sender supports to generate authentication data . The MAC Algorithm ID field contains a value indicating IKEv2 Transform Type 3 [ RFC7296 ] [ RFC4868 ]. A PCP implementation MUST support AUTH_HMAC_SHA2_256_128 ( transform ID = 12 ). 	240	0
7652	Option Code	Reserved : 8 bits . MUST be set to zero on transmission and MUST be ignored on reception . 	500	0
7652	Reserved	Reserved : 8 bits . MUST be set to zero on transmission and MUST be ignored on reception . 	500	0
7652	Session Lifetime	Session Lifetime : An unsigned 32-bit integer , in seconds , ranging from 0 to 2^32-1 seconds . The lifetime of the PA session , which is decided by the authorization result . 	100	0
7652	Option Code	Reserved : 8 bits . MUST be set to zero on transmission and MUST be ignored on reception . 	500	0
7652	Reserved	Reserved : 8 bits . MUST be set to zero on transmission and MUST be ignored on reception . 	500	0
7652	Received Sequence Number	Received Sequence Number : The sequence number of the last received PA message . 	202	0
7652	Option Code	Reserved : 8 bits . MUST be set to zero on transmission and MUST be ignored on reception . 	500	0
7652	Reserved	Reserved : 8 bits . MUST be set to zero on transmission and MUST be ignored on reception . 	500	0
7652	ID Indicator	ID Indicator : The identity of the authority that issued the EAP credentials to be used to authenticate the client . The field 	230	0
7652	PRF	7.5 . PRF 	240	0
7653	OPTION_LQ_BASE_TIME	The OPTION_LQ_BASE_TIME option is the current time the message was created to be sent by the DHCPv6 server to the requestor of the Active or Bulk Leasequery if the requestor asked for the same in an Active or Bulk Leasequery request . This MUST be an absolute time ( i.e ., seconds since midnight January 1 , 2000 UTC ). All of the other time-based options in the reply message are relative to this time , including OPTION_CLT_TIME [ RFC5007 ]. This time is in the context of the DHCPv6 server that placed this option in a message . 	121	0
7653	OPTION_LQ_START_TIME	The OPTION_LQ_START_TIME option specifies a query start time to the DHCPv6 server . If specified , only bindings that have changed on or after the OPTION_LQ_START_TIME should be included in the response to the query . This option MAY be used in Active or Bulk Leasequery requests made to a DHCPv6 server . 	121	0
7653	OPTION_LQ_END_TIME	The OPTION_LQ_END_TIME option specifies a query end time to the DHCPv6 server . If specified , only bindings that have changed on or before the OPTION_LQ_END_TIME should be included in the response to the query . This option MAY be used in a Bulk Leasequery request , but it MUST NOT be used in an Active Leasequery request . 	121	0
7653	OPTION_LQ_BASE_TIME	OPTION_LQ_BASE_TIME ( 100 ) 	302	0
7653	OPTION_LQ_START_TIME	OPTION_LQ_START_TIME ( 101 ) 	240	0
7653	OPTION_LQ_END_TIME	IANA has assigned new values in the DHCPv6 " Status Codes " registry maintained at < http://www.iana.org/assignments/dhcpv6-parameters >: 	231	0
7684	Length	Length Variable , dependent on sub-TLVs . 	100	0
7684	Length	Length Variable , dependent on sub-TLVs . 	100	0
7689	Type	Type 	240	0
7689	Length	Indicates the total length of the sub-TLV in octets . That is , the combined length of the Type , Length , and Value fields , i.e ., two plus the length of the Value field in octets . 	100	0
7689	Value	Value 	303	0
7689	Padding	Padding 	302	0
7689	W	W ( 1 bit ): 0 denotes requiring the same wavelength in both directions; 1 denotes that different wavelengths on both directions are allowed . 	210	0
7689	Type	Type Name Allowed on Allowed on Allowed on Reference LSP LSP REQUIRED RO LSP ATTRIBUTES ATTRIBUTES Attribute Subobject 	240	0
7689	Value	Value Sub-TLV Type Reference 	231	0
7689	Value	Value Meaning Reference 	400	0
7689	Value	Value Description Reference 	400	0
7710	Type	o Length : 8-bit unsigned integer . The length of the option ( including the Type and Length fields ) in units of 8 bytes . 	100	0
7710	Length	o Length : 8-bit unsigned integer . The length of the option ( including the Type and Length fields ) in units of 8 bytes . 	100	0
7715	Length	Length : The Length field is an unsigned integer that encodes the length of the Status Value following the Length field . The encoded Length varies based on the Addr Family and the number of PLR entries . 	100	0
7715	Addr Family	Addr Family : Two-octet quantity containing a value from IANA's " Address Family Numbers " registry [ AFI ] that encodes the address family for the PLR address encoded in the PLR entry . 	230	0
7715	Num PLR entry	Num PLR entry : Element as an unsigned integer followed by the number of " PLR entry " fields in the format specified below . 	231	0
7715	Reserved	Reserved : 15 bits; MUST be zero on transmit and ignored on receipt . 	500	0
7715	PLR address	PLR address : PLR address encoded according to the Address Family field encoded in the PLR Status Value Element . Note that the length of the PLR address field is specific to the Address Family that is encoded . 	230	0
7715	Length	Length : The Length field is an unsigned integer that encodes the length of the Status Value following the Length field . The encoded Length varies based on the Address Family and is 6 octets for Address Family + IPv4 address and 18 octets for Address Family + IPv6 address . 	100	0
7715	Addr Family	Addr Family : Two-octet quantity containing a value from IANA's " Address Family Numbers " registry [ AFI ] that encodes the address family for the node address . 	230	0
7715	Node address	Node address : Protected node address encoded according to the Address Family field . 	230	0
7715	Length	S bit : Set to 1 to announce and 0 to withdraw the capability ( as per [ RFC5561 ]). 	210	0
7715	Reserved	The above capability can be sent in an LDP Initialization message to announce capability at the session establishment time , or it can be sent in an LDP Capability message to dynamically update ( announce or withdraw ) its capability towards its peer using procedures specified in [ RFC5561 ]. 	303	0
7728	FMT	FMT : Feedback Message Type ( AVPF ) 	231	0
7728	PT	PT : Payload Type ( RTP ) 	400	0
7728	PauseID	All messages defined in this specification ( Section 8 ) contain a PauseID , satisfying the design consideration on sequence numbering ( Section 4.7 ). This PauseID is scoped by and thus a property of the targeted RTP stream ( SSRC ) and is not only a sequence number for individual messages . Instead , it numbers an entire " pause and resume operation " for the RTP stream , typically keeping PauseID constant for multiple , related messages . The PauseID value used during such operation is called the current PauseID . A new " pause and resume operation " is defined to start when the RTP stream sender resumes the RTP stream after it was being paused . The current PauseID is then incremented by one in modulo arithmetic . In the subsequent descriptions below , it is sometimes necessary to refer to PauseID values that were already used as the current PauseID , which is denoted as the past PauseID . It should be noted that since PauseID uses modulo arithmetic , a past PauseID may have a larger value than the current PauseID . Since PauseID uses modulo arithmetic , it is also useful to define what PauseID values are considered " past " to clearly separate it from what could be considered " future " PauseID values . Half of the entire PauseID value range is chosen to represent a past PauseID , while a quarter of the PauseID value range is chosen to represent future values . The remaining quarter of the PauseID value range is intentionally left undefined in that respect . 	400	0
7728	FMT	FMT : The FMT value identifying the PAUSE-RESUME FCI : 9 	231	0
7728	PT	Length : As defined by AVPF , i.e ., the length of this packet in 32-bit words minus one , including the header and any padding . 	100	0
7728	Length	Length : As defined by AVPF , i.e ., the length of this packet in 32-bit words minus one , including the header and any padding . 	100	0
7728	SSRC of packet sender	SSRC of packet sender : The SSRC of the RTP session participant sending the messages in the FCI . Note , for endpoints that have multiple SSRCs in an RTP session , any of its SSRCs MAY be used to send any of the pause message types . 	230	0
7728	SSRC of media source	SSRC of media source : Not used; SHALL be set to 0 . The FCI identifies the SSRC the message is targeted for . 	303	0
7728	Target SSRC	Target SSRC ( 32 bits ): For a PAUSE-RESUME message , this value is the SSRC that the request is intended for . For PAUSED , it MUST be the SSRC being paused . If pausing is the result of a PAUSE request , the value in PAUSED is effectively the same as Target SSRC in a related PAUSE request . For REFUSED , it MUST be the Target SSRC of the PAUSE or RESUME request that cannot change state . A CSRC MUST NOT be used as a target as the interpretation of such a request is unclear . 	303	0
7728	Type	Type ( 4 bits ): The pause feedback type . The values defined in this specification are as follows : 	231	0
7728	Res	Res : ( 4 bits ): Type Specific reserved . It SHALL be ignored by receivers implementing this specification and MUST be set to 0 by senders implementing this specification . 	500	0
7728	Parameter Len	Parameter Len ( 8 bits ): Length of the Type Specific field in 32-bit words . MAY be 0 . 	100	0
7728	PauseID	PauseID ( 16 bits ): Message sequence identification , as described in Section 5.2 . SHALL be incremented by one modulo 2^16 for each new PAUSE message , unless the message is retransmitted . The initial value SHOULD be 0 . The PauseID is scoped by the Target SSRC , meaning that PAUSE , RESUME , and PAUSED messages therefore share the same PauseID space for a specific Target SSRC . 	201	0
7728	Type Specific	Type Specific ( variable ): Defined per pause feedback type . MAY be empty . A receiver implementing this specification MUST be able to skip and ignore any unknown Type Specific data , even for Type values defined in this specification . 	400	0
7731	Option Type	Option Type 0x6D . 	231	0
7731	Opt Data Len	Opt Data Len Length of the Option Data field [ RFC2460 ] in octets . 	100	0
7731	S	S 2-bit unsigned integer . Identifies the length of the seed-id . ' 0 ' indicates that the seed-id is the IPv6 Source Address and not included in the MPL Option . ' 1 ' indicates that the seed-id is a 16-bit unsigned integer . ' 2 ' indicates that the seed-id is a 64-bit unsigned integer . ' 3 ' indicates that the seed-id is a 128-bit unsigned integer . 	210	0
7731	M	M 1-bit flag . ' 1 ' indicates that the value in the sequence field is known to be the largest sequence number that was received from the MPL Seed . 	210	0
7731	V	V 1-bit flag . ' 0 ' indicates that the MPL Option conforms to this specification . MPL Data Messages with an MPL Option in which this flag is set to 1 MUST be dropped . 	210	0
7731	rsv	rsv 4-bit reserved field . MUST be set to 0 on transmission and ignored on reception . 	500	0
7731	sequence	sequence 8-bit unsigned integer . Identifies relative ordering of MPL Data Messages from the MPL Seed identified by the seed-id . 	231	0
7731	Type	Type 159 	220	0
7731	Code	Code 0 	302	0
7731	Checksum	Checksum The ICMP checksum . See [ RFC4443 ]. 	301	0
7731	min-seqno	min-seqno 8-bit unsigned integer . The lower-bound sequence number for the MPL Seed . 	200	0
7731	bm-len	bm-len 6-bit unsigned integer . The size of buffered-mpl-messages in octets . 	100	0
7731	S	S 2-bit unsigned integer . Identifies the length of the seed-id . ' 0 ' indicates that the seed-id value is the IPv6 Source Address and not included in the MPL Seed Info . ' 1 ' indicates that the seed-id value is a 16-bit unsigned integer . ' 2 ' indicates that the seed-id value is a 64-bit unsigned integer . ' 3 ' indicates that the seed-id is a 128-bit unsigned integer . 	210	0
7741	M	Marker bit ( M ): MUST be set for the very last packet of each encoded frame in line with the normal use of the M bit in video formats . This enables a decoder to finish decoding the picture , where it otherwise may need to wait for the next packet to explicitly know that the frame is complete . 	231	0
7741	PT	Payload type ( PT ): The assignment of an RTP payload type for this packet format is outside the scope of this document and will not be specified here . 	231	0
7741	X	X : Extended control bits present . When set to 1 , the extension octet MUST be provided immediately after the mandatory first octet . If the bit is zero , all optional fields MUST be omitted . Note : this X bit is not to be confused with the X bit in the RTP header . 	210	0
7741	R	R : Bit reserved for future use . MUST be set to 0 and MUST be ignored by the receiver . 	500	0
7741	N	N : Non-reference frame . When set to 1 , the frame can be discarded without affecting any other future or past frames . If the reference status of the frame is unknown , this bit SHOULD be set to 0 to avoid discarding frames needed for reference . 	210	0
7741	S	S : Start of VP8 partition . SHOULD be set to 1 when the first payload octet of the RTP packet is the beginning of a new VP8 partition , and MUST NOT be 1 otherwise . The S bit MUST be set to 1 for the first packet of each encoded frame . 	210	0
7741	PID	PID : Partition index . Denotes to which VP8 partition the first payload octet of the packet belongs . The first VP8 partition ( containing modes and motion vectors ) MUST be labeled with PID = 0 . PID SHOULD be incremented by 1 for each subsequent partition , but it MAY be kept at 0 for all packets . PID cannot be larger than 7 . If more than one packet in an encoded frame contains the same PID , the S bit MUST NOT be set for any packet other than the first packet with that PID . 	231	0
7741	I	I : PictureID present . When set to 1 , the PictureID MUST be present after the extension bit field and specified as below . Otherwise , PictureID MUST NOT be present . 	210	0
7741	L	L : TL0PICIDX present . When set to 1 , the TL0PICIDX MUST be present and specified as below , and the T bit MUST be set to 1 . Otherwise , TL0PICIDX MUST NOT be present . 	210	0
7741	T	T : TID present . When set to 1 , the TID/Y/KEYIDX octet MUST be present . The TID|Y part of the octet MUST be specified as below . If K ( below ) is set to 1 but T is set to 0 , the TID/Y/KEYIDX octet MUST be present , but the TID field MUST be ignored . If neither T nor K is set to 1 , the TID/Y/KEYIDX octet MUST NOT be present . 	210	0
7741	K	K : KEYIDX present . When set to 1 , the TID/Y/KEYIDX octet MUST be present . The KEYIDX part of the octet MUST be specified as below . If T ( above ) is set to 1 but K is set to 0 , the TID/Y/KEYIDX octet MUST be present , but the KEYIDX field MUST be ignored . If neither T nor K is set to 1 , the TID/Y/KEYIDX octet MUST NOT be present . 	210	0
7741	RSV	RSV : Bits reserved for future use . MUST be set to 0 and MUST be ignored by the receiver . 	500	0
7741	M	M : The most significant bit of the first octet is an extension flag . If M is set , the remainder of the PictureID field MUST contain 15 bits , else it MUST contain 7 bits . Note : this M bit is not to be confused with the M bit in the RTP header . 	210	0
7741	PictureID	PictureID : 7 or 15 bits ( shown left and right , respectively , in Figure 2 ) not including the M bit . This is a running index of the frames , which MAY start at a random value , MUST increase by 1 for each subsequent frame , and MUST wrap to 0 after reaching the maximum ID ( all bits set ). The 7 or 15 bits of the PictureID go from most significant to least significant , beginning with the first bit after the M bit . The sender chooses a 7 - or 15-bit index and sets the M bit accordingly . The receiver MUST NOT assume that the number of bits in PictureID stays the same through the session . Having sent a 7-bit PictureID with all bits set to 1 , the sender may either wrap the PictureID to 0 or extend to 15 bits and continue incrementing . 	201	0
7741	TL0PICIDX	TL0PICIDX : 8 bits temporal level zero index . TL0PICIDX is a running index for the temporal base layer frames , i.e ., the frames with TID set to 0 . If TID is larger than 0 , TL0PICIDX indicates on which base-layer frame the current image depends . TL0PICIDX MUST be incremented when TID is 0 . The index MAY start at a random value , and it MUST wrap to 0 after reaching the maximum number 255 . Use of TL0PICIDX depends on the presence of TID . Therefore , it is RECOMMENDED that the TID be used whenever TL0PICIDX is . 	400	0
7741	TID	TID : 2 bits temporal-layer index . The TID field MUST be ignored by the receiver when the T bit is set equal to 0 . The TID field indicates which temporal layer the packet represents . 	210	0
7741	Y	Y : 1 layer sync bit . The Y bit SHOULD be set to 1 if the current frame depends only on the base layer ( TID = 0 ) frame with TL0PICIDX equal to that of the current frame . The Y bit MUST be set to 0 if the current frame depends on any other frame than the base layer ( TID = 0 ) frame with TL0PICIDX equal to that of the current frame . Additionally , the Y bit MUST be set to 0 if any frame following the current frame depends on a non - base-layer frame older than the base-layer frame with TL0PICIDX equal to that of the current frame . If the Y bit is set when the T bit is equal to 0 , the current frame MUST only depend on a past base-layer ( TID=0 ) key frame as signaled by a change in the KEYIDX field . Additionally , this frame MUST NOT depend on any of the three codec buffers ( as defined by [ RFC6386 ]) that have been updated since the last time the KEYIDX field was changed . 	210	0
7741	KEYIDX	KEYIDX : 5 bits temporal key frame index . The KEYIDX field MUST be ignored by the receiver when the K bit is set equal to 0 . The KEYIDX field is a running index for key frames . KEYIDX MAY start at a random value , and it MUST wrap to 0 after reaching the maximum number 31 . When in use , the KEYIDX SHOULD be present for both key frames and interframes . The sender MUST increment KEYIDX for key frames that convey parameter updates critical to the interpretation of subsequent frames , and it SHOULD leave the KEYIDX unchanged for key frames that do not contain these critical updates . If the KEYIDX is present , a receiver SHOULD NOT decode an interframe if it has not received and decoded a key frame with the same KEYIDX after the last KEYIDX wraparound . 	201	0
7741	P	P : Inverse key frame flag . When set to 0 , the current frame is a key frame . When set to 1 , the current frame is an interframe . Defined in [ RFC6386 ] 	210	0
7743	Reserved	K bit : If the K bit is set to 1 , then this address stack entry MUST NOT be stripped from the Relay Node Address Stack during the processing described in Section 4.2 . If the K bit is clear , the entry might be stripped according to the processing described in Section 4.2 . 	210	0
7743	Type	Type TLV Name ---- -------- 32768 Relay Node Address Stack TLV 	231	0
7759	G	G-ACh - Generic Associated Channel 	231	0
7759	TC	TC - Traffic Class 	231	0
7759	Length	Length : The length of the MPLS OAM Function Flags field including the total length of the sub-TLVs in octets . 	100	0
7759	MPLS OAM Function Flags	MPLS OAM Function Flags : A bitmap numbered from left to right as shown in Figure 2 . These flags are managed by IANA ( refer to Section 4.2 ). Flags defined in this document are presented in Table 2 . Undefined flags MUST be set to zero and unknown flags MUST be ignored . The flags indicate what OAM is being configured and direct the presence of optional sub-TLVs as set out below . 	301	0
7759	Length	Version : Identifies the BFD protocol version . If a node does not support a specific BFD version , an error must be generated : " OAM Problem/Unsupported BFD Version ". 	220	0
7759	N	BFD Negotiation ( N ): If set , timer negotiation/renegotiation via BFD Control Messages is enabled . When cleared , it is disabled and timer configuration is achieved using the BFD Negotiation Timer Parameters sub-TLV as described in Section 2.2.3 . 	302	0
7759	S	Symmetric session ( S ): If set , the BFD session MUST use symmetric timing values . If cleared , the BFD session MAY use any timing values either negotiated or explicitly configured . 	302	0
7759	I	Integrity ( I ): If set , BFD Authentication MUST be enabled . If the BFD Configuration sub-TLV does not include a BFD Authentication sub - TLV , the authentication MUST use Keyed SHA1 with an empty pre-shared key ( all 0s ). If the egress LSR does not support BFD Authentication , an error MUST be generated : " OAM Problem/BFD Authentication unsupported ". If the Integrity flag is clear , then Authentication MUST NOT be used . 	302	0
7759	G	Encapsulation Capability ( G ): If set , it shows the capability of encapsulating BFD messages into the G-ACh channel . If both the G bit and U bit are set , configuration gives precedence to the G bit . 	210	0
7759	U	Encapsulation Capability ( U ): If set , it shows the capability of encapsulating BFD messages into IP/UDP packets . If both the G bit and U bit are set , configuration gives precedence to the G bit . 	210	0
7759	B	Bidirectional ( B ): If set , it configures BFD in the Bidirectional mode . If it is not set , it configures BFD in the unidirectional mode . In the second case , the source node does not expect any Discriminator values back from the destination node . 	210	0
7759	Reserved	Reserved : Reserved for future specification; set to 0 on transmission and ignored when received . 	500	0
7759	Length	Local Discriminator : A nonzero discriminator value that is unique in the context of the transmitting system that generates it . It is used to demultiplex multiple BFD sessions between the same pair of systems . 	230	0
7759	Local Discriminator	Local Discriminator : A nonzero discriminator value that is unique in the context of the transmitting system that generates it . It is used to demultiplex multiple BFD sessions between the same pair of systems . 	231	0
7759	Length	Length : Indicates the length of the Value field in octets ( 12 ). Acceptable Min . Asynchronous TX interval : If the S ( symmetric ) flag is set in the BFD Configuration sub-TLV , defined in Section 2.2.1 , it expresses the desired time interval ( in microseconds ) at which the ingress LER intends to both transmit and receive BFD periodic control packets . If the receiving edge LSR cannot support such a value , it SHOULD reply with an interval greater than the one proposed . 	100	0
7759	Acceptable Min . Asynchronous RX interval	Acceptable Min . Asynchronous RX interval : If the S ( symmetric ) flag is set in the BFD Configuration sub-TLV , Figure 3 , this field MUST be equal to Acceptable Min . Asynchronous TX interval and has no additional meaning respect to the one described for " Acceptable Min . Asynchronous TX interval ". 	301	0
7759	Required Echo TX Interval	Required Echo TX Interval : The minimum interval ( in microseconds ) between received BFD Echo packets that this system is capable of supporting , less any jitter applied by the sender as described in Section 6.8.9 of [ RFC5880 ]. This value is also an indication for the receiving system of the minimum interval between transmitted BFD Echo packets . If this value is zero , the transmitting system does not support the receipt of BFD Echo packets . If the receiving system cannot support this value , the " Unsupported BFD TX Echo rate interval " error MUST be generated . By default , the value is set to 0 . 	120	0
7759	Length	Auth Type : Indicates which type of authentication to use . The same values as are defined in Section 4.1 of [ RFC5880 ] are used . Simple Password SHOULD NOT be used if other authentication types are available . 	231	0
7759	Auth Type	Auth Type : Indicates which type of authentication to use . The same values as are defined in Section 4.1 of [ RFC5880 ] are used . Simple Password SHOULD NOT be used if other authentication types are available . 	231	0
7759	Auth Key ID	Auth Key ID : Indicates which authentication key or password ( depending on Auth Type ) should be used . How the key exchange is performed is out of scope of this document . If the egress LSR does not support this Auth Key ID , an " OAM Problem/Mismatch of BFD Authentication Key ID " error MUST be generated . 	231	0
7759	Reserved	Reserved : Reserved for future specification; set to 0 on transmission and ignored when received . 	500	0
7759	Length	TC : Identifies the Traffic Class ( TC ) [ RFC5462 ] for periodic continuity monitoring messages or packets with fault management information . 	231	0
7759	TC	TC : Identifies the Traffic Class ( TC ) [ RFC5462 ] for periodic continuity monitoring messages or packets with fault management information . 	231	0
7759	Length	Length : Indicates the length of the Value field in octets , including PM Configuration Flags and optional sub-TLVs . 	100	0
7759	D	D : Delay inferred/direct ( 0=INFERRED , 1=DIRECT ). If the egress LSR does not support the specified mode , an " OAM Problem/ Unsupported Delay Mode " error MUST be generated . 	210	0
7759	L	L : Loss inferred/direct ( 0=INFERRED , 1=DIRECT ). If the egress LSR does not support the specified mode , an " OAM Problem/ Unsupported Loss Mode " error MUST be generated . 	210	0
7759	J	J : Delay variation/jitter ( 1=ACTIVE , 0=NOT ACTIVE ). If the egress LSR does not support Delay variation measurements and the J flag is set , an " OAM Problem/Delay variation unsupported " error MUST be generated . 	210	0
7759	Y	Y : Dyadic ( 1=ACTIVE , 0=NOT ACTIVE ). If the egress LSR does not support Dyadic mode and the Y flag is set , an " OAM Problem/ Dyadic mode unsupported " error MUST be generated . 	210	0
7759	K	K : Loopback ( 1=ACTIVE , 0=NOT ACTIVE ). If the egress LSR does not support Loopback mode and the K flag is set , an " OAM Problem/ Loopback mode unsupported " error MUST be generated . 	210	0
7759	C	C : Combined ( 1=ACTIVE , 0=NOT ACTIVE ). If the egress LSR does not support Combined mode and the C flag is set , an " OAM Problem/ Combined mode unsupported " error MUST be generated . 	210	0
7759	Reserved	Reserved : Reserved for future specification; set to 0 on transmission and ignored when received . 	500	0
7759	Length	OTF : Origin Timestamp Format of the Origin Timestamp field described in [ RFC6374 ]. By default , it is set to IEEE 1588 version 1 . If the egress LSR cannot support this value , an " OAM Problem/Unsupported Timestamp Format " error MUST be generated . 	302	0
7759	OTF	OTF : Origin Timestamp Format of the Origin Timestamp field described in [ RFC6374 ]. By default , it is set to IEEE 1588 version 1 . If the egress LSR cannot support this value , an " OAM Problem/Unsupported Timestamp Format " error MUST be generated . 	302	0
7759	T	T : Traffic-class-specific measurement indicator . Set to 1 when the measurement operation is scoped to packets of a particular traffic class ( Differentiated Services Code Point value ), and 0 otherwise . When set to 1 , the Differentiated Services ( DS ) field of the message indicates the measured traffic class . By default , it is set to 1 . 	210	0
7759	B	B : Octet ( byte ) count . When set to 1 , indicates that the Counter 1-4 fields represent octet counts . When set to 0 , indicates that the Counter 1-4 fields represent packet counts . By default , it is set to 0 . 	210	0
7759	Reserved	Reserved : Reserved for future specification; set to 0 on transmission and ignored when received . 	500	0
7759	Measurement Interval	Measurement Interval : The time interval ( in milliseconds ) at which Loss Measurement query messages MUST be sent on both directions . If the edge LSR receiving the Path message cannot support such a value , it SHOULD reply with a higher interval . By default , it is set to ( 100 ) as per [ RFC6375 ]. 	120	0
7759	Test Interval	Test Interval : Test messages interval in milliseconds as described in [ RFC6374 ]. By default , it is set to ( 10 ) as per [ RFC6375 ]. 	110	0
7759	Loss Threshold	Loss Threshold : The threshold value of measured lost packets per measurement over which action(s ) SHOULD be triggered . 	400	0
7759	Length	OTF : Origin Timestamp Format of the Origin Timestamp field described in [ RFC6374 ]. By default , it is set to IEEE 1588 version 1 . If the egress LSR cannot support this value , an " OAM Problem/Unsupported Timestamp Format " error MUST be generated . 	302	0
7759	OTF	OTF : Origin Timestamp Format of the Origin Timestamp field described in [ RFC6374 ]. By default , it is set to IEEE 1588 version 1 . If the egress LSR cannot support this value , an " OAM Problem/Unsupported Timestamp Format " error MUST be generated . 	302	0
7759	T	T : Traffic-class-specific measurement indicator . Set to 1 when the measurement operation is scoped to packets of a particular traffic class ( Differentiated Services Code Point value ), and 0 otherwise . When set to 1 , the DS field of the message indicates the measured traffic class . By default , it is set to 1 . 	210	0
7759	B	B : Octet ( byte ) count . When set to 1 , indicates that the Counter 1-4 fields represent octet counts . When set to 0 , indicates that the Counter 1-4 fields represent packet counts . By default , it is set to 0 . 	210	0
7759	Reserved	Reserved : Reserved for future specification; set to 0 on transmission and ignored when received . 	500	0
7759	Measurement Interval	Measurement Interval : The time interval ( in milliseconds ) at which Delay Measurement query messages MUST be sent on both directions . If the edge LSR receiving the Path message cannot support such a value , it can reply with a higher interval . By default , it is set to ( 1000 ) as per [ RFC6375 ]. 	120	0
7759	Test Interval	Test Interval : Test messages interval ( in milliseconds ) as described in [ RFC6374 ]. By default , it is set to ( 10 ) as per [ RFC6375 ]. 	120	0
7759	Delay Threshold	Delay Threshold : The threshold value of measured two-way delay ( in milliseconds ) over which action(s ) SHOULD be triggered . 	122	0
7759	Length	FMS Flags are used to enable the FMS Flags at end point MEPs and the Server MEPs of the links over which the LSP is forwarded . In this document , only the S flag pertains to Server MEPs . 	231	0
7759	E	E : Enable Alarm Indication Signal ( AIS ) and Lock Report ( LKR ) signaling as described in [ RFC6427 ]. Default value is 1 ( enabled ). If the egress MEP does not support FMS Flag generation , an " OAM Problem/Fault management signaling unsupported " error MUST be generated . 	302	0
7759	S	S : Indicate to a Server MEP that it should transmit AIS and LKR signals on the client LSP . Default value is 0 ( disabled ). If a Server MEP that is capable of generating FMS messages is , for some reason , unable to do so for the LSP being signaled , an " OAM Problem/Unable to create fault management association " error MUST be generated . 	210	0
7759	T	T : Set timer value , enabled the configuration of a specific timer value . Default value is 0 ( disabled ). 	302	0
7759	Reserved	Reserved : Bits 4-16 that follow the FMS Flags are reserved for future allocation . These bits MUST be set to 0 on transmit and ignored on receipt if not allocated . 	500	0
7759	Refresh Timer	Refresh Timer : Indicates the refresh timer of fault indication messages , in seconds . The value MUST be between 1 to 20 seconds as specified for the Refresh Timer field in [ RFC6427 ]. If the edge LSR receiving the Path message cannot support the value , it SHOULD reply with a higher timer value . 	201	0
7759	Length	Length : Indicates the length of the Value field in octets ( 8 ). 	100	0
7759	Source Node ID	Tunnel ID : A 16-bit unsigned integer unique to the node as defined in [ RFC6370 ]. 	231	0
7759	Tunnel ID	Tunnel ID : A 16-bit unsigned integer unique to the node as defined in [ RFC6370 ]. 	231	0
7759	LSP ID	LSP ID : A 16-bit unsigned integer unique within the Tunnel_ID as defined in [ RFC6370 ]. 	231	0
7761	S	4.1.3 . ( S,G ) State 	240	0
7761	S	For every source/group pair ( S,G ), a router keeps the following state : 	400	0
7761	S	( S,G ) state : 	302	0
7761	S	PIM ( S,G ) Join/Prune State : 	302	0
7761	S	o State : One of {" NoInfo " ( NI ), " I lost Assert " ( L ), " I won Assert " ( W )} 	240	0
7761	S	Upstream ( S,G ) Join/Prune State : 	301	0
7761	S	o Upstream ( S,G ) Join/Prune Timer ( JT ) 	110	0
7761	S	o SPTbit ( indicates ( S,G ) state is active ) 	210	0
7761	S	o ( S,G ) Keepalive Timer ( KAT ) 	210	0
7761	S	o Register state : One of {" Join " ( J ), " Prune " ( P ), " Join-Pending " ( JP ), " NoInfo " ( NI )} 	240	0
7761	S	For every source/group pair ( S,G ) for which a router also has (*, G ) state , it also keeps the following state : 	400	0
7761	S	( S,G,rpt ) state : 	302	0
7761	S	PIM ( S,G,rpt ) Join/Prune State : 	302	0
7761	S	o State : One of {" RPTNotJoined(G )", " NotPruned(S,G,rpt )", " Pruned(S,G,rpt )"} 	240	0
7761	S	pim_include(S,G ) = { all interfaces I such that : ( ( I_am_DR ( I ) AND lost_assert(S,G,I ) == FALSE ) OR AssertWinner(S,G,I ) == me ) AND local_receiver_include(S,G,I ) } 	240	0
7761	S	pim_exclude(S,G ) = { all interfaces I such that : ( ( I_am_DR ( I ) AND lost_assert(*,G,I ) == FALSE ) OR AssertWinner(*,G,I ) == me ) AND local_receiver_exclude(S,G,I ) } 	240	0
7761	S	Update_SPTbit(S,G,iif ) oiflist = NULL 	302	0
7761	S	Update_SPTbit(S,G,iif ) is defined in Section 4.2.2 . 	302	0
7761	S	UpstreamJPState(S,G ) is the state of the finite state machine in Section 4.5.5 . 	301	0
7761	S	void CheckSwitchToSpt(S,G ) { if ( ( pim_include(*,G ) (-) pim_exclude(S,G ) (+) pim_include(S,G ) != NULL ) AND SwitchToSptDesired(S,G ) ) { # Note : Restarting the KAT will result in the SPT switch . set KeepaliveTimer(S,G ) to Keepalive_Period } } 	210	0
7761	S	The ( S,G ) SPTbit is used to distinguish whether to forward on (*, G ) or on ( S,G ) state . When switching from the RP tree to the source tree , there is a transition period when data is arriving due to upstream (*, G ) state while upstream ( S,G ) state is being established , during which time a router should continue to forward only on (*, G ) state . This prevents temporary black holes that would be caused by sending a Prune(S,G,rpt ) before the upstream ( S,G ) state has finished being established . 	210	0
7761	S	void Update_SPTbit(S,G,iif ) { if ( iif == RPF_interface(S ) AND JoinDesired(S,G ) == TRUE AND ( DirectlyConnected(S ) == TRUE OR RPF_interface(S ) != RPF_interface(RP(G )) OR inherited_olist(S,G,rpt ) == NULL OR ( ( RPF'(S,G ) == RPF'(*,G ) ) AND ( RPF'(S,G ) != NULL ) ) OR ( I_Am_Assert_Loser(S,G,iif ) ) ) ) { Set SPTbit(S,G ) to TRUE } } 	210	0
7761	S	CouldRegister(S,G ) 	302	0
7761	S	The per-interface state machine for receiving ( S,G ) Join/Prune messages is given below and is almost identical to that for (*, G ) messages . There are three states : 	400	0
7761	S	The ( S,G ) downstream state machine on interface I remains in Join state . The Expiry Timer ( ET ) is restarted and is then set to the maximum of its current value and the HoldTime from the triggering Join/Prune message . 	201	0
7761	S	The per-interface state machine for receiving ( S,G,rpt ) Join/Prune messages is given below . There are five states : 	400	0
7761	S	The per-interface state machines for ( S,G ) hold join state from downstream PIM routers . This state then determines whether a router needs to propagate a Join(S,G ) upstream towards the source . 	201	0
7761	S	Not Joined The downstream state machines and local membership information do not indicate that the router needs to join the shortest-path tree for this ( S,G ). 	302	0
7761	S	The upstream ( S,G ) state machine transitions to the Joined state . Send Join(S,G ) to the appropriate upstream neighbor , which is RPF'(S,G ). Set the Join Timer ( JT ) to expire after t_periodic seconds . 	210	0
7761	S	The upstream ( S,G ) state machine transitions to the NotJoined state . Send Prune(S,G ) to the appropriate upstream neighbor , which is RPF'(S,G ). Cancel the Join Timer ( JT ), and set SPTbit(S,G ) to FALSE . 	301	0
7761	S	Send Join(S,G ) to the appropriate upstream neighbor , which is RPF'(S,G ). Restart the Join Timer ( JT ) to expire after t_periodic seconds . 	210	0
7761	S	Send Join(S,G ) to the appropriate upstream neighbor , which is RPF'(S,G ). Restart the Join Timer ( JT ) to expire after t_periodic seconds . 	302	0
7761	S	Let t_joinsuppress be the minimum of t_suppressed and the HoldTime from the Join/Prune message triggering this event . 	302	0
7761	S	( S,G,rpt ) Joins and Prunes are ( S,G ) Joins or Prunes sent on the RP tree with the RPT bit set , either to modify the results of (*, G ) Joins , or to override the behavior of other upstream LAN peers . The next section describes the rules for sending triggered messages . This section describes the rules for including a Prune(S,G,rpt ) message with a Join(*,G ). 	210	0
7761	S	if ( SPTbit(S,G ) == TRUE ) { # Note : If receiving ( S,G ) on the SPT , we only prune off the # shared tree if the RPF neighbors differ . if ( RPF'(*,G ) != RPF'(S,G ) ) { add Prune(S,G,rpt ) to compound message } } else if ( inherited_olist(S,G,rpt ) == NULL ) { # Note : All (*, G ) olist interfaces received RPT prunes for ( S,G ). add Prune(S,G,rpt ) to compound message } else if ( RPF'(*,G ) != RPF'(S,G,rpt ) { # Note : We joined the shared tree , but there was an ( S,G ) assert # and the source tree RPF neighbor is different . add Prune(S,G,rpt ) to compound message } 	210	0
7761	S	The state machine for ( S,G,rpt ) triggered messages is required per-(S,G ) when there is (*, G ) join state at a router , and the router or any of its upstream LAN peers wishes to prune S off the RP tree . 	303	0
7761	S	Pruned(S,G,rpt ) (*, G ) Joined , but ( S,G,rpt ) pruned . 	302	0
7761	S	Pruned(S,G,rpt ) (*, G ) Joined , but ( S,G,rpt ) pruned . 	302	0
7761	S	NotPruned(S,G,rpt ) (*, G ) Joined , and ( S,G,rpt ) not pruned . 	302	0
7761	S	NotPruned(S,G,rpt ) (*, G ) Joined , and ( S,G,rpt ) not pruned . 	302	0
7761	S	PruneDesired(S,G,rpt)->TRUE See macro above . This event is relevant in the " NotPruned " and " RPTNotJoined(G )" states . 	301	0
7761	S	PruneDesired(S,G,rpt)->FALSE See macro above . This transition is only relevant in the " Pruned " state . 	301	0
7761	S	RPTJoinDesired(G)->FALSE This event is relevant in the " Pruned " and " NotPruned " states . 	301	0
7761	S	RPTJoinDesired(G)->FALSE This event is relevant in the " Pruned " and " NotPruned " states . 	301	0
7761	S	The ( S,G ) Assert state machine for interface I is shown in Figure 8 . There are three states : 	400	0
7761	S	NoInfo ( NI ) This router has no ( S,G ) assert state on interface I . 	303	0
7761	S	Assert Timer Expires The ( S,G ) Assert Timer expires . As we're in the Winner state , we must still have ( S,G ) forwarding state that is actively being kept alive . We resend the ( S,G ) Assert and restart the Assert Timer ( Actions A3 below ). Note that the assert winner's Assert Timer is engineered to expire shortly before timers on assert losers; this prevents unnecessary thrashing of the forwarder and periodic flooding of duplicate packets . 	210	0
7761	S	Assert Timer Expires The ( S,G ) Assert Timer expires . We transition to NoInfo state , deleting the ( S,G ) assert information ( Actions A5 below ). 	210	0
7761	S	A1 : Send Assert(S,G ). Set Assert Timer to ( Assert_Time - Assert_Override_Interval ). Store self as AssertWinner(S,G,I ). Store spt_assert_metric(S,I ) as AssertWinnerMetric(S,G,I ). 	240	0
7761	S	bool lost_assert(S,G,rpt,I ) { if ( RPF_interface(RP(G )) == I OR ( RPF_interface(S ) == I AND SPTbit(S,G ) == TRUE ) ) { return FALSE } else { return ( AssertWinner(S,G,I ) != NULL AND AssertWinner(S,G,I ) != me ) } } 	210	0
7761	S	o A router MUST NOT send an ( S,G,rpt ) Join/Prune message for any reason . 	500	0
7761	S	o A router MUST NOT forward packets based on (*, G ) or ( S,G,rpt ) state . The (*, G )- and ( S,G,rpt)-related state summarization macros are NULL for any SSM address , for the purposes of packet forwarding . 	400	0
7761	S	o Upstream ( S,G ) state machine ( Section 4.5.5 ) 	110	0
7761	S	o Downstream ( S,G ) state machine ( Section 4.5.2 ) 	110	0
7761	S	o ( S,G ) Assert state machine ( Section 4.6.1 ) 	302	0
7761	S	S The Sparse bit is a 1-bit value , set to 1 for PIM-SM . It is used for PIM Version 1 compatibility . 	210	0
7761	W	W The WC ( or WildCard ) bit is a 1-bit value for use with PIM Join/Prune messages ( see Section 4.9.5.1 ). 	210	0
7761	R	R The RPT ( or Rendezvous Point Tree ) bit is a 1-bit value for use with PIM Join/Prune messages ( see Section 4.9.5.1 ). If the WC bit is 1 , the RPT bit MUST be 1 . 	210	0
7761	Type	PIM Version , Type , Reserved , Checksum Described in Section 4.9 . 	220	0
7761	Reserved	PIM Version , Type , Reserved , Checksum Described in Section 4.9 . 	220	0
7761	OptionType	Holdtime is the amount of time a receiver must keep the neighbor reachable , in seconds . If the Holdtime is set to ' 0xffff ', the receiver of this message never times out the neighbor . This may be used with dial-on-demand links , to avoid keeping the link up with periodic Hello messages . 	120	0
7761	OptionType	The LAN Prune Delay option is used to tune the prune propagation delay on multi-access LANs . The T bit specifies the ability of the sending router to disable Join suppression . Propagation_Delay and Override_Interval are time intervals in units of milliseconds . A router originating a LAN Prune Delay option on interface I sets the Propagation_Delay field to the configured value of Propagation_Delay(I ) and the value of the Override_Interval field to the value of Override_Interval(I ). On a receiving router , the values of the fields are used to tune the value of the Effective_Override_Interval(I ) and its derived timer values . 	231	0
7761	OptionType	o OptionType 18 : Deprecated and should not be used . 	302	0
7761	OptionType	DR Priority is a 32-bit unsigned number and should be considered in the DR election as described in Section 4.3.2 . 	231	0
7761	OptionType	Generation ID is a random 32-bit value for the interface on which the Hello message is sent . The Generation ID is regenerated whenever PIM forwarding is started or restarted on the interface . 	230	0
7761	OptionType	The contents of the Address List Hello option are described in Section 4.3.4 . All addresses within a single Address List must belong to the same address family . 	230	0
7761	Type	PIM Version , Type , Reserved , Checksum Described in Section 4.9 . Note that in order to reduce encapsulation overhead , the checksum for Registers is done only on the first 8 bytes of the packet , including the PIM header and the next 4 bytes , excluding the data packet portion . For interoperability reasons , a message carrying a checksum calculated over the entire PIM Register message should also be accepted . When calculating the checksum , the IPv6 pseudo-header " Upper-Layer Packet Length " is set to 8 . 	301	0
7761	Reserved	PIM Version , Type , Reserved , Checksum Described in Section 4.9 . Note that in order to reduce encapsulation overhead , the checksum for Registers is done only on the first 8 bytes of the packet , including the PIM header and the next 4 bytes , excluding the data packet portion . For interoperability reasons , a message carrying a checksum calculated over the entire PIM Register message should also be accepted . When calculating the checksum , the IPv6 pseudo-header " Upper-Layer Packet Length " is set to 8 . 	301	0
7761	B	B The Border bit . This specification deprecates the Border bit . A router MUST set the B bit to 0 on transmission and MUST ignore this bit on reception . 	500	0
7761	N	N The Null-Register bit . Set to 1 by a DR that is probing the RP before expiring its local Register-Suppression Timer . Set to 0 otherwise . 	210	0
7761	Type	PIM Version , Type , Reserved , Checksum Described in Section 4.9 . 	220	0
7761	Reserved	PIM Version , Type , Reserved , Checksum Described in Section 4.9 . 	220	0
7761	Type	PIM Version , Type , Reserved , Checksum Described in Section 4.9 . 	220	0
7761	Reserved	PIM Version , Type , Reserved , Checksum Described in Section 4.9 . 	220	0
7761	S	o The combination of a (*, G ) Prune and an ( S,G,rpt ) Join is also not generated . ( S,G,rpt ) Joins are only sent when the router is receiving all traffic for a group on the shared tree and it wishes to indicate a change for the particular source . As a (*, G ) prune indicates that the router no longer wishes to receive shared tree traffic , the ( S,G,rpt ) Join would be meaningless . 	210	0
7761	Type	PIM Version , Type , Reserved , Checksum Described in Section 4.9 . 	220	0
7761	Reserved	PIM Version , Type , Reserved , Checksum Described in Section 4.9 . 	220	0
7761	R	R RPTbit is a 1-bit value . The RPTbit is set to 1 for Assert(*,G ) messages and 0 for Assert(S,G ) messages . 	210	0
7761	N	Per neighbor ( N ): 	302	0
7761	S	Per Source ( S ): 	302	0
7761	S	( S,G ) Join Expiry Timer : ET(S,G,I ) 	210	0
7761	S	( S,G ) Prune-Pending Timer : PPT(S,G,I ) 	210	0
7761	S	( S,G ) Assert Timer : AT(S,G,I ) 	210	0
7761	S	( S,G,rpt ) Prune Expiry Timer : ET(S,G,rpt,I ) 	210	0
7761	S	( S,G,rpt ) Prune-Pending Timer : PPT(S,G,rpt,I ) 	210	0
7761	S	Per Source ( S ): 	302	0
7761	S	( S,G ) Upstream Join Timer : JT(S,G ) 	302	0
7761	S	( S,G ) Keepalive Timer : KAT(S,G ) 	210	0
7761	S	( S,G,rpt ) Upstream Override Timer : OT(S,G,rpt ) 	210	0
7761	S	Per Source,Group pair ( S,G ): 	302	0
7767	Option Code	o Reserved : This field is initialized as specified in Section 7.3 of [ RFC6887 ]. 	400	0
7767	Reserved	o Reserved : This field is initialized as specified in Section 7.3 of [ RFC6887 ]. 	400	0
7767	Option Length	An application or user can take advantage of this PCP option to explicitly indicate which of the connections need to be check-pointed and should not be disrupted . The processing of this option by the PCP server will then yield the check-pointing of the corresponding states by the relevant devices or functions dynamically controlled by the PCP server . 	400	0
7770	Type	Type A 16-bit field set to 1 . 	302	0
7770	Length	Length A 16-bit field that indicates the length of the value portion in octets and will be a multiple of 4 octets dependent on the number of capabilities advertised . Initially , the length will be 4 , denoting 4 octets of informational capability bits . 	100	0
7770	Type	Type A 16-bit field set to 2 . 	240	0
7770	Length	Length A 16-bit field that indicates the length of the value portion in octets and will be a multiple of 4 octets dependent on the number of capabilities advertised . Initially , the length will be 4 , denoting 4 octets of informational capability bits . 	100	0
7774	OPTION_MPL_PARAMETERS	option_len : Length of the option in octets . The value MUST be set to 16 if no MPL Domain Address is present , or 32 if an MPL Domain Address is present . 	100	0
7774	P	P ( 1 bit ): A flag to indicate PROACTIVE_FORWARDING . This flag is set if PROACTIVE_FORWARDING = TRUE . 	210	0
7774	Z	Z ( 7 bits ): Reserved for future use . Servers MUST set them to zero . Clients SHOULD ignore any bits that have been set . 	500	0
7774	TUNIT	TUNIT ( unsigned 8-bit integer ): Unit time of timer parameters ( SE_LIFETIME and *_ IMIN ) in this option . 0 and 0xff are reserved and MUST NOT be used . 	500	0
7774	SE_LIFETIME	SE_LIFETIME ( unsigned 16-bit integer ): SEED_SET_ENTRY_LIFETIME/TUNIT , in milliseconds . 0 and 0xffff are reserved and MUST NOT be used . 	120	0
7774	DM_K	DM_IMIN ( unsigned 16-bit integer ): DATA_MESSAGE_IMIN/TUNIT , in milliseconds . 0 and 0xffff are reserved and MUST NOT be used . 	302	0
7774	DM_IMIN	DM_IMIN ( unsigned 16-bit integer ): DATA_MESSAGE_IMIN/TUNIT , in milliseconds . 0 and 0xffff are reserved and MUST NOT be used . 	302	0
7774	DM_IMAX	DM_IMAX ( unsigned 8-bit integer ): DATA_MESSAGE_IMAX . The actual maximum timeout is described as a number of doublings of DATA_MESSAGE_IMIN , as described in [ RFC6206 ], Section 4.1 . 0 and 0xff are reserved and MUST NOT be used . 	100	0
7774	DM_T_EXP	DM_T_EXP ( unsigned 16-bit integer ): DATA_MESSAGE_TIMER_EXPIRATIONS . 0 and 0xffff are reserved and MUST NOT be used . 	240	0
7774	C_K	C_IMIN ( unsigned 16-bit integer ): CONTROL_MESSAGE_IMIN/TUNIT , in milliseconds . 0 and 0xffff are reserved and MUST NOT be used . 	302	0
7774	C_IMAX	C_IMAX ( unsigned 8-bit integer ): CONTROL_MESSAGE_IMAX . The actual maximum timeout is described as a number of doublings of CONTROL_MESSAGE_IMIN . 0 and 0xff are reserved and MUST NOT be used . 	110	0
7774	C_T_EXP	C_T_EXP ( unsigned 16-bit integer ): CONTROL_MESSAGE_TIMER_EXPIRATIONS . 0 and 0xffff are reserved and MUST NOT be used . 	500	0
7777	Type	Length : A 16-bit field that indicates the length of the value portion in octets and will be a multiple of 4 octets dependent on the number of tags advertised . 	100	0
7777	Length	Length : A 16-bit field that indicates the length of the value portion in octets and will be a multiple of 4 octets dependent on the number of tags advertised . 	100	0
7780	P2P	P2P - Point-to-point . 	400	0
7780	RESV	o RESV : Reserved for additional flags to be specified in the future . MUST be sent as zero and ignored on receipt . 	500	0
7780	M	M M 1 Scope Flooding Support TLV 	240	0
7780	V	o V ( Version ): 2-bit unsigned integer . See Section 3.2 of [ RFC6325 ]. 	231	0
7780	A	o A ( Alert ): 1 bit . See [ RFC7455 ]. 	210	0
7780	C	o C ( Color ): 1 bit . See Section 10.1 . 	210	0
7780	M	o RESV : 4 bits . These bits are reserved and MUST be sent as zero . Due to the previous use of these bits as specified in [ RFC6325 ], most TRILL " fast path " hardware implementations trap and do not forward TRILL Data packets with these bits non-zero . A TRILL 	500	0
7780	RESV	o RESV : 4 bits . These bits are reserved and MUST be sent as zero . Due to the previous use of these bits as specified in [ RFC6325 ], most TRILL " fast path " hardware implementations trap and do not forward TRILL Data packets with these bits non-zero . A TRILL 	500	0
7780	F	o F : 1 bit . If this field is non-zero , then the optional flags word described in Section 10.2 is present . If it is zero , the flags word is not present . 	210	0
7780	Hop Count	o Hop Count : 6 bits . See Section 3.6 of [ RFC6325 ] and Section 10.2.1 below . 	100	0
7780	Egress Nickname	o Egress Nickname : See Section 3.7.1 of [ RFC6325 ]. 	231	0
7780	Ingress Nickname	o Ingress Nickname : See Section 3.7.2 of [ RFC6325 ]. 	231	0
7780	Optional Flags Word	o Optional Flags Word : See [ RFC7179 ] and Section 10.2 . 	231	0
7780	M	3 . Recommendations concerning control packet priorities ( Section 8.2 ). 	240	0
7781	OE	OE-flag : A flag used by a member RBridge of a given LAALP to tell other edge RBridges of this LAALP whether this LAALP is willing to share an RBv with other LAALPs that multiply attach to the same set of edge RBridges as the given LAALP does . When this flag for an LAALP is 1 , it means that the LAALP needs to be served by an RBv by itself and is not willing to share , that is , it should Occupy an RBv Exclusively ( OE ). 	231	0
7781	Length	o OE ( 1 bit ): A flag indicating whether or not the LAALP wants to occupy an RBv by itself; 1 for occupying by itself ( or Occupying Exclusively ( OE )). By default , it is set to 0 on transmit . This bit is used for edge RBridge group auto-discovery ( see Section 4.1 ). For any one LAALP , the values of this flag might conflict in the LSPs advertised by different member RBridges of that LAALP . In that case , the flag for that LAALP is considered to be 1 . 	210	0
7781	OE	o OE ( 1 bit ): A flag indicating whether or not the LAALP wants to occupy an RBv by itself; 1 for occupying by itself ( or Occupying Exclusively ( OE )). By default , it is set to 0 on transmit . This bit is used for edge RBridge group auto-discovery ( see Section 4.1 ). For any one LAALP , the values of this flag might conflict in the LSPs advertised by different member RBridges of that LAALP . In that case , the flag for that LAALP is considered to be 1 . 	210	0
7781	RESV	o Size ( 1 byte ): Size of the remaining part of the LAALP RECORD ( 2 plus the length of the LAALP ID ). 	100	0
7781	Size	o Size ( 1 byte ): Size of the remaining part of the LAALP RECORD ( 2 plus the length of the LAALP ID ). 	100	0
7781	LAALP ID	On receipt of such an APPsub-TLV , if RBn is not an LAALP related edge RBridge , it ignores the sub-TLV; otherwise , it parses the sub-TLV . When new LAALPs are found or old ones are withdrawn compared to its old copy , and they are also configured on RBn , RBn performs the " Member RBridges Auto-Discovery " procedure described in Section 4 . 	302	0
7781	Length	o Length ( 2 bytes ): 3+n*k bytes , where there are n LAALP IDs , each of size k bytes . k is found in the LAALP ID Size field below . If Length is not 3 plus an integer times k , the sub-TLV is corrupt and MUST be ignored . 	100	0
7781	LAALP ID Size	o LAALP ID Size ( 1 byte ): The size of each of the following LAALP IDs in this sub-TLV . 8 if the LAALPs listed are MC-LAGs or DRNI ( Section 6.3.2 of [ 802.1AX ]). The value in this field is the k value that appears in the formula for Length above . 	100	0
7781	LAALP ID	o LAALP ID ( LAALP ID Size bytes ): The ID of the LAALP . See Section 9.4 . 	231	0
7781	Length	o Length ( 2 bytes ): The size of the following LAALP ID . 8 if the LAALP listed is an MC-LAG or DRNI . 	100	0
7781	LAALP ID	o LAALP ID ( variable ): The ID of the LAALP ( see Section 9.4 ). 	231	0
7781	Length	This pair of APPsub-TLVs can be carried multiple times in an ESADI-LSP and in multiple ESADI-LSPs . When an LAALP related edge RBridge ( say RBn ) wants to share with other edge RBridges the MAC addresses learned on its local ports of different LAALPs , it uses one or more pairs of such APPsub-TLVs for each such LAALP in its ESADI-LSPs . Each encloses the MAC-RI TLVs containing the MAC addresses learned from a specific LAALP . Furthermore , if the LAALP is served by a local RBv , the value of the Topology-ID/Nickname field in the relative MAC-RI TLVs SHOULD be the pseudo-nickname of the RBv , rather than one of RBn's regular nicknames or a zero value . Then , on receipt of such a MAC-RI TLV , remote RBridges know that the contained MAC addresses are reachable through the RBv . 	400	0
7782	E	Edge RBridge : An RBridge providing end-station service on one or more of its ports . 	230	0
7782	Length	o Sender Nickname : The nickname the originating RBridge will use as the ingress nickname . This field is useful because the originating RBridge might own multiple nicknames . 	231	0
7782	Sender Nickname	o Sender Nickname : The nickname the originating RBridge will use as the ingress nickname . This field is useful because the originating RBridge might own multiple nicknames . 	231	0
7782	LAALP ID Size	o LAALP ID : The ID of the LAALP , which is k bytes long . If the LAALP is an MC-LAG or DRNI , it is the 8-byte ID , as specified in Clause 6.3.2 of [ 802.1AX ]. 	400	0
7782	Length	o Length : The MAC-Reachability TLV [ RFC6165 ] is contained in the value field as a sub-TLV . The total number of bytes contained in the value field is given by k + 8 + 6*n . 	100	0
7782	LAALP ID Size	o LAALP ID : The ID of the LAALP , which is k bytes long . Here , it also serves as the identifier of the AAE . If the LAALP is an MC-LAG ( or DRNI ), it is the 8-byte ID , as specified in Clause 6.3.2 of [ 802.1AX ]. 	400	0
7782	Length	o Topology : Indicates the topology to which the capabilities apply . When this field is set to zero , either topologies are not in use or the capabilities apply to all topologies [ TRILL-MT ]. 	400	0
7782	Topology	o Topology : Indicates the topology to which the capabilities apply . When this field is set to zero , either topologies are not in use or the capabilities apply to all topologies [ TRILL-MT ]. 	400	0
7782	E	o E : Bit 0 of the capability bits . When this bit is set , it indicates that the originating RBridge acts as specified in Option B above . 	210	0
7782	H	o H : Bit 1 of the capability bits . When this bit is set , it indicates that the originating RBridge keeps multiple MAC attachments learned from TRILL Data packet decapsulation with fast path hardware; that is , it acts as specified in Option A above . 	210	0
7782	Reserved	o Reserved : Flags extending from bit 2 through bit 63 of the capability bits . Reserved for future use . These MUST be sent as zero and ignored on receipt . 	500	0
7788	Reserved	Reserved : Bits are reserved for future use . They MUST be set to 0 when creating this TLV , and their value MUST be ignored when processing the TLV . 	500	0
7788	M	M-capability : Priority value used for electing the on-link mDNS [ RFC6762 ] proxy . It MUST be set to 0 if the router is not capable of proxying mDNS , otherwise it SHOULD be set to 4 but MAY be set to any value from 1 to 7 to indicate a non-default priority . The values 8-15 are reserved for future use . 	302	0
7788	P	P-capability : Priority value used for electing the on-link DHCPv6-PD server . It MUST be set to 0 if the router is not capable of providing prefixes through DHCPv6-PD ( Section 6.3.4 ), otherwise it SHOULD be set to 4 but MAY be set to any value from 1 to 7 to indicate a non-default priority . The values 8-15 are reserved for future use . 	302	0
7788	H	H-capability : Priority value used for electing the on-link DHCPv6 server offering non-temporary addresses . It MUST be set to 0 if the router is not capable of providing such addresses , otherwise it SHOULD be set to 4 but MAY be set to any value from 1 to 7 to indicate a non-default priority . The values 8-15 are reserved for future use . 	302	0
7788	L	L-capability : Priority value used for electing the on-link DHCPv4 server . It MUST be set to 0 if the router is not capable of running a legacy DHCPv4 server offering IPv4 addresses to clients , otherwise it SHOULD be set to 4 but MAY be set to any value from 1 	302	0
7788	Valid Lifetime Since Origination	Valid Lifetime Since Origination : The time in seconds the delegated prefix was valid for at the origination time of the node data containing this TLV . The value MUST be updated whenever the node republishes its Node-State TLV . 	121	0
7788	Preferred Lifetime Since Origination	Preferred Lifetime Since Origination : The time in seconds the delegated prefix was preferred for at the origination time of the node data containing this TLV . The value MUST be updated whenever the node republishes its Node-State TLV . 	121	0
7788	Prefix Length	Prefix Length : The number of significant bits in the prefix . 	100	0
7788	Policy Type	Policy Type : The type of the policy identifier . 	231	0
7788	Endpoint Identifier	Endpoint Identifier : The endpoint identifier of the local interface the prefix is assigned to , or 0 if it is assigned to a Private Link ( e.g ., when the prefix is assigned for downstream prefix delegation ). 	230	0
7788	Rsv .	Rsv .: Bits are reserved for future use . They MUST be set to 0 when creating this TLV , and their value MUST be ignored when processing the TLV . 	500	0
7788	Prefix Length	Prefix Length : The number of significant bits in the Prefix field . 	100	0
7788	Endpoint Identifier	Endpoint Identifier : The endpoint identifier of the local interface the prefix is assigned to , or 0 if it is not assigned on an HNCP enabled link . 	230	0
7788	IP Address	IP Address : The globally scoped IPv6 address , or the IPv4 address encoded as an IPv4-mapped IPv6 address [ RFC4291 ]. 	230	0
7788	IP Address	IP Address : The IPv6 address of the authoritative DNS server for the zone; IPv4 addresses are represented as IPv4-mapped addresses [ RFC4291 ]. The special value of :: ( all zeros ) means the delegation is available in the global DNS hierarchy . 	230	0
7788	Reserved	Reserved : Those bits MUST be set to 0 when creating the TLV and ignored when parsing it unless defined in a later specification . 	500	0
7788	L	L-bit : ( DNS-based Service Discovery ( DNS-SD ) [ RFC6763 ] Legacy - Browse ) indicates that this delegated zone SHOULD be included in the network's DNS-SD legacy browse list of domains at lb._dns-sd._udp.(DOMAIN-NAME ). Local forward zones SHOULD have this bit set; reverse zones SHOULD NOT . 	231	0
7788	B	B-bit : ( DNS-SD [ RFC6763 ] Browse ) indicates that this delegated zone SHOULD be included in the network's DNS-SD browse list of domains at b._dns-sd._udp.(DOMAIN-NAME ). Local forward zones SHOULD have this bit set; reverse zones SHOULD NOT . 	231	0
7788	S	S-bit : ( Fully qualified DNS-SD [ RFC6763 ] domain ) indicates that this delegated zone consists of a fully qualified DNS-SD domain , which should be used as the base for DNS-SD domain enumeration , i.e ., _ dns-sd._udp.(Zone ) exists . Forward zones MAY have this bit set; reverse zones MUST NOT . This can be used to provision a DNS 	231	0
7788	IP Address	IP Address : The IP address associated with the name . IPv4 addresses are encoded using IPv4-mapped IPv6 addresses . 	230	0
7788	Length	Length : The length of the name ( 0-63 ). 	100	0
7794	X	X-Flag : External Prefix Flag ( Bit 0 ) Set if the prefix has been redistributed from another protocol . This includes the case where multiple virtual routers are supported and the source of the redistributed prefix is another IS-IS instance . 	210	0
7794	R	R-Flag : Re-advertisement Flag ( Bit 1 ) Set when the prefix has been leaked from one level to another ( upwards or downwards ). 	301	0
7794	N	N-flag : Node Flag ( Bit 2 ) Set when the prefix identifies the advertising router , i.e ., the prefix is a host prefix advertising a globally reachable address typically associated with a loopback address . 	231	0
7798	M	Set for the last packet of the access unit , carried in the current RTP stream . This is in line with the normal use of the M bit in video formats to allow an efficient playout buffer handling . When MRST or MRMT is in use , if an access unit appears in multiple RTP streams , the marker bit is set on each RTP stream's last packet of the access unit . 	231	0
7798	PT	The assignment of an RTP payload type for this new packet format is outside the scope of this document and will not be specified here . The assignment of a payload type has to be performed either through the profile used or in a dynamic way . 	231	0
7798	S	S : 1 bit When set to 1 , the S bit indicates the start of a fragmented NAL unit , i.e ., the first byte of the FU payload is also the first byte of the payload of the fragmented NAL unit . When the FU payload is not the start of the fragmented NAL unit payload , the S bit MUST be set to 0 . 	210	0
7798	E	E : 1 bit When set to 1 , the E bit indicates the end of a fragmented NAL unit , i.e ., the last byte of the payload is also the last byte of the fragmented NAL unit . When the FU payload is not the last fragment of a fragmented NAL unit , the E bit MUST be set to 0 . 	210	0
7798	A	A : 1 bit Copy of the F bit of the PACI payload NAL unit or NAL-unit-like structure . 	210	0
7798	cType	cType : 6 bits Copy of the Type field of the PACI payload NAL unit or NAL-unit - like structure . 	231	0
7798	PHSsize	PHSsize : 5 bits Indicates the length of the PHES field . The value is limited to be less than or equal to 32 octets , to simplify encoder design for MTU size matching . 	100	0
7798	Y	Y : 1 bit MUST be 0 , available for future extensions , see Section 4.4.4.2 . Receivers compliant with this version of the HEVC payload format MUST ignore Y=1 , and also ignore any information in the PHES indicated as present by Y . 	500	0
7798	RES	RES ( 6 bits ) MUST be equal to 0 . Reserved for future extensions . 	500	0
7810	Type	Type : 33 	220	0
7810	Length	A bit : The A bit represents the Anomalous ( A ) bit . The A bit is set when the measured value of this parameter exceeds its configured maximum threshold . The A bit is cleared when the measured value falls below its configured reuse threshold . If the A bit is clear , the sub-TLV represents steady-state link performance . 	210	0
7810	RESERVED	RESERVED : This field is reserved for future use . It MUST be set to 0 when sent and MUST be ignored when received . 	500	0
7810	Delay	Delay : This 24-bit field carries the average link delay over a configurable interval in microseconds , encoded as an integer value . When set to the maximum value 16,777,215 ( 16.777215 sec ), then the delay is at least that value and may be larger . 	122	0
7810	Type	Type : 34 	220	0
7810	Length	A bit : This field represents the Anomalous ( A ) bit . The A bit is set when one or more measured values exceed a configured maximum threshold . The A bit is cleared when the measured value falls below its configured reuse threshold . If the A bit is clear , the sub-TLV represents steady-state link performance . 	210	0
7810	RESERVED	RESERVED : This field is reserved for future use . It MUST be set to 0 when sent and MUST be ignored when received . 	500	0
7810	Min Delay	Min Delay : This 24-bit field carries the minimum measured link delay value ( in microseconds ) over a configurable interval , encoded as an integer value . 	200	0
7810	Max Delay	Max Delay : This 24-bit field carries the maximum measured link delay value ( in microseconds ) over a configurable interval , encoded as an integer value . 	200	0
7810	Type	Type : 35 	220	0
7810	Length	RESERVED : This field is reserved for future use . It MUST be set to 0 when sent and MUST be ignored when received . 	500	0
7810	RESERVED	RESERVED : This field is reserved for future use . It MUST be set to 0 when sent and MUST be ignored when received . 	500	0
7810	Delay Variation	Delay Variation : This 24-bit field carries the average link delay variation over a configurable interval in microseconds , encoded as an integer value . When set to 0 , it has not been measured . When set to the maximum value 16,777,215 ( 16.777215 sec ), then the delay is at least that value and may be larger . 	302	0
7810	Type	Type : 36 	220	0
7810	Length	A bit : The A bit represents the Anomalous ( A ) bit . The A bit is set when the measured value of this parameter exceeds its configured maximum threshold . The A bit is cleared when the measured value falls below its configured reuse threshold . If the A bit is clear , the sub-TLV represents steady-state link performance . 	210	0
7810	RESERVED	RESERVED : This field is reserved for future use . It MUST be set to 0 when sent and MUST be ignored when received . 	500	0
7810	Link Loss	Link Loss : This 24-bit field carries link packet loss as a percentage of the total traffic sent over a configurable interval . The basic unit is 0.000003 %, where ( 2^24 - 2 ) is 50.331642 %. This value is the highest packet-loss percentage that can be expressed ( the assumption being that precision is more important on high-speed links than the ability to advertise loss rates greater than this , and that high - speed links with over 50% loss are unusable ). Therefore , measured values that are larger than the field maximum SHOULD be encoded as the maximum value . 	301	0
7810	Type	Type : 37 	220	0
7810	Length	RESERVED : This field is reserved for future use . It MUST be set to 0 when sent and MUST be ignored when received . 	500	0
7810	RESERVED	RESERVED : This field is reserved for future use . It MUST be set to 0 when sent and MUST be ignored when received . 	500	0
7810	Type	Type : 38 	220	0
7810	Length	RESERVED : This field is reserved for future use . It MUST be set to 0 when sent and MUST be ignored when received . 	500	0
7810	RESERVED	RESERVED : This field is reserved for future use . It MUST be set to 0 when sent and MUST be ignored when received . 	500	0
7810	Type	Type : 39 	220	0
7810	Length	RESERVED : This field is reserved for future use . It MUST be set to 0 when sent and MUST be ignored when received . 	500	0
7810	RESERVED	RESERVED : This field is reserved for future use . It MUST be set to 0 when sent and MUST be ignored when received . 	500	0
7813	B	Base VID : The VID used to identify a VLAN in management operations . [ IEEE8021Q ] 	231	0
7813	PCP	PCP : Priority Code Point , which identifies a traffic class . [ IEEE8021Q ] 	231	0
7813	Res	d . Reserved ( Res ) ( 4 bits ): The reserved bits MUST be set to 0 on transmission and the value MUST be ignored on reception . 	500	0
7813	C	1 . Circuit ( C ) flag ( 1 bit ): The Circuit flag is a one-bit flag to indicate whether or not the Extended Local Circuit ID parameter is present . If the flag is set , then an Extended Local Circuit ID is also included in the Hop sub-TLV . 	210	0
7813	V	2 . VID ( V ) flag ( 1 bit ): The VID flag is a one-bit flag to indicate whether or not one or more VIDs are conveyed by the Hop sub-TLV . If the flag is set , then the Number of VIDs parameter is present and indicates how many VIDs are conveyed by the Hop sub-TLV . If the VID flag is reset , then neither the Number of VIDs parameter nor VIDs are present in the Hop sub-TLV . 	210	0
7813	B	3 . Edge Bridge ( B ) flag ( 1 bit ): The Edge Bridge flag is a one - bit flag to indicate whether or not the given System is an Edge Bridge , i.e ., transmitter and/or receiver . If the System is an Edge Bridge , then the Edge Bridge flag MUST be set . The Edge Bridge flag indicates that FDB entries have to be installed for the given hop as specified by the SPBV MAC address sub-TLV or SPBM Service Identifier and Unicast Address sub-TLV of the hop . 	240	0
7813	R	4 . Root ( R ) flag ( 1 bit ): The Root flag is a one-bit flag to indicate whether or not the given System is a root of the explicit tree specified by the Topology sub-TLV . If the System is a root of a tree , then the Root flag MUST be set . If the Topology sub-TLV specifies a single tree , i.e ., the Base VIDs conveyed by the Topology sub-TLV are associated with either the ST ECT Algorithm or the LT ECT Algorithm ( Section 5 ), then the Root flag is only set for one of the Systems conveyed by the Topology sub-TLV . Furthermore , the first Hop sub-TLV of the Topology sub-TLV conveys the System that is the root of the tree . If the Topology sub-TLV specifies a Loose Tree Set , i.e ., the Base VIDs conveyed by the Topology sub-TLV are associated with the LTS ECT Algorithm ( Section 5 ), then the Root flag is set for each Edge Bridge as each of them roots a tree . If the Topology sub-TLV is used for MRT operations , i.e ., the Base VIDs conveyed by the Topology sub-TLV are associated with either the MRT ECT Algorithm or the MRTG ECT algorithm ( Section 5 ), then the Root flag is set for each MRT Root . If no MRT Root is specified by a Topology sub-TLV specifying a GADAG , then each SPT Root is an MRT Root as well . 	210	0
7813	L	5 . Leaf ( L ) flag ( 1 bit ): The Leaf flag is a one-bit flag to indicate whether or not the given System is a leaf of the explicit tree specified by the Topology sub-TLV . If the System is a leaf , then the Leaf flag MUST be set . The Leaf flag is only used to mark a leaf of a tree if the Topology sub-TLV specifies a single tree . The Leaf flag MUST be used to indicate the end of a topology block if the Topology sub - TLV specifies a GADAG , see Section 7 . 	210	0
7813	E	6 . Exclude ( E ) flag ( 1 bit ): The Exclude flag is a one-bit flag to indicate if the given System MUST be excluded from the topology . The Exclude flag and the Root flag cannot be set for a given hop at the same time . 	210	0
7813	Res	7 . Reserved ( Res ) ( 2 bits ): The reserved bits MUST be set to 0 on transmission , and the value MUST be ignored on reception . 	500	0
7813	Res	3 . Reserved ( Res ) ( 2 bits ): The reserved bits MUST be set to 0 on transmission , and the value MUST be ignored on reception . 	500	0
7813	B	The Bandwidth Constraint sub-TLV MAY be included in a Topology sub - TLV ( Section 6.1 ) in order to specify how much available bandwidth is to be provided by the constrained tree . Each loose hop MUST meet the bandwidth constraint . The bandwidth value of the constraint is a total value or it only refers to a single PCP as specified by the sub-TLV . Figure 4 shows the format of the Bandwidth Constraint sub - TLV . 	400	0
7813	D	d . DEI ( D ) ( 1 bit ): This is the Drop Eligible Indicator ( DEI ) parameter . If the DEI parameter is clear , then the bandwidth constraint refers to committed information rate . If the DEI parameter is set , then the bandwidth constraint refers to the peak information rate . 	210	0
7813	P	e . PCP ( P ) flag ( 1 bit ): If this flag is set , then the PCP parameter is taken into account . 	210	0
7813	Res	f . Reserved ( Res ) ( 3 bits ): The reserved bits MUST be set to 0 on transmission , and the value MUST be ignored on reception . 	500	0
7813	B	IS-IS PCR MAY be used for recording bandwidth assignment for explicitly placed data traffic in a domain if MSRP is not used within the domain . If MSRP is used in a domain , then only MSRP performs reservations and IS-IS does not . Both MSRP and IS-IS MUST NOT be used to make bandwidth assignments in the same domain . 	400	0
7813	D	d . DEI ( D ) ( 1 bit ): This is the Drop Eligible Indicator ( DEI ) parameter . If the DEI parameter is clear , then the bandwidth assignment is performed for providing the committed information rate . If the DEI parameter is set , then the bandwidth assignment is performed for providing the peak information rate . 	210	0
7813	Imp	e . Importance ( Imp ) ( 3 bits ): This is the Importance parameter for determining precedence order among bandwidth assignments within a PCP as described below . A lower numerical value indicates more important bandwidth assignment within a PCP . The default value of the Importance parameter is 7 . 	231	0
7813	R	f . Reserved ( R ) ( 1 bit ): The reserved bit MUST be set to 0 on transmission , and the value MUST be ignored on reception . 	500	0
7815	Flags	HDR(SPIi=xxx , SPIr=yyy , INFORMATIONAL , Flags : Initiator | Response , Message ID=m ), SK {} --> 	240	0
7815	Flags	HDR(SPIi=xxx , SPIr=yyy , CREATE_CHILD_SA , Flags : Initiator | Response , Message ID=m ), SK { N(NO_ADDITIONAL_SAS )} --> 	240	0
7815	Next Payload	o Next Payload ( 1 octet ) - Indicates the type of payload that immediately follows the header . The format and value of each payload are defined below . 	231	0
7815	Exchange Type	o Exchange Type ( 1 octet ) - Indicates the type of exchange being used . This constrains the payloads sent in each message in an exchange . 	231	0
7815	Flags	o Flags ( 1 octet ) - Indicates specific options that are set for the message . Presence of options is indicated by the appropriate bit in the flags field being set . The bits are as follows : 	240	0
7815	R	* R ( Response ) - This bit indicates that this message is a response to a message containing the same Message ID . This bit MUST be cleared in all request messages and MUST be set in all responses . An IKEv2 endpoint MUST NOT generate a response to a message that is marked as being a response . 	210	0
7815	V	* V ( Version ) - This bit indicates that the transmitter is capable of speaking a higher major version number of the protocol than the one indicated in the Major Version field . Implementations of IKEv2 MUST clear this bit when sending and MUST ignore it in incoming messages . 	220	0
7815	I	* I ( Initiator ) - This bit MUST be set in messages sent by the original initiator of the IKE SA and MUST be cleared in messages sent by the original responder . It is used by the recipient to determine which 8 octets of the SPI were generated by the recipient . This bit changes to reflect who initiated the last rekey of the IKE SA . 	210	0
7815	Message ID	o Message ID ( 4 octets , unsigned integer ) - Message identifier used to control retransmission of lost packets and matching of requests and responses . It is essential to the security of the protocol because it is used to prevent message replay attacks . 	231	0
7815	Length	o Length ( 4 octets , unsigned integer ) - Length of the total message ( header + payloads ) in octets . 	100	0
7815	Next Payload	o Next Payload ( 1 octet ) - Identifier for the payload type of the next payload in the message . If the current payload is the last in the message , then this field will be zero . This field provides a " chaining " capability whereby additional payloads can be added to a message by appending each one to the end of the message and setting the Next Payload field of the preceding payload to indicate the new payload's type . An Encrypted payload , which must always be the last payload of a message , is an exception . It contains data structures in the format of additional payloads . In the header of an Encrypted payload , the Next Payload field is set to the payload type of the first contained payload ( instead of zero); conversely , the Next Payload field of the last contained payload is set to zero ). The payload type values needed for minimal implementations are listed here . 	231	0
7815	Payload Length	o Payload Length ( 2 octets , unsigned integer ) - Length in octets of the current payload , including the generic payload header . 	100	0
7815	Proposal Length	o Proposal Length ( 2 octets , unsigned integer ) - Length of this proposal , including all transforms and attributes that follow . 	100	0
7815	Proposal Num	o Proposal Num ( 1 octet ) - When a proposal is made , the first proposal in an SA payload MUST be 1 , and subsequent proposals MUST be one more than the previous proposal . When a proposal is accepted , the proposal number in the SA payload MUST match the number on the proposal sent that was accepted . 	302	0
7815	Protocol ID	o Protocol ID ( 1 octet ) - Specifies the IPsec protocol identifier for the current negotiation . 	231	0
7815	SPI Size	o SPI Size ( 1 octet ) - For an initial IKE SA negotiation , this field MUST be zero; the SPI is obtained from the outer header . During subsequent negotiations , it is equal to the size , in octets , of the SPI of the corresponding protocol ( 8 for IKE and 4 for ESP and AH ). 	231	0
7815	Num Transforms	o Num Transforms ( 1 octet ) - Specifies the number of transforms in this proposal . 	202	0
7815	Transform Length	o Transform Length - The length ( in octets ) of the Transform Substructure including Header and Attributes . 	100	0
7815	Transform Type	o Transform Type ( 1 octet ) - The type of transform being specified in this transform . Different protocols support different Transform Types . For some protocols , some of the transforms may be optional . If a transform is optional and the initiator wishes to propose that the transform be omitted , no transform of the given type is included in the proposal . If the initiator wishes to make use of the transform optional to the responder , it includes a transform substructure with Transform ID = 0 as one of the options . 	231	0
7815	Transform ID	o Transform ID ( 2 octets ) - The specific instance of the Transform Type being proposed . 	231	0
7815	Transform Attributes	Transform Type 1 ( Encryption Algorithm ) transforms might include one transform attribute : Key Length . 	100	0
7815	Attribute Type	o Attribute Type ( 15 bits ) - Unique identifier for each type of attribute ( see below ). 	231	0
7815	Attribute Value	o Attribute Value - Value of the attribute associated with the attribute type . 	400	0
7815	ID Type	o ID Type ( 1 octet ) - Specifies the type of Identification being used . 	231	0
7815	Identification Data	o Identification Data ( variable length ) - Value , as indicated by the Identification Type . The length of the Identification Data is computed from the size in the ID payload header . 	400	0
7815	Certificate Data	o Certificate Data ( variable length ) - Actual encoding of certificate data . The type of certificate is indicated by the Certificate Encoding field . 	231	0
7815	Auth Method	o Auth Method ( 1 octet ) - Specifies the method of authentication used . 	231	0
7815	Authentication Data	o Authentication Data ( variable length ) - see Section 2.1 . 	400	0
7815	Nonce Data	o Nonce Data ( variable length ) - Contains the random data generated by the transmitting entity . 	400	0
7815	Protocol ID	o Protocol ID ( 1 octet ) - If this notification concerns an existing SA whose SPI is given in the SPI field , this field indicates the type of that SA . If the SPI field is empty , this field MUST be sent as zero and MUST be ignored on receipt . 	231	0
7815	SPI Size	o SPI Size ( 1 octet ) - Length in octets of the SPI as defined by the IPsec protocol ID or zero if no SPI is applicable . For a notification concerning the IKE SA , the SPI Size MUST be zero and the SPI field must be empty . 	100	0
7815	Notify Message Type	o Notify Message Type ( 2 octets ) - Specifies the type of notification message . 	231	0
7815	Notification Data	o Notification Data ( variable length ) - Status or error data transmitted in addition to the Notify Message Type . Values for this field are type specific . 	400	0
7815	Number of TSs	o Number of TSs ( 1 octet ) - Number of Traffic Selectors being provided . 	400	0
7815	TS Type	o IP protocol ID ( 1 octet ) - Value specifying an associated IP protocol ID ( such as UDP , TCP , and ICMP ). A value of zero means that the protocol ID is not relevant to this Traffic Selector -- the SA can carry all protocols . 	400	0
7815	Selector Length	o Selector Length - Specifies the length of this Traffic Selector substructure including the header . 	100	0
7815	Start Port	o Start Port ( 2 octets , unsigned integer ) - Value specifying the smallest port number allowed by this Traffic Selector . For protocols for which port is undefined ( including protocol 0 ), or if all ports are allowed , this field MUST be zero . 	400	0
7815	End Port	o End Port ( 2 octets , unsigned integer ) - Value specifying the largest port number allowed by this Traffic Selector . For protocols for which port is undefined ( including protocol 0 ), or if all ports are allowed , this field MUST be 65535 . 	400	0
7815	Starting Address	o Starting Address - The smallest address included in this Traffic Selector ( length determined by TS Type ). 	230	0
7815	Ending Address	o Ending Address - The largest address included in this Traffic Selector ( length determined by TS Type ). 	230	0
7815	Next Payload	o Next Payload - The payload type of the first embedded payload . Note that this is an exception in the standard header format , since the Encrypted payload is the last payload in the message; therefore , the Next Payload field would normally be zero . But because the content of this payload is embedded payloads and there was no natural place to put the type of the first one , that type is placed here . 	231	0
7815	Payload Length	o Payload Length - Includes the lengths of the header , initialization vector ( IV ), Encrypted IKE payloads , Padding , Pad Length , and Integrity Checksum Data . 	100	0
7815	Protocol ID	o SPI Size ( 1 octet ) - Length in octets of the SPI as defined by the protocol ID . It MUST be zero for IKE ( SPI is in the message header ). 	100	0
7815	SPI Size	o SPI Size ( 1 octet ) - Length in octets of the SPI as defined by the protocol ID . It MUST be zero for IKE ( SPI is in the message header ). 	100	0
7815	Num of SPIs	o Num of SPIs ( 2 octets , unsigned integer ) - The number of SPIs contained in the Delete payload . This MUST be zero for IKE . 	231	0
7821	Field Type	A dedicated Field Type value is used to identify the Checksum Complement extension . See Section 5 . 	400	0
7821	MBZ	The extension field includes a 22-octet MBZ ( MUST be zero ) field . This field MUST be set to 0 and MUST be ignored by the recipient . The MBZ field is used for padding the extension field to 28 octets . 	500	0
7821	Checksum Complement	The Checksum Complement extension includes the Checksum Complement field , residing in the last 2 octets of the extension . 	301	0
7833	Type	Type 	240	0
7833	Length	Length 	100	0
7833	Extended-Type	Extended-Type 	231	0
7833	M	M ( More ) 	302	0
7833	Reserved	Reserved 	500	0
7833	Type	Type 	240	0
7833	Length	Length 	100	0
7833	Extended-Type	Extended-Type 	231	0
7833	M	M ( More ) 	302	0
7833	Reserved	Reserved 	500	0
7837	Option Type	8-bit identifier of the type of option . Set to the value 30 ( 0x1E ) allocated for experimental work . 	231	0
7837	Option Length	8-bit unsigned integer . The length of the option in octets ( excluding the Option Type and Option Length fields ). Set to the value 1 . 	100	0
7837	res	These four bits are not used in the current specification . They are set to zero by the sender and are ignored by the receiver . 	500	0
7845	Pre-skip	There is some amount of latency introduced during the decoding process , to allow for overlap in the CELT mode , stereo mixing in the SILK mode , and resampling . The encoder might have introduced additional latency through its own resampling and analysis ( though the exact amount is not specified ). Therefore , the first few samples produced by the decoder do not correspond to real input audio , but are instead composed of padding inserted by the encoder to compensate for this latency . These samples need to be stored and decoded , as Opus is an asymptotically convergent predictive codec , meaning the decoded contents of each frame depend on the recent history of decoder inputs . However , a player will want to skip these samples after decoding them . 	231	0
7845	Pre-skip	This is the number of samples ( at 48 kHz ) to discard from the decoder output when starting playback , and also the number to subtract from a page's granule position to calculate its PCM sample position . When cropping the beginning of existing Ogg Opus streams , a pre-skip of at least 3,840 samples ( 80 ms ) is RECOMMENDED to ensure complete convergence in the decoder . 	200	0
7845	Vendor String Length	This field gives the length of the following vendor string , in octets . It MUST NOT indicate that the vendor string is longer than the rest of the packet . 	100	0
7845	User Comment List Length	This field indicates the number of user-supplied comments . It MAY indicate there are zero user-supplied comments , in which case there are no additional fields in the packet . It MUST NOT indicate that there are so many comments that the comment string lengths would require more data than is available in the rest of the packet . 	240	0
7854	Version	o Version ( 1 byte ): Indicates the BMP version . This is set to ' 3 ' for all messages defined in this specification . (' 1 ' and ' 2 ' were used by draft versions of this document .) Version 0 is reserved and MUST NOT be sent . 	220	0
7854	Message Length	o Message Length ( 4 bytes ): Length of the message in bytes ( including headers , data , and encapsulated messages , if any ). 	100	0
7854	Peer Type	o Peer Type ( 1 byte ): Identifies the type of peer . Currently , three types of peers are identified : 	231	0
7854	Peer Flags	o Peer Flags ( 1 byte ): These flags provide more information about the peer . The flags are defined as follows : 	240	0
7854	Peer AS	o Peer AS : The Autonomous System number of the peer from which the encapsulated PDU was received . If a 16-bit AS number is stored in this field [ RFC6793 ], it should be padded with zeroes in the 16 most significant bits . 	231	0
7854	Peer BGP ID	o Peer BGP ID : The BGP Identifier of the peer from which the encapsulated PDU was received . 	230	0
7854	Information Type	o Information Type ( 2 bytes ): Type of information provided . Defined types are : 	240	0
7854	Information Length	o Information Length ( 2 bytes ): The length of the following Information field , in bytes . 	100	0
7854	Information Type	o Information Type ( 2 bytes ): Type of information provided . Defined types are : 	240	0
7854	Information Length	o Information Length ( 2 bytes ): The length of the following Information field , in bytes . 	100	0
7854	Stat Type	o Stat Type ( 2 bytes ): Defines the type of the statistic carried in the Stat Data field . 	231	0
7854	Stat Len	This specification defines the following statistics . A BMP implementation MUST ignore unrecognized stat types on receipt , and likewise MUST ignore unexpected data in the Stat Data field . 	400	0
7854	Reason	o Reason 1 : The local system closed the session . Following the Reason is a BGP PDU containing a BGP NOTIFICATION message that would have been sent to the peer . 	240	0
7854	Reason	o Reason 2 : The local system closed the session . No notification message was sent . Following the reason code is a 2-byte field containing the code corresponding to the Finite State Machine ( FSM ) Event that caused the system to close the session ( see Section 8.1 of [ RFC4271 ]). Two bytes both set to 0 are used to indicate that no relevant Event code is defined . 	240	0
7854	Reason	o Reason 3 : The remote system closed the session with a notification message . Following the Reason is a BGP PDU containing the BGP NOTIFICATION message as received from the peer . 	240	0
7854	Reason	o Reason 4 : The remote system closed the session without a notification message . This includes any unexpected termination of the transport session , so in some cases both the local and remote systems might consider this to apply . 	240	0
7854	Reason	o Reason 5 : Information for this peer will no longer be sent to the monitoring station for configuration reasons . This does not , strictly speaking , indicate that the peer has gone down , but it does indicate that the monitoring station will not receive updates for the peer . 	210	0
7854	Local Port	o Local Port : The local port number associated with the peering TCP session , or 0 if no TCP session actually exists ( see Section 8.2 ). 	230	0
7854	Remote Port	o Remote Port : The remote port number associated with the peering TCP session , or 0 if no TCP session actually exists ( see Section 8.2 ). ( The remote address can be found in the Peer Address field of the fixed header .) 	230	0
7854	Sent OPEN Message	o Sent OPEN Message : The full OPEN message transmitted by the monitored router to its peer . 	230	0
7854	Received OPEN Message	o Received OPEN Message : The full OPEN message received by the monitored router from its peer . 	230	0
7864	Home Network Prefix	The following terms used in this document are defined in the Multiple Care-of Addresses Registration [ RFC5648 ] and Flow Bindings in Mobile IPv6 and Network Mobility ( NEMO ) Basic Support [ RFC6089 ]: 	400	0
7864	Home Network Prefix	A new flag ( L ) is included in the Home Network Prefix Option to indicate to the MAG whether the conveyed prefix has to be hosted on - link or not on the point-to-point interface with the MN . A prefix is hosted off-link for the flow mobility purposes defined in this document . The rest of the Home Network Prefix Option format remains the same as defined in [ RFC5213 ]. 	210	0
7864	L	The Off-link Home Network Prefix Flag is set to indicate to the MAG that the HNP conveyed in the option is not to be hosted on - link , but has to be considered for flow mobility purposes , and therefore added to the MAG routing table . If the flag is set to 0 , the MAG assumes that the HNP has to be hosted on-link . 	231	0
7867	BT	A Video Loss Concealment Report Block is identified by the constant 34 . 	301	0
7867	I	This field indicates whether the reported metrics are interval , cumulative , or sampled metrics [ RFC6792 ]: 	220	0
7867	V	This field is used to identify the video loss concealment method type used at the receiver . The value is defined as follows : 	231	0
7867	RSV	These bits are reserved for future use . They MUST be set to zero by senders and ignored by receivers ( see Section 4.2 of [ RFC6709 ]). 	500	0
7867	Block Length	This field is in accordance with the definition in [ RFC3611 ]. In this report block , it MUST be set to 5 when V=10 and set to 4 when V=11 . The block MUST be discarded if the block length is set to a different value . 	302	0
7867	SSRC of Source	SSRC of Source : 32 bits 	302	0
7867	Impaired Duration	The total duration , expressed in units of RTP timestamp from the sending side of the reporting block , of video impaired by transmission loss before applying any loss concealment methods . 	100	0
7867	Concealed Duration	The total duration , expressed in units of RTP timestamp from the sending side of the reporting block , of concealed damaged video pictures on which the loss concealment method corresponding to the Video Loss Concealment Method Type is applied . 	100	0
7867	MIFP	Mean Impaired Frame Proportion is the mean proportion of each video frame impaired by loss before applying any loss concealment method during the interval , expressed as a fixed-point number with the binary point at the left edge of the field . It is calculated by summing the impaired proportion of each video frame and dividing by the number of frames during this period . The impaired proportion of each video frame is obtained by dividing the number of missing macroblocks from this video frame by the total macroblock number of the video frame , which is equivalent to multiplying the result of the division by 256 , limiting the maximum value to 255 ( to avoid overflow ), and taking the integer part . 	200	0
7867	MCFP	Mean Concealed Frame Proportion is the mean proportion of each video frame to which loss concealment ( depicted as " V " in the definition of " Video Loss Concealment Method Type ") was applied during the interval , expressed as a fixed-point number with the binary point at the left edge of the field . It is calculated by summing the concealed proportion of each video frame and dividing by the number of frames during this period . The concealed proportion of each video frame is obtained by dividing the number of concealed macroblocks from this video frame by the total macroblock number of the video frame , which is equivalent to multiplying the result of the division by 256 , limiting the maximum value to 255 ( to avoid overflow ), and taking the integer part . 	200	0
7867	FFSC	Fraction of Frames Subject to Concealment is calculated by dividing the number of frames to which loss concealment ( using Video Loss Concealment Method Type ) was applied by the total number of frames and expressing this value as a fixed-point number with the binary point at the left edge of the field . It is equivalent to multiplying the result of the division by 256 , limiting the maximum value to 255 ( to avoid overflow ), and taking the integer part . 	200	0
7867	Reserved	These bits are reserved for future use . They MUST be set to zero by senders and ignored by receivers ( see Section 4.2 of [ RFC6709 ]). 	500	0
7868	AFI	Address Family Identifier ( AFI ): Identity of the network-layer protocol reachability information being advertised [ 12 ]. 	230	0
7868	TID	Topology Identifier ( TID ): A number that is used to mark prefixes as belonging to a specific sub-topology . 	231	0
7868	Length	Type , Length , Value ( TLV ): An encoding format for information elements used in EIGRP messages to exchange information . Each TLV-formatted information element consists of three generic fields : Type identifying the nature of information carried in this element , Length describing the length of the entire TLV triplet , and Value carrying the actual information . The Value field may , itself , be internally structured; this depends on the actual type of the information element . This format allows for extensibility and backward compatibility . 	100	0
7868	Jitter	Use of Jitter-based Path Selection results in a path calculation with the lowest reported Jitter . Jitter is reported as the interval between the longest and shortest packet delivery and is expressed in microseconds . Higher values result in a higher aggregate metric when compared to those having lower Jitter calculations . 	100	0
7868	Jitter	o Jitter - accumulative o Energy - accumulative 	240	0
7868	Type high	Type high : 0x88 Type low : 	240	0
7868	Header Version	Header Version : EIGRP Packet Header Format version . Current Version is 2 . This field is not the same as the TLV Version field . 	220	0
7868	Opcode	Opcode : Indicates the type of the message . It will be one of the following values : 	231	0
7868	Checksum	Checksum : Each packet will include a checksum for the entire contents of the packet . The checksum will be the standard ones ' complement of the ones ' complement sum . For purposes of computing the checksum , the value of the checksum field is zero . The packet is discarded if the packet checksum fails . 	301	0
7868	Flags	Flags : Defines special handling of the packet . There are currently four defined flag bits . 	231	0
7868	Sequence Number	Sequence Number : Each packet that is transmitted will have a 32-bit sequence number that is unique with respect to a sending router . A value of 0 means that an acknowledgment is not required . 	200	0
7868	Acknowledgment Number	Acknowledgment Number : The 32-bit sequence number that is being acknowledged with respect to the receiver of the packet . If the value is 0 , there is no acknowledgment present . A non-zero value can only be present in unicast-addressed packets . A HELLO packet with a non-zero ACK field should be decoded as an ACK packet rather than a HELLO packet . 	200	0
7868	Autonomous System Number	Autonomous System Number : 16-bit unsigned number of the sending system . This field is indirectly used as an authentication value . That is , a router that receives and accepts a packet from a neighbor must have the same AS number or the packet is ignored . The range of valid AS numbers is 1 through 65,535 . 	231	0
7868	Type Low	Type Low : 1 octet that defines the TLV Opcode; see TLV Definitions in Section 3 . 	231	0
7868	0x0001	This TLV is used in HELLO packets to convey the EIGRP metric coefficient values : noted as " K-values " as well as the Hold Time values . This TLV is also used in an initial UPDATE packet when a neighbor is discovered . 	231	0
7868	K1	K1 - 1 K2 - 0 K3 - 1 K4 - 0 K5 - 0 K6 - 0 	240	0
7868	Hold Time	Hold Time : The amount of time in seconds that a receiving router should consider the sending neighbor valid . A valid neighbor is one that is able to forward packets and participates in EIGRP . A router that considers a neighbor valid will store all routing information advertised by the neighbor . 	120	0
7868	0x0002	This TLV may be used in any EIGRP packet and conveys the authentication type and data used . Routers receiving a mismatch in authentication shall discard the packet . 	231	0
7868	0x02	MD5 Authentication will use Auth Type code 0x02 , and the Auth Data will be the MD5 Hash value . 	231	0
7868	0x03	SHA2-256 Authentication will use Type code 0x03 , and the Auth Data will be the 256-bit SHA2 [ 6 ] Hash value . 	231	0
7868	0x0003	This TLV is used for a sender to tell receivers to not accept packets with the CR-Flag set . This is used to order multicast and unicast addressed packets . 	231	0
7868	Address Length	Address Length : Number of octets for the address that follows . For IPv4 , the value is 4 . For IPv6 , it is 16 . For AppleTalk , the value is 4; for Novell IPX , the value is 10 ( both are no longer in use ). 	100	0
7868	Protocol Address	Protocol Address : Neighbor address on interface in which the HELLO with SEQUENCE TLV is sent . Each address listed in the HELLO packet is a neighbor that should not enter Conditionally Received mode . 	230	0
7868	0x0004	Field Length Vender OS major version 1 Vender OS minor version 1 EIGRP major revision 1 EIGRP minor revision 1 	220	0
7868	0x0007	This TLV is used in HELLO packets to notify the list of neighbor(s ) the router has reset the adjacency . This TLV is used in HELLO packets to notify the list of neighbors that the router has reset the adjacency . This is used anytime a router needs to reset an adjacency , or signal an adjacency it is going down . 	230	0
7868	0x0008	List of sub-topology identifiers , including the Base Topology , supported by the router . 	231	0
7868	Flags Field	Flags Field ----------- Source Withdraw ( Bit 0 ) - Indicates if the router that is the original source of the destination is withdrawing the route from the network or if the destination is lost due as a result of a network failure . 	240	0
7868	Scaled Delay	Scaled Delay : An administrative parameter assigned statically on a per-interface-type basis to represent the time it takes along an unloaded path . This is expressed in units of tens of microseconds divvied by 256 . A delay of 0xFFFFFFFF indicates an unreachable route . 	121	0
7868	MTU	MTU : The minimum MTU size for the path to the destination . 	400	0
7868	Hop Count	Reliability : The current error rate for the path , measured as an error percentage . A value of 255 indicates 100% reliability 	231	0
7868	Reliability	Reliability : The current error rate for the path , measured as an error percentage . A value of 255 indicates 100% reliability 	231	0
7868	Load	Load : The load utilization of the path to the destination , measured as a percentage . A value of 255 indicates 100% load . 	231	0
7868	Flags Field	Flags Field : See Section 6.8.1 . 	400	0
7868	Administrative Tag	Administrative Tag : A tag assigned by the network administrator that is untouched by EIGRP . This allows a network administrator to filter routes in other EIGRP border routers based on this value . 	230	0
7868	External Protocol Metric	External Protocol Metric : 32-bit value of the composite metric that resides in the routing table as learned by the foreign protocol . If the External Protocol is IGRP or another EIGRP routing process , the value can optionally be the composite metric or 0 , and the metric information is stored in the metric section . 	302	0
7868	Flags Field	Flags Field : See Section 6.8.1 	400	0
7868	Subnet Mask Bit Count	Subnet Mask Bit Count : 8-bit value used to indicate the number of bits in the subnet mask . A value of 0 indicates the default network , and no address is present . 	201	0
7868	IPv4 Destination	IPv4 Destination : The IPv4 address with which the community information should be stored . 	230	0
7868	Community Length	Community Length : A 2-octet unsigned number that indicates the length of the Community List . The length does not include the IPv4 Address , Reserved , or Length fields . 	100	0
7868	Community List	Community List : One or more 8-octet EIGRP communities , as defined in Section 6.4 . 	400	0
7868	Community Length	Community Length : A 2-octet unsigned number that indicates the length of the Community List . The length does not include the IPv6 Address , Reserved , or Length fields . 	100	0
7868	Community List	Community List : One or more 8-octet EIGRP communities , as defined in Section 6.4 . 	400	0
7868	Offset	Offset : Number of 16-bit words in the Extended Attribute section that are used to determine the start of the destination information . A value of zero indicates no Extended Attributes are attached . 	201	0
7868	Priority	Priority : Priority of the prefix when processing a route . In an AS using priority values , a destination with a higher priority receives preferential treatment and is serviced before a destination with a lower priority . A value of zero indicates no priority is set . 	210	0
7868	Reliability	Reliability : The current error rate for the path . Measured as an error percentage . A value of 255 indicates 100% reliability 	231	0
7868	Load	Load : The load utilization of the path to the destination , measured as a percentage . A value of 255 indicates 100% load . 	231	0
7868	MTU	MTU : The minimum MTU size for the path to the destination . Not used in metric calculation but available to underlying protocols 	400	0
7868	Hop Count	Delay : The one-way latency along an unloaded path to the destination expressed in units of picoseconds per kilobit . This number is not scaled; a value of 0xFFFFFFFFFFFF indicates an unreachable route . 	302	0
7868	Delay	Delay : The one-way latency along an unloaded path to the destination expressed in units of picoseconds per kilobit . This number is not scaled; a value of 0xFFFFFFFFFFFF indicates an unreachable route . 	302	0
7868	Reserved	Opaque Flags : 16-bit protocol-specific flags . Values currently defined by Cisco are : 	231	0
7868	Opaque Flags	Opaque Flags : 16-bit protocol-specific flags . Values currently defined by Cisco are : 	231	0
7868	Opcode	Offset : Number of 16-bit words in the application-specific information . Offset does not include the length of the Opcode or Offset . 	100	0
7868	Offset	Offset : Number of 16-bit words in the application-specific information . Offset does not include the length of the Opcode or Offset . 	100	0
7868	Data	Data : Zero or more octets of data as defined by Opcode . 	400	0
7868	0x00	This is used to pad the attribute section to ensure 32-bit alignment of the metric encoding section . 	400	0
7868	Opcode	Opcode : Transmitted as zero ( 0 ). 	500	0
7868	Offset	Offset : Transmitted as zero ( 0 ) indicating no data is present . 	302	0
7868	Data	Data : No data is present with this attribute . 	400	0
7868	0x01	If a route is received from a back-rev neighbor , and the route is selected as the best path , the scaled metric received in the older UPDATE may be attached to the packet . If received , the value is for informational purposes and is not affected by K6 . 	303	0
7868	Reserved	Scaled Bandwidth : The minimum bandwidth along a path expressed in units of 2,560,000,000/kbps . A bandwidth of 0xFFFFFFFF indicates an unreachable route . 	400	0
7868	Scaled Delay	Scaled Delay : An administrative parameter assigned statically on a per-interface-type basis to represent the time it takes along an unloaded path . This is expressed in units of tens of microseconds divvied by 256 . A delay of 0xFFFFFFFF indicates an unreachable route . 	121	0
7868	0x02	EIGRP administrative tag does not alter the path decision-making process . Routers can set a tag value on a route and use the flags to apply specific routing polices within their network . 	231	0
7868	Administrator Tag	Administrator Tag : A tag assigned by the network administrator that is untouched by EIGRP . This allows a network administrator to filter routes in other EIGRP border routers based on this value . 	230	0
7868	0x03	EIGRP communities themselves do not alter the path decision-making process , communities can be used as flags in order to mark a set of routes . Upstream routers can then use these flags to apply specific routing polices within their network . 	231	0
7868	Offset	Community List : One or more 8-octet EIGRP communities , as defined in Section 6.4 . 	400	0
7868	Community List	Community List : One or more 8-octet EIGRP communities , as defined in Section 6.4 . 	400	0
7868	0x04	( Optional ) EIGRP can carry one-way Jitter in networks that carry UDP traffic if the node is capable of measuring UDP Jitter . The Jitter reported to will be averaged with any existing Jitter data and include in the route updates . If no Jitter value is reported by the peer for a given destination , EIGRP will use the locally collected value . 	400	0
7868	Jitter	Jitter : The measure of the variability over time of the latency across a network measured in measured in microseconds . 	231	0
7868	0x05	( Optional ) EIGRP can carry energy usage by nodes in networks if the node is capable of measuring energy . The Quiescent Energy reported will be added to any existing energy data and include in the route updates . If no energy data is reported by the peer for a given destination , EIGRP will use the locally collected value . 	400	0
7868	0x06	( Optional ) EIGRP can carry energy usage by nodes in networks if the node is capable of measuring energy . The active Energy reported will be added to any existing energy data and include in the route updates . If no energy data is reported by the peer for a given destination , EIGRP will use the locally collected value . 	400	0
7868	0x07	The Add Path enables EIGRP to advertise multiple best paths to adjacencies . There will be up to a maximum of four AddPaths supported , where the format of the field will be as follows . 	400	0
7868	Offset	AddPath : Length of this field will vary in length based on whether it contains IPv4 or IPv6 data . 	100	0
7868	Flags Field	Flags Field : See Section 6.8.1 . 	400	0
7868	Flags Field	Flags Field : See Section 6.8.1 . 	400	0
7868	External Protocol Metric	External Protocol Metric : A 32-bit value of the metric used by the routing table as learned by the foreign protocol . If the External Protocol is IGRP or EIGRP , the value can ( optionally ) be 0 , and the metric information is stored in the metric section . 	302	0
7868	Flags Field	Flags Field : See Section 6.8.1 . 	400	0
7868	Subnet Mask Bit Count	Subnet Mask Bit Count : 8-bit value used to indicate the number of bits in the subnet mask . A value of 0 indicates the default network and no address is present . 	201	0
7884	Type	Length - This field represents the total length of the discriminator(s ) that appears in the Value field , in octets . Each discriminator is 4 octets , so the Length is four times the number of discriminators included in the TLV . There is no optional padding for this field . 	100	0
7884	Length	Length - This field represents the total length of the discriminator(s ) that appears in the Value field , in octets . Each discriminator is 4 octets , so the Length is four times the number of discriminators included in the TLV . There is no optional padding for this field . 	100	0
7891	Type	Length : The length depending on the Address Family ( IPv4 or IPv6 ) of the Encoded-Unicast address . 	100	0
7891	Length	Length : The length depending on the Address Family ( IPv4 or IPv6 ) of the Encoded-Unicast address . 	100	0
7891	Value	Value : Encoded-Unicast address . This SHOULD be a valid IPv4 or IPv6 address of an upstream router . 	230	0
7897	L	L : The L bit is an attribute of the subobject as defined in [ RFC3209 ], and its usage in the IRO subobject is defined in [ RFC7896 ]. 	210	0
7897	Type	Type : 5 ( indicating a 4-byte AS number ). 	400	0
7897	Length	Length : 8 ( total length of the subobject in bytes ). 	100	0
7897	Reserved	AS Number : The 4-byte AS number . Note that if 2-byte AS numbers are in use , the low-order bits ( 16 through 31 ) MUST be used , and the high-order bits ( 0 through 15 ) MUST be set to zero . 	302	0
7897	L	L : The L bit is an attribute of the subobject as defined in [ RFC3209 ], and its usage in the IRO subobject is defined in [ RFC7896 ]. 	210	0
7897	Type	Type : 6 ( indicating a 4-byte OSPF Area ID ). 	400	0
7897	Length	Length : 8 ( total length of the subobject in bytes ). 	100	0
7897	Reserved	Reserved : Zero at transmission; ignored at receipt . 	500	0
7897	L	L : The L bit is an attribute of the subobject as defined in [ RFC3209 ], and its usage in the IRO subobject is defined in [ RFC7896 ]. 	210	0
7897	Type	Length : Variable . The length MUST be at least 8 and MUST be a multiple of 4 . 	100	0
7897	Length	Length : Variable . The length MUST be at least 8 and MUST be a multiple of 4 . 	100	0
7897	Reserved	IS-IS Area ID : The variable-length IS-IS area identifier . Padded with trailing zeroes to a 4-byte boundary . 	230	0
7898	L	L : The L bit is an attribute of the subobject as defined in [ RFC3209 ], i.e ., it's set if the subobject represents a loose hop in the explicit route . If the bit is not set , the subobject represents a strict hop in the explicit route . 	210	0
7898	Type	Type : 5 ( indicating a 4-byte AS number ). 	302	0
7898	Length	Length : 8 ( total length of the subobject in bytes ). 	100	0
7898	Reserved	AS Number : The 4-byte AS number . Note that if 2-byte AS numbers are in use , the low-order bits ( 16 through 31 ) MUST be used , and the high-order bits ( 0 through 15 ) MUST be set to zero . For the purpose of this experiment , it is advised to use a 4-byte AS number subobject as the default . 	302	0
7898	L	L : The L bit is an attribute of the subobject as defined in [ RFC3209 ]. 	210	0
7898	Type	Type : 6 ( indicating a 4-byte OSPF Area ID ). 	400	0
7898	Length	Length : 8 ( total length of the subobject in bytes ). 	100	0
7898	Reserved	Reserved : Zero at transmission; ignored at receipt . 	500	0
7898	L	L : The L bit is an attribute of the subobject as defined in [ RFC3209 ]. 	210	0
7898	Type	Length : Variable . The length MUST be at least 8 and MUST be a multiple of 4 . 	100	0
7898	Length	Length : Variable . The length MUST be at least 8 and MUST be a multiple of 4 . 	100	0
7898	Reserved	IS-IS Area ID : The variable-length IS-IS area identifier . Padded with trailing zeroes to a 4-byte boundary . 	230	0
7917	Type	Type : 21 ( Node-Admin-Tag ) 	231	0
7917	Length	Length : An 8-bit field that indicates the length of the Value portion in octets; this will be a multiple of 4 octets , depending on the number of tags advertised . 	100	0
7949	Source Address	For OSPFv3 over IPv4 , the source address is the primary IPv4 address for the interface over which the packet is transmitted . All OSPFv3 routers on the link should share the same IPv4 subnet for IPv4 transport to function correctly . 	230	0
7949	Destination Address	As defined in OSPFv2 , the IPv4 destination address of an OSPF protocol packet is either an IPv4 multicast address or the IPv4 unicast address of an OSPFv2 neighbor . Two well-known link-local multicast addresses are assigned to OSPFv2 , the AllSPFRouters address ( 224.0.0.5 ) and the AllDRouters address ( 224.0.0.6 ). The multicast address used depends on the OSPF packet type , the OSPF interface type , and the OSPF router's role on multi-access networks . 	230	0
7956	Tenant ID	Tenant ID : 1 	240	0
7956	Tenant ID	Tenant ID : 1 	240	0
7956	Type	o Type : Set to the TENANT-GWMAC-LABEL sub-TLV type ( 7 ). 2 bytes , because this APPsub-TLV appears in an extended TLV [ RFC7356 ]. 	400	0
7956	Length	o Length : If the Label1 field is used to represent a VLAN , the value of the Length field is 12 . If the Label1 and Label2 fields are used to represent an FGL , the value of the Length field is 14 . 	100	0
7956	Tenant ID	o Tenant ID : This identifies a Tenant ID unique across the TRILL campus . 	231	0
7956	Type	o Type : Set to the IPV4-PREFIX sub-TLV type ( 8 ). 2 bytes , because this APPsub-TLV appears in an extended TLV [ RFC7356 ]. 	400	0
7956	Total Length	o Total Length : This 2-byte unsigned integer indicates the total length of the Tenant ID , Prefix Length , and Prefix fields , in octets . A value of 0 indicates that no IPv4 prefix is being advertised . 	100	0
7956	Tenant ID	o Tenant ID : This identifies a Tenant ID unique across the TRILL campus . 	231	0
7956	Type	o Type : Set to the IPV6-PREFIX sub-TLV type ( 9 ). 2 bytes , because this APPsub-TLV appears in an extended TLV [ RFC7356 ]. 	400	0
7956	Total Length	o Total Length : This 2-byte unsigned integer indicates the total length of the Tenant ID , Prefix Length , and Prefix fields , in octets . A value of 0 indicates that no IPv6 prefix is being advertised . 	100	0
7956	Tenant ID	o Tenant ID : This identifies a Tenant ID unique across the TRILL campus . 	231	0
7959	SZX	o the size of the block ( SZX ); 	100	0
7959	M	o the relative number of the block ( NUM ) within a sequence of blocks with the given size . 	100	0
7959	NUM	NUM : Block Number , indicating the block number being requested or provided . Block number 0 indicates the first block of a body ( i.e ., starting with the first byte of the body ). 	210	0
7959	M	M : More Flag (" not last block "). For descriptive usage , this flag , if unset , indicates that the payload in this message is the last block in the body; when set , it indicates that there are one or more additional blocks available . When a Block2 Option is used in a request to retrieve a specific block number (" control usage "), the M bit MUST be sent as zero and ignored on reception . ( In a Block1 Option in a response , the M flag is used to indicate atomicity , see below .) 	210	0
7959	SZX	SZX : Block Size . The block size is represented as a three-bit unsigned integer indicating the size of a block to the power of two . Thus , block size = 2**(SZX + 4 ). The allowed values of SZX are 0 to 6 , i.e ., the minimum block size is 2**(0+4 ) = 16 and the maximum is 2**(6+4 ) = 1024 . The value 7 for SZX ( which would indicate a block size of 2048 ) is reserved , i.e ., MUST NOT be sent and MUST lead to a 4.00 Bad Request response code upon reception in a request . 	400	0
7961	AFN	AFN : Address Family Number ( http://www.iana.org/assignments/address-family-numbers /) 	230	0
7961	Nickname	Nickname : A 16-bit TRILL switch identifier , as specified in Section 3.7 of [ RFC6325 ] and as updated by Section 4 of [ RFC7780 ] 	231	0
7961	Length	o Length : Variable; minimum 7 . If Length is 6 or less or if the APPsub-TLV extends beyond the size of an encompassing TRILL GENINFO TLV or other context , the APPsub-TLV MUST be ignored . For manageability , a counter reflecting the receipt of such malformed IA APPsub-TLVs should be maintained . 	100	0
7961	Addr Sets End	o Addr Sets End : The unsigned integer byte number , within the IA APPsub-TLV value part , of the last byte of the last Address Set , where the first byte is numbered 1 . This will be the number of the byte just before the first sub-sub-TLV if any sub-sub-TLVs are present ( see Section 3 ). The processing is as follows : 	110	0
7961	Nickname	o Nickname : The nickname ( see Section 1.1 ) of the TRILL switch by which the Address Sets are reachable . If 0 , the Address Sets are reachable from the TRILL switch originating the message containing the APPsub-TLV ( for example , an ESADI [ RFC7357 ] message ). 	230	0
7961	Flags	D : Directory flag : If D is 1 , the APPsub-TLV contains directory information [ RFC7067 ]. 	210	0
7961	D	D : Directory flag : If D is 1 , the APPsub-TLV contains directory information [ RFC7067 ]. 	210	0
7961	L	L : Local flag : If L is 1 , the APPsub-TLV contains information learned locally by observing ingressed frames [ RFC6325 ]. ( Both D and L can be set to 1 in the same IA APPsub-TLV if a TRILL switch had learned an address locally and also advertised it as a directory .) 	210	0
7961	RESV	RESV : Additional reserved flag bits that MUST be sent as zero and ignored on receipt . 	500	0
7961	Confidence	o Confidence : This 8-bit unsigned quantity in the range 0 to 254 indicates the confidence level in the addresses being transported ( see Section 4.8.2 of [ RFC6325 ]). A value of 255 is treated as if it was 254 . 	231	0
7961	AFN	o AFN : A 2-byte Address Family Number . The number of AFNs present is given by K , except that there are no AFNs if K is greater than 31 . The AFN sequence specifies the structure of the Address Sets occurring later in the TLV . For example , if the Template size is 2 and the two AFNs present are the AFNs for a 48-bit MAC and an IPv4 address , in that order , then each Address Set present will consist of a 6-byte MAC address followed by a 4-byte IPv4 address . If any AFNs are present that are unknown to the receiving IS and the length of the corresponding address is not provided by a sub-sub-TLV as specified below , the receiving IS will be unable to parse the Address Sets and MUST ignore the IA APPsub-TLV . 	301	0
7961	Length	o Length : 3*N , where N is the number of AFN Size Records present . If Length is not a multiple of 3 , the sub-sub-TLV MUST be ignored . 	100	0
7961	AFN	o AFN : The AFN whose length is being specified by the AFN Size Record . 	100	0
7961	AdrSize	o AdrSize : The length , in bytes , of addresses specified by the AFN field as an unsigned integer . 	100	0
7961	Length	o Length : Variable; minimum 2 . If Length is 0 or 1 , the sub-sub-TLV MUST be ignored . 	100	0
7961	AFN	o Fixed Address : The address of the Type indicated by the preceding AFN field that is considered to be part of every Address Set in the IA APPsub-TLV . 	230	0
7961	Length	o Length : 2 or 3 . If Length is some other value , the sub-sub-TLV MUST be ignored . 	100	0
7961	Length	o Length : 2 . If Length is some other value , the sub-sub-TLV MUST be ignored . 	100	0
7961	RESV	o RESV : 4 reserved bits . MUST be sent as zero and ignored on receipt . 	500	0
7961	Topology	o Topology : The 12-bit topology number [ RFC5120 ]. 	100	0
7965	C	C ( Co-routed path ) bit : This bit informs the remote T-PE/S-PEs about the properties of the underlying LSPs . When set , the remote T-PE/S-PEs SHOULD select the co-routed LSP ( as the forwarding tunnel ) as the reverse PSN tunnel . If there is no such tunnel available , it may trigger the remote T-PE/S-PEs to establish a new LSP . 	210	0
7965	S	S ( Strict ) bit : This bit instructs the PEs with respect to the handling of the underlying LSPs . When set , the remote PE MUST use the tunnel/LSP specified in the PSN Tunnel Sub-TLV as the PSN tunnel on the reverse direction of the PW , or the PW will fail to be established . 	210	0
7965	T	T ( Tunnel Representation ) bit : This bit indicates the format of the LSP tunnels . When the bit is set , the tunnel uses the tunnel information to identify itself , and the LSP Number fields in the PSN Tunnel sub-TLV ( Section 3.1.1 ) MUST be set to zero . Otherwise , both the tunnel and LSP information of the PSN tunnel are required . The default is set . The motivation for the T-bit is to support the MPLS protection operation where the LSP Number fields may be ignored . 	210	0
7965	PSN Tunnel Sub-TLV	PSN Tunnel Sub-TLVs are designed for inclusion in the PSN Tunnel Binding TLV to specify the tunnel/LSPs to which a PW is required to bind . 	400	0
7965	S	If the Label Mapping message is for the forward direction , and S-PE1 accepts the requested tunnel/LSPs from T-PE1 , S-PE1 MUST save the tunnel/LSP information for reverse-direction processing later on . If the PSN Binding request is not acceptable , S-PE1 MUST reply with a Label Release Message to the upstream PE ( T-PE1 ) with the status code set to " Reject - unable to use the suggested tunnel/LSPs " ( 0x0000003B ). 	302	0
7968	Length	o Length : 6*n bytes , where there are n Tree-VLAN RECORDs . Thus , the value of Length can be used to determine n . If Length is not a multiple of 6 , the APPsub-TLV is corrupt and MUST be ignored . 	100	0
7968	Nickname	o Nickname : The nickname identifying the distribution tree by its root . 	231	0
7968	RESV	o Start.VLAN , End.VLAN : These fields are the VLAN IDs of the allowed VLAN range on the tree , inclusive . To specify a single VLAN , the VLAN's ID appears as both the start and end VLAN . If End.VLAN is less than Start.VLAN , the Tree-VLAN RECORD MUST be ignored . 	240	0
7968	Start.VLAN	o Start.VLAN , End.VLAN : These fields are the VLAN IDs of the allowed VLAN range on the tree , inclusive . To specify a single VLAN , the VLAN's ID appears as both the start and end VLAN . If End.VLAN is less than Start.VLAN , the Tree-VLAN RECORD MUST be ignored . 	240	0
7968	End.VLAN	o Start.VLAN , End.VLAN : These fields are the VLAN IDs of the allowed VLAN range on the tree , inclusive . To specify a single VLAN , the VLAN's ID appears as both the start and end VLAN . If End.VLAN is less than Start.VLAN , the Tree-VLAN RECORD MUST be ignored . 	240	0
7968	Length	o Length : 8*n bytes , where there are n Tree-FGL RECORDs . Thus , the value of Length can be used to determine n . If Length is not a multiple of 8 , the APPsub-TLV is corrupt and MUST be ignored . 	100	0
7968	Nickname	o Nickname : The nickname identifying the distribution tree by its root . 	231	0
7968	RESV	o Start.FGL , End.FGL : These fields are the FGL IDs of the allowed FGL range on the tree , inclusive . To specify a single FGL , the FGL's ID appears as both the start and end FGL . If End.FGL is less than Start.FGL , the Tree-FGL RECORD MUST be ignored . 	240	0
7968	Start.FGL	o Start.FGL , End.FGL : These fields are the FGL IDs of the allowed FGL range on the tree , inclusive . To specify a single FGL , the FGL's ID appears as both the start and end FGL . If End.FGL is less than Start.FGL , the Tree-FGL RECORD MUST be ignored . 	240	0
7968	End.FGL	o Start.FGL , End.FGL : These fields are the FGL IDs of the allowed FGL range on the tree , inclusive . To specify a single FGL , the FGL's ID appears as both the start and end FGL . If End.FGL is less than Start.FGL , the Tree-FGL RECORD MUST be ignored . 	240	0
7968	Length	o Length : 2 + the length of the Group Sub-Sub TLVs that are included . 	100	0
7968	Nickname	o Nickname : The nickname identifying the distribution tree by its root . 	231	0
7978	SubERR	SubERR : This field provides further details when an error is indicated in the RBridge Channel ERR field . If ERR is zero , then SubERR MUST be sent as zero and ignored on receipt . See Section 5 . 	201	0
7978	RESV	RESV4 : This field MUST be sent as zero . If non-zero when received , this is an error condition . See Section 5 . 	302	0
7978	SType	SType : This field describes the type of security information and features , including keying material , being used or provided by the extended RBridge Channel message . See Section 4 . 	231	0
7978	PType	PType : Payload Type . This describes the tunneled data . See Section 3 . 	400	0
7978	PType	PType Description Reference ----- ----------- --------- 0 Reserved 1 Null Section 3.1 of RFC 7978 2 Ethertyped Payload Section 3.2 of RFC 7978 3 Ethernet Frame Section 3.3 of RFC 7978 4-14 Unassigned 15 Reserved 	240	0
7978	SType	SType Description Reference ----- ----------- --------- 0 None Section 4.2 of RFC 7978 1 IS-IS CRYPTO_AUTH-Based Section 4.3 of RFC 7978 Authentication 2 DTLS Pairwise Security Section 4.4 of RFC 7978 3 Composite Security Section 4.5 of RFC 7978 4-14 Unassigned 15 Reserved 	240	0
7978	RESV	o RESV : Four bits that MUST be sent as zero and ignored on receipt . 	500	0
7978	Size	o Key ID : specifies the keying value and authentication algorithm that the Key ID specifies for TRILL IS-IS LSP [ RFC5310 ] Authentication TLVs . The keying material actually used is always derived as shown in Section 4.1 . 	231	0
7978	Key ID	o Key ID : specifies the keying value and authentication algorithm that the Key ID specifies for TRILL IS-IS LSP [ RFC5310 ] Authentication TLVs . The keying material actually used is always derived as shown in Section 4.1 . 	230	0
7982	Req	Req : Number of times the request is transmitted with the same transaction ID to the server . 	120	0
7982	Resp	Resp : Number of times a response with the same transaction ID is sent from the server . MUST be set to zero in requests and ignored by the receiver . 	500	0
8001	Type	Type ( 8 bits ) 	231	0
8001	Length	The Length field contains the total length of the subobject in octets , including the Type and Length fields . The Length depends on the number of SRLG IDs . 	100	0
8001	Reserved	This 15-bit field is reserved . It SHOULD be set to zero on transmission and MUST be ignored on receipt . 	500	0
8002	Type	Type 768 Length Length in octets , excluding Type , Length , and Padding . CERT group Group ID grouping multiple related CERT parameters . CERT count Total count of certificates that are sent , possibly in several consecutive HIP control packets . CERT ID The sequence number for this certificate . CERT Type Indicates the type of the certificate . Padding Any Padding , if necessary , to make the TLV a multiple of 8 bytes . Any added padding bytes MUST be zeroed by the sender , and their values SHOULD NOT be checked by the receiver . 	100	0
8002	Certificate	Certificate : Data : Version : 3 ( 0x2 ) Serial Number : 12705268244493839545 ( 0xb0522e27291b2cb9 ) Signature Algorithm : sha256WithRSAEncryption Issuer : DC=Example , DC=com , CN=Example issuing host Validity Not Before : Feb 25 11:28:29 2016 GMT Not After : Feb 24 11:28:29 2017 GMT Subject : DC=Example , DC=com , CN=Example issuing host Subject Public Key Info : Public Key Algorithm : rsaEncryption Public-Key : ( 2048 bit ) Modulus : 00:c9:b0:85:94:af:1f:3a:77:39:c9:d5:81:a5:ee : d2:b5:6b:72:91:5d:22:2c:1e:59:e5:06:29:bd:a2 : 19:f6:ac:ca:eb:f7:88:d8:54:55:41:01:58:d8:87 : 64:d8:c8:cf:6e:c2:38:81:22:1a:ae:e9:a6:80:22 : 03:ee:f3:1b:7e:68:11:e3:f4:7b:98:33:28:bf:40 : ec:4f:19:e8:10:8a:8b:07:60:f7:9f:e4:82:f8:a7 : 58:04:3d:42:07:c8:34:ca:99:6d:11:eb:73:c1:d9 : 96:93:55:e5:c7:ed:80:4f:8a:f2:1a:6f:83:c8:15 : a4:8f:b8:6a:fe:f3:4f:49:1a:5c:1f:89:bb:30:e6 : 98:bc:ce:a3:a2:37:85:b1:79:1c:26:e6:44:0c:b9 : 3e:d8:37:81:46:f4:02:25:46:a2:ea:da:25:5c:46 : a2:a3:c5:58:80:53:1f:c5:e5:11:a0:da:d8:f2:ad : d6:98:d4:ce:55:35:cc:0b:d3:5b:09:48:ef:57:65 : 80:cb:65:79:fd:cb:4d:5b:b3:8d:1a:ff:2a:58:3e : 96:65:10:3e:04:81:78:2b:d5:ca:89:78:ea:28:5c : bc:02:4a:54:cd:aa:a9:99:8d:d6:39:e9:5e:a9:73 : 1a:5d:93:55:39:9b:72:1a:c2:a0:1f:e3:4c:b0:41 : 98:97 Exponent : 65537 ( 0x10001 ) X509v3 extensions : X509v3 Subject Alternative Name : IP Address:2001:27:DCFC:CB8:F885:D53F:4E63:48B7 X509v3 Issuer Alternative Name : IP Address:2001:2D:F878:64C1:67E3:9716:88BD:68E4 	240	0
8003	Type	Type 930 Length Length in octets , excluding Type , Length , and Padding . Min Lifetime Minimum registration lifetime . Max Lifetime Maximum registration lifetime . Reg Type The registration types offered by the registrar . 	100	0
8003	Type	Type 932 Length Length in octets , excluding Type , Length , and Padding . Lifetime Requested registration lifetime . Reg Type The preferred registration types in order of preference . 	100	0
8003	Type	Type 934 Length Length in octets , excluding Type , Length , and Padding . Lifetime Granted registration lifetime . Reg Type The granted registration types in order of preference . 	100	0
8003	Type	Type 936 Length Length in octets , excluding Type , Length , and Padding . Failure Type Reason for failure . Reg Type The registration types that failed with the specified reason . 	100	0
8004	Type	Type 65500 Length Variable . Length in octets , excluding Type , Length , and Padding . 	100	0
8004	Type	Type 65498 Length 16 Address An IPv6 address or an IPv4-in-IPv6 format IPv4 address . 	100	0
8004	Type	Type 65502 Length Variable Address An IPv6 address or an IPv4-in-IPv6 format IPv4 address . 	100	0
8012	Label	o Label-Based Load Balancer : An LSR that load balances on an entropy label from an MPLS label stack ( i.e ., flow label or entropy label ) and does not consider fields from an IP header ( and possibly fields from upper layers ) for load-balancing purposes . 	400	0
8012	Label	o Label and IP-Based Load Balancer : An LSR that load balances on both entropy labels from an MPLS label stack and fields from an IP header ( and possibly fields from upper layers ). 	400	0
8012	E	E ELI/EL push indicator This flag MUST be cleared in the echo request . An LSR that pushes ELI/EL MUST set this flag in the echo reply . An LSR that does not push ELI/EL MUST NOT set this flag in the echo reply . 	210	0
8012	IPMultipathType	* 0 when " IP Multipath Information " is omitted . Otherwise , one of the IP Multipath Information values : { 2 , 4 , 8 }. 	210	0
8012	LbMultipathType	* 0 when the " Label Multipath Information " is omitted . Otherwise , the Label Multipath Information value { 9 }. 	210	0
8015	Bursts	The terms " burst " and " gap " are used in a manner consistent with that of RTCP XR [ RFC3611 ]. RTCP XR views an RTP stream as being divided into bursts , which are periods during which the discard rate is high enough to cause noticeable quality degradation ( generally a discard rate over 5 percent ), and gaps , which are periods during which discarded packets are infrequent , and hence quality is generally acceptable . 	201	0
8015	BT	An Independent Burst/Gap Discard Metrics Block is identified by the constant 35 . 	231	0
8015	I	This field is used to indicate whether the burst/gap discard metrics are Sampled , Interval , or Cumulative metrics [ RFC6792 ]: 	210	0
8015	resv	These bits are reserved . They MUST be set to zero by senders and ignored by receivers ( see [ RFC6709 ], Section 4.2 ). 	500	0
8015	SSRC of Source	SSRC of Source : 32 bits 	302	0
8015	Threshold	The Threshold is equivalent to Gmin in [ RFC3611 ], i.e ., the number of successive packets that have to be received prior to , and following , a discarded packet in order for that discarded packet to be regarded as part of a gap . Note that the Threshold is set in accordance with the Gmin calculation defined in Section 4.7.2 of [ RFC3611 ]. 	100	0
8015	Packets Discarded in Bursts	The total number of packets discarded during discard bursts , as defined in Section 3.2 of [ RFC7002 ]. 	100	0
8015	Total Packets Expected in Bursts	The total number of packets expected during the discard bursts ( that is , the sum of received packets and lost packets ). The metric is defined in [ RFC7003 ]. 	201	0
8015	Discard Count	Number of packets discarded over the period ( Interval or Cumulative ) covered by this report , as defined in Section 3.2 of [ RFC7002 ]. 	100	0
8019	PRF	o PRF ( 2 octets ) -- Transform ID of the PRF algorithm that MUST be used to solve the puzzle . Readers should refer to the " Transform Type 2 - Pseudorandom Function Transform IDs " subregistry on [ IKEV2-IANA ] for the list of possible values . 	231	0
8019	Difficulty	o Difficulty ( 1 octet ) -- Difficulty level of the puzzle . Specifies the minimum number of trailing zero bits ( ZBC ) that each of the results of PRF must contain . Value 0 means that the Responder doesn't request any specific difficulty level , and the Initiator is free to select an appropriate difficulty level on its own ( see Section 7.1.1.1 for details ). 	302	0
8024	U	o U and F bits : both are set to 0 . 	210	0
8024	Length	o Length : length of the TLV in octets excluding the U-bit , F-bit , Type , and Length fields . 	100	0
8024	Protocol Version	o Protocol Version : the version of this PON-specific protocol for the purposes of inter-chassis communication . This is set to 0x0001 . 	220	0
8024	Reserved	o Optional Sub-TLVs : there are no optional Sub-TLVs defined for this version of the protocol . The structure of optional Sub-TLVs is defined as follows : 	400	0
8024	Length	o Length : length of the TLV in octets , excluding the U-bit , F-bit , Type , and Length fields . 	100	0
8024	U	o U and F bits : both are set to 0 . 	210	0
8024	Length	o Length : length of the TLV in octets excluding the U-bit , F-bit , Type , and Length fields . 	100	0
8024	U	o U and F bits : both are set to 0 . 	210	0
8024	Length	o Length : length of the TLV in octets excluding the U-bit , F-bit , Type , and Length fields . 	100	0
8024	System ID	o System ID : 8 octets encoding the System ID used by the OLT , which is the chassis Media Access Control ( MAC ) address . If a 6-octet System ID is used , the least significant 2 octets of the 8-octet field will be encoded as 0000 . 	231	0
8024	System Priority	o System Priority : a 2-octet value assigned by management or administration policy; the OLT with the numerically lower value of System Priority has the higher priority . 	231	0
8024	Port ID	o Port ID : 2-octet PON Port ID . 	202	0
8024	U	o U and F bits : both are set to 0 . 	210	0
8024	Length	o Length : length of the TLV in octets excluding the U-bit , F-bit , Type , and Length fields . 	100	0
8024	ROID	o ROID : Redundant Object ID ( ROID ) as defined in Section 4.3 of [ RFC7275 ]. 	231	0
8024	Local PON Port State	o Local PON Port State : the status of the local PON port as determined by the sending OLT ( PE ). The last bit is defined as Fault indication of the PON Port associated with this PW ( 1 - in fault; 0 - in normal ). 	210	0
8024	Remote PON Port State	o Remote PON Port State : the status of the remote PON port as determined by the remote peer of the sending OLT ( i.e ., the sending PE ). The last bit is defined as Fault indication of the PON Port associated with this PW ( 1 - in fault; 0 - in normal ). 	230	0
8029	Value	Value Meaning ----- ------- 1 MPLS Echo Request 2 MPLS Echo Reply 	240	0
8029	Value	Value Meaning ----- ------- 1 Do not reply 2 Reply via an IPv4/IPv6 UDP packet 3 Reply via an IPv4/IPv6 UDP packet with Router Alert 4 Reply via application-level control channel 	240	0
8029	Value	Value Meaning ----- ------- 0 No Return Code 1 Malformed echo request received 2 One or more of the TLVs was not understood 3 Replying router is an egress for the FEC at stack-depth < RSC > 4 Replying router has no mapping for the FEC at stack-depth < RSC > 5 Downstream Mapping Mismatch ( See Note 1 ) 6 Upstream Interface Index Unknown ( See Note 1 ) 7 Reserved 8 Label switched at stack-depth < RSC > 9 Label switched but no MPLS forwarding at stack-depth < RSC > 10 Mapping for this FEC is not the given label at stack-depth < RSC > 11 No label entry at stack-depth < RSC > 12 Protocol not associated with interface at FEC stack-depth < RSC > 13 Premature termination of ping due to label stack shrinking to a single label 14 See DDMAP TLV for meaning of Return Code and Return Subcode ( See Note 2 ) 15 Label switched with FEC change 	240	0
8029	Sender's PE IPv6 Address	Sender's PE IPv6 Address : The source IP address of the target IPv6 LDP session . 16 octets . 	230	0
8029	Remote PE IPv6 Address	Remote PE IPv6 Address : The destination IP address of the target IPv6 LDP session . 16 octets . 	230	0
8029	PW ID	PW ID : Same as FEC 128 Pseudowire IPv4 in Section 3.2.9 . 	200	0
8029	PW Type	PW Type : Same as FEC 128 Pseudowire IPv4 in Section 3.2.9 . 	231	0
8029	Sender's PE IPv6 Address	Sender's PE IPv6 Address : The source IP address of the target IPv6 LDP session . 16 octets . 	230	0
8029	Remote PE IPv6 Address	Remote PE IPv6 Address : The destination IP address of the target IPv6 LDP session . 16 octets . 	230	0
8029	MTU	The MTU is the size in octets of the largest MPLS frame ( including label stack ) that fits on the interface to the downstream LSR . 	100	0
8029	Address Type	The Address Type indicates if the interface is numbered or unnumbered . It also determines the length of the Downstream IP Address and Downstream Interface fields . The Address Type is set to one of the following values : 	240	0
8029	DS Flags	The DS Flags field is a bit vector of various flags with the following format : 	231	0
8029	I	Two flags are defined currently , I and N . The remaining flags MUST be set to zero when sending and ignored on receipt . 	500	0
8029	N	Echo request messages will be used to diagnose non-IP flows . However , these messages are carried in IP packets . For a router that alters its ECMP algorithm based on the FEC or deep packet examination , this flag requests that the router treat this as it would if the determination of an IP payload had failed . 	230	0
8029	Return Code	The Return Code is set to zero by the sender of an echo request . The receiver of said echo request can set it in the corresponding echo reply that it generates to one of the values specified in Section 3.1 other than 14 . 	302	0
8029	Return Subcode	The Return Subcode is set to zero by the sender . The receiver can set this field to an appropriate value as specified in Section 3.1 : The Return Subcode is filled in with the stack-depth for those codes that specify the stack-depth . For all other codes , the Return Subcode MUST be set to zero . 	201	0
8029	Sub-TLV Length	Sub-TLV Length 	100	0
8029	Multipath Type	Multipath Type 	240	0
8029	Multipath Length	Multipath Length 	100	0
8029	MBZ	MBZ 	231	0
8029	Downstream Label	A downstream label is 24 bits , in the same format as an MPLS label minus the TTL field , i.e ., the MSBit of the label is bit 0 , the LSBit is bit 19 , the TC field [ RFC5462 ] is bits 20-22 , and S is bit 23 . The replying router SHOULD fill in the TC field and S bit; the LSR receiving the echo reply MAY choose to ignore these . 	210	0
8029	Protocol	This specifies the label distribution protocol for the Downstream label . Protocol values are taken from the following table : 	231	0
8029	Operation Type	The operation type specifies the action associated with the FEC stack change . The following operation types are defined : 	231	0
8029	Address Type	The Address Type indicates the remote peer's address type . The Address Type is set to one of the following values . The length of the peer address is determined based on the address type . The address type MAY be different from the address type included in the Downstream Detailed Mapping TLV . This can happen when the LSP goes over a tunnel of a different address family . The address type MAY be set to Unspecified if the peer address is either unavailable or the transit router does not wish to provide it for security or administrative reasons . 	240	0
8029	Reserved	Reserved 	500	0
8029	Value	Value Meaning ----- ------- 0 Reserved 1 Drop Pad TLV from reply 2 Copy Pad TLV to reply 3-250 Unassigned 251-254 Reserved for Experimental Use 255 Reserved 	240	0
8029	Address Type	The Address Type indicates if the interface is numbered or unnumbered . It also determines the length of the IP Address and Interface fields . The resulting total for the initial part of the TLV is listed in the table below as " K Octets ". The Address Type is set to one of the following values : 	240	0
8029	Label	Label-L : the label from the actual stack currently being examined . Requires no initialization . 	231	0
8029	Label	Label-stack-depth : the depth of the label being verified . Initialized to the number of labels in the received label stack S . 	400	0
8029	}	/* This step assumes there is always an entry for well-known label values */ 	302	0
8029	}	If the label operation is " Swap or Pop and Switch based on Popped Label " { 	231	0
8029	}	If no Downstream Detailed Mapping TLV is present , or the Downstream IP Address is set to the ALLROUTERS multicast address , go to step 7 ( Send Reply Packet ). 	302	0
8029	}	3 . Check the FEC label mapping that describes how traffic received on the LSP is further switched or which application it is associated with . If no mapping exists , set FEC-return-code to Return 4 , " Replying router has no mapping for the FEC at stack - depth ". Set FEC-status to 1 . Return . 	240	0
8029	Value	Value Meaning ----- ------- 1 MPLS Echo Request 2 MPLS Echo Reply 	240	0
8029	Value	Value Meaning ----- ------- 1 Do not reply 2 Reply via an IPv4/IPv6 UDP packet 3 Reply via an IPv4/IPv6 UDP packet with Router Alert 4 Reply via application-level control channel 	240	0
8029	Global Flags	IANA has created a " Global Flags " subregistry of the " Multiprotocol Label Switching ( MPLS ) Label Switched Paths ( LSPs ) Ping Parameters " registry . 	231	0
8029	DS Flags	This document defines the Downstream Mapping ( DSMAP ) TLV and the Downstream Detailed Mapping ( DDMAP ) TLV , which have Type 2 and Type 20 , respectively , assigned from the " TLVs " subregistry of the " Multiprotocol Label Switching ( MPLS ) Label Switched Paths ( LSPs ) Ping Parameters " registry . 	231	0
8029	MTU	The MTU is the size in octets of the largest MPLS frame ( including label stack ) that fits on the interface to the downstream LSR . 	100	0
8029	Address Type	The Address Type indicates if the interface is numbered or unnumbered . It also determines the length of the Downstream IP Address and Downstream Interface fields . The resulting total for the initial part of the TLV is listed in the table below as " K Octets ". The Address Type is set to one of the following values : 	240	0
8029	DS Flags	DS Flags 	231	0
8029	I	Two flags are defined currently , I and N . The remaining flags MUST be set to zero when sending and ignored on receipt . 	500	0
8029	N	Echo request messages will be used to diagnose non-IP flows . However , these messages are carried in IP packets . For a router that alters its ECMP algorithm based on the FEC or deep packet examination , this flag requests that the router treat this as it would if the determination of an IP payload had failed . 	230	0
8029	Multipath Type	Multipath Type 	240	0
8029	Depth Limit	The Depth Limit is applicable only to a label stack and is the maximum number of labels considered in the hash; this SHOULD be set to zero if unspecified or unlimited . 	231	0
8029	Multipath Length	Multipath Length 	100	0
8029	Downstream Label	The set of labels in the label stack as it would have appeared if this router were forwarding the packet through this interface . Any Implicit Null labels are explicitly included . Labels are treated as numbers , i.e ., they are right justified in the field . 	231	0
8029	Protocol	Protocol 	400	0
8038	templateId	o ( scope ) templateId [ IANA-IPFIX ] 	400	0
8038	informationElementIndex	o mibObjectIdentifier ( Section 11.2.2.1 ) or mibSubIdentifier ( Section 11.2.2.2 ) 	231	0
8038	Field Length	The length of the encoded MIB object data in the corresponding Data Records , in octets . See [ RFC7011 ] for a detailed definition . Note that the Field Length can be expressed using reduced-size encoding per [ RFC7011 ]. Note that the Field Length may be encoded using variable-length encoding per [ RFC7011 ]. 	100	0
8038	templateId	The first Scope Field is an IPFIX Information Element that denotes that a Template Identifier will be exported as part of the MIB Field Options Data Record . This Template Identifier , paired with an index into that Template ( the " informationElementIndex " field ), uniquely references one mibObjectValue Information Element being exported . 	231	0
8038	informationElementIndex	The second Scope Field is an IPFIX Information Element that denotes a zero-based index into the fields defined by a Template . When paired with a " templateId ", this uniquely references one mibObjectValue Information Element being exported . 	231	0
8038	templateId	templateId 	302	0
8038	templateId	The templateId used will be for the Template referred to in the subTemplateList of the mibObjectValueRow that will be exported . 	400	0
8038	mibSubIdentifier	The sub-identifier that specifies the columnar object's ID within the conceptual row . 	230	0
8038	mibSubIdentifier	The mibSubIdentifier fields will contain the extra sub-identifier that , when added to the OID for the conceptual row , gives the full OID for the object . 	231	0
8038	mibSubIdentifier	A new Information Element " mibSubIdentifier " has been allocated in IANA's IPFIX registry [ IANA-IPFIX ], with the following definition : 	231	0
8044	Value	A description of any attribute-specific limitations on the values carried by the specified data type . If there are no attribute-specific limitations , then the description of this field can be omitted , so long as the Description field is sufficiently explanatory . 	400	0
8044	Value	Value 	400	0
8044	Value	Value 	400	0
8044	Value	Value 	400	0
8044	Value	Value 	400	0
8044	Value	Value 	303	0
8044	Value	Value 	400	0
8044	Value	Value 	400	0
8044	Value	Value 	400	0
8044	Value	Value 	400	0
8044	Value	Value 	400	0
8044	Reserved	This field , which is reserved and MUST be present , is always set to zero . This field is one octet in length . 	500	0
8044	Prefix-Length	The length of the prefix , in bits . At least 0 and no larger than 128 . This field is one octet in length . 	100	0
8044	Value	Value 	303	0
8044	Reserved	This field , which is reserved and MUST be present , is always set to zero . This field is one octet in length . 	500	0
8044	Prefix-Length	The length of the prefix , in bits . The values MUST be no larger than 32 . This field is one octet in length . Note that this definition differs from that given in [ RFC6572 ]. 	100	0
8044	Value	Value 	400	0
8044	Value	Value 	303	0
8044	TLV-Type	This field is one octet . Up-to-date values of this field are specified according to the policies and rules described in [ RFC6929 ], Section 10 . Values of 254-255 are reserved for use by future extensions to RADIUS . The value 26 has no special meaning and MUST NOT be treated as a Vendor-Specific Attribute . 	500	0
8044	TLV-Length	The TLV-Length field is one octet and indicates the length of this TLV , including the TLV-Type , TLV-Length , and TLV-Value fields . It MUST have a value between 3 and 255 . If a client or server receives a TLV with an invalid TLV-Length , then the attribute that encapsulates that TLV MUST be considered to be an invalid attribute and is handled as per [ RFC6929 ], Section 2.8 . 	100	0
8044	Value	Value 	400	0
8044	Vendor-Id	The 4 octets are the Network Management Private Enterprise Code [ PEN ] of the vendor in network byte order . 	231	0
8044	Value	Value 	303	0
8044	Extended-Type	The Extended-Type field is one octet . Up-to-date values of this field are specified according to the policies and rules described in [ RFC6929 ], Section 10 . Unlike the Type field defined in [ RFC2865 ], Section 5 , no values are allocated for experimental or implementation-specific use . Values 241-255 are reserved and MUST NOT be used . 	400	0
8044	Value	Value 	400	0
8044	Extended-Type	This field is identical to the Extended-Type field defined above in Section 3.15 . 	400	0
8044	M	The More field ( M flag ) is one ( 1 ) bit in length and indicates whether or not the current attribute contains " more " than 251 octets of data . The More field MUST be clear ( 0 ) if the Length field has a value less than 255 . The More field MAY be set ( 1 ) if the Length field has a value of 255 . 	210	0
8044	T	This field is one bit in size and is called " T " for Truncation . It indicates that the attribute is intentionally truncated in this chunk and is to be continued in the next chunk of the sequence . The combination of the M flag and the T flag indicates that the attribute is fragmented ( M flag ) but that all of the fragments are not available in this chunk ( T flag ). Proxies implementing [ RFC6929 ] will see these attributes as 	210	0
8044	Reserved	This field is six bits long and is reserved for future use . Implementations MUST set it to zero ( 0 ) when encoding an attribute for sending in a packet . The contents SHOULD be ignored on reception . 	500	0
8044	Value	Value 	303	0
8044	Vendor-Id	The 4 octets are the Network Management Private Enterprise Code [ PEN ] of the vendor in network byte order . 	231	0
8044	Vendor-Type	The Vendor-Type field is one octet . Values are assigned at the sole discretion of the vendor . 	231	0
8044	Value	The number of the data type . The Value field is an artifact of the registry and has no on-the-wire meaning . 	231	0
8045	Type	Type 	240	0
8045	Length	This field indicates the total length in octets of all fields of this attribute , including the Type , Length , Extended-Type , and the entire length of the embedded TLVs . 	100	0
8045	Extended-Type	Extended-Type 	231	0
8045	Type	Type 	240	0
8045	Length	This field indicates the total length in octets of all fields of this attribute , including the Type , Length , Extended-Type , and the entire length of the embedded TLVs . 	100	0
8045	Extended-Type	Extended-Type 	231	0
8045	Type	Type 	240	0
8045	Length	This field indicates the total length in octets of all fields of this attribute , including the Type , Length , Extended-Type , and the entire length of the embedded TLVs . 	100	0
8045	Extended-Type	Extended-Type 	231	0
8045	TLV-Type	TLV-Type 	231	0
8045	Length	Length 	100	0
8045	Protocol-Number	Integer . This field contains the data ( unsigned8 ) of the protocol number defined in [ ProtocolNumbers ], right justified , and the unused bits in this field MUST be set to zero . Protocols that do not use a port number ( e.g ., the Resource Reservation Protocol ( RSVP ) or IP Encapsulating Security Payload ( ESP )) MUST NOT be included in the IP-Port-Type TLV . 	303	0
8045	TLV-Type	TLV-Type 	231	0
8045	Length	Length 	100	0
8045	sourceTransportPortsLimit	Integer . This field contains the data ( unsigned16 ) of sourceTransportPortsLimit ( 458 ) defined in IPFIX , right justified , and the unused bits in this field MUST be set to zero . 	303	0
8045	TLV-Type	TLV-Type 	231	0
8045	Length	Length 	100	0
8045	postNATSourceIPv4Address	Integer . This field contains the data ( ipv4Address ) of postNATSourceIPv4Address ( 225 ) defined in IPFIX . 	400	0
8045	TLV-Type	TLV-Type 	231	0
8045	Length	Length 	100	0
8045	sourceIPv4Address	Integer . This field contains the data ( ipv4Address ) of sourceIPv4Address ( 8 ) defined in IPFIX . 	400	0
8045	TLV-Type	TLV-Type 	231	0
8045	Length	Length 	100	0
8045	sourceIPv6Address	IPv6 address ( 128 bits ). This field contains the data ( ipv6Address ) of sourceIPv6Address ( 27 ) defined in IPFIX . 	230	0
8045	TLV-Type	TLV-Type 	231	0
8045	Length	Length 	100	0
8045	sourceTransportPort	Integer . This field contains the data ( unsigned16 ) of sourceTransportPort ( 7 ) defined in IPFIX , right justified , and unused bits MUST be set to zero . 	303	0
8045	TLV-Type	TLV-Type 	231	0
8045	Length	Length 	100	0
8045	postNAPTSourceTransportPort	Integer . This field contains the data ( unsigned16 ) of postNAPTSourceTransportPort ( 227 ) defined in IPFIX , right justified , and unused bits MUST be set to zero . 	303	0
8045	TLV-Type	TLV-Type 	231	0
8045	Length	Length 	100	0
8045	natEvent	Integer . This field contains the data ( unsigned8 ) of natEvent ( 230 ) defined in IPFIX , right justified , and unused bits MUST be set to zero . It indicates the allocation or deallocation of a range of IP ports as follows : 	302	0
8045	TLV-Type	TLV-Type 	231	0
8045	Length	Length 	100	0
8045	portRangeStart	Integer . This field contains the data ( unsigned16 ) of portRangeStart ( 361 ) defined in IPFIX , right justified , and unused bits MUST be set to zero . 	303	0
8045	TLV-Type	TLV-Type 	231	0
8045	Length	Length 	100	0
8045	portRangeEnd	Integer . This field contains the data ( unsigned16 ) of portRangeEnd ( 362 ) defined in IPFIX , right justified , and unused bits MUST be set to zero . 	303	0
8045	TLV-Type	TLV-Type 	231	0
8045	Length	Length 	100	0
8045	Type	Type Description Data Type Reference ---- ----------- --------- --------- 241.5 IP-Port-Limit-Info tlv Section 3.1.1 241.6 IP-Port-Range tlv Section 3.1.2 241.7 IP-Port-Forwarding-Map tlv Section 3.1.3 	231	0
8046	Locator	This document defines a generalization of an address called a " locator ". A locator specifies a point of attachment to the network but may also include additional end-to-end tunneling or a per-host demultiplexing context that affects how packets are handled below the logical HIP sublayer of the stack . This generalization is useful because IP addresses alone may not be sufficient to describe how packets should be handled below HIP . For example , in a host multihoming context , certain IP addresses may need to be associated with certain ESP SPIs to avoid violating the ESP anti-replay window . Addresses may also be affiliated with transport ports in certain tunneling scenarios . Locators may simply be traditional network addresses . The format of the Locator fields in the LOCATOR_SET parameter is defined in Section 4 . 	230	0
8046	Type	Length : Length in octets , excluding Type and Length fields , and excluding padding . 	100	0
8046	Length	Length : Length in octets , excluding Type and Length fields , and excluding padding . 	100	0
8046	Traffic Type	Traffic Type : Defines whether the locator pertains to HIP signaling , user data , or both . 	400	0
8046	Locator Type	Locator Length : Defines the length of the Locator field , in units of 4-byte words ( Locators up to a maximum of 4*255 octets are supported ). 	100	0
8046	Locator Length	Locator Length : Defines the length of the Locator field , in units of 4-byte words ( Locators up to a maximum of 4*255 octets are supported ). 	100	0
8046	Reserved	P : Preferred locator . Set to one if the locator is preferred for that Traffic Type; otherwise , set to zero . 	210	0
8046	P	P : Preferred locator . Set to one if the locator is preferred for that Traffic Type; otherwise , set to zero . 	210	0
8046	Locator Lifetime	Locator : The locator whose semantics and encoding are indicated by the Locator Type field . All sub-fields of the Locator field are integral multiples of four octets in length . 	230	0
8046	Locator	Locator : The locator whose semantics and encoding are indicated by the Locator Type field . All sub-fields of the Locator field are integral multiples of four octets in length . 	230	0
8046	Traffic Type	4.1 . Traffic Type and Preferred Locator 	240	0
8046	Locator Type	The following Locator Type values are defined , along with the associated semantics of the Locator field : 	231	0
8046	Locator	The following Locator Type values are defined , along with the associated semantics of the Locator field : 	231	0
8059	Length	Length : The length of the Transport Attribute value . MUST be set to 1 . 	100	0
8059	Transport	Transport : The type of transport being requested . Set to zero for multicast . Set to 1 for unicast . The values from 2 to 255 may be assigned in the future . 	302	0
8059	Length	Length : The length in octets of the attribute value . MUST be set to the length in octets of the receiver RLOC address plus 1 octet to account for the Address Family field . 	100	0
8059	Addr Family	Addr Family : The PIM Address Family of the receiver RLOC as defined in [ RFC7761 ]. 	231	0
8059	Receiver RLOC	Receiver RLOC : The RLOC address on which the receiver ETR wishes to receiver the unicast-encapsulated flow . 	230	0
8060	Flags	Flags : this 8-bit field is for future definition and use . For now , set to zero on transmission and ignored on receipt . 	500	0
8060	Type	Type : this 8-bit field is specific to the LISP Canonical Address Format encodings . Both approved and unapproved values are listed below . Unapproved values are indicated; see Section 5 for more details . 	231	0
8060	Type	Type 0 : Null Body 	231	0
8060	Type	Type 1 : AFI List 	220	0
8060	Type	Type 2 : Instance ID 	240	0
8060	Type	Type 3 : AS Number 	231	0
8060	Type	Type 4 : Application Data ( unapproved ; see Section 5 ) 	400	0
8060	Type	Type 5 : Geo-Coordinates 	231	0
8060	Type	Type 6 : Opaque Key ( unapproved ; see Section 5 ) 	231	0
8060	Type	Type 7 : NAT-Traversal 	231	0
8060	Type	Type 8 : Nonce Locator ( unapproved ; see Section 5 ) 	231	0
8060	Type	Type 9 : Multicast Info 	400	0
8060	Type	Type 10 : Explicit Locator Path 	231	0
8060	Type	Type 11 : Security Key 	231	0
8060	Type	Type 12 : Source/Dest Key 	302	0
8060	Type	Type 13 : Replication List Entry 	231	0
8060	Type	Type 14 : JSON Data Model ( unapproved ; see Section 5 ) 	231	0
8060	Type	Type 15 : Key/Value Address Pair ( unapproved ; see Section 5 ) 	231	0
8060	Type	Length : this 16-bit field is in units of bytes and covers all of the LISP Canonical Address payload , starting and including the byte after the Length field . When including the AFI , an LCAF-encoded address will have a minimum length of 8 bytes when the Length field is 0 . The 8 bytes include the AFI , Flags , Type , Rsvd1 , Rsvd2 , and Length fields . When the AFI is not next to an encoded address in a control message , the encoded address will have a minimum length of 6 bytes when the Length field is 0 . The 6 bytes include the Flags , Type , Rsvd1 , Rsvd2 , and Length fields . 	100	0
8060	Length	Length : this 16-bit field is in units of bytes and covers all of the LISP Canonical Address payload , starting and including the byte after the Length field . When including the AFI , an LCAF-encoded address will have a minimum length of 8 bytes when the Length field is 0 . The 8 bytes include the AFI , Flags , Type , Rsvd1 , Rsvd2 , and Length fields . When the AFI is not next to an encoded address in a control message , the encoded address will have a minimum length of 6 bytes when the Length field is 0 . The 6 bytes include the Flags , Type , Rsvd1 , Rsvd2 , and Length fields . 	100	0
8060	Length	Length : length in bytes starting and including the byte after this Length field . 	100	0
8060	Instance ID	Instance ID : the low-order 24 bits that can go into a LISP data header when the I bit is set . See [ RFC6830 ] for details . The reason for the length difference is so that the maximum number of instances supported per mapping system is 2^32 , while conserving space in the LISP data header . This comes at the expense of limiting the maximum number of instances per xTR to 2^24 . If an xTR is configured with multiple Instance IDs where the value in the high-order 8 bits is the same , then the low-order 24 bits MUST be unique . 	400	0
8060	AFI = x	This LISP Canonical Address Type can be used to encode either EID or RLOC addresses . 	230	0
8060	Length	Length : length in bytes starting and including the byte after this Length field . 	100	0
8060	AS Number	AS Number : the 32-bit AS number of the autonomous system that has been assigned to either the EID or RLOC that follows . 	231	0
8060	AFI = x	The AS Number LCAF Type can be used to encode either EID or RLOC addresses . The former is used to describe the LISP-ALT AS number the EID prefix for the site is being carried for . The latter is used to describe the AS that is carrying RLOC based prefixes in the underlying routing system . 	231	0
8060	Length	Length : length in bytes starting and including the byte after this Length field . 	100	0
8060	N	Latitude Degrees : Valid values range from 0 to 90 degrees above or below the equator ( northern or southern hemisphere , respectively ). 	231	0
8060	Latitude Degrees	Latitude Degrees : Valid values range from 0 to 90 degrees above or below the equator ( northern or southern hemisphere , respectively ). 	100	0
8060	E	Longitude Degrees : Valid values are from 0 to 180 degrees right or left of the Prime Meridian . 	231	0
8060	Longitude Degrees	Longitude Degrees : Valid values are from 0 to 180 degrees right or left of the Prime Meridian . 	231	0
8060	Altitude	Altitude : Height relative to sea level in meters . This is a two's complement signed integer meaning that the altitude could be below sea level . A value of 0x7fffffff indicates no Altitude value is encoded . 	110	0
8060	AFI = x	The Geo-Coordinates LCAF Type can be used to encode either EID or RLOC addresses . When used for EID encodings , you can determine the physical location of an EID along with the topological location by observing the locator-set . 	230	0
8060	Length	Length : length in bytes starting and including the byte after this Length field . 	100	0
8060	MS UDP Port Number	MS UDP Port Number : this is the UDP port number of the Map-Server and is set to 4342 . 	231	0
8060	ETR UDP Port Number	ETR UDP Port Number : this is the port number returned to a LISP system that was copied from the source port from a packet that has flowed through a NAT device . 	231	0
8060	AFI = x	Global ETR RLOC Address : this is an address known to be globally unique built by NAT-traversal functionality in a LISP router . 	230	0
8060	Length	Length : length in bytes starting and including the byte after this Length field . 	100	0
8060	Reserved	Instance ID : the low-order 24 bits that can go into a LISP data header when the I bit is set . See [ RFC6830 ] for details . The use of the Instance ID in this LCAF Type is to associate a multicast forwarding entry for a given VPN . The Instance ID describes the VPN and is registered to the mapping database system as a 3-tuple of ( Instance ID , S-prefix , G-prefix ). 	231	0
8060	Instance ID	Instance ID : the low-order 24 bits that can go into a LISP data header when the I bit is set . See [ RFC6830 ] for details . The use of the Instance ID in this LCAF Type is to associate a multicast forwarding entry for a given VPN . The Instance ID describes the VPN and is registered to the mapping database system as a 3-tuple of ( Instance ID , S-prefix , G-prefix ). 	231	0
8060	Source MaskLen	Source MaskLen : the mask length of the source prefix that follows . The length is the number of high-order mask bits set . 	100	0
8060	Group MaskLen	Group MaskLen : the mask length of the group prefix that follows . The length is the number of high-order mask bits set . 	100	0
8060	AFI = x	AFI = x : x can be any AFI value from [ AFN ]. When a specific address family has a multicast address semantic , this field must be either a group address or a broadcast address . 	230	0
8060	Length	Length : length in bytes starting and including the byte after this Length field . 	100	0
8060	L	Lookup bit ( L ): this is the Lookup bit used to indicate to the user of the ELP not to use this address for encapsulation but to look it up in the mapping database system to obtain an encapsulating RLOC address . 	210	0
8060	P	RLOC Probe bit ( P ): this is the RLOC Probe bit that means the Reencap Hop allows RLOC-probe messages to be sent to it . When the R bit is set to 0 , RLOC-probes must not be sent . When a Reencap Hop is an anycast address then multiple physical Reencap Hops are using the same RLOC address . In this case , RLOC-probes are not needed because when the closest RLOC address is not reachable , another RLOC address can be reachable . 	210	0
8060	S	Strict bit ( S ): this is the Strict bit , which means the associated Reencap Hop is required to be used . If this bit is 0 , the re-encapsulator can skip this Reencap Hop and go to the next one in the list . 	210	0
8060	AFI = x	AFI = x : x can be any AFI value from [ AFN ]. When a specific AFI has its own encoding of a multicast address , this field must be either a group address or a broadcast address . 	230	0
8060	Length	Length : length in bytes starting and including the byte after this Length field . 	100	0
8060	Key Count	Key Count : the Key Count field declares the number of Key sections included in this LCAF . A Key section is made up of Key Length and Key Material fields . 	100	0
8060	Key Algorithm	Key Algorithm : the Key Algorithm field identifies the key's cryptographic algorithm and specifies the format of the Public Key field . Refer to the [ LISP-DDT ] and [ RFC8061 ] use cases for definitions of this field . 	231	0
8060	Key Length	Key Length : this field determines the length in bytes of the Key Material field . 	100	0
8060	AFI = x	AFI = x : x can be any AFI value from [ AFN ]. This is the locator address that owns the encoded security key . 	230	0
8060	Length	Length : length in bytes starting and including the byte after this Length field . 	100	0
8060	Reserved	Source-ML : the mask length of the source prefix that follows . The length is the number of high-order mask bits set . 	100	0
8060	Source	Source-ML : the mask length of the source prefix that follows . The length is the number of high-order mask bits set . 	100	0
8060	AFI = x	AFI = y : y can be any AFI value from [ AFN ]. When a specific address family has a multicast address semantic , this field must be either a group address or a broadcast address . 	230	0
8060	AFI = y	AFI = y : y can be any AFI value from [ AFN ]. When a specific address family has a multicast address semantic , this field must be either a group address or a broadcast address . 	230	0
8060	Length	Length : length in bytes starting and including the byte after this Length field . 	100	0
8060	Level Value	Level Value : this value is associated with the level within the overlay distribution tree hierarchy where the RTR resides . The level numbers are ordered from lowest value being close to the ITR ( meaning that ITRs replicate to level-0 RTRs ) and higher levels are further downstream on the distribution tree closer to ETRs of multicast receiver sites . 	231	0
8060	AFI = x	AFI = x : x can be any AFI value from [ AFN ]. A specific AFI has its own encoding of either a unicast or multicast locator address . For efficiency reasons , all RTR/ETR entries for the same level should be combined by a Map-Server to avoid searching through the entire multilevel list of locator entries in a Map-Reply message . 	231	0
8060	Length	Length : length in bytes starting and including the byte after this Length field . 	100	0
8060	Length	Length : length in bytes starting and including the byte after this Length field . 	100	0
8060	Length	Length : length in bytes starting and including the byte after this Length field . 	100	0
8060	Length	Length : length in bytes starting and including the byte after this Length field . 	100	0
8060	Length	Length2 : length in bytes starting and including the byte after this Length2 field . 	100	0
8060	Length	Length : length in bytes starting and including the byte after this Length field . 	100	0
8060	Length	Length2 : length in bytes starting and including the byte after this Length2 field . 	100	0
8060	Length	Length : length in bytes starting and including the byte after this Length field . 	100	0
8060	AFI = x	The Application Data LCAF Type is used for an EID encoding when an ITR wants a locator-set for a specific application . When used for an RLOC encoding , the ETR is supplying a locator-set for each specific application is has been configured to advertise . 	400	0
8060	Length	Length : length in bytes starting and including the byte after this Length field . 	100	0
8060	Key Field Num	Key Field Num : the value of this field is the number of " Key " sub - fields minus 1 , the Key field can be broken up into . So , if this field has a value of 0 , there is one sub-field in the " Key ". The width of the sub-fields are fixed length . So , for a key size of 8 bytes , with a Key Field Num of 3 , four sub-fields of 2 bytes each in length are allowed . Allowing for a reasonable number of 16 sub-field separators , valid values range from 0 to 15 . 	210	0
8060	Key Wildcard Fields	Key Wildcard Fields : describes which fields in the key are not used as part of the key lookup . This wildcard encoding is a bitfield . Each bit is a don't-care bit for a corresponding field in the key . Bit 0 ( the low-order bit ) in this bitfield corresponds the first field , the low-order field in the key , bit 1 the second field , and so on . When a bit is set in the bitfield , it is a don't-care bit and should not be considered as part of the database lookup . When the entire 16 bits are set to 0 , then all bits of the key are used for the database lookup . 	210	0
8060	Length	Length : length in bytes starting and including the byte after this Length field . 	100	0
8060	Reserved	Nonce : a nonce value returned by an ETR in a Map-Reply locator - record to be used by an ITR or PITR when encapsulating to the locator address encoded in the AFI field of this LCAF Type . This nonce value is inserted in the nonce field in the LISP header encapsulation . 	230	0
8060	Nonce	Nonce : a nonce value returned by an ETR in a Map-Reply locator - record to be used by an ITR or PITR when encapsulating to the locator address encoded in the AFI field of this LCAF Type . This nonce value is inserted in the nonce field in the LISP header encapsulation . 	230	0
8060	AFI = x	Usage : This is an experimental Type where the usage has not yet been defined . 	400	0
8060	Length	Length : length in bytes starting and including the byte after this Length field . 	100	0
8060	JSON length	JSON length : length in octets of the following JSON binary/text encoding field . 	100	0
8060	AFI = x	AFI = x : x can be any AFI value from [ AFN ]. A specific AFI has its own encoding of either a unicast or multicast locator address . All RTR/ETR entries for the same level should be combined by a Map-Server to avoid searching through the entire multilevel list of locator entries in a Map-Reply message . 	230	0
8060	Length	Length : length in bytes starting and including the byte after this Length field . 	100	0
8060	AFI = x	AFI = x : x is the " Address as Key " AFI that can have any value from [ AFN ]. A specific AFI has its own encoding of either a unicast or a multicast locator address . All RTR/ETR entries for the same level should be combined by a Map-Server to avoid searching through the entire multilevel list of locator entries in a Map - Reply message . 	230	0
8060	AFI = y	AFI = y : y is the " Address of Value " AFI that can have any value from [ AFN ]. A specific AFI has its own encoding of either a unicast or a multicast locator address . All RTR/ETR entries for the same level should be combined by a Map-Server to avoid searching through the entire multilevel list of locator entries in a Map-Reply message . 	230	0
8060	Length	Length : length in bytes starting and including the byte after this Length field . 	100	0
8060	Reserved	Reserved-for-Future-Encapsulations : must be set to zero and ignored on receipt . This field will get bits allocated to future encapsulations , as they are created . 	500	0
8060	U	U : The RLOCs listed in the AFI-encoded addresses in the next longword can accept Generic UDP Encapsulation ( GUE ) using destination UDP port 6080 [ GUE ]. 	230	0
8060	G	G : The RLOCs listed in the AFI-encoded addresses in the next longword can accept Geneve encapsulation using destination UDP port 6081 [ GENEVE ]. 	230	0
8060	N	N : The RLOCs listed in the AFI-encoded addresses in the next longword can accept NV-GRE ( Network Virtualization - Generic Routing Encapsulation ) using IPv4/IPv6 protocol number 47 [ RFC7637 ]. 	231	0
8060	v	v : The RLOCs listed in the AFI-encoded addresses in the next longword can accept VXLAN-GPE ( Generic Protocol Extension ) encapsulation using destination UDP port 4790 [ GPE-VXLAN ]. 	230	0
8060	V	V : The RLOCs listed in the AFI-encoded addresses in the next longword can accept Virtual eXtensible Local Area Network ( VXLAN ) encapsulation using destination UDP port 4789 [ RFC7348 ]. 	230	0
8060	l	l : The RLOCs listed in the AFI-encoded addresses in the next longword can accept Layer 2 LISP encapsulation using destination UDP port 8472 [ LISP-L2 ]. 	230	0
8060	L	L : The RLOCs listed in the AFI-encoded addresses in the next longword can accept Layer 3 LISP encapsulation using destination UDP port 4341 [ RFC6830 ]. 	230	0
8066	ESC	ESC : The left-most octet is the ESC dispatch type containing ' 01000000 '. 	231	0
8066	Extended Dispatch Payload	Extended Dispatch Payload ( EDP ): This part of the frame format must be defined by the corresponding extension type . A specification is required to define the usage of each extension type and its corresponding Extension Payload . For the sake of interoperability , specifications of extension octets MUST NOT redefine the existing ESC Extension Type codes . 	400	0
8106	Type	Type 8-bit identifier of the RDNSS option type as assigned by IANA : 25 	231	0
8106	Length	Length 8-bit unsigned integer . The length of the option ( including the Type and Length fields ) is in units of 8 octets . The minimum value is 3 if one IPv6 address is contained in the option . Every additional RDNSS address increases the length by 2 . The Length field is used by the receiver to determine the number of IPv6 addresses in the option . 	100	0
8106	Lifetime	Lifetime 32-bit unsigned integer . The maximum time in seconds ( relative to the time the packet is received ) over which these RDNSS addresses MAY be used for name resolution . The value of Lifetime SHOULD by default be at least 3 * MaxRtrAdvInterval , where MaxRtrAdvInterval is the maximum RA interval as defined in [ RFC4861 ]. A value of all one bits ( 0xffffffff ) represents infinity . A value of zero means that the RDNSS addresses MUST no longer be used . 	120	0
8106	Type	Type 8-bit identifier of the DNSSL option type as assigned by IANA : 31 	231	0
8106	Length	Length 8-bit unsigned integer . The length of the option ( including the Type and Length fields ) is in units of 8 octets . The minimum value is 2 if at least one domain name is contained in the option . The Length field is set to a multiple of 8 octets to accommodate all the domain names in the " Domain Names of DNS Search List " field . 	100	0
8106	Lifetime	Lifetime 32-bit unsigned integer . The maximum time in seconds ( relative to the time the packet is received ) over which these DNSSL domain names MAY be used for name resolution . The Lifetime value has the same semantics as the semantics for the RDNSS option . That is , Lifetime SHOULD by default be at least 3 * MaxRtrAdvInterval . A value of all one bits ( 0xffffffff ) represents infinity . A value of zero means that the DNSSL domain names MUST no longer be used . 	120	0
8111	D	D : The " DDT-originated " flag . This flag is set by a DDT client to indicate that the receiver SHOULD return Map-Referral messages as appropriate . The use of this flag is further described in Section 7.3.1 . This bit is allocated from LISP message header bits marked as " Reserved " in [ RFC6830 ]. 	210	0
8111	Type	Type : Type value 6 was reserved for future use in [ RFC6830 ]. This document allocates this value to identify Map-Referral messages . 	303	0
8111	ACT	ACT : The ACT ( Action ) field of the mapping Record in a Map-Referral message encodes one of the following six action types : NODE-REFERRAL , MS-REFERRAL , MS-ACK , MS-NOT-REGISTERED , DELEGATION-HOLE , or NOT-AUTHORITATIVE . See Section 6.1 for descriptions of these action types . 	240	0
8111	Referral Count	Referral Count : Number of RLOCs in the current Referral Set . This number is equal to the number of " Ref " sections in the message ( as shown in the diagram above ). 	231	0
8111	SigCnt	SigCnt : Indicates the number of signatures ( Signature section ) present in the Record . If SigCnt is larger than 0 , the signature information captured in a Signature section as described in Section 6.4.1 will be appended to the end of the Record . The number of Signature sections at the end of the Record MUST match the SigCnt . Note that bits occupied by SigCnt were marked as " Reserved " in Records embedded into messages defined by [ RFC6830 ] and were required to be set to zero . 	302	0
8111	Original Record TTL	Original Record TTL : The original Record TTL for this Record that is covered by the signature . The Record TTL value is specified in minutes . 	120	0
8111	Key Tag	Key Tag : An identifier to specify which key is used for this signature if more than one valid key exists for the signing DDT node . 	231	0
8111	Sig Length	Sig-Algorithm : The identifier of the cryptographic algorithm used for the signature . Sig-Algorithm values defined in this specification are listed in Table 1 . Implementations conforming to this specification MUST implement at least RSA-SHA256 for DDT signing . Sig-Algorithm type 1 ( RSA-SHA1 ) is deprecated and SHOULD NOT be used . 	231	0
8111	Reserved	Reserved : MUST be set to 0 on transmit and MUST be ignored on receipt . 	500	0
8111	Signature	Signature : Contains the cryptographic signature that covers the entire Map-Referral Record to which this signature belongs . For the purpose of computing the signature , the Record TTL ( Section 6.4 ) value is set to the value of Original Record TTL and the Signature field is filled with zeros . 	230	0
8127	Type	MUST be set to the value of 62 , indicating that it is an LMA-Controlled-MAG-Parameters option . 	302	0
8127	Length	8-bit unsigned integer indicating the length in octets of the option , excluding the Type and Length fields . 	100	0
8127	Type	8-bit unsigned integer indicating the type of the LCMP sub-option . This specification defines the following types : 	231	0
8127	Length	8-bit unsigned integer indicating the number of octets needed to encode the Option Data , excluding the LCMP Type and LCMP Length fields of the sub-option . 	100	0
8127	LCMP Type	LCMP Type 	220	0
8127	LCMP Length	LCMP Length 	100	0
8127	Re-registration-Start-Time	16-bit unsigned integer indicating the number of time units before the expiry of the PMIPv6 binding lifetime when the registration refresh process needs to be activated . One time unit is 4 seconds . 	120	0
8127	Initial-Retransmission-Time	16-bit unsigned integer indicating minimum delay in seconds before the first Proxy Binding Update ( PBU ) retransmission of the exponential backoff process . 	121	0
8127	Maximum-Retransmission-Time	16-bit unsigned integer indicating maximum delay in seconds before the last PBU retransmission message of the exponential backoff process . 	121	0
8127	LCMP Type	LCMP Type 	220	0
8127	LCMP Length	LCMP Length 	100	0
8127	HB-Interval	16-bit unsigned integer indicating the heartbeat interval , i.e ., time delay in seconds after a successful heartbeat exchange ( heartbeat request followed by response ) when the next heartbeat exchange can be triggered . 	121	0
8127	HB-Retransmission-Delay	16-bit unsigned integer indicating minimum time delay in seconds before a heartbeat message is retransmitted . 	121	0
8127	HB-Max-Retransmissions	16-bit unsigned integer indicating maximum number of heartbeat retransmissions . 	100	0
8136	Option Type	8-bit identifier of the type of option . The option identifier for the User Security Flag Option ( 0x7g ) has not been allocated by the IANA . 	231	0
8136	Option Length	8-bit unsigned integer . The length of the option ( excluding the Option Type and Option Length fields ). The value MUST be 1 . 	100	0
8136	UserSecFlag	8-bit unsigned integer . Bit 0 has the functionality defined in [ RFC3514 ]. The other bits are reserved and MUST be zero or one . 	302	0
8138	Length	Length : Length of the 6LoRHE expressed in bytes , excluding the first 2 bytes . This enables a node to skip a 6LoRHE header that it does not support and/or cannot parse , for instance , if the Type is not recognized . 	100	0
8138	Type	Type : Type of the 6LoRHE 	231	0
8138	Type	Type-Specific Extension ( TSE ): The meaning depends on the Type , which must be known in all of the nodes . The interpretation of the TSE depends on the Type field that follows . For instance , it may be used to transport control bits , the number of elements in an array , or the length of the remainder of the 6LoRHC expressed in a unit other than bytes . 	400	0
8138	Type	Type : Type of the 6LoRHC 	231	0
8138	O	O , R , and F bits : The O , R , and F bits are defined in Section 11.2 of RFC 6550 [ RFC6550 ]. 	301	0
8138	R	O , R , and F bits : The O , R , and F bits are defined in Section 11.2 of RFC 6550 [ RFC6550 ]. 	301	0
8139	FGL	FGL : Fine-Grained Label [ RFC7172 ]. 	231	0
8139	Type	o Length : 4 + size of bit map in bytes . If Length is less than 4 , the APPsub-TLV is corrupt and MUST be ignored . 	100	0
8139	Length	o Length : 4 + size of bit map in bytes . If Length is less than 4 , the APPsub-TLV is corrupt and MUST be ignored . 	100	0
8139	Appointee Nickname	o Appointee Nickname : The nickname of the TRILL switch being appointed as forwarder . 	230	0
8139	RESV	o Starting VLAN ID : The smallest VLAN ID to which the bits in the Bit Map correspond . 	231	0
8139	Starting VLAN ID	o Starting VLAN ID : The smallest VLAN ID to which the bits in the Bit Map correspond . 	231	0
8139	Type	o Length : 2 + 2 * k . If Length is not an even number , the APPsub-TLV is corrupt and MUST be ignored . 	100	0
8139	Length	o Length : 2 + 2 * k . If Length is not an even number , the APPsub-TLV is corrupt and MUST be ignored . 	100	0
8139	Appointee Nickname	o Appointee Nickname : The nickname of the TRILL switch being appointed as forwarder . 	230	0
8139	RESV	o VLAN ID : A 12-bit VLAN ID for which the appointee is being appointed as the forwarder . 	400	0
8139	VLAN ID	o VLAN ID : A 12-bit VLAN ID for which the appointee is being appointed as the forwarder . 	400	0
8139	Type	This APPsub-TLV , when originated by the DRB , appoints the TRILL switch with Appointee Nickname to be the Appointed Forwarder for the VLAN IDs listed . 	230	0
8139	Type	o Length : 5 + size of bit map in bytes . If Length is less than 5 , the APPsub-TLV is corrupt and MUST be ignored . 	100	0
8139	Length	o Length : 5 + size of bit map in bytes . If Length is less than 5 , the APPsub-TLV is corrupt and MUST be ignored . 	100	0
8139	RESV	o Starting VLAN ID : Initial VLAN ID for the mapping information as discussed below . 	400	0
8139	Starting VLAN ID	o Starting VLAN ID : Initial VLAN ID for the mapping information as discussed below . 	231	0
8139	Starting FGL	o Bit Map : Map of bits for VLAN-ID-to-FGL mappings . The size of the bit map is Length minus 5 . If the size of the bit map is zero , no mappings are indicated . 	400	0
8139	Type	o Length : 5 * k . If Length is not a multiple of 5 , the APPsub-TLV is corrupt and MUST be ignored . 	100	0
8139	Length	o Length : 5 * k . If Length is not a multiple of 5 , the APPsub-TLV is corrupt and MUST be ignored . 	100	0
8139	RESV	o RESV : 4 bits that MUST be sent as zero and ignored on receipt . 	500	0
8139	VLAN ID	o VLAN ID : 12-bit VLAN label . 	231	0
8139	FGL	Each Mapping RECORD indicates that the originating TRILL switch is configured to map between the FGL and VLAN given on egressing and ingressing native frames . However , VLAN ID 0x000 and VLAN ID 0xFFF are invalid; any Mapping RECORD that corresponds to an illegal VLAN ID is ignored . 	201	0
8156	msg-type	msg-type Identifies the DHCP message type; the available message types are listed below . 	231	0
8156	transaction-id	transaction-id The transaction-id for this message exchange . 	230	0
8156	sent-time	sent-time The time the message was transmitted ( set as close to transmission as practical ), in seconds since midnight ( UTC ), January 1 , 2000 , modulo 2^32 . Used to determine the time skew of the failover partners . 	121	0
8156	OPTION_F_BINDING_STATUS	The binding-status is an implementation-independent representation of the status ( or the state ) of a lease on an IPv6 address or prefix . 	231	0
8156	OPTION_F_CONNECT_FLAGS	This option provides flags that indicate attributes of the connecting server . 	230	0
8156	OPTION_F_DNS_REMOVAL_INFO	This option contains the information necessary to remove a DNS name that was entered by the failover partner . 	400	0
8156	OPTION_F_DNS_HOST_NAME	This option contains the hostname that was entered into the DNS by the failover partner . 	230	0
8156	OPTION_F_DNS_ZONE_NAME	This option contains the zone name that was entered into the DNS by the failover partner . 	231	0
8156	OPTION_F_DNS_FLAGS	This option provides flags that indicate what needs to be done to remove this DNS name . 	301	0
8156	OPTION_F_EXPIRATION_TIME	This option specifies the greatest lifetime that this server has ever acked to its partner in a BNDREPLY message for a particular lease or prefix . This MUST be an absolute time ( i.e ., seconds since midnight January 1 , 2000 UTC , modulo 2^32 ). 	120	0
8156	OPTION_F_MAX_UNACKED_BNDUPD	This option specifies the maximum number of BNDUPD messages that this server is prepared to accept over the TCP connection without causing the TCP connection to block . 	100	0
8156	OPTION_F_MCLT	The Maximum Client Lead Time ( MCLT ) is the upper bound on the difference allowed between the valid lifetime provided to a DHCP client by a server and the valid lifetime known by that server's failover partner . It is an interval , measured in seconds . See Section 4.4 . 	120	0
8156	OPTION_F_PARTNER_LIFETIME	This option specifies the time after which the partner can consider an IPv6 address expired and is able to reuse the IPv6 address . This MUST be an absolute time ( i.e ., seconds since midnight January 1 , 2000 UTC , modulo 2^32 ). 	121	0
8156	OPTION_F_PARTNER_LIFETIME_SENT	This option indicates the time that was received in an OPTION_F_PARTNER_LIFETIME option ( Section 5.5.7 ). This is an exact duplicate ( echo ) of the time received in the OPTION_F_PARTNER_LIFETIME option; it is not adjusted in any way . This MUST be an absolute time ( i.e ., seconds since midnight January 1 , 2000 UTC , modulo 2^32 ). 	122	0
8156	OPTION_F_PARTNER_DOWN_TIME	This option specifies the time that the server most recently lost communications with its failover partner . This MUST be an absolute time ( i.e ., seconds since midnight January 1 , 2000 UTC , modulo 2^32 ). 	121	0
8156	OPTION_F_PARTNER_RAW_CLT_TIME	This option specifies the time when the partner most recently interacted with the DHCP client associated with this IPv6 address or prefix . This MUST be an absolute time ( i.e ., seconds since midnight January 1 , 2000 UTC , modulo 2^32 ). 	121	0
8156	OPTION_F_PROTOCOL_VERSION	The protocol version allows one failover partner to determine the version of the protocol being used by the other partner , to allow for changes and upgrades in the future . Two components are provided , to allow large and small changes to be represented in one 32-bit number . The intent is that large changes would result in an increment of the value of major-version , while small changes would result in an increment of the value of minor-version . As subsequent updates and extensions of this document can define changes to these values in any way deemed appropriate , no attempt is made to further define " large " and " small " in this document . 	220	0
8156	OPTION_F_KEEPALIVE_TIME	This option specifies the number of seconds ( an interval ) within which the server must receive a message from its partner , or it will assume that communications from the partner are not " OK ". 	120	0
8156	OPTION_F_RECONFIGURE_DATA	This option contains the information necessary for one failover partner to use the reconfigure-key created on the other failover partner . 	400	0
8156	OPTION_F_RELATIONSHIP_NAME	This option specifies a name for this failover relationship . It is used to distinguish between relationships when there are multiple failover relationships between two failover servers . 	231	0
8156	OPTION_F_SERVER_FLAGS	The OPTION_F_SERVER_FLAGS option specifies information associated with the failover endpoint sending the option . 	230	0
8156	OPTION_F_SERVER_STATE	The OPTION_F_SERVER_STATE option specifies the endpoint state of the server sending the option . 	230	0
8156	OPTION_F_START_TIME_OF_STATE	The OPTION_F_START_TIME_OF_STATE option specifies the time at which the associated state began to hold its current value . When this option appears in a STATE message , the state to which it refers is the server endpoint state . When it appears in an IA_NA-options , IA_TA-options , or IA_PD-options field , the state to which it refers is the binding-status value in the OPTION_IA_NA , OPTION_IA_TA , or OPTION_IA_PD option , respectively . This MUST be an absolute time ( i.e ., seconds since midnight January 1 , 2000 UTC , modulo 2^32 ). 	121	0
8156	OPTION_F_STATE_EXPIRATION_TIME	The OPTION_F_STATE_EXPIRATION_TIME option specifies the time at which the current state of this lease will expire . This MUST be an absolute time ( i.e ., seconds since midnight January 1 , 2000 UTC , modulo 2^32 ). 	121	0
8156	OPTION_F_PROTOCOL_VERSION	o OPTION_F_PROTOCOL_VERSION - The secondary server decides if the protocol version of the primary server is supported by the secondary server . If it is not , return NotSupported in the OPTION_STATUS_CODE to reject the CONNECT message . 	240	0
8156	OPTION_F_MCLT	o OPTION_F_MCLT - Use this MCLT supplied by the primary server . Remember this MCLT , and use it until a different MCLT is supplied by some subsequent CONNECT message . 	400	0
8156	OPTION_F_KEEPALIVE_TIME	o OPTION_F_KEEPALIVE_TIME - Remember the keepalive-time as the FO_KEEPALIVE_TIME ( Section 6.5 ) when implementing the Unreachability Detection algorithm described in Section 6.6 . 	240	0
8156	OPTION_F_MAX_UNACKED_BNDUPD	o OPTION_F_MAX_UNACKED_BNDUPD - Ensure that the maximum amount of unacked BNDUPD messages queued to the primary server never exceeds the value in the OPTION_F_MAX_UNACKED_BNDUPD option . 	240	0
8156	OPTION_F_CONNECT_FLAGS	o OPTION_F_CONNECT_FLAGS - Ensure that the secondary server can process information from the primary server as specified in the flags . For example , if the secondary server cannot process prefix delegation with variable-sized prefixes delegated from the same delegable prefix and the primary server says that it can , the secondary should reject the connection . 	240	0
8156	OPTION_F_PROTOCOL_VERSION	o OPTION_F_PROTOCOL_VERSION - The primary server decides if the protocol version in use by the secondary server is supported by the primary server . If it is not , send a DISCONNECT message and drop the connection . If it is supported , continue processing . It is possible that the primary and secondary servers will each be sending different versions of the protocol to the other server . 	240	0
8156	OPTION_F_MCLT	o OPTION_F_MCLT - Compare the MCLT received with the configured MCLT . If they are different , send a DISCONNECT message and drop the connection . 	400	0
8156	OPTION_F_KEEPALIVE_TIME	o OPTION_F_KEEPALIVE_TIME - Remember the keepalive-time as the FO_KEEPALIVE_TIME ( Section 6.5 ) when implementing the Unreachability Detection algorithm described in Section 6.6 . 	240	0
8156	OPTION_F_MAX_UNACKED_BNDUPD	o OPTION_F_MAX_UNACKED_BNDUPD - Ensure that the maximum amount of unacked BNDUPD messages queued to the secondary server never exceeds the value in the OPTION_F_MAX_UNACKED_BNDUPD option . 	240	0
8156	OPTION_F_CONNECT_FLAGS	o OPTION_F_CONNECT_FLAGS - Ensure that the primary server can process information from the secondary server as specified in the flags . For example , if the primary server cannot process prefix delegation with variable-sized prefixes delegated from the same delegable prefix and the secondary server says that it can , the primary should drop the connection . 	240	0
8156	OPTION_F_SERVER_STATE	o OPTION_F_SERVER_STATE - If this represents a change in state for the failover partner , react according to the instructions in Section 8.1 . If the state is not PARTNER-DOWN , clear any memory of the partner-down-time . 	240	0
8156	OPTION_F_SERVER_FLAGS	o OPTION_F_SERVER_FLAGS - Remember these flags in an appropriate data area so they can be referenced later . 	240	0
8156	OPTION_F_START_TIME_OF_STATE	o OPTION_F_START_TIME_OF_STATE - Remember this information in an appropriate data area so it can be referenced later . 	240	0
8156	OPTION_F_PARTNER_DOWN_TIME	o OPTION_F_PARTNER_DOWN_TIME - If the value of the OPTION_F_SERVER_STATE is PARTNER-DOWN , remember this information in an appropriate data area so it can be referenced later . 	240	0
8156	OPTION_F_PARTNER_LIFETIME	o OPTION_F_PARTNER_LIFETIME ( absolute ) containing the partner-lifetime *. 	240	0
8156	OPTION_F_EXPIRATION_TIME	o OPTION_F_EXPIRATION_TIME ( absolute ) containing the expiration-time *. 	240	0
8156	partner-lifetime	partner-lifetime PARTNER_LIFETIME expiration-time 	100	0
8156	expiration-time	expiration-time EXPIRATION_TIME partner-lifetime partner-raw-clt-time PARTNER_RAW_CLT_TIME client-last-transaction-time 	240	0
8156	A	A B Server Server 	302	0
8156	OPTION_F_BINDING_STATUS	o OPTION_F_BINDING_STATUS ( 114 ) 	302	0
8156	OPTION_F_CONNECT_FLAGS	o OPTION_F_CONNECT_FLAGS ( 115 ) 	302	0
8156	OPTION_F_DNS_REMOVAL_INFO	o OPTION_F_DNS_REMOVAL_INFO ( 116 ) 	240	0
8156	OPTION_F_DNS_HOST_NAME	o OPTION_F_DNS_HOST_NAME ( 117 ) 	302	0
8156	OPTION_F_DNS_ZONE_NAME	o OPTION_F_DNS_ZONE_NAME ( 118 ) 	240	0
8156	OPTION_F_DNS_FLAGS	o OPTION_F_DNS_FLAGS ( 119 ) 	302	0
8156	OPTION_F_EXPIRATION_TIME	o OPTION_F_EXPIRATION_TIME ( 120 ) 	240	0
8156	OPTION_F_MAX_UNACKED_BNDUPD	o OPTION_F_MAX_UNACKED_BNDUPD ( 121 ) 	240	0
8156	OPTION_F_MCLT	o OPTION_F_MCLT ( 122 ) 	302	0
8156	OPTION_F_PARTNER_LIFETIME	o OPTION_F_PARTNER_LIFETIME ( 123 ) 	240	0
8156	OPTION_F_PARTNER_LIFETIME_SENT	o OPTION_F_PARTNER_LIFETIME_SENT ( 124 ) 	240	0
8156	OPTION_F_PARTNER_DOWN_TIME	o OPTION_F_PARTNER_DOWN_TIME ( 125 ) 	240	0
8156	OPTION_F_PARTNER_RAW_CLT_TIME	o OPTION_F_PARTNER_RAW_CLT_TIME ( 126 ) 	240	0
8156	OPTION_F_PROTOCOL_VERSION	o OPTION_F_PROTOCOL_VERSION ( 127 ) 	302	0
8156	OPTION_F_KEEPALIVE_TIME	o OPTION_F_KEEPALIVE_TIME ( 128 ) 	240	0
8156	OPTION_F_RECONFIGURE_DATA	o OPTION_F_RECONFIGURE_DATA ( 129 ) 	302	0
8156	OPTION_F_RELATIONSHIP_NAME	o OPTION_F_RELATIONSHIP_NAME ( 130 ) 	302	0
8156	OPTION_F_SERVER_FLAGS	o OPTION_F_SERVER_FLAGS ( 131 ) 	302	0
8156	OPTION_F_SERVER_STATE	o OPTION_F_SERVER_STATE ( 132 ) 	302	0
8156	OPTION_F_START_TIME_OF_STATE	o OPTION_F_START_TIME_OF_STATE ( 133 ) 	240	0
8156	OPTION_F_STATE_EXPIRATION_TIME	IANA has assigned values for the following new DHCPv6 status codes in the registry maintained at < http://www.iana.org/assignments / dhcpv6-parameters >: 	231	0
8169	RTM	RTM : Residence Time Measurement 	231	0
8169	RTM	o RTM ( capability ) is a 3-bit-long bitmap field with values defined as follows : 	400	0
8171	CSNP Time	CSNP Time : Complete Sequence Number Protocol Data Unit ( PDU ) time . See ESADI [ RFC7357 ] and Section 7.1 below . 	122	0
8171	Ver	Ver : Version of the Pull Directory protocol . An unsigned integer . Version 0 ( zero ) is specified in this document . See Section 3.1.1 for a discussion of version negotiation . 	220	0
8171	Type	Type Section Name ---- ------- ------------ 0 - Reserved 1 3.2.1 Query 2 3.2.2 Response 3 3.3.1 Update 4 3.3.2 Acknowledge 5-14 - Unassigned 15 - Reserved 	240	0
8171	Flags	Flags : Four flag bits whose meaning depends on the Pull Directory message type . Flags whose meanings are not specified are reserved , MUST be sent as zero , and MUST be ignored on receipt . 	500	0
8171	Count	Count : Some Pull Directory message types specified herein have zero or more occurrences of a Record as part of the type-specific payload . The Count field is the number of occurrences of that Record and is expressed as an unsigned integer . For any Pull Directory messages not structured with such occurrences , this field MUST be sent as zero and ignored on receipt . 	231	0
8171	Err	Err , SubErr : A two-part error code . These fields are only used in Reply Messages . In messages that are requests or updates , these fields MUST be sent as zero and ignored on receipt . An Err field containing the value zero means no error . The meaning of values in the SubErr field depends on the value of the Err field , but in all cases , a zero SubErr field is allowed and provides no additional information beyond the value of the Err field . 	400	0
8171	SubErr	Err , SubErr : A two-part error code . These fields are only used in Reply Messages . In messages that are requests or updates , these fields MUST be sent as zero and ignored on receipt . An Err field containing the value zero means no error . The meaning of values in the SubErr field depends on the value of the Err field , but in all cases , a zero SubErr field is allowed and provides no additional information beyond the value of the Err field . 	400	0
8171	Sequence Number	Sequence Number : An identifying 32-bit quantity set by the TRILL switch sending a request or other unsolicited message and returned in every corresponding reply or acknowledgment . It is used to match up responses with the message to which they respond . 	200	0
8171	Ver	Type : 1 for Query . Queries received by a TRILL switch that is not a Pull Directory for the relevant Data Label result in an error response ( see Section 3.6 ) unless inhibited by rate limiting . ( See [ RFC7178 ] for information on the Response Message that is generated if the recipient implements the RBridge Channel features but does not implement the Pull Directory RBridge Channel Protocol .) 	400	0
8171	Sequence Number	Type : 1 for Query . Queries received by a TRILL switch that is not a Pull Directory for the relevant Data Label result in an error response ( see Section 3.6 ) unless inhibited by rate limiting . ( See [ RFC7178 ] for information on the Response Message that is generated if the recipient implements the RBridge Channel features but does not implement the Pull Directory RBridge Channel Protocol .) 	400	0
8171	Type	Type : 1 for Query . Queries received by a TRILL switch that is not a Pull Directory for the relevant Data Label result in an error response ( see Section 3.6 ) unless inhibited by rate limiting . ( See [ RFC7178 ] for information on the Response Message that is generated if the recipient implements the RBridge Channel features but does not implement the Pull Directory RBridge Channel Protocol .) 	400	0
8171	Flags	Flags , Err , and SubErr : MUST be sent as zero and ignored on receipt . 	500	0
8171	Err	Flags , Err , and SubErr : MUST be sent as zero and ignored on receipt . 	500	0
8171	SubErr	Flags , Err , and SubErr : MUST be sent as zero and ignored on receipt . 	500	0
8171	Count	Count : Count is the number of QUERY Records present . A Query Message Count of 0 is explicitly allowed , for the purpose of pinging a Pull Directory server to see if it is responding . On receipt of such an empty Query Message , a Response Message that also has a Count of 0 is returned unless inhibited by rate limiting . 	302	0
8171	Ver	Ver , Sequence Number : As specified in Section 3.1 . 	200	0
8171	Sequence Number	Ver , Sequence Number : As specified in Section 3.1 . 	200	0
8171	Type	Type : 2 = Response . 	240	0
8171	Flags	Count : Count is the number of RESPONSE Records present in the Response Message . 	231	0
8171	Count	Count : Count is the number of RESPONSE Records present in the Response Message . 	231	0
8171	Err	Err , SubErr : A two-part error code . Zero , unless there was an error in the Query Message ( in which case , see Section 3.6 ). 	302	0
8171	SubErr	Err , SubErr : A two-part error code . Zero , unless there was an error in the Query Message ( in which case , see Section 3.6 ). 	302	0
8171	R	For tracking methods 2 and 3 in Section 3.3 , a particular Update Message MUST have either the P flag or the N flag set , but not both . If both are set , the Update Message MUST be ignored , as this combination is only valid for method 1 . 	302	0
8175	Signal Type	Signal Type : A 16-bit unsigned integer containing one of the DLEP Signal Type values defined in this document . 	231	0
8175	Length	Length : The length in octets , expressed as a 16-bit unsigned integer , of all of the DLEP Data Items contained in this Signal . This length MUST NOT include the length of the Signal Header itself . 	100	0
8175	Message Type	Message Type : A 16-bit unsigned integer containing one of the DLEP Message Type values defined in this document . 	231	0
8175	Length	Length : The length in octets , expressed as a 16-bit unsigned integer , of all of the DLEP Data Items contained in this Message . This length MUST NOT include the length of the Message Header itself . 	100	0
8175	Data Item Type	Data Item Type : A 16-bit unsigned integer field specifying the type of Data Item being sent . 	231	0
8175	Length	Length : The length in octets , expressed as a 16-bit unsigned integer , of the Value field of the Data Item . This length MUST NOT include the length of the Data Item Type and Length fields . 	100	0
8175	Heartbeat Interval	o Heartbeat Interval ( Section 13.5 ) 	301	0
8175	IPv4 Address	o IPv4 Address ( Section 13.8 ) 	230	0
8175	IPv6 Address	o IPv6 Address ( Section 13.9 ) 	230	0
8175	IPv4 Attached Subnet	o IPv4 Attached Subnet ( Section 13.10 ) 	303	0
8175	IPv6 Attached Subnet	If any optional extensions are supported by the implementation , they MUST be enumerated in the Extensions Supported Data Item . If an Extensions Supported Data Item does not exist in a Session Initialization Message , the modem MUST conclude that there is no support for extensions in the router . 	400	0
8175	Heartbeat Interval	o Heartbeat Interval ( Section 13.5 ) 	301	0
8175	Latency	The Session Initialization Response Message MUST contain one of each of the following Data Items , if the Data Item will be used during the lifetime of the session : 	400	0
8175	MTU	If DLEP extensions are supported , the Session Initialization Response Message MUST contain an Extensions Supported Data Item ( Section 13.6 ). 	400	0
8175	IPv4 Address	o IPv4 Address ( Section 13.8 ) 	230	0
8175	IPv6 Address	o IPv6 Address ( Section 13.9 ) 	230	0
8175	IPv4 Attached Subnet	o IPv4 Attached Subnet ( Section 13.10 ) 	303	0
8175	IPv6 Attached Subnet	The Session Initialization Response Message completes the DLEP session establishment; the modem should transition to the In-Session state when the Message is sent , and the router should transition to the In-Session state upon receipt of an acceptable Session Initialization Response Message . 	400	0
8175	IPv4 Address	o IPv4 Address ( Section 13.8 ) 	230	0
8175	IPv6 Address	o IPv6 Address ( Section 13.9 ) 	230	0
8175	IPv4 Attached Subnet	o IPv4 Attached Subnet ( Section 13.10 ) 	303	0
8175	IPv6 Attached Subnet	When sent by a modem , the Session Update Message MAY contain one of each of the following Data Items : 	230	0
8175	Latency	When sent by a modem , the Session Update Message MAY contain one of each of the following Data Items , if the Data Item is in use by the session : 	400	0
8175	MTU	If metrics are supplied with the Session Update Message ( e.g ., Maximum Data Rate ), these metrics are considered to be session-wide and therefore MUST be applied to all destinations in the information base associated with the DLEP session . This includes destinations for which metrics may have been stored based on received Destination Update messages . 	202	0
8175	IPv4 Address	o IPv4 Address ( Section 13.8 ) 	230	0
8175	IPv6 Address	The Destination Up Message MAY contain one of each of the following Data Items : 	230	0
8175	Latency	The Destination Up Message MAY contain one of each of the following Data Items , if the Data Item is in use by the session : 	400	0
8175	MTU	The Destination Up Message MAY contain one or more of each of the following Data Items , with different values : 	400	0
8175	IPv4 Attached Subnet	o IPv4 Attached Subnet ( Section 13.10 ) 	303	0
8175	IPv6 Attached Subnet	A router receiving a Destination Up Message allocates the necessary resources , creating an entry in the information base with the specifics ( MAC Address , Latency , Data Rate , etc .) of the destination . The information about this destination will persist in the router's information base until a Destination Down Message ( Section 12.15 ) is received , indicating that the modem has lost contact with the remote node or that the implementation transitions to the Session Termination state . 	230	0
8175	MAC Address	o MAC Address ( Section 13.7 ) 	230	0
8175	IPv4 Address	o IPv4 Address ( Section 13.8 ) 	230	0
8175	IPv6 Address	One of the advantages of implementing DLEP is to leverage the modem's knowledge of the links between remote destinations , allowing routers to avoid using probed neighbor discovery techniques; therefore , modem implementations SHOULD announce available destinations via the Destination Up Message , rather than relying on Destination Announce Messages . 	400	0
8175	MAC Address	o MAC Address ( Section 13.7 ) 	230	0
8175	IPv4 Address	o IPv4 Address ( Section 13.8 ) 	230	0
8175	IPv6 Address	o IPv6 Address ( Section 13.9 ) 	230	0
8175	IPv4 Attached Subnet	o IPv4 Attached Subnet ( Section 13.10 ) 	303	0
8175	IPv6 Attached Subnet	The Destination Announce Response Message MAY contain one of each of the following Data Items : 	400	0
8175	Latency	The Destination Announce Response Message MAY contain one of each of the following Data Items , if the Data Item is in use by the session : 	400	0
8175	MTU	If a modem is unable to report information immediately about the requested information -- for example , if the destination is not currently reachable -- the status code in the Status Data Item MUST be set to 2 ' Request Denied'; see Table 2 . 	240	0
8175	MAC Address	o MAC Address ( Section 13.7 ) 	230	0
8175	Latency	The Destination Update Message MAY contain one of each of the following Data Items , if the Data Item is in use by the session : 	400	0
8175	MTU	The Destination Update Message MAY contain one or more of each of the following Data Items , with different values : 	230	0
8175	IPv4 Address	o IPv4 Address ( Section 13.8 ) 	230	0
8175	IPv6 Address	o IPv6 Address ( Section 13.9 ) 	230	0
8175	IPv4 Attached Subnet	o IPv4 Attached Subnet ( Section 13.10 ) 	303	0
8175	IPv6 Attached Subnet	Metrics supplied in this Message overwrite metrics provided in a previously received Session Message , Destination Message , or Link Characteristics Message ( e.g ., Session Initialization , Destination Up , Link Characteristics Response ). 	231	0
8175	Latency	The Link Characteristics Request Message MAY contain either a Current Data Rate ( Receive ) ( CDRR ) or Current Data Rate ( Transmit ) ( CDRT ) Data Item to request a different data rate than is currently allocated , a Latency Data Item to request that traffic delay on the link not exceed the specified value , or both . 	400	0
8175	MAC Address	o MAC Address ( Section 13.7 ) 	230	0
8175	Latency	The Link Characteristics Response Message MAY contain one of each of the following Data Items , if the Data Item is in use by the session : 	400	0
8175	MTU	The Link Characteristics Response Message MUST contain a complete set of metric Data Items , referencing all metrics declared in the Session Initialization Response Message ( Section 12.6 ). The values in the metric Data Items in the Link Characteristics Response Message MUST reflect the link characteristics after the request has been processed . 	231	0
8175	Data Item Type	Data Item Type : 1 	240	0
8175	Length	Length : 1 + Length of Text , in octets . 	100	0
8175	Status Code	Text : UTF-8 encoded string of Unicode [ RFC3629 ] characters , describing the cause , used for implementation-defined purposes . Since this field is used for description purposes , implementations SHOULD limit characters in this field to printable characters . 	231	0
8175	Data Item Type	Data Item Type : 2 	240	0
8175	Length	Length : 5 ( or 7 if TCP Port Number included ). 	100	0
8175	Flags	Flags : Flags field , defined below . 	100	0
8175	IPv4 Address	IPv4 Address : The IPv4 address listening on the modem . 	230	0
8175	T	T : Use TLS flag , indicating whether the TCP connection to the given address and port requires the use of TLS [ RFC5246 ] ( 1 ) or not ( 0 ). 	210	0
8175	Reserved	Reserved : MUST be zero . Left for future assignment . 	500	0
8175	Data Item Type	Data Item Type : 3 	240	0
8175	Length	Length : 17 ( or 19 if TCP Port Number included ). 	100	0
8175	Flags	Flags : Flags field , defined below . 	100	0
8175	IPv6 Address	IPv6 Address : The IPv6 address listening on the modem . 	230	0
8175	T	T : Use TLS flag , indicating whether the TCP connection to the given address and port requires the use of TLS [ RFC5246 ] ( 1 ) or not ( 0 ). 	210	0
8175	Reserved	Reserved : MUST be zero . Left for future assignment . 	500	0
8175	Data Item Type	Data Item Type : 4 	240	0
8175	Length	Length : 1 + Length of Description , in octets . 	100	0
8175	Flags	Description : UTF-8 encoded string of Unicode [ RFC3629 ] characters . For example , a satellite modem might set this variable to " Satellite terminal ". Since this Data Item is intended to provide additional information for display commands , sending implementations SHOULD limit the data to printable characters . 	301	0
8175	S	S : Secured Medium flag , used by a modem to indicate whether the shared RF medium implements access control ( 1 ) or not ( 0 ). The Secured Medium flag only has meaning in Signals and Messages sent by a modem . 	210	0
8175	Reserved	Reserved : MUST be zero . Left for future assignment . 	500	0
8175	Heartbeat Interval	The Heartbeat Interval Data Item is used to specify a period in milliseconds for Heartbeat Messages ( Section 12.20 ). 	122	0
8175	Data Item Type	Data Item Type : 5 	240	0
8175	Length	Heartbeat Interval : The interval in milliseconds , expressed as a 32-bit unsigned integer , for Heartbeat Messages . This value MUST NOT be 0 . 	120	0
8175	Heartbeat Interval	Heartbeat Interval : The interval in milliseconds , expressed as a 32-bit unsigned integer , for Heartbeat Messages . This value MUST NOT be 0 . 	120	0
8175	Data Item Type	Length : Length of the Extensions List in octets . This is twice ( 2x ) the number of extensions . 	100	0
8175	Length	Length : Length of the Extensions List in octets . This is twice ( 2x ) the number of extensions . 	100	0
8175	MAC Address	The MAC Address Data Item contains the address of the destination on the remote node . 	230	0
8175	Data Item Type	Data Item Type : 7 	240	0
8175	Length	Length : 6 for EUI-48 format or 8 for EUI-64 format . 	100	0
8175	MAC Address	MAC Address : MAC address of the destination . 	230	0
8175	IPv4 Address	When included in the Session Update Message , this Data Item contains the IPv4 address of the peer . When included in Destination Messages , this Data Item contains the IPv4 address of the destination . In either case , the Data Item also contains an indication of whether this is ( 1 ) a new or existing address or ( 2 ) a deletion of a previously known address . 	230	0
8175	Data Item Type	Data Item Type : 8 	400	0
8175	Length	Length : 5 	100	0
8175	Flags	Flags : Flags field , defined below . 	100	0
8175	IPv4 Address	IPv4 Address : The IPv4 address of the destination or peer . 	230	0
8175	A	A : Add/Drop flag , indicating whether this is a new or existing address ( 1 ) or a withdrawal of an address ( 0 ). 	210	0
8175	Reserved	Reserved : MUST be zero . Reserved for future use . 	500	0
8175	IPv6 Address	When included in the Session Update Message , this Data Item contains the IPv6 address of the peer . When included in Destination Messages , this Data Item contains the IPv6 address of the destination . In either case , the Data Item also contains an indication of whether this is ( 1 ) a new or existing address or ( 2 ) a deletion of a previously known address . 	230	0
8175	Data Item Type	Data Item Type : 9 	240	0
8175	Length	Length : 17 	100	0
8175	Flags	Flags : Flags field , defined below . 	100	0
8175	IPv6 Address	IPv6 Address : The IPv6 address of the destination or peer . 	230	0
8175	A	A : Add/Drop flag , indicating whether this is a new or existing address ( 1 ) or a withdrawal of an address ( 0 ). 	210	0
8175	Reserved	Reserved : MUST be zero . Reserved for future use . 	500	0
8175	IPv4 Attached Subnet	The DLEP IPv4 Attached Subnet Data Item allows a device to declare that it has an IPv4 subnet ( e.g ., a stub network ) attached , that it has become aware of an IPv4 subnet being present at a remote destination , or that it has become aware of the loss of a subnet at the remote destination . 	400	0
8175	Data Item Type	Data Item Type : 10 	400	0
8175	Length	Length : 6 	100	0
8175	Flags	Flags : Flags field , defined below . 	100	0
8175	IPv4 Attached Subnet	Prefix Length : Length of the prefix ( 0-32 ) for the IPv4 subnet . A prefix length outside the specified range MUST be considered as invalid . 	100	0
8175	Prefix Length	Prefix Length : Length of the prefix ( 0-32 ) for the IPv4 subnet . A prefix length outside the specified range MUST be considered as invalid . 	100	0
8175	A	A : Add/Drop flag , indicating whether this is a new or existing subnet address ( 1 ) or a withdrawal of a subnet address ( 0 ). 	210	0
8175	Reserved	Reserved : MUST be zero . Reserved for future use . 	500	0
8175	IPv6 Attached Subnet	The DLEP IPv6 Attached Subnet Data Item allows a device to declare that it has an IPv6 subnet ( e.g ., a stub network ) attached , that it has become aware of an IPv6 subnet being present at a remote destination , or that it has become aware of the loss of a subnet at the remote destination . 	400	0
8175	Data Item Type	Data Item Type : 11 	220	0
8175	Length	Length : 18 	100	0
8175	Flags	Flags : Flags field , defined below . 	100	0
8175	IPv6 Attached Subnet	Prefix Length : Length of the prefix ( 0-128 ) for the IPv6 subnet . A prefix length outside the specified range MUST be considered as invalid . 	100	0
8175	Prefix Length	Prefix Length : Length of the prefix ( 0-128 ) for the IPv6 subnet . A prefix length outside the specified range MUST be considered as invalid . 	100	0
8175	A	A : Add/Drop flag , indicating whether this is a new or existing subnet address ( 1 ) or a withdrawal of a subnet address ( 0 ). 	210	0
8175	Reserved	Reserved : MUST be zero . Reserved for future use . 	500	0
8175	Data Item Type	Data Item Type : 12 	240	0
8175	Length	Maximum Data Rate ( Receive ): A 64-bit unsigned integer , representing the maximum theoretical data rate , in bits per second , that can be achieved while receiving on the link . 	100	0
8175	Data Item Type	Data Item Type : 13 	240	0
8175	Length	Maximum Data Rate ( Transmit ): A 64-bit unsigned integer , representing the maximum theoretical data rate , in bits per second , that can be achieved while transmitting on the link . 	100	0
8175	Data Item Type	Data Item Type : 14 	240	0
8175	Length	Current Data Rate ( Receive ): A 64-bit unsigned integer , representing the current data rate , in bits per second , that can currently be achieved while receiving traffic on the link . 	231	0
8175	Data Item Type	Data Item Type : 15 	240	0
8175	Length	Current Data Rate ( Transmit ): A 64-bit unsigned integer , representing the current data rate , in bits per second , that can currently be achieved while transmitting traffic on the link . 	231	0
8175	Latency	The Latency Data Item is used to indicate the amount of latency , in microseconds , on the link . 	201	0
8175	Data Item Type	Data Item Type : 16 	240	0
8175	Length	Latency : A 64-bit unsigned integer , representing the transmission delay , in microseconds , that a packet encounters as it is transmitted over the link . 	120	0
8175	Latency	Latency : A 64-bit unsigned integer , representing the transmission delay , in microseconds , that a packet encounters as it is transmitted over the link . 	120	0
8175	Data Item Type	Data Item Type : 17 	240	0
8175	Length	Resources : An 8-bit unsigned integer percentage , 0-100 , representing the amount of resources available . Any value greater than 100 MUST be considered as invalid . 	302	0
8175	Data Item Type	Data Item Type : 18 	240	0
8175	Length	Relative Link Quality ( Receive ): A non-dimensional unsigned 8-bit integer , 0-100 , representing relative quality of the link for receiving traffic . Any value greater than 100 MUST be considered as invalid . 	303	0
8175	Data Item Type	Data Item Type : 19 	240	0
8175	Length	Relative Link Quality ( Transmit ): A non-dimensional unsigned 8-bit integer , 0-100 , representing relative quality of the link for transmitting traffic . Any value greater than 100 MUST be considered as invalid . 	302	0
8175	MTU	The Maximum Transmission Unit ( MTU ) Data Item is used to indicate the maximum size , in octets , of an IP packet that can be transmitted without fragmentation , including headers , but excluding any lower-layer headers . 	100	0
8175	Data Item Type	Data Item Type : 20 	240	0
8175	Length	Maximum Transmission Unit : The maximum size , in octets , of an IP packet that can be transmitted without fragmentation , including headers , but excluding any lower-layer headers . 	100	0
8180	ASN	Join Metric : Field in the TSCH Synchronization IE representing the topological distance between the node sending the EB and the PAN coordinator . 	400	0
8180	Join Metric	Join Metric : Field in the TSCH Synchronization IE representing the topological distance between the node sending the EB and the PAN coordinator . 	400	0
8196	Type	Length : The length , in octets , of the " Flags " and " Router - Fingerprint " fields . 	100	0
8196	Length	Length : The length , in octets , of the " Flags " and " Router - Fingerprint " fields . 	100	0
8196	Flags	Flags : 1 octet . 	301	0
8196	Reserved	Reserved : These flags MUST be set to zero and MUST be ignored by the receiver . 	500	0
8200	Options	Changes in the way IP header options are encoded allows for more efficient forwarding , less stringent limits on the length of options , and greater flexibility for introducing new options in the future . 	231	0
8200	Version	Version 4-bit Internet Protocol version number = 6 . 	220	0
8200	Traffic Class	Traffic Class 8-bit Traffic Class field . See Section 7 . 	231	0
8200	Flow Label	Flow Label 20-bit flow label . See Section 6 . 	231	0
8200	Payload Length	Payload Length 16-bit unsigned integer . Length of the IPv6 payload , i.e ., the rest of the packet following this IPv6 header , in octets . ( Note that any extension headers ( see Section 4 ) present are considered part of the payload , i.e ., included in the length count .) 	100	0
8200	Next Header	Next Header 8-bit selector . Identifies the type of header immediately following the IPv6 header . Uses the same values as the IPv4 Protocol field [ IANA-PN ]. 	231	0
8200	Hop Limit	Hop Limit 8-bit unsigned integer . Decremented by 1 by each node that forwards the packet . When forwarding , the packet is discarded if Hop Limit was zero when received or is decremented to zero . A node that is the destination of a packet should not discard a packet with Hop Limit equal to zero; it should process the packet normally . 	100	0
8200	Source Address	Source Address 128-bit address of the originator of the packet . See [ RFC4291 ]. 	230	0
8200	Options	Two of the currently defined extension headers specified in this document -- the Hop-by-Hop Options header and the Destination Options header -- carry a variable number of " options " that are type-length - value ( TLV ) encoded in the following format : 	400	0
8200	Option Type	Option Type 8-bit identifier of the type of option . 	231	0
8200	Opt Data Len	Opt Data Len 8-bit unsigned integer . Length of the Option Data field of this option , in octets . 	100	0
8200	Option Data	Option Data Variable-length field . Option-Type-specific data . 	400	0
8200	1	The three high-order bits described above are to be treated as part of the Option Type , not independent of the Option Type . That is , a particular option is identified by a full 8-bit Option Type , not just the low-order 5 bits of an Option Type . 	231	0
8200	Next Header	Next Header 8-bit selector . Identifies the type of header immediately following the Hop-by-Hop Options header . Uses the same values as the IPv4 Protocol field [ IANA-PN ]. 	231	0
8200	Hdr Ext Len	Hdr Ext Len 8-bit unsigned integer . Length of the Hop-by-Hop Options header in 8-octet units , not including the first 8 octets . 	100	0
8200	Options	Options Variable-length field , of length such that the complete Hop-by-Hop Options header is an integer multiple of 8 octets long . Contains one or more TLV-encoded options , as described in Section 4.2 . 	400	0
8200	Next Header	Next Header 8-bit selector . Identifies the type of header immediately following the Routing header . Uses the same values as the IPv4 Protocol field [ IANA-PN ]. 	231	0
8200	Hdr Ext Len	Hdr Ext Len 8-bit unsigned integer . Length of the Routing header in 8-octet units , not including the first 8 octets . 	100	0
8200	Routing Type	Routing Type 8-bit identifier of a particular Routing header variant . 	231	0
8200	Segments Left	Segments Left 8-bit unsigned integer . Number of route segments remaining , i.e ., number of explicitly listed intermediate nodes still to be visited before reaching the final destination . 	100	0
8200	type-specific data	type-specific data Variable-length field , of format determined by the Routing Type , and of length such that the complete Routing header is an integer multiple of 8 octets long . 	400	0
8200	Next Header	Next Header 8-bit selector . Identifies the initial header type of the Fragmentable Part of the original packet ( defined below ). Uses the same values as the IPv4 Protocol field [ IANA-PN ]. 	231	0
8200	Reserved	Reserved 8-bit reserved field . Initialized to zero for transmission; ignored on reception . 	500	0
8200	Fragment Offset	Fragment Offset 13-bit unsigned integer . The offset , in 8-octet units , of the data following this header , relative to the start of the Fragmentable Part of the original packet . 	110	0
8200	Res	Res 2-bit reserved field . Initialized to zero for transmission; ignored on reception . 	500	0
8200	Identification	Identification 32 bits . See description below . 	400	0
8200	Next Header	Next Header 8-bit selector . Identifies the type of header immediately following the Destination Options header . Uses the same values as the IPv4 Protocol field [ IANA-PN ]. 	231	0
8200	Hdr Ext Len	Hdr Ext Len 8-bit unsigned integer . Length of the Destination Options header in 8-octet units , not including the first 8 octets . 	100	0
8200	Options	Options Variable-length field , of length such that the complete Destination Options header is an integer multiple of 8 octets long . Contains one or more TLV-encoded options , as described in Section 4.2 . 	400	0
8200	Options	Defining new IPv6 extension headers is not recommended , unless there are no existing IPv6 extension headers that can be used by specifying a new option for that IPv6 extension header . A proposal to specify a new IPv6 extension header must include a detailed technical explanation of why an existing IPv6 extension header can not be used for the desired new function . See [ RFC6564 ] for additional background information . 	400	0
8200	Next Header	Next Header 8-bit selector . Identifies the type of header immediately following the extension header . Uses the same values as the IPv4 Protocol field [ IANA-PN ]. 	231	0
8200	Hdr Ext Len	Hdr Ext Len 8-bit unsigned integer . Length of the Destination Options header in 8-octet units , not including the first 8 octets . 	100	0
8203	Subcode	Subcode : the Error Subcode value MUST be one of the following values : 2 (" Administrative Shutdown ") or 4 (" Administrative Reset "). 	240	0
8203	Length	Length : this 8-bit field represents the length of the Shutdown Communication field in octets . The length value MUST range from 0 to 128 inclusive . When the length value is zero , no Shutdown Communication field follows . 	100	0
8214	C	C-VLAN : Customer VLAN identifier . 	231	0
8214	B	B If set to 1 in multihoming Single-Active scenarios , this flag indicates that the advertising PE is the backup PE . 	210	0
8214	C	C If set to 1 , a control word [ RFC4448 ] MUST be present when sending EVPN packets to this PE . It is recommended that the control word be included in the absence of an entropy label [ RFC6790 ]. 	210	0
8214	P	P Advertising PE is the primary PE . B Advertising PE is the backup PE . C Control word [ RFC4448 ] MUST be present . 	240	0
8227	A	o To the virtual interconnection node group ( including Nodes F and A ): R1cW_F&A , R1aW_F&A , R1cP_F&A , R1aP_F&A 	240	0
8227	A	o To the virtual interconnection node group ( including Nodes F and A ): R2cW_F&A , R2aW_F&A , R2cP_F&A , R2aP_F&A 	240	0
8229	Length	o Length ( 2 octets , unsigned integer ) - Length of the IKE packet , including the Length field and non-ESP marker . 	100	0
8229	Length	o Length ( 2 octets , unsigned integer ) - Length of the ESP packet , including the Length field . 	100	0
8231	Type	Type : 5 	240	0
8231	Length	Value : This contains an array of units of 32-bit flags with the most significant bit as 0 . Each bit represents one PCE capability . 	210	0
8231	U	U ( LSP-UPDATE-CAPABILITY - 1 bit ): if set to 1 by a PCC , the U flag indicates that the PCC allows modification of LSP parameters; if set to 1 by a PCE , the U flag indicates that the PCE is capable of 	210	0
8231	Flags	SRP-ID-number ( 32 bits ): The SRP-ID-number value in the scope of the current PCEP session uniquely identifies the operation that the PCE has requested the PCC to perform on a given LSP . The SRP-ID-number is incremented each time a new request is sent to the PCC , and it may wrap around . 	231	0
8231	Flags	D ( Delegate - 1 bit ): On a PCRpt message , the D flag set to 1 indicates that the PCC is delegating the LSP to the PCE . On a PCUpd message , the D flag set to 1 indicates that the PCE is confirming the LSP delegation . To keep an LSP delegated to the PCE , the PCC must set the D flag to 1 on each PCRpt message for the duration of the delegation -- the first PCRpt with the D flag set to 0 revokes the delegation . To keep the delegation , the PCE must set the D flag to 1 on each PCUpd message for the duration of the delegation -- the first PCUpd with the D flag set to 0 returns the delegation . 	210	0
8231	D	D ( Delegate - 1 bit ): On a PCRpt message , the D flag set to 1 indicates that the PCC is delegating the LSP to the PCE . On a PCUpd message , the D flag set to 1 indicates that the PCE is confirming the LSP delegation . To keep an LSP delegated to the PCE , the PCC must set the D flag to 1 on each PCRpt message for the duration of the delegation -- the first PCRpt with the D flag set to 0 revokes the delegation . To keep the delegation , the PCE must set the D flag to 1 on each PCUpd message for the duration of the delegation -- the first PCUpd with the D flag set to 0 returns the delegation . 	210	0
8231	S	S ( SYNC - 1 bit ): The S flag MUST be set to 1 on each PCRpt sent from a PCC during State Synchronization . The S flag MUST be set to 0 in other messages sent from the PCC . When sending a PCUpd message , the PCE MUST set the S flag to 0 . 	210	0
8231	R	R ( Remove - 1 bit ): On PCRpt messages , the R flag indicates that the LSP has been removed from the PCC and the PCE SHOULD remove all state from its database . Upon receiving an LSP State Report with the R flag set to 1 for an RSVP-signaled LSP , the PCE SHOULD remove all state for the path identified by the LSP-IDENTIFIERS 	210	0
8231	A	A ( Administrative - 1 bit ): On PCRpt messages , the A flag indicates the PCC's target operational status for this LSP . On PCUpd messages , the A flag indicates the LSP status that the PCE desires for this LSP . In both cases , a value of ' 1 ' means that the desired operational state is active , and a value of ' 0 ' means that the desired operational state is inactive . A PCC ignores the A flag on a PCUpd message unless the operator's policy allows the PCE to control the corresponding LSP's administrative state . 	210	0
8231	O	O ( Operational - 3 bits ): On PCRpt messages , the O field represents the operational status of the LSP . 	231	0
8231	IPv4 Tunnel Sender Address	IPv4 Tunnel Sender Address : contains the sender node's IPv4 address , as defined in [ RFC3209 ], Section 4.6.2.1 , for the LSP_TUNNEL_IPv4 Sender Template Object . 	230	0
8231	LSP ID	LSP ID : contains the 16-bit ' LSP ID ' identifier defined in [ RFC3209 ], Section 4.6.2.1 for the LSP_TUNNEL_IPv4 Sender Template Object . A value of 0 MUST be used if the LSP is not yet signaled . 	231	0
8231	Tunnel ID	Tunnel ID : contains the 16-bit ' Tunnel ID ' identifier defined in [ RFC3209 ], Section 4.6.1.1 for the LSP_TUNNEL_IPv4 Session Object . 	231	0
8231	Extended Tunnel ID	Extended Tunnel ID : contains the 32-bit ' Extended Tunnel ID ' identifier defined in [ RFC3209 ], Section 4.6.1.1 for the LSP_TUNNEL_IPv4 Session Object . 	231	0
8231	IPv4 Tunnel Endpoint Address	IPv4 Tunnel Endpoint Address : contains the egress node's IPv4 address , as defined in [ RFC3209 ], Section 4.6.1.1 , for the LSP_TUNNEL_IPv4 Sender Template Object . 	230	0
8231	LSP ID	LSP ID : contains the 16-bit ' LSP ID ' identifier defined in [ RFC3209 ], Section 4.6.2.2 for the LSP_TUNNEL_IPv6 Sender Template Object . A value of 0 MUST be used if the LSP is not yet signaled . 	231	0
8231	Tunnel ID	Tunnel ID : contains the 16-bit ' Tunnel ID ' identifier defined in [ RFC3209 ], Section 4.6.1.2 for the LSP_TUNNEL_IPv6 Session Object . 	231	0
8231	Extended Tunnel ID	Extended Tunnel ID : contains the 128-bit ' Extended Tunnel ID ' identifier defined in [ RFC3209 ], Section 4.6.1.2 for the LSP_TUNNEL_IPv6 Session Object . 	231	0
8231	Type	Length ( 16 bits ): indicates the total length of the TLV in octets and MUST be greater than 0 . The TLV MUST be zero-padded so that the TLV is 4-octet aligned . 	100	0
8231	Length	Length ( 16 bits ): indicates the total length of the TLV in octets and MUST be greater than 0 . The TLV MUST be zero-padded so that the TLV is 4-octet aligned . 	100	0
8231	Type	Length ( 16 bits ): indicates the total length of the TLV in octets . The TLV MUST be zero-padded so that the TLV is 4-octet aligned . 	100	0
8231	Length	Length ( 16 bits ): indicates the total length of the TLV in octets . The TLV MUST be zero-padded so that the TLV is 4-octet aligned . 	100	0
8233	Reserved	Reserved ( 24 bits ): This field MUST be set to zero on transmission and MUST be ignored on receipt . 	500	0
8233	Type	Type ( 8 bits ): Represents the bandwidth utilization type . Two values are currently defined . 	231	0
8233	Type	o Type 	240	0
8237	GAL	The G-ACh Label ( GAL ) and the next 4 octets ( including the PW OAM Message field as the Channel Type ) are explained in Section 2.1 of [ RFC5586 ]. 	301	0
8237	Session ID	A non-zero locally selected session number that is not preserved if the local PE restarts . 	302	0
8237	Ack Session ID	* Ack Session ID 	202	0
8237	Refresh Timer	A non-zero unsigned 16-bit integer value greater than or equal to 10 , expressed in milliseconds , that indicates the desired refresh interval . The default value of 30000 is RECOMMENDED . 	110	0
8237	Total Message Length	Total length in octets of the Checksum , Message Type , Flags , Message Sequence Number , and Control Message Body . A value of zero means that no control message is present and , therefore , that no Checksum or subsequent fields are present either . 	100	0
8237	Checksum	A 16-bit field containing the one's complement of the one's complement sum of the entire message ( including the G-ACh header ), with the Checksum field replaced by zero for the purpose of computing the checksum . An all-zero value means that no checksum was transmitted . Note that when the checksum is not computed , the header of the bundle message will not be covered by any checksum . 	301	0
8237	Message Sequence Number	An unsigned 16-bit integer that is started from 1 when the protocol enters the ACTIVE state . The sequence number wraps back to 1 when the maximum value is reached . The value 0 is reserved and MUST NOT be used . 	201	0
8237	Message Type	The type of control message that follows . Control message types are allocated in this document and by IANA . 	231	0
8237	U	Upon receipt of an unknown message or TLV , if U is clear ( 0 ), a notification message with code " Unknown TLV ( U-Bit=0 )" ( code 0x4 ) MUST be sent to the remote PE , and the keepalive session MUST be terminated by entering the STARTUP state; if U is set ( 1 ), the unknown message , or message containing an unknown TLV , MUST be acknowledged and silently ignored , and the following messages , or TLVs , if any , processed as if the unknown message or TLV did not exist . In this case , the PE MAY send back a single notification message per keepalive session with code " Unknown TLV ( U-Bit=1 )". This last step is OPTIONAL . 	303	0
8237	C	The C-Bit is used to signal the end of PW configuration transmission . If it is set , the sending PE has finished sending all of its current configuration information . 	121	0
8237	Flags	The remaining 6 bits of PW status refresh reduction Message Flags to be allocated by IANA . These unallocated bits MUST be set to 0 on transmission and ignored on reception . 	500	0
8237	Control Message Body	The Control Message Body is defined in Section 5 and is specific to the type of message . 	231	0
8237	MPLS-TP Tunnel ID	This TLV contains the MPLS-TP Tunnel ID (" MPLS-TP " stands for " MPLS Transport Profile "). When the configuration message is used for a particular keepalive session , the MPLS-TP Tunnel ID sub-TLV MUST be sent at least once . 	400	0
8237	PW Configuration Message Sub-TLVs	IANA has set up the " PW Status Refresh Reduction Configuration Message Sub-TLVs " registry . This registry contains 8-bit values . Type values 1 through 3 are defined in this document . Type values 4 through 64 and 128 through 254 are to be assigned by IANA using the " Expert Review " policy defined in [ RFC8126 ]. Type values 65 through 127 , 0 , and 255 are to be allocated using the " IETF Review " policy defined in [ RFC8126 ]. 	240	0
8250	Option Type	Option Type 	220	0
8250	Option Length	8-bit unsigned integer . Length of the option , in octets , excluding the Option Type and Option Length fields . This field MUST be set to 10 . 	100	0
8250	Delta Time Last Received	16-bit unsigned integer . The value is set according to the scale in SCALEDTLR . 	110	0
8250	Delta Time Last Sent	16-bit unsigned integer . The value is set according to the scale in SCALEDTLS . 	110	0
8258	Type	Type ( 2 octets ): This field indicates the type and structure of the information contained in the Value field . 	231	0
8258	Length	Length ( 2 octets ): This field MUST be set to the size , in octets ( bytes ), of the Value field . The value of the field MUST be zero or divisible by 4 . Note that this implies that the Value field can be omitted or contain padding . 	100	0
8260	Res	Res : 4 bits These bits are reserved . They MUST be set to 0 by the sender and MUST be ignored by the receiver . 	500	0
8260	TSN	TSN : 32 bits ( unsigned integer ) This value represents the TSN for this I-DATA chunk . Same as the TSN for DATA chunks , as specified in [ RFC4960 ]. 	231	0
8260	Stream Identifier	Stream Identifier : 16 bits ( unsigned integer ) Identifies the stream to which the user data belongs . Same as the Stream Identifier for DATA chunks , as specified in [ RFC4960 ]. 	230	0
8260	Reserved	Reserved : 16 bits ( unsigned integer ) This field is reserved . It MUST be set to 0 by the sender and MUST be ignored by the receiver . 	500	0
8260	Message Identifier	Message Identifier ( MID ): 32 bits ( unsigned integer ) The MID is the same for all fragments of a user message; it is used to determine which fragments ( enumerated by the FSN ) belong to the same user message . For ordered user messages , the MID is also used by the SCTP receiver to deliver the user messages in the correct order to the upper layer ( similar to the SSN of the DATA chunk defined in [ RFC4960 ]). The sender uses two counters for each outgoing stream : one for ordered messages and one for unordered messages . All of these counters are independent and initially 0 . They are incremented by 1 for each user message . Please note that the serial number arithmetic defined in [ RFC1982 ] using SERIAL_BITS = 32 applies . Therefore , the sender MUST NOT have more than 2**31 - 1 ordered messages for each outgoing stream in flight and MUST NOT have more than 2**31 - 1 unordered messages for each outgoing stream in flight . A message is considered in flight if at least one of its I-DATA chunks is not acknowledged in a way that cannot be reneged ( i.e ., not acknowledged by the cumulative TSN Ack ). Please note that the MID is in " network byte order ", a.k.a . Big Endian . 	230	0
8260	Payload Protocol Identifier	Payload Protocol Identifier ( PPID ) / Fragment Sequence Number ( FSN ): 32 bits ( unsigned integer ) If the B bit is set , this field contains the PPID of the user message . Note that in this case , this field is not touched by an SCTP implementation; therefore , its byte order is not necessarily in network byte order . The upper layer is responsible for any byte order conversions to this field , similar to the PPID of DATA chunks . In this case , the FSN is implicitly considered to be 0 . If the B bit is not set , this field contains the FSN . The FSN is used to enumerate all fragments of a single user message , starting from 0 and incremented by 1 . The last fragment of a message MUST have the E bit set . Note that the FSN MAY wrap completely multiple times , thus allowing arbitrarily large user messages . For the FSN , the serial number arithmetic defined in [ RFC1982 ] applies with SERIAL_BITS = 32 . Therefore , a sender MUST NOT have more than 2**31 - 1 fragments of a single user message in flight . A fragment is considered in flight if it is not acknowledged in a way that cannot be reneged . Please note that the FSN is in " network byte order ", a.k.a . Big Endian . 	400	0
8260	New Cumulative TSN	New Cumulative TSN : 32 bits ( unsigned integer ) This indicates the New Cumulative TSN to the data receiver . Same as the New Cumulative TSN for FORWARD TSN chunks , as specified in [ RFC3758 ]. 	231	0
8260	Stream Identifier	Stream Identifier ( SID ): 16 bits ( unsigned integer ) This field holds the stream number this entry refers to . 	231	0
8260	Reserved	Reserved : 15 bits This field is reserved . It MUST be set to 0 by the sender and MUST be ignored by the receiver . 	500	0
8260	Message Identifier	Message Identifier ( MID ): 32 bits ( unsigned integer ) This field holds the largest Message Identifier for ordered or unordered messages indicated by the U bit that was skipped for the stream specified by the Stream Identifier . For ordered messages , this is similar to the FORWARD-TSN chunk , just replacing the 16-bit SSN by the 32-bit MID . 	230	0
8271	Type	Type 	240	0
8271	Length	The Length contains the total length of the subobject in bytes , including the Type and Length fields . The length is 8 bytes . 	100	0
8271	Bypass Tunnel ID	Bypass Tunnel ID 	231	0
8271	Type	Type 	240	0
8271	Length	The Length contains the total length of the subobject in bytes , including the Type and Length fields . The length is 20 bytes . 	100	0
8271	Bypass Tunnel ID	Bypass Tunnel ID 	231	0
8272	E1	The bits marked " E1 " and " E2 " control the presence of the field " Ext . SetID " and the presence of the field " Ext . Sequence Number ", respectively . 	201	0
8272	E	The bits marked " E1 " and " E2 " control the presence of the field " Ext . SetID " and the presence of the field " Ext . Sequence Number ", respectively . 	210	0
8272	SetID Lookup	This field acts as a lookup field for the SetIDs and provides shortcuts to often used SetIDs . Four values are defined : 	400	0
8272	Length	Length 	100	0
8272	Sequence Number	Due to the low sampling rate in typical WSNs , the " Sequence Number " field is only one byte long . However , some applications may have a large quantity of records per packet . In this case , the sequence field can be extended to 16 bit by setting the E2-bit to 1 . 	200	0
8272	Length	The " Length " Field contains the total length of the TinyIPFIX Set , including the TinyIPFIX Set Header . 	100	0
8272	Field Count	Field Count 	240	0
8272	E	Enterprise bit . This is the first bit of the Field Specifier . If this bit is zero , the Information Element Identifier identifies an IETF-specified Information Element , and the four-octet Enterprise Number field MUST NOT be present . If this bit is one , the Information Element Identifier identifies an enterprise-specific Information Element , and the Enterprise Number field MUST be present . 	231	0
8272	Field Length	The length of the corresponding encoded Information Element , in octets . Refer to [ RFC7012 ]. The value 65535 is illegal in TinyIPFIX , as variable-length Information Elements are not supported . 	100	0
8272	Enterprise Number	IANA Private Enterprise Number of the authority defining the Information Element identifier in this Template Record . 	231	0
8272	Length	The IPFIX Message Length can only be calculated after the complete TinyIPFIX Message has been translated . The new length can be calculated by adding the length of the IPFIX Message Header , which is 16 octets , and the length of all Sets that are contained in the IPFIX Message . 	100	0
8272	Export Time	The " Export Time " MUST be generated by the Mediator , and contains the time in seconds since 00:00 UTC Jan 1 , 1970 , at which the IPFIX Message leaves the Mediator . 	121	0
8272	Sequence Number	If the TinyIPFIX Sequence Number has a length of 4 octets , the original value MUST be used for the IPFIX Message . If the TinyIPFIX Sequence Number has a size of one or two octets , the TinyIPFIX Mediator MUST expand the TinyIPFIX Sequence Number into a four octet field . If the TinyIPFIX Sequence Number was omitted , the Mediator needs to calculate the Sequence Number as per [ RFC7011 ]. 	400	0
8272	Template ID	The field needs to be expanded from one octet to two octets . The Template ID needs to be increased by a value of 128 . 	400	0
8272	Field Count	Field Count 	400	0
8278	Type	Type 	240	0
8278	Type	Type : MAG Multipath Binding ( 63 ) 	400	0
8278	Length	8-bit unsigned integer indicating the length of the option in octets , excluding the Type and Length fields . 	100	0
8278	If-ATT	This 8-bit field identifies the Access-Technology type of the interface through which the mobile node is connected . The permitted values for this are from the Access Technology Type registry < https://www.iana.org/assignments/mobility-parameters /> defined in [ RFC5213 ]. 	231	0
8278	If-Label	Interface Label ( If-Label ) 	302	0
8278	B	If set to a value of ( 1 ), this flag notifies the LMA to consider this as a request to update the binding lifetime of all the mobile node's bindings upon accepting this specific request . The ( B ) flag MUST NOT be set to a value of ( 1 ) if the value of the Registration Overwrite ( O ) flag is set to a value of ( 1 ). 	210	0
8278	O	This flag , if set to a value of ( 1 ), notifies the LMA that upon accepting this request , it should replace all of the mobile node's existing bindings with this binding . This flag MUST NOT be set to a value of ( 1 ) if the value of the Bulk Re-registration Flag ( B ) is set to a value of ( 1 ). This flag MUST be set to a value of ( 0 ) in De-Registration requests . 	210	0
8278	Reserved	This field is unused in this specification . The value MUST be set to zero ( 0 ) by the sender and MUST be ignored by the receiver . 	500	0
8278	Type	Type 	240	0
8278	Type	Type : MAG Identifier ( 64 ) 	231	0
8278	Length	8-bit unsigned integer indicating the length of the option in octets , excluding the Type and Length fields . 	100	0
8278	Subtype	One-byte unsigned integer used for identifying the type of the Identifier field . Accepted values for this field are the registered type values from the " Mobile Node Identifier Option Subtypes " registry < https://www.iana.org/assignments/mobility - parameters />. 	231	0
8278	Reserved	This field is unused in this specification . The value MUST be set to zero ( 0 ) by the sender and MUST be ignored by the receiver . 	500	0
8281	I	I ( LSP-INSTANTIATION-CAPABILITY -- 1 bit ): If set to 1 by a PCC , the I flag indicates that the PCC allows instantiation of an LSP by a PCE . If set to 1 by a PCE , the I flag indicates that the PCE supports instantiating LSPs . The LSP-INSTANTIATION-CAPABILITY flag must be set by both the PCC and PCE in order to enable PCE-initiated LSP instantiation . 	210	0
8281	R	R ( LSP-REMOVE -- 1 bit ): If set to 0 , it indicates a request to create an LSP . If set to 1 , it indicates a request to remove an LSP . 	210	0
8282	Switching Type	Switching Type ( 8 bits ): see [ RFC3471 ] for a description of parameters . 	231	0
8282	Encoding	A PCC may want to specify a Switching Capability , but not an Encoding . In this case , the Encoding MUST be set to zero . 	302	0
8282	Encoding	Optional TLVs : Optional TLVs MAY be included within the object to specify more specific server-layer path information ( e.g ., traffic parameters ). Such TLVs will be defined by other documents . 	231	0
8282	Optional TLVs	Optional TLVs : Optional TLVs MAY be included within the object to specify more specific server-layer path information ( e.g ., traffic parameters ). Such TLVs will be defined by other documents . 	400	0
8287	IPv4 Prefix	This field carries the IPv4 Prefix to which the Segment ID is assigned . In case of an Anycast Segment ID , this field will carry the IPv4 Anycast address . If the prefix is shorter than 32 bits , trailing bits SHOULD be set to zero . 	230	0
8287	Prefix Length	The Prefix Length field is one octet . It gives the length of the prefix in bits ( values can be 1-32 ). 	100	0
8287	Protocol	This field is set to 1 , if the responder MUST perform FEC validation using OSPF as the IGP protocol . Set to 2 , if the responder MUST perform Egress FEC validation using the Intermediate System to Intermediate System ( IS-IS ) as the IGP protocol . Set to 0 , if the responder can use any IGP protocol for Egress FEC validation . 	240	0
8287	Reserved	The Reserved field MUST be set to 0 when sent and MUST be ignored on receipt . 	500	0
8287	IPv6 Prefix	This field carries the IPv6 prefix to which the Segment ID is assigned . In case of an Anycast Segment ID , this field will carry the IPv4 Anycast address . If the prefix is shorter than 128 bits , trailing bits SHOULD be set to zero . 	230	0
8287	Prefix Length	The Prefix Length field is one octet , it gives the length of the prefix in bits ( values can be 1-128 ). 	100	0
8287	Protocol	Set to 1 if the responder MUST perform FEC validation using OSPF as the IGP protocol . Set to 2 if the responder MUST perform Egress FEC validation using IS-IS as the IGP protocol . Set to 0 if the responder can use any IGP protocol for Egress FEC validation . 	240	0
8287	Reserved	Reserved 	500	0
8287	Adj . Type	Set to 1 when the Adjacency Segment is a Parallel Adjacency as defined in [ SR ]. Set to 4 when the Adjacency Segment is IPv4 based and is not a Parallel Adjacency . Set to 6 when the Adjacency Segment is IPv6 based and is not a Parallel Adjacency . Set to 0 when the Adjacency Segment is over an unnumbered interface . 	240	0
8287	Protocol	Set to 1 if the responder MUST perform FEC validation using OSPF as the IGP protocol . Set to 2 if the responder MUST perform Egress FEC validation using IS-IS as the IGP protocol . Set to 0 if the responder can use any IGP protocol for Egress FEC validation . 	240	0
8287	Reserved	Reserved 	500	0
8300	Base Header	Base Header : Provides information about the service header and the payload protocol . 	230	0
8300	Service Path Header	Service Path Header : Provides path identification and location within a service path . 	230	0
8300	TTL	TTL : Indicates the maximum SFF hops for an SFP . This field is used for service-plane loop detection . The initial TTL value SHOULD be configurable via the control plane; the configured initial value can be specific to one or more SFPs . If no initial value is explicitly provided , the default initial TTL value of 63 MUST be used . Each SFF involved in forwarding an NSH packet MUST decrement the TTL value by 1 prior to NSH forwarding lookup . Decrementing by 1 from an incoming value of 0 shall result in a TTL value of 63 . The packet MUST NOT be forwarded if TTL is , after decrement , 0 . 	120	0
8300	Length	Length : The total length , in 4-byte words , of the NSH including the Base Header , the Service Path Header , the Fixed-Length Context Header , or Variable-Length Context Header(s ). The length MUST be 0x6 for MD Type 0x1 , and it MUST be 0x2 or greater for MD Type 0x2 . The length of the Network Service Header MUST be an integer multiple of 4 bytes; thus , variable-length metadata is always padded out to a multiple of 4 bytes . 	100	0
8300	Type	Metadata ( MD ) Type : Indicates the format of the NSH beyond the mandatory NSH Base Header and the Service Path Header . MD Type defines the format of the metadata being carried . Please see the IANA Considerations in Section 9.1.3 . 	231	0
8300	Next Protocol	Next Protocol : Indicates the protocol type of the encapsulated data . The NSH does not alter the inner payload , and the semantics on the inner protocol remain unchanged due to NSH SFC . Please see the IANA Considerations in Section 9.1.6 . 	231	0
8300	Service Path Header	2.3 . Service Path Header 	240	0
8300	Service Path Identifier	Service Path Identifier ( SPI ): 24 bits Service Index ( SI ): 8 bits 	231	0
8300	Service Path Identifier	Service Path Identifier ( SPI ): Uniquely identifies a Service Function Path ( SFP ). Participating nodes MUST use this identifier for SFP selection . The initial Classifier MUST set the appropriate SPI for a given classification result . 	231	0
8300	Service Index	Service Index ( SI ): Provides location within the SFP . The initial Classifier for a given SFP SHOULD set the SI to 255; however , the control plane MAY configure the initial value of the SI as appropriate ( i.e ., taking into account the length of the SFP ). The Service Index MUST be decremented by a value of 1 by Service Functions or by SFC Proxy nodes after performing required services; the new decremented SI value MUST be used in the egress packet's NSH . The initial Classifier MUST send the packet to the first SFF in the identified SFP for forwarding along an SFP . If re-classification occurs , and that re-classification results in a new SPI , the ( re-)Classifier is , in effect , the initial Classifier for the resultant SPI . 	231	0
8300	Metadata Class	Metadata Class ( MD Class ): Defines the scope of the Type field to provide a hierarchical namespace . Section 9.1.4 defines how the MD Class values can be allocated to standards bodies , vendors , and others . 	231	0
8300	Type	Type : Indicates the explicit type of metadata being carried . The definition of the Type is the responsibility of the MD Class owner . 	231	0
8300	Length	Length : Indicates the length of the variable-length metadata , in bytes . In case the metadata length is not an integer number of 4-byte words , the sender MUST add pad bytes immediately following the last metadata byte to extend the metadata to an integer number of 4-byte words . The receiver MUST round the Length field up to the nearest 4-byte-word boundary , to locate and process the next field in the packet . The receiver MUST access only those bytes in the metadata indicated by the Length field ( i.e ., actual number of bytes ) and MUST ignore the remaining bytes up to the nearest 4-byte-word boundary . The length may be 0 or greater . 	100	0
8300	Service Path Identifier	Metadata information may influence the service path selection since the Service Path Identifier values can represent the result of classification . A given SPI can be defined based on classification results ( including metadata classification ). The imposition of the SPI and SI results in the packet being placed on the newly specified SFP at the position indicated by the imposed SPI and SI . 	231	0
8320	U	U-bit : The unknown TLV bit MUST be 1 . A router that does not recognize the MRT Capability TLV will silently ignore the TLV and process the rest of the message as if the unknown TLV did not exist . 	210	0
8320	F	F-bit : The forward unknown TLV bit MUST be 0 as required by Section 3 of [ RFC5561 ]. 	500	0
8320	S	S-bit : The State bit MUST be 1 if used in the LDP Initialization message . MAY be set to 0 or 1 in the dynamic Capability message to advertise or withdraw the capability , respectively , as described in [ RFC5561 ]. 	210	0
8323	Len	Length ( Len ): 4-bit unsigned integer . A value between 0 and 12 inclusive indicates the length of the message in bytes , starting with the first bit of the Options field . Three values are reserved for special constructs : 	100	0
8323	Len	Len = 0 ------> 0x01 TKL = 1 ___/ Code = 2.03 --> 0x43 Token = 0x7f 	240	0
8323	Len	Len = 0 -------> 0x01 TKL = 1 ___/ Code = 7.02 Ping --> 0xe2 Token = 0x42 	240	0
8323	Len	Len = 0 -------> 0x01 TKL = 1 ___/ Code = 7.03 Pong --> 0xe3 Token = 0x42 	240	0
8330	Type	Type : 0x000A , 16 bits 	231	0
8330	Length	Length : 2 octets ( 16 bits ) 	100	0
8330	Availability level	This field is a binary32-format floating-point number as defined by [ IEEE754-2008 ]. The bytes are transmitted in network order; that is , the byte containing the sign bit is transmitted first . This field describes the decimal value of the availability guarantee of the Switching Capability in the Interface Switching Capability Descriptor object [ RFC4202 ]. The value MUST be less than 1 . The Availability level field is usually expressed as the value 0.99/0.999/0.9999/0.99999 . 	231	0
8331	M	Marker bit ( M ): 1 bit The marker bit set to " 1 " indicates the last ANC data RTP packet for a frame ( for progressive scan video ) or the last ANC data RTP packet for a field ( for interlaced video ). 	210	0
8331	Extended Sequence Number	Extended Sequence Number : 16 bits The high-order bits of the extended 32-bit sequence number , in network byte order . This is the same as the Extended Sequence Number field in RFC 4175 [ RFC4175 ]. 	200	0
8331	Length	Length : 16 bits Number of octets of the ANC data RTP payload , beginning with the " C " bit of the first ANC packet data header , as an unsigned integer in network byte order . Note that all word_align fields contribute to the calculation of the Length field . 	100	0
8331	ANC_Count	ANC_Count : 8 bits This field is the count of the total number of ANC data packets carried in the RTP payload , as an unsigned integer . A single ANC data RTP packet payload cannot carry more than 255 ANC data packets . 	100	0
8331	F	F : 2 bits These two bits relate to signaling the field specified by the RTP timestamp in an interlaced SDI raster . A value of 0b00 indicates that either the video format is progressive or that no field is specified . A value of 0b10 indicates that the timestamp refers to the first field of an interlaced video signal . A value of 0b11 indicates that the timestamp refers to the second field of an interlaced video signal . The value 0b01 is not valid . Receivers SHOULD ignore an ANC data packet with an F field value of 0b01 and SHOULD process any other ANC data packets with valid F field values that are present in the RTP payload . 	210	0
8331	reserved	reserved : 22 bits The 22 reserved bits of value " 0 " follow the F field to ensure that the first ANC data packet header field in the payload begins 32-bit word-aligned with the start of the RTP header to ease implementation . 	302	0
8331	C	C : 1 bit This flag , when set to " 1 ", indicates that the ANC data corresponds to the color-difference data channel ( C ). When set to " 0 ", this flag indicates either that the ANC data corresponds to the luma ( Y ) data channel , that the ANC data source is from an SD signal , or that the ANC data source has 	210	0
8331	Line_Number	Line_Number : 11 bits This field contains the digital interface line number that corresponds to the location of the ANC data packet as an unsigned integer in network byte order . 	200	0
8331	Horizontal_Offset	Horizontal_Offset : 12 bits This field defines the location of the ANC data packet in an SDI raster relative to the start of active video ( SAV ; a digital synchronizing signal present in SDI interfaces ) as an unsigned integer in network byte order . A value of 0 means that the ADF of the ANC data packet begins immediately 	110	0
8331	S	S ( Data Stream Flag ): 1 bit This field indicates whether the data stream number of a multi-stream data mapping used to transport the ANC data packet is specified . If the S bit is ' 0 ', then the StreamNum field provides no guidance regarding the source data stream number of the ANC data packet . If the S bit is ' 1 ', then the StreamNum field carries information regarding the source data stream number of the ANC data packet . 	210	0
8331	StreamNum	StreamNum : 7 bits If the S bit ( Data Stream Flag ) is ' 1 ', then the StreamNum field MUST carry identification of the source data stream number of the ANC data packet . If the data stream is numbered , then the StreamNum field SHALL carry the number of the source data stream minus one . If the source multi-stream interface does not have numbered data streams , the following numbers SHALL be used in this field : ' 0 ' for link A data stream and ' 1 ' for link B data stream . For stereoscopic multi-stream interface formats that do not have numbered streams , the following numbers SHALL be used in this field : ' 0 ' for left eye stream and ' 1 ' for right eye stream . 	210	0
8331	DID	DID : 10 bits Data identification word 	400	0
8331	SDID	SDID : 10 bits Secondary data identification word . Used only for a " Type 2 " ANC data packet . Note that in a " Type 1 " ANC data packet , this word will actually carry the data block number ( DBN ). 	231	0
8331	Checksum_Word	Checksum_Word : 10 bits The Checksum_Word can be used to determine the validity of the ANC data packet from the DID word through the UDW . It consists of 10 bits , where bits b8 ( MSB ) through b0 ( LSB ) define the checksum value and bit b9 is the inverse ( logical NOT ) of bit b8 . The checksum value is equal to the nine least significant bits of the sum of the nine least significant bits of the DID word , the SDID word , the Data_Count word , and all User_Data_Words in the ANC data packet . The checksum is initialized to zero before calculation , and any " end carry " resulting from the checksum calculation is ignored . 	301	0
8331	word_align	word_align : bits as needed to complete 32-bit word Word_align contains enough " 0 " bits as needed to complete the last 32-bit word of an ANC data packet in the RTP payload . If an ANC data packet in the RTP payload ends and is aligned with a word boundary , there is no need to add any word alignment bits . Word align SHALL be used even for the last ANC data packet in an RTP packet . Word align SHALL NOT be used if there are zero ANC data packets being carried in the RTP packet . 	302	0
8335	Type	o Type : Extended Echo Request . The value for ICMPv4 is 42 . The value for ICMPv6 is 160 . 	240	0
8335	Code	o Code : MUST be set to 0 and MUST be ignored upon receipt . 	500	0
8335	Checksum	o Identifier : An Identifier to aid in matching Extended Echo Replies to Extended Echo Requests . May be 0 . 	500	0
8335	Identifier	o Identifier : An Identifier to aid in matching Extended Echo Replies to Extended Echo Requests . May be 0 . 	302	0
8335	Sequence Number	o Sequence Number : A Sequence Number to aid in matching Extended Echo Replies to Extended Echo Requests . May be 0 . 	200	0
8335	Reserved	o L ( local ): The L-bit is set if the probed interface resides on the proxy node . The L-bit is clear if the probed interface is directly connected to the proxy node . 	210	0
8335	L	o L ( local ): The L-bit is set if the probed interface resides on the proxy node . The L-bit is clear if the probed interface is directly connected to the proxy node . 	210	0
8335	AFI	o Address Family Identifier ( AFI ): This 16-bit field identifies the type of address represented by the Address field . All values found in the IANA registry of Address Family Numbers ( available from < https://www.iana.org/assignments/address-family-numbers >) are valid in this field . 	230	0
8335	Address Length	o Address Length : Number of significant bytes contained by the Address field . ( The Address field contains significant bytes and padding bytes .) 	100	0
8335	Reserved	o Address : This variable-length field represents an address associated with the probed interface . If the address field would not otherwise terminate on a 32-bit boundary , it MUST be padded with zeroes . 	230	0
8335	Type	o Type : Extended Echo Reply . The value for ICMPv4 is 43 . The value for ICMPv6 is 161 . 	240	0
8335	Code	o Code : Values are ( 0 ) No Error , ( 1 ) Malformed Query , ( 2 ) No Such Interface , ( 3 ) No Such Table Entry , and ( 4 ) Multiple Interfaces Satisfy Query . 	240	0
8335	Checksum	o Identifier : Copied from the Identifier field of the invoking Extended Echo Request packet . 	231	0
8335	Identifier	o Identifier : Copied from the Identifier field of the invoking Extended Echo Request packet . 	231	0
8335	Sequence Number	o Sequence Number : Copied from the Sequence Number field of the invoking Extended Echo Request packet . 	200	0
8335	State	o State : If Code is not equal to 0 , this field MUST be set to 0 and ignored upon receipt . Likewise , if the probed interface resides upon the proxy node , this field MUST be set to 0 and ignored upon receipt . Otherwise , this field reflects the state of the ARP table or Neighbor Cache entry associated with the probed interface . Values are ( 0 ) Reserved , ( 1 ) Incomplete , ( 2 ) Reachable , ( 3 ) Stale , ( 4 ) Delay , ( 5 ) Probe , and ( 6 ) Failed . 	500	0
8335	Res	o A ( Active ): The A-bit is set if the Code is equal to 0 , the probed interface resides on the proxy node , and the probed interface is active . Otherwise , the A-bit is clear . 	210	0
8335	A	o A ( Active ): The A-bit is set if the Code is equal to 0 , the probed interface resides on the proxy node , and the probed interface is active . Otherwise , the A-bit is clear . 	210	0
8338	R	R-PE : Root PE ( ingress PE , PE initiating P2MP PW setup ) 	400	0
8338	S	S-PE : Switching Provider Edge ( of MS-PW ) 	231	0
8338	Length	Length : 4 	100	0
8350	AC	Access Controller ( AC ): The network entity that provides WTP access to the network infrastructure in the data plane , control plane , management plane , or a combination therein . 	230	0
8350	WTP	Wireless Termination Point ( WTP ): The physical or network entity that contains a Radio Frequency ( RF ) antenna and wireless Physical layer ( PHY ) to transmit and receive station traffic for wireless access networks . 	230	0
8350	Type	o Length : The length in bytes; two bytes for each Alternative Tunnel-Type that is included 	100	0
8350	Length	o Length : The length in bytes; two bytes for each Alternative Tunnel-Type that is included 	100	0
8350	Type	o Type : 55 for Alternate Tunnel Encapsulations Type 	231	0
8350	Length	o Tunnel-Type : The Tunnel-Type is specified by a 2-byte value . This specification defines the values from 0 to 6 as given below . The remaining values are reserved for future use . 	302	0
8350	Info Element	o Info Element : This field contains tunnel-specific configuration parameters to enable the WTP to set up the alternate tunnel . This specification provides details for this element for CAPWAP , PMIPv6 , and GRE . This specification reserves the tunnel type values for the key tunnel types and defines the most common message elements . It is anticipated that message elements for the other protocols ( like L2TPv3 ) will be defined in other specifications in the future . 	400	0
8350	Type	o Type : 1062 for IEEE 802.11 WTP Alternate Tunnel Failure Indication 	231	0
8350	Length	o WLAN ID : An 8-bit value specifying the WLAN Identifier . The value MUST be between 1 and 16 . 	230	0
8350	WLAN ID	o WLAN ID : An 8-bit value specifying the WLAN Identifier . The value MUST be between 1 and 16 . 	230	0
8350	Status	o Status : An 8-bit boolean indicating whether the radio failure is being reported or cleared . A value of 0 is used to clear the event , while a value of 1 is used to report the event . 	210	0
8350	Reserved	o Reserved : MUST be set to a value of 0 and MUST be ignored by the receiver . 	500	0
8350	Type	Length : This refers to the total length in octets of the element , excluding the Type and Length fields . 	100	0
8350	Length	Length : This refers to the total length in octets of the element , excluding the Type and Length fields . 	100	0
8350	Type	Length : This refers to the total length in octets of the element excluding the Type and Length fields . 	100	0
8350	Length	Length : This refers to the total length in octets of the element excluding the Type and Length fields . 	100	0
8350	Type	Length : This refers to the total length in octets of the element excluding the Type and Length fields . 	100	0
8350	Length	Length : This refers to the total length in octets of the element excluding the Type and Length fields . 	100	0
8350	Reserved	Reserved : A set of reserved bits for future use . All implementations complying with this protocol MUST set to 0 any bits that are reserved in the version of the protocol supported by that implementation . Receivers MUST ignore all bits not defined for the version of the protocol they support . 	500	0
8350	D	D : DTLS-Enabled Data Channel Supported ( see [ RFC5415 ]). 	400	0
8350	C	C : Clear Text Data Channel Supported ( see [ RFC5415 ]). 	400	0
8350	R	AR Information : This means Access Router Information Element . In this context , each address in AR Information MUST be one of previously specified AR addresses . 	230	0
8350	Type	Length : This refers to the total length in octets of the element excluding the Type and Length fields . 	100	0
8350	Length	Length : This refers to the total length in octets of the element excluding the Type and Length fields . 	100	0
8350	Reserved	P : When set , the WTP is to employ the IEEE 802.1p QoS mechanism ( see [ RFC5416 ]). 	302	0
8350	P	P : When set , the WTP is to employ the IEEE 802.1p QoS mechanism ( see [ RFC5416 ]). 	302	0
8350	Q	Q : When the ' P ' bit is set , the ' Q ' bit is used by the AC to communicate to the WTP how IEEE 802.1p QoS is to be enforced ( see [ RFC5416 ]). 	210	0
8350	D	D : When set , the WTP is to employ the DSCP QoS mechanism ( see [ RFC5416 ]). 	302	0
8350	O	O : When the ' D ' bit is set , the ' O ' bit is used by the AC to communicate to the WTP how Differentiated Services Code Point ( DSCP ) QoS is to be enforced on the outer ( tunneled ) header ( see [ RFC5416 ]). 	210	0
8350	I	I : When the ' D ' bit is set , the ' I ' bit is used by the AC to communicate to the WTP how DSCP QoS is to be enforced on the station's packet ( inner ) header ( see [ RFC5416 ]). 	210	0
8350	Type	Type : 4 	240	0
8350	Length	Transport : The transport to use for the CAPWAP Data Channel . The following enumerated values are supported : 	400	0
8350	Transport	Transport : The transport to use for the CAPWAP Data Channel . The following enumerated values are supported : 	400	0
8350	Type	Length : This refers to the total length in octets of the element excluding the Type and Length fields . 	100	0
8350	Length	Length : This refers to the total length in octets of the element excluding the Type and Length fields . 	100	0
8350	GRE Key	GRE Key : The Key field contains a 4-octet number that is inserted by the WTP according to [ RFC2890 ]. 	231	0
8350	Type	Length : This refers to the total length in octets of the element excluding the Type and Length fields . 	100	0
8350	Length	Length : This refers to the total length in octets of the element excluding the Type and Length fields . 	100	0
8350	Minimum IPv6 MTU	Minimum IPv6 MTU : The field contains a 2-octet number indicating the minimum IPv6 MTU in the tunnel . 	100	0
8357	Downstream Source Port	Downstream Source Port : This is the UDP port that the downstream device uses when forwarding Relay-forward messages to this relay agent device . This UDP port is to be used by this relay agent device when forwarding the Relay-reply messages to that downstream device . 	400	0
8357	SubOpt Code	SubOpt Code : SUBOPT_RELAY_PORT . 8-bit value , 19 . 	240	0
8357	Len	Len : 8-bit value to be set to 0 . 	500	0
8357	Downstream Source Port	Downstream Source Port : 16-bit value . To be set by the IPv6 relay either to the downstream relay agent's UDP source port used for the UDP packet , or to zero if only the local relay agent uses the non-DHCP UDP port ( not 547 ). 	302	0
8363	C.S .	o Channel Spacing ( C.S .): as defined in [ RFC7699 ] for flexi-grid , is set to 5 to denote 6.25 GHz . 	302	0
8363	Length	Length ( 16 bits ): The length of the value field of this sub-TLV in octets . 	100	0
8363	Priority	Priority ( 8 bits ): A bitmap used to indicate which priorities are being advertised . The bitmap is in ascending order , with the leftmost bit representing priority level 0 ( i.e ., the highest ) and the rightmost bit representing priority level 7 ( i.e ., the lowest ). A bit is set ( 1 ) corresponding to each priority represented in the sub-TLV and clear ( 0 ) for each priority not represented in the sub - TLV . At least one priority level MUST be advertised . If only one priority level is advertised , it MUST be at priority level 0 . 	301	0
8363	Reserved	Reserved : The Reserved field MUST be set to zero on transmission and MUST be ignored on receipt . 	500	0
8363	Max Slot Width at Priority k	Max Slot Width at Priority k ( 16 bits ): This field indicates maximal frequency slot width supported at a particular priority level , up to 8 . This field is set to max frequency slot width supported in the unit of 2*C.S ., for a particular priority level . One field MUST be present for each bit set in the Priority field , and each present field is ordered to match the Priority field . Fields MUST be present for priority levels that are indicated in the Priority field . 	400	0
8363	Unreserved Padding	Unreserved Padding ( 16 bits ): The Padding field is used to ensure the 32-bit alignment of Max Slot Width at Priority k . When k is an odd number , the Unreserved Padding field MUST be included . When k is an even number , the Unreserved Padding field MUST be omitted . This field MUST be set to 0 and MUST be ignored on receipt . 	301	0
8363	C.S .	Starting n ( 16 bits ): As defined in [ RFC7699 ]. This value denotes the starting point of the nominal central frequency of the frequency availability bitmap sub-TLV . 	231	0
8363	Starting n	Starting n ( 16 bits ): As defined in [ RFC7699 ]. This value denotes the starting point of the nominal central frequency of the frequency availability bitmap sub-TLV . 	231	0
8363	No . of Effective Bits	No . of Effective Bits ( 12 bits ): Indicates the number of effective bits in the Bitmap field . 	231	0
8363	MatrixID	RstType ( Restriction Type , 8 bits ): Takes the value of 5 to indicate the restrictions on a port to support flexi-grid . 	110	0
8363	Switching Cap	Switching Cap ( Switching Capability , 8 bits ): As defined in [ RFC7579 ], MUST be consistent with the one specified in ISCD as described in Section 4.1 . 	400	0
8363	Encoding	Encoding ( 8 bits ): As defined in [ RFC7579 ], MUST be consistent with the one specified in ISCD as described in Section 4.1 . 	400	0
8363	C.S .	C.S . ( 4 bits ): As defined in [ RFC7699 ]. For flexi-grid , it is 5 to denote 6.25 GHz . 	302	0
8363	C.F.G	C.F.G ( Central Frequency Granularity , 8 bits ): A positive integer . Its value indicates the multiple of C.S ., in terms of central frequency granularity . 	231	0
8363	S.W.G	S.W.G ( Slot Width Granularity , 8 bits ): A positive integer . Its value indicates the multiple of 2*C.S ., in terms of slot width granularity . 	231	0
8363	Min Slot Width	Min Slot Width ( 16 bits ): A positive integer . Its value indicates the multiple of 2*C.S . ( in GHz ), in terms of the supported minimal slot width . 	110	0
8363	Reserved	Reserved : The Reserved field MUST be set to zero on transmission and SHOULD be ignored on receipt . 	500	0
8364	Reserved	PIM Version , Reserved , and Checksum : As specified in [ RFC7761 ]. 	220	0
8364	Checksum	PIM Version , Reserved , and Checksum : As specified in [ RFC7761 ]. 	301	0
8364	Type	[ N]o-Forward bit : When set , this bit means that the PFM message is not to be forwarded . This bit is defined to prevent Bootstrap message forwarding in [ RFC5059 ]. 	210	0
8364	N	[ N]o-Forward bit : When set , this bit means that the PFM message is not to be forwarded . This bit is defined to prevent Bootstrap message forwarding in [ RFC5059 ]. 	210	0
8364	T	[ T]ransitive bit : Each TLV in the message includes a bit called the " Transitive " bit that controls whether the TLV is forwarded by routers that do not support the given type . See Section 3.4.2 . 	231	0
8364	Type	Type : This TLV has type 1 . 	231	0
8364	Length	Group Address : The group that sources are to be announced for . The format for this address is given in the Encoded-Group format in [ RFC7761 ]. 	230	0
8364	Src Count	Src Count : The number of source addresses that are included . 	230	0
8364	Src Holdtime	Src Address : The source address for the corresponding group . The format for these addresses is given in the Encoded-Unicast address in [ RFC7761 ]. 	230	0
8377	V	V : The version number of the MT Label . This document specifies version zero . 	220	0
8377	R	R : A 2-bit reserved field that MUST be sent as zero and ignored on receipt . 	500	0
8379	Type	Type : 7 	240	0
8379	Length	Length : 0 	100	0
8379	Type	Type : 8 	240	0
8379	Length	Value : Remote IPv4 address . The remote IPv4 address is used to identify a particular link on the remote side when there are multiple parallel links between two nodes . 	230	0
8379	Type	Type : 9 	240	0
8379	Length	Value : 4 octets of the Local Interface ID followed by 4 octets of the Remote Interface ID . 	231	0
8379	Type	Type : 8 	240	0
8379	Length	Length : 0 	100	0
8379	Type	Type : 1121 	220	0
8379	Length	Length : 0 	100	0
8381	CID	CID - Company Identifier [ 802 ] 	230	0
8381	OUI	OUI - Organizationally Unique Identifier [ RFC7042 ] 	231	0
8381	OUI	OUI : When the bottom two bits of the first byte of the Vendor ID are zero ( that is , the first byte is 0bXXXXXX00 ), the Vendor ID is an OUI . 	210	0
8381	CID	CID : When the bottom two bits of the first byte are a one followed by a zero ( that is , the first byte is 0bXXXXXX10 ), the Vendor ID is a CID . 	210	0
8381	VERR	Sub-Protocol : Actually , the vendor specifying their use of the Vendor Channel can do whatever they want with the bits after the VERR field . But it is strongly RECOMMENDED that they use the sub-protocol / sub-version fields indicated so that multiple and evolving uses can be specified based on a single OUI . 	231	0
8383	RESV	Start.VLAN , End.VLAN : These 12-bit fields give the beginning and ending VLAN IDs of a block of VLANs . The block includes both the starting and ending values; so , a block of size one is indicated by setting End.VLAN equal to Start.VLAN . If Start.VLAN is 0x000 , it is treated as if it was 0x001 . If End.VLAN is 0xFFF , it is treated as if it was 0xFFE . If End.VLAN is smaller than Start.VLAN , considering both as unsigned integers , that VLAN block is ignored , but the address flush operation is still executed with other VLAN blocks in the message . VLAN blocks may overlap , in which case , the address flush operation is applicable to a VLAN covered by any one or more of the blocks in the message . 	301	0
8383	Start.VLAN	Start.VLAN , End.VLAN : These 12-bit fields give the beginning and ending VLAN IDs of a block of VLANs . The block includes both the starting and ending values; so , a block of size one is indicated by setting End.VLAN equal to Start.VLAN . If Start.VLAN is 0x000 , it is treated as if it was 0x001 . If End.VLAN is 0xFFF , it is treated as if it was 0xFFE . If End.VLAN is smaller than Start.VLAN , considering both as unsigned integers , that VLAN block is ignored , but the address flush operation is still executed with other VLAN blocks in the message . VLAN blocks may overlap , in which case , the address flush operation is applicable to a VLAN covered by any one or more of the blocks in the message . 	301	0
8383	Type	Type : The 8-bit TLV type as shown in the table below . See subsections of Section 2.2 for details on each type assigned below . If the type is reserved or not known by a receiving RBridge , that receiving RBridge ignores the value and skips to the next TLV by use of the Length byte . There is no provision for a list of VLAN ID TLVs as there are few enough of them that an arbitrary subset of VLAN IDs can be represented as a bit map . 	231	0
8383	Length	Length : The 8-bit unsigned integer length in bytes of the remaining information in the TLV after the Length byte . The Length MUST NOT imply that the value extends beyond the end of the RBridge Channel-Protocol-Specific Payload area . If it does , the Address Flush message is corrupt and MUST be ignored . 	100	0
8383	Value	In an extensible Address Flush message , when the TLVs are parsed , those TLVs having unknown types are ignored by the receiving RBridge . There may be multiple instances of TLVs with the same Type in the same Address Flush message , and TLVs are not required to be in any particular order . 	301	0
8384	Length	o Holding Time : A time in seconds as an unsigned integer . It has the same meaning as the Holding Time field in IS-IS Hellos [ IS-IS ]. A Smart Endnode and an edge RBridge supporting Smart Endnodes MUST send a Smart-Hello at least three times during their Holding Time . If no Smart-Hellos are received from a Smart Endnode or edge RBridge within the most recent Holding Time it sent , it is assumed that it is no longer available . 	120	0
8384	Holding Time	o Holding Time : A time in seconds as an unsigned integer . It has the same meaning as the Holding Time field in IS-IS Hellos [ IS-IS ]. A Smart Endnode and an edge RBridge supporting Smart Endnodes MUST send a Smart-Hello at least three times during their Holding Time . If no Smart-Hellos are received from a Smart Endnode or edge RBridge within the most recent Holding Time it sent , it is assumed that it is no longer available . 	120	0
8384	Flags	o Flags : At this time , all of the Flags are reserved and MUST be sent as zero and ignored on receipt . 	500	0
8384	Length	o Length : Total number of bytes contained in the value field of the TLV , that is , the sum of the length of the F/M/RSV/FGL Data Label fields and six times the number of MAC addresses present . So , if there are n MAC addresses , this is 4+6*n . 	100	0
8384	F	o F : 1 bit . If it is set to 1 , it indicates that the endnode supports FGL Data Labels [ RFC7172 ], and that this Smart-MAC APPsub-TLV has an FGL in the following VLAN/FGL field . Otherwise , the VLAN/FGL Data Label field is a VLAN ID . ( See below for the format of the VLAN/FGL Data Label field ). 	210	0
8384	M	o M : 1 bit . If it is set to 1 , it indicates multihoming ( see Section 6 ). If it is set to 0 , it indicates that the Smart Endnodes are not using multihoming . 	210	0
8384	RSV	o VLAN/FGL Data Label : 24 bits . If F is 1 , this field is a 24-bit FGL Data Label for all subsequent MAC addresses in this APPsub - TLV . Otherwise , if F is 0 , the lower 12 bits are the VLAN of all subsequent MAC addresses in this APPsub-TLV , and the upper 12 bits are not used ( sent as zero and ignored on receipt ). If there is no VLAN/FGL Data Label specified , the VLAN/FGL Data Label is zero . 	210	0
8390	L	L : The L flag is used in the same way as for the XRO subobjects defined in [ RFC4874 ], that is : 	231	0
8390	XRO Type	XRO Type : The value is set to 38 for the IPv4 Diversity XRO subobject . The value is set to 39 for the IPv6 Diversity XRO subobject . 	240	0
8390	Length	Length : Per [ RFC4874 ], the Length contains the total length of the IPv4/IPv6 subobject in bytes , including the XRO Type and Length fields . The Length is variable , depending on the Diversity Identifier Value . 	100	0
8390	DI Type	Diversity Identifier Type ( DI Type ): Diversity Identifier Type ( DI Type ) indicates the way the reference LSP(s ) or route(s ) with which diversity is required is identified in the IPv4/IPv6 Diversity subobjects . The following three DI Type values are defined in this document : 	231	0
8390	Resvd	Resvd : This field is reserved . It MUST be set to zero on transmission and MUST be ignored on receipt for both IPv4/IPv6 Diversity XRO subobjects . 	500	0
8395	T	T When the bit value is 1 , the PE announces the ability to send a PW packet that includes a flow label . When the bit value is 0 , the PE is indicating that it will not send a PW packet containing a flow label . 	210	0
8395	R	R When the bit value is 1 , the PE is able to receive a PW packet with a flow label present . When the bit value is 0 , the PE is unable to receive a PW packet with the flow label present . 	210	0
8395	C	C Defined in [ RFC4761 ]. 	400	0
8395	S	S Defined in [ RFC4761 ]. 	400	0
8400	P2P LSP Tunnel Egress IPv4 Address	o P2P LSP Tunnel Egress IPv4 Address : The IPv4 address of the egress node of the tunnel . 	230	0
8400	Tunnel ID	o Tunnel ID ( refer to [ RFC4875 ] and [ RFC3209 ]): A 16-bit identifier that remains constant over the life of the tunnel and occupies the least significant 16 bits of the 32-bit word . 	231	0
8400	Extended Tunnel ID	o Extended Tunnel ID ( refer to [ RFC4875 ] and [ RFC3209 ]): A 4-byte identifier that remains constant over the life of the tunnel . 	231	0
8400	Tunnel ID	o Tunnel ID ( refer to [ RFC4875 ] and [ RFC3209 ]): A 16-bit identifier that remains constant over the life of the tunnel and occupies the least significant 16 bits of the 32-bit word . 	231	0
8400	Extended Tunnel ID	o Extended Tunnel ID ( refer to [ RFC4875 ] and [ RFC3209 ]): A 16-byte identifier that remains constant over the life of the tunnel . 	231	0
8401	BAR	IPA : IGP Algorithm . May be used to modify , enhance , or replace the calculation of underlay paths as defined by the BAR value . 	231	0
8401	IPA	IPA : IGP Algorithm . May be used to modify , enhance , or replace the calculation of underlay paths as defined by the BAR value . 	231	0
8401	Type	Type Name ---- ---- 1 BIER MPLS Encapsulation 	231	0
8401	Type	Type : As indicated in the IANA section . 	231	0
8401	Length	BAR : BIER Algorithm . Specifies a BIER-specific algorithm used to calculate underlay paths to reach BFERs . Values are allocated from the " BIER Algorithms " registry . 1 octet . 	400	0
8401	BAR	BAR : BIER Algorithm . Specifies a BIER-specific algorithm used to calculate underlay paths to reach BFERs . Values are allocated from the " BIER Algorithms " registry . 1 octet . 	400	0
8401	IPA	IPA : IGP Algorithm . Specifies an IGP Algorithm to either modify , enhance , or replace the calculation of underlay paths to reach BFERs as defined by the BAR value . Values are from the IGP Algorithm registry . 1 octet . 	231	0
8401	Type	Type : Value of 1 indicating MPLS encapsulation . 	302	0
8401	Length	Max SI : Maximum Set Identifier ( Section 1 of [ RFC8279 ]) used in the encapsulation for this BIER subdomain for this BitString length , 1 octet . Each SI maps to a single label in the label range . The first label is for SI=0 , the second label is for SI=1 , etc . If the label associated with the Maximum Set Identifier exceeds the 20-bit range , the sub-sub-TLV MUST be ignored . 	100	0
8401	Max SI	Max SI : Maximum Set Identifier ( Section 1 of [ RFC8279 ]) used in the encapsulation for this BIER subdomain for this BitString length , 1 octet . Each SI maps to a single label in the label range . The first label is for SI=0 , the second label is for SI=1 , etc . If the label associated with the Maximum Set Identifier exceeds the 20-bit range , the sub-sub-TLV MUST be ignored . 	231	0
8401	BS Len	Local BitString Length ( BS Len ): Encoded BitString length as per [ RFC8296 ]. 4 bits . 	100	0
8401	Label	Label : First label of the range , 20 bits . The labels are as defined in [ RFC8296 ]. 	231	0
8408	PST	PST : Path Setup Type 	301	0
8408	Length	Length : The total length in bytes of the remainder of the TLV , that is , excluding the Type and Length fields . 	100	0
8408	Num of PSTs	Num of PSTs : The number of PSTs in the following list , excluding padding . 	231	0
8415	msg-type	msg-type Identifies the DHCP message type; the available message types are listed in Section 7.3 . A 1-octet field . 	231	0
8415	transaction-id	transaction-id The transaction ID for this message exchange . A 3-octet field . 	230	0
8415	msg-type	msg-type RELAY-FORW ( 12 ). A 1-octet field . 	400	0
8415	hop-count	hop-count Number of relay agents that have already relayed this message . A 1-octet field . 	400	0
8415	link-address	link-address An address that may be used by the server to identify the link on which the client is located . This is typically a globally scoped unicast address ( i.e ., GUA or ULA ), but see the discussion in Section 19.1.1 . A 16-octet field . 	230	0
8415	peer-address	peer-address The address of the client or relay agent from which the message to be relayed was received . A 16-octet field . 	230	0
8415	msg-type	msg-type RELAY-REPL ( 13 ). A 1-octet field . 	400	0
8415	hop-count	hop-count Copied from the Relay-forward message . A 1-octet field . 	400	0
8415	link-address	link-address Copied from the Relay-forward message . A 16-octet field . 	230	0
8415	peer-address	peer-address Copied from the Relay-forward message . A 16-octet field . 	230	0
8415	protocol	protocol 3 	240	0
8415	algorithm	algorithm 1 	302	0
8415	RDM	RDM 0 	210	0
8415	IA_NA-options	IA_NA-options Options associated with this IA_NA . A variable-length field ( 12 octets less than the value in the option-len field ). 	400	0
8415	IA_TA-options	IA_TA-options Options associated with this IA_TA . A variable-length field ( 4 octets less than the value in the option-len field ). 	400	0
8415	IPv6-address	IPv6-address An IPv6 address . A client MUST NOT form an implicit prefix with a length other than 128 for this address . A 16-octet field . 	230	0
8415	preferred-lifetime	preferred-lifetime The preferred lifetime for the address in the option , expressed in units of seconds . A 4-octet field containing an unsigned integer . 	230	0
8415	valid-lifetime	valid-lifetime The valid lifetime for the address in the option , expressed in units of seconds . A 4-octet field containing an unsigned integer . 	100	0
8415	pref-value	pref-value The preference value for the server in this message . A 1-octet unsigned integer . 	230	0
8415	elapsed-time	elapsed-time The amount of time since the client began its current DHCP transaction . This time is expressed in hundredths of a second ( 10^-2 seconds ). A 2-octet field containing an unsigned integer . 	120	0
8415	DHCP-relay-message	DHCP-relay-message In a Relay-forward message , the received message , relayed verbatim to the next relay agent or server; in a Relay-reply message , the message to be copied and relayed to the relay agent or client whose address is in the peer-address field of the Relay-reply message . The length , in octets , is specified by option-len . 	303	0
8415	protocol	protocol The authentication protocol used in this Authentication option . A 1-octet unsigned integer . 	231	0
8415	algorithm	algorithm The algorithm used in the authentication protocol . A 1-octet unsigned integer . 	231	0
8415	RDM	RDM The replay detection method used in this Authentication option . A 1-octet unsigned integer . 	231	0
8415	server-address	server-address The 128-bit address to which the client should send messages delivered using unicast . 	230	0
8415	status-code	status-code The numeric code for the status encoded in this option . A 2-octet field containing an unsigned integer . 	231	0
8415	enterprise-number	enterprise-number The vendor's registered Enterprise Number as maintained by IANA [ IANA-PEN ]. A 4-octet field containing an unsigned integer . 	231	0
8415	enterprise-number	enterprise-number The vendor's registered Enterprise Number as maintained by IANA [ IANA-PEN ]. A 4-octet field containing an unsigned integer . 	231	0
8415	sub-opt-code	sub-opt-code The code for the sub-option . A 2-octet field . 	231	0
8415	sub-option-len	sub-option-len An unsigned integer giving the length of the sub-option-data field in this sub-option in octets . A 2-octet field . 	100	0
8415	msg-type	msg-type 5 for Renew message , 6 for Rebind message , 11 for Information-request message . A 1-octet unsigned integer . 	240	0
8415	preferred-lifetime	preferred-lifetime The preferred lifetime for the prefix in the option , expressed in units of seconds . A value of 0xffffffff represents " infinity " ( see Section 7.7 ). A 4-octet field containing an unsigned integer . 	120	0
8415	valid-lifetime	valid-lifetime The valid lifetime for the prefix in the option , expressed in units of seconds . A value of 0xffffffff represents " infinity ". A 4-octet field containing an unsigned integer . 	100	0
8415	prefix-length	prefix-length Length for this prefix in bits . A 1-octet unsigned integer . 	100	0
8415	information-refresh-time	information-refresh-time Time duration relative to the current time , expressed in units of seconds . A 4-octet field containing an unsigned integer . 	122	0
8425	L	L - On-link Flag [ RFC4861 ] 	231	0
8425	A	A - Autonomous Address Configuration Flag [ RFC4861 ] 	231	0
8425	R	R - Router Address Flag [ RFC6275 ] 	230	0
8425	Reserved1	Reserved1 - Reserved 	240	0
8444	Type	Type : 9 	240	0
8444	Length	sub-domain-id : Unique value identifying the BIER sub-domain within the BIER domain , as described in Section 1 of [ RFC8279 ]. 	231	0
8444	BAR	BAR : Single-octet BIER Algorithm used to calculate underlay paths to reach other BFRs . Values are allocated from the " BIER Algorithm " registry defined in [ RFC8401 ]. 	400	0
8444	IPA	IPA : Single-octet IGP Algorithm used to either modify , enhance , or replace the calculation of underlay paths to reach other BFRs as defined by the BAR value . Values are defined in the " IGP Algorithm Types " registry [ IANA-IGP ]. 	231	0
8444	Type	Type : 10 	220	0
8444	Length	Max SI : A 1-octet field encoding the maximum Set Identifier ( SI ) ( see Section 1 of [ RFC8279 ]) used in the encapsulation for this BIER sub-domain for this BitString length . 	231	0
8444	Max SI	Max SI : A 1-octet field encoding the maximum Set Identifier ( SI ) ( see Section 1 of [ RFC8279 ]) used in the encapsulation for this BIER sub-domain for this BitString length . 	231	0
8444	Label	Label : A 3-octet field , where the 20 rightmost bits represent the first label in the label range . The 4 leftmost bits MUST be ignored . 	500	0
8444	BS Len	BS Len ( BitString Length ): A 4-bit field encoding the supported BitString length associated with this BFR-prefix . The values allowed in this field are specified in Section 2 of [ RFC8296 ]. 	100	0
8444	Reserved	Reserved : SHOULD be set to 0 on transmission and MUST be ignored on reception . 	500	0
8450	M	Marker Bit ( M ): 1 bit . The marker bit MUST be set on any packet that contains the final slice in a coded picture and MUST NOT be set otherwise . 	210	0
8450	PT	Payload Type ( PT ): 7 bits . A dynamically allocated payload type field that designates the payload as VC-2-coded video . 	400	0
8450	Sequence Number	Sequence Number : 16 bits . Because the data rate of VC-2-coded Streams can often be very high , in the order of gigabits rather than megabits per second , the standard 16-bit RTP sequence number can cycle very quickly . For this reason , the sequence number is extended to 32 bits , and this field MUST hold the low-order 16 bits of this value . 	200	0
8450	Timestamp	Timestamp : 32 bits . If the packet contains Transform Parameters or Coded Slice data for a coded picture , then the timestamp corresponds to the sampling instant of the coded picture . A 90kHz clock SHOULD be used . A single RTP packet MUST NOT contain coded data for more than one coded picture , so there is no ambiguity here . 	121	0
8450	Extended Sequence Number	Extended Sequence Number : 16 bits . MUST contain the high-order 16 bits of the 32-bit packet sequence number . This is needed since the high data rates of VC-2 Sequences mean that it is highly likely that the 16-bit sequence number will roll over too frequently to be of use for Stream synchronization . 	200	0
8450	B	B : 1 bit . MUST be set to 1 if the packet contains the first byte of an Auxiliary Data Unit and otherwise MUST be 0 . If the recommendations in Section 4.4 (" Stream Constraints ") are followed , then every Auxiliary Data Unit will be small enough to fit in a single packet , and so this bit ( where present ) will always be 1 . 	210	0
8450	E	E : 1 bit . MUST be set to 1 if the packet contains the final byte of an Auxiliary Data Unit and otherwise MUST be 0 . If the recommendations in Section 4.4 (" Stream Constraints ") are followed , then every Auxiliary Data Unit will be small enough to fit in a single packet , and so this bit ( where present ) will always be 1 . 	210	0
8450	I	I : 1 bit . MUST be set to 1 if the packet contains coded picture parameters or slice data from a field in an interlaced frame . MUST be set to 0 if the packet contains data from any part of a progressive frame . 	210	0
8450	F	F : 1 bit . MUST be set to 1 if the packet contains coded picture parameters or slice data from the second field of an interlaced frame . MUST be set to 0 if the packet contains data from the first field of an interlaced frame or any part of a progressive frame . 	210	0
8450	Parse Code	Parse Code ( PC ): 8 bits . Contains a Parse Code that MUST be the value indicated for the type of data in the packet . 	231	0
8450	Data Length	Data Length : 32 bits . For an auxiliary Data Unit , this contains the number of bytes of data contained in the payload section of this packet . If the recommendations in Section 4.4 (" Stream Constraints ") are followed , then no Auxiliary Data Unit will be large enough to cause a packet to exceed the MTU of the network . 	400	0
8450	Picture Number	Picture Number : 32 bits . MUST contain the Picture Number for the coded picture this packet contains data for , as described in Section 12.1 of the VC-2 specification [ VC2 ]. 	400	0
8450	Slice Prefix Bytes	Slice Prefix Bytes : 16 bits . MUST contain the Slice Prefix Bytes value for the coded picture this packet contains data for , as described in Section 12.3.4 of the VC-2 specification [ VC2 ]. 	400	0
8450	Slice Size Scaler	Slice Size Scaler : 16 bits . MUST contain the Slice Size Scaler value for the coded picture this packet contains data for , as described in Section 12.3.4 of the VC-2 specification [ VC2 ]. 	400	0
8450	Fragment Length	Fragment Length : 16 bits . MUST contain the number of bytes of data contained in the coded payload section of this packet . 	100	0
8450	No . of Slices	No . of Slices : 16 bits . MUST contain the number of Coded Slices contained in this packet , which MUST be 0 for a packet containing Transform Parameters . In a packet containing Coded Slices , this number MUST be the number of whole slices contained in the packet , and the packet MUST NOT contain any partial slices . 	400	0
8450	Slice Offset X	Slice Offset X : 16 bits . MUST contain the X coordinate of the first slice in this packet , in slices , starting from the top left corner of the picture . 	110	0
8450	Slice Offset Y	Slice Offset Y : 16 bits . MUST contain the Y coordinate of the first slice in this packet , in slices , starting from the top left corner of the picture . 	110	0
8476	Type	Length : variable ( multiple of 2 octets); represents the total length of the value field in octets . 	100	0
8476	Length	Length : variable ( multiple of 2 octets); represents the total length of the value field in octets . 	100	0
8476	Type	Type : For OSPFv2 , the link-level MSD-Value is advertised as an optional sub-TLV of the OSPFv2 Extended Link TLV as defined in [ RFC7684 ] and has a type of 6 . 	231	0
8476	Length	Value : consists of one or more pairs of a 1-octet MSD-Type and 1-octet MSD-Value . 	240	0
8480	R	( R ) / \ / \ ( B)-----(C ) | | | | ( A ) ( D ) 	210	0
8480	Version	6P Version ( Version ): The version of 6P . Only version 0 is defined in this document . Future specifications may define subsequent versions of 6P . 	220	0
8480	T	Type ( T ): The type of message . The message types are defined in Section 6.2.2 . 	231	0
8480	Reserved	Reserved ( R ): Reserved bits . These two bits SHOULD be set to zero when sending the message and MUST be ignored upon reception . 	500	0
8480	R	Reserved ( R ): Reserved bits . These two bits SHOULD be set to zero when sending the message and MUST be ignored upon reception . 	500	0
8480	Code	Code : The Code field contains a 6P command identifier when the 6P message has a Type value of REQUEST . Section 6.2.3 lists the 6P command identifiers . The Code field contains a 6P return code when the 6P message has a Type value of RESPONSE or CONFIRMATION . Section 6.2.4 lists the 6P return codes . The same return codes are used in both 6P Response and 6P Confirmation messages . 	231	0
8480	SFID	6top Scheduling Function Identifier ( SFID ): The identifier of the SF to use to handle this message . The SFID is defined in Section 4.1 . 	231	0
8480	SeqNum	SeqNum : The sequence number associated with the 6P Transaction . Used to match the 6P Request , 6P Response , and 6P Confirmation of the same 6P Transaction . The value of SeqNum MUST be different for each new 6P Request issued to the same neighbor and using the same SF . The SeqNum is also used to ensure consistency between the schedules of the two neighbors . Section 3.4.6 details how the SeqNum is managed . 	200	0
8480	slotOffset	slotOffset : The slot offset of the cell . 	110	0
8480	channelOffset	The CellList is an opaque set of bytes , sent unmodified to the SF . The length of the CellList field is implicit and is determined by the IE Length field of the Payload IE header as defined in 802.15.4 . The SF MAY redefine the format of the CellList field; the routine that parses this field is therefore associated with a specific SF . 	400	0
8480	Metadata	Metadata : Used as extra signaling to the SF . The contents of the Metadata field are an opaque set of bytes passed unmodified to the SF . The meaning of this field depends on the SF and is out of scope for this document . For example , Metadata can specify in which slotframe to add the cells . 	230	0
8480	CellOptions	CellOptions : Indicates the options to associate with the cells to be added . If more than one cell is added ( NumCells > 1 ), the same options are associated with each one . This necessarily means that if node A needs to add multiple cells with different options it needs to initiate multiple 6P ADD Transactions . 	400	0
8480	NumCells	NumCells : The number of additional cells node A wants to schedule to node B . 	400	0
8480	Metadata	Metadata : Same usage as for the 6P ADD command; see Section 3.3.1 . Its format is the same as that in the 6P ADD command , but its content could be different . 	231	0
8480	CellOptions	CellOptions : Indicates the options that need to be associated with the cells to delete . Only cells matching the CellOptions can be deleted . 	231	0
8480	NumCells	NumCells : The number of cells from the specified CellList the sender wants to delete from the schedule of both sender and receiver . 	231	0
8480	Metadata	CellOptions : Indicates the options that need to be associated with cells to be relocated . 	231	0
8480	CellOptions	CellOptions : Indicates the options that need to be associated with cells to be relocated . 	231	0
8480	NumCells	NumCells : The number of cells to relocate . MUST be greater than or equal to 1 . 	400	0
8480	Metadata	Metadata : Same usage as for the 6P ADD command; see Section 3.3.1 . Its format is the same as that in the 6P ADD command , but its content could be different . 	231	0
8480	CellOptions	CellOptions : Specifies which type of cell to be counted . 	231	0
8480	NumCells	NumCells : The number of cells that correspond to the fields of the request . 	400	0
8480	Metadata	Metadata : Same usage as for the 6P ADD command; see Section 3.3.1 . Its format is the same as that in the 6P ADD command , but its content could be different . 	231	0
8480	CellOptions	Reserved : Reserved bits . These bits SHOULD be set to zero when sending the message and MUST be ignored upon reception . 	500	0
8480	Reserved	Reserved : Reserved bits . These bits SHOULD be set to zero when sending the message and MUST be ignored upon reception . 	500	0
8480	Offset	Offset : The offset of the first scheduled cell that is requested . The mechanism assumes that cells are ordered according to a rule defined in the SF . The rule MUST always order the cells in the same way . 	110	0
8480	MaxNumCells	MaxNumCells : The maximum number of cells to be listed . Node B MAY return fewer than MaxNumCells cells -- for example , if MaxNumCells cells do not fit in the frame . 	231	0
8480	Metadata	Metadata : Same usage as for the 6P ADD command; see Section 3.3.1 . Its format is the same as that in the 6P ADD command , but its content could be different . 	231	0
8480	Metadata	Metadata : Same usage as for the 6P ADD command; see Section 3.3.1 . Its format is the same as that in the 6P ADD command , but its content could be different . 	231	0
8480	SFID	Each SF has a 1-byte identifier . Section 6.2.5 defines the rules for applying for an SFID . 	231	0
8487	Type	Describes the format of the Value field . For all the available types , please see Section 3.2 . 	400	0
8487	Length	Length of Type , Length , and Value fields in octets . Minimum length required is 4 octets . The length MUST be a multiple of 4 octets . The maximum TLV length is not defined; however , the entire Mtrace2 packet length MUST NOT exceed the available MTU . 	100	0
8487	Length	Length of Type , Length , and Value fields in octets . Minimum length required is 4 octets . The length MUST be a multiple of 4 octets . The maximum TLV length is not defined; however , the entire Mtrace2 packet length MUST NOT exceed the available MTU . 	100	0
8487	Length	Length : 16 bits The Length field MUST be either 20 ( i.e ., 8 + 3 * 4 ( IPv4 addresses )) or 56 ( i.e ., 8 + 3 * 16 ( IPv6 addresses)); if the length is 20 , then IPv4 addresses MUST be assumed , and if the length is 56 , then IPv6 addresses MUST be assumed . 	100	0
8487	Multicast Address	Multicast Address : 32 bits or 128 bits This field specifies an IPv4 or IPv6 address , which can be either : 	230	0
8487	Source Address	Source Address : 32 bits or 128 bits This field specifies an IPv4 or IPv6 address , which can be either : 	230	0
8487	Mtrace2 Client Address	Mtrace2 Client Address : 32 bits or 128 bits This field specifies the Mtrace2 client's IPv4 address or IPv6 global address . This address MUST be a valid unicast address; therefore , it MUST NOT be all ones or an unspecified address . The Mtrace2 Reply will be sent to this address . 	230	0
8487	Query ID	Query ID : 16 bits This field is used as a unique identifier for this Mtrace2 Query so that duplicate or delayed Reply messages may be detected . 	231	0
8487	Client Port #	Client Port #: 16 bits This field specifies the destination UDP port number for receiving the Mtrace2 Reply packet . 	231	0
8487	MBZ	MBZ : 8 bits This field MUST be zeroed on transmission and ignored on reception . 	500	0
8487	Query Arrival Time	Query Arrival Time : 32 bits The Query Arrival Time is a 32-bit Network Time Protocol ( NTP ) timestamp specifying the arrival time of the Mtrace2 Query or Request packet at this router . The 32-bit form of an NTP timestamp consists of the middle 32 bits of the full 64-bit form; that is , the low 16 bits of the integer part and the high 16 bits of the fractional part . 	121	0
8487	Incoming Interface Address	Incoming Interface Address : 32 bits This field specifies the address of the interface on which packets from the source or the RP are expected to arrive , or 0 if unknown or unnumbered . 	230	0
8487	Outgoing Interface Address	Outgoing Interface Address : 32 bits This field specifies the address of the interface on which packets from the source or the RP are expected to transmit towards the receiver , or 0 if unknown or unnumbered . This is also the address of the interface on which the Mtrace2 Query or Request arrives . 	230	0
8487	Upstream Router Address	Upstream Router Address : 32 bits This field specifies the address of the upstream router from which this router expects packets from this source . This MAY be a multicast group ( e.g ., ALL-[protocol]-ROUTERS group ) if the upstream router is not known because of the workings of the multicast routing protocol . However , it MUST be 0 if the Incoming Interface address is unknown or unnumbered . 	230	0
8487	Input packet count on Incoming Interface	Input packet count on Incoming Interface : 64 bits This field contains the number of multicast packets received for all groups and sources on the Incoming Interface , or all ones if no count can be reported . This counter may have the same value as ifHCInMulticastPkts from the Interfaces Group MIB ( IF-MIB ) [ 9 ] for this interface . 	200	0
8487	Output packet count on Outgoing Interface	Output packet count on Outgoing Interface : 64 bits This field contains the number of multicast packets that have been transmitted or queued for transmission for all groups and sources on the Outgoing Interface , or all ones if no count can be reported . This counter may have the same value as ifHCOutMulticastPkts from the IF-MIB [ 9 ] for this interface . 	400	0
8487	Rtg Protocol	Rtg Protocol : 16 bits This field describes the unicast routing protocol running between this router and the upstream router , and it is used to determine the Reverse Path Forwarding ( RPF ) interface for the specified source or RP . This value should have the same value as ipMcastRouteRtProtocol from the IP Multicast MIB [ 14 ] for this entry . If the router is not able to obtain this value , all 0's must be specified . 	400	0
8487	Multicast Rtg Protocol	Multicast Rtg Protocol : 16 bits This field describes the multicast routing protocol in use between the router and the upstream router . This value should have the same value as ipMcastRouteProtocol from the IP Multicast MIB [ 14 ] for this entry . If the router cannot obtain this value , all 0's must be specified . 	231	0
8487	Fwd TTL	Fwd TTL : 8 bits This field contains the configured multicast TTL threshold , if any , of the Outgoing Interface . 	400	0
8487	S	S : 1 bit If this bit is set , it indicates that the packet count for the source-group pair is for the source network , as determined by masking the source address with the Src Mask field . 	210	0
8487	Src Mask	Src Mask : 7 bits This field contains the number of 1's in the netmask the router has for the source ( i.e ., a value of 24 means the netmask is 0xffffff00 ). If the router is forwarding solely on group state , this field is set to 127 ( 0x7f ). 	301	0
8487	Forwarding Code	Forwarding Code : 8 bits This field contains a forwarding information/error code . Values with the high-order bit set ( 0x80-0xff ) are intended for use with conditions that are transitory or automatically recovered . Other Forwarding Code values indicate a need to fix a problem in the Query or a need to redirect the Query . Sections 4.1 and 4.2 explain how and when the Forwarding Code is filled . Defined values are as follows : 	231	0
8487	MBZ	MBZ : 8 bits This field MUST be zeroed on transmission and ignored on reception . 	500	0
8487	Query Arrival Time	Query Arrival Time : 32 bits Same definition as in IPv4 . 	121	0
8487	Incoming Interface ID	Incoming Interface ID : 32 bits This field specifies the interface ID on which packets from the source or RP are expected to arrive , or 0 if unknown . This ID should be the value taken from InterfaceIndex of the IF-MIB [ 9 ] for this interface . 	230	0
8487	Outgoing Interface ID	Outgoing Interface ID : 32 bits This field specifies the interface ID to which packets from the source or RP are expected to transmit , or 0 if unknown . This ID should be the value taken from InterfaceIndex of the IF-MIB [ 9 ] for this interface . 	230	0
8487	Local Address	Local Address : 128 bits This field specifies a global IPv6 address that uniquely identifies the router . A unique local unicast address [ 12 ] SHOULD NOT be used unless the router is only assigned link-local and unique local addresses . If the router is only assigned link-local addresses , its link-local address can be specified in this field . 	230	0
8487	Remote Address	Remote Address : 128 bits This field specifies the address of the upstream router , which , in most cases , is a link-local unicast address for the upstream router . 	230	0
8487	Input packet count on Incoming Interface	Input packet count on Incoming Interface : 64 bits Same definition as in IPv4 . 	231	0
8487	Output packet count on Outgoing Interface	Output packet count on Outgoing Interface : 64 bits Same definition as in IPv4 . 	231	0
8487	Rtg Protocol	Rtg Protocol : 16 bits Same definition as in IPv4 . 	400	0
8487	Multicast Rtg Protocol	Multicast Rtg Protocol : 16 bits 	400	0
8487	MBZ	MBZ 2 : 15 bits This field MUST be zeroed on transmission and ignored on reception . 	500	0
8487	S	S : 1 bit Same definition as in IPv4 , except the Src Prefix Len field is used to mask the source address . 	231	0
8487	Src Prefix Len	Src Prefix Len : 8 bits This field contains the prefix length this router has for the source . If the router is forwarding solely on group state , this field is set to 255 ( 0xff ). 	400	0
8487	Forwarding Code	Forwarding Code : 8 bits Same definition as in IPv4 . 	231	0
8487	MBZ	MBZ : 8 bits This field MUST be zeroed on transmission and ignored on reception . 	500	0
8487	Augmented Response Type	Augmented Response Type : 16 bits This field specifies the type of various responses from a multicast router that might need to communicate back to the Mtrace2 client as well as the multicast routers on the traced path . 	231	0
8487	MBZ	MBZ : 7 bits This field MUST be zeroed on transmission and ignored on reception . 	500	0
8487	T	T-bit ( Transitive Attribute ): 1 bit If the TLV Type is unrecognized by the receiving router , then this TLV is either discarded or forwarded along with the Query , depending on the value of this bit . If this bit is set , then the router MUST forward this TLV . If this bit is clear , the router MUST send an Mtrace2 Reply with an UNKNOWN_QUERY error . 	210	0
8487	Extended Query Type	Extended Query Type : 16 bits This field specifies the type of the Extended Query Block . 	231	0
8487	Source Address	An Mtrace2 Request should be sent with the address of the Incoming Interface . However , if the Incoming Interface is unnumbered , the router can use one of its numbered interface addresses as the source address . 	230	0
8487	Source Address	An Mtrace2 Reply SHOULD be sent with the address of the router's Outgoing Interface . However , if the Outgoing Interface address is unnumbered , the router can use one of its numbered interface addresses as the source address . 	230	0
8487	Source Address	An Mtrace2 Query MUST be sent with the client's interface address , which is the Mtrace2 Client Address . 	230	0
8491	Type	Length : variable ( multiple of 2 octets); represents the total length of the Value field 	100	0
8491	Length	Length : variable ( multiple of 2 octets); represents the total length of the Value field 	100	0
8491	Type	Length : variable ( multiple of 2 octets); represents the total length of the Value field 	100	0
8491	Length	Length : variable ( multiple of 2 octets); represents the total length of the Value field 	100	0
8500	Flags	Flags ( 1 octet ) Metric ( 3 octets ) sub-TLV length ( 1 octet ) sub-TLV data ( 0 - 250 octets ) 	100	0
8500	Metric	Flags ( 1 octet ) Metric ( 3 octets ) sub-TLV length ( 1 octet ) sub-TLV data ( 0 - 250 octets ) 	100	0
8505	TID	TID : Transaction ID ( a sequence counter in the EARO ) 	202	0
8505	Registered Address	RFC 6775-only : An implementation , a type of node , or a message that behaves only as specified by [ RFC6775 ], as opposed to the behavior specified in this document . 	400	0
8505	.	This specification introduces the EARO; the EARO is based on the ARO for use in NS and NA messages . The EARO includes a sequence counter called the Transaction ID ( TID ), which is used to determine the latest location of a registering mobile device . A new T flag indicates that the presence of the TID field is populated and that the option is an EARO . A 6LN requests routing or proxy services from a 6LR using a new R flag in the EARO . 	400	0
8505	Type	Type : 33 	220	0
8505	Length	Length : 8-bit unsigned integer . The length of the option in units of 8 bytes . 	100	0
8505	Status	Status : 8-bit unsigned integer . Indicates the status of a registration in the NA response . MUST be set to 0 in NS messages . See Table 1 below . 	302	0
8505	Opaque	Opaque : An octet opaque to ND . The 6LN MAY pass it transparently to another process . It MUST be set to 0 when not used . 	500	0
8505	Rsvd	Rsvd ( Reserved ): This field is unused . It MUST be initialized to 0 by the sender and MUST be ignored by the receiver . 	500	0
8505	Reserved	Rsvd ( Reserved ): This field is unused . It MUST be initialized to 0 by the sender and MUST be ignored by the receiver . 	500	0
8505	I	I : 2-bit integer . A value of 0 indicates that the Opaque field carries an abstract index that is used to decide in which routing topology the address is expected to be injected . In that case , the Opaque field is passed to a routing process with the indication that it carries topology information , and the value of 0 indicates default . All other values of " I " are reserved and MUST NOT be used . 	210	0
8505	R	R : The Registering Node sets the R flag to request reachability services for the Registered Address from a Routing Registrar . 	231	0
8505	T	T : 1-bit flag . Set if the next octet is used as a TID . 	210	0
8505	TID	TID : 1-byte unsigned integer . A Transaction ID that is maintained by the node and incremented with each transaction of one or more registrations performed at the same time to one or more 6LRs . This field MUST be ignored if the T flag is not set . 	400	0
8505	Registration Lifetime	Registration Lifetime : 16-bit integer , expressed in minutes . A value of 0 indicates that the registration has ended and that the associated state MUST be removed . 	120	0
8505	TID	TID : 1-byte integer . Same definition and processing as the TID in the EARO as defined in Section 4.1 . This field MUST be ignored if the ICMP Code is null . 	400	0
8505	Type	Type : 36 	220	0
8505	D	D : The 6LBR supports EDAR and EDAC messages . 	210	0
8505	L	L : The node is a 6LR . 	210	0
8505	B	B : The node is a 6LBR . 	240	0
8505	P	E : The node is an IPv6 ND Registrar; i.e ., it supports registrations based on the EARO . 	230	0
8505	E	E : The node is an IPv6 ND Registrar; i.e ., it supports registrations based on the EARO . 	230	0
8507	Version	Version 4-bit IP version number = decimal 6 . < to be confirmed > 	220	0
8507	Reserved	Reserved 28-bit reserved field . Initialized to zero for transmission; ignored on reception . 	500	0
8507	Payload Length	Payload Length 16-bit unsigned integer . Length of payload , i.e ., the rest of the packet following the SIP header , in octets . 	100	0
8507	Payload Type	Payload Type 8-bit selector . Identifies the type of payload , e.g ., TCP . 	231	0
8507	Hop Limit	Hop Limit 8-bit unsigned integer . Decremented by 1 by each system that forwards the packet . The packet is discarded if Hop Limit is decremented to zero . 	100	0
8507	Source Address	Source Address 64 bits . See " Addresses " section , following . 	230	0
8507	Destination Address	Destination Address 64 bits . See " Addresses " section , following . 	230	0
8507	Reserved	Reserved Initialized to zero for transmission; ignored on reception . 	500	0
8507	Num Addrs	Num Addrs Number of addresses in the Source Routing header . 	230	0
8507	Next Addr	Next Addr Index of next address to be processed; initialized to 0 by the originating system . 	500	0
8507	Payload Type	Payload Type Identifies the type of payload following the Source Routing header . 	231	0
8507	Identification	Identification A value that changes on each packet sent with the same Source Address , Destination Address , and preceding Payload Type . 	230	0
8507	Fragment Offset	Fragment Offset The offset , in 8-octet chunks , of the following payload , relative to the original , unfragmented payload . 	110	0
8507	Payload Type	Payload Type Identifies the type of payload following the Fragmentation header . 	231	0
8507	Reserved	Reserved Initialized to zero for transmission; ignored on reception . 	500	0
8510	Type	Type : 18 	220	0
8510	Length	Length : 4 octets 	100	0
8510	Local Interface ID	Local Interface ID TLV signaling using LLS is applicable to all OSPF interface types other than virtual links . 	231	0
8537	IPv4 LSP Source Address	IPv4 LSP Source Address 	230	0
8537	LSP ID	LSP ID 	202	0
8537	LSP ID	LSP ID 	202	0
8540	Reserved	Reserved : 5 bits 	303	0
8540	Res	Res : 4 bits 	400	0
8540	E	Format : SEND(association id , buffer address , byte count [, context ] [, stream id ] [, life time ] [, destination transport address ] [, unordered flag ] [, no-bundle flag ] [, payload protocol-id ] ) -> result 	301	0
8540	E	Format : SEND(association id , buffer address , byte count [, context ] [, stream id ] [, life time ] [, destination transport address ] [, unordered flag ] [, no-bundle flag ] [, payload protocol-id ] [, sack-immediately ]) -> result 	301	0
8570	Type	Type : 33 	220	0
8570	Length	A bit : This field represents the Anomalous ( A ) bit . The A bit is set when the measured value of this parameter exceeds its configured maximum threshold . The A bit is cleared when the measured value falls below its configured reuse threshold . If the A bit is cleared , the sub-TLV represents steady-state link performance . 	210	0
8570	RESERVED	RESERVED : This field is reserved for future use . It MUST be set to 0 when sent and MUST be ignored when received . 	500	0
8570	Delay	Delay : This 24-bit field carries the average link delay over a configurable interval in microseconds , encoded as an integer value . When set to the maximum value 16,777,215 ( 16.777215 seconds ), then the delay is at least that value and may be larger . 	122	0
8570	Type	Type : 34 	220	0
8570	Length	A bit : This field represents the Anomalous ( A ) bit . The A bit is set when one or more measured values exceed a configured maximum threshold . The A bit is cleared when the measured value falls below its configured reuse threshold . If the A bit is cleared , the sub-TLV represents steady-state link performance . 	210	0
8570	RESERVED	RESERVED : This field is reserved for future use . It MUST be set to 0 when sent and MUST be ignored when received . 	500	0
8570	Min Delay	Min Delay : This 24-bit field carries the minimum measured link delay value ( in microseconds ) over a configurable interval , encoded as an integer value . 	200	0
8570	Max Delay	Max Delay : This 24-bit field carries the maximum measured link delay value ( in microseconds ) over a configurable interval , encoded as an integer value . 	200	0
8570	Type	Type : 35 	220	0
8570	Length	RESERVED : This field is reserved for future use . It MUST be set to 0 when sent and MUST be ignored when received . 	500	0
8570	RESERVED	RESERVED : This field is reserved for future use . It MUST be set to 0 when sent and MUST be ignored when received . 	500	0
8570	Delay Variation	Delay Variation : This 24-bit field carries the average link delay variation over a configurable interval in microseconds , encoded as an integer value . When set to 0 , it has not been measured . When set to the maximum value 16,777,215 ( 16.777215 seconds ), then the delay is at least that value and may be larger . 	302	0
8570	Type	Type : 36 	220	0
8570	Length	A bit : This field represents the Anomalous ( A ) bit . The A bit is set when the measured value of this parameter exceeds its configured maximum threshold . The A bit is cleared when the measured value falls below its configured reuse threshold . If the A bit is cleared , the sub-TLV represents steady-state link performance . 	210	0
8570	RESERVED	RESERVED : This field is reserved for future use . It MUST be set to 0 when sent and MUST be ignored when received . 	500	0
8570	Link Loss	Link Loss : This 24-bit field carries link packet loss as a percentage of the total traffic sent over a configurable interval . The basic unit is 0.000003 %, where ( 2^24 - 2 ) is 50.331642 %. This value is the highest packet-loss percentage that can be expressed ( the assumptions being that ( 1 ) precision is more important on high-speed links than the ability to advertise loss rates greater than this and ( 2 ) high-speed links with over 50% loss are unusable ). Therefore , measured values that are larger than the field maximum SHOULD be encoded as the maximum value . 	301	0
8570	Type	Type : 37 	220	0
8570	Length	Residual Bandwidth : This field carries the residual bandwidth on a link , forwarding adjacency [ RFC4206 ], or bundled link in IEEE floating-point format with units of bytes per second . For a link or forwarding adjacency , residual bandwidth is defined to be the maximum bandwidth [ RFC5305 ] minus the bandwidth currently allocated to RSVP-TE label switched paths . For a bundled link , residual bandwidth is defined to be the sum of the component link residual bandwidths . 	400	0
8570	Type	Type : 38 	220	0
8570	Length	Available Bandwidth : This field carries the available bandwidth on a link , forwarding adjacency , or bundled link in IEEE floating-point format with units of bytes per second . For a link or forwarding adjacency , available bandwidth is defined to be residual bandwidth ( see Section 4.5 ) minus the measured bandwidth used for the actual forwarding of non-RSVP-TE label switched path packets . For a bundled link , available bandwidth is defined to be the sum of the component link available bandwidths . 	400	0
8570	Type	Type : 39 	220	0
8570	Length	Utilized Bandwidth : This field carries the bandwidth utilization on a link , forwarding adjacency , or bundled link in IEEE floating-point format with units of bytes per second . For a link or forwarding adjacency , bandwidth utilization represents the actual utilization of the link ( i.e ., as measured by the advertising node ). For a bundled link , bandwidth utilization is defined to be the sum of the component link bandwidth utilizations . 	400	0
8571	Type	Type : 1114 	220	0
8571	Length	Length : 4 	100	0
8571	Type	Type : 1115 	220	0
8571	Length	Length : 8 	100	0
8571	Type	Type : 1116 	220	0
8571	Length	Length : 4 	100	0
8571	Type	Type : 1117 	220	0
8571	Length	Length : 4 	100	0
8571	Type	Type : 1118 	220	0
8571	Length	Length : 4 	100	0
8571	Type	Type : 1119 	220	0
8571	Length	Length : 4 	100	0
8571	Type	Type : 1120 	220	0
8571	Length	Length : 4 	100	0
8572	URI	URI : urn:ietf:params:xml:ns:yang:ietf-sztp-conveyed-info Registrant Contact : The NETCONF WG of the IETF . XML : N/A , the requested URI is an XML namespace . 	230	0
8572	URI	URI : urn:ietf:params:xml:ns:yang:ietf-sztp-bootstrap-server Registrant Contact : The NETCONF WG of the IETF . XML : N/A , the requested URI is an XML namespace . 	230	0
8584	DF Alg	o DF Alg ( 5 bits ): Encodes the DF election algorithm values ( between 0 and 31 ) that the advertising PE desires to use for the ES . This document creates an IANA registry called " DF Alg " ( Section 7 ), which contains the following values : 	301	0
8584	Bitmap	o Bitmap ( 2 octets ): Encodes " capabilities " to use with the DF election algorithm in the DF Alg field . This document creates an IANA registry ( Section 7 ) for the Bitmap field , with values 0-15 . This registry is called " DF Election Capabilities " and includes the bit values listed below . 	301	0
