5109	FEC Level	The FEC level header is 4 or 8 octets ( depending on the L bit in the FEC header ). The formats of the headers are shown in Figure 4 . The FEC level headers consist of a protection length field and a mask field . The protection length field is 16 bits long . The mask field is 16 bits long ( when the L bit is not set ) or 48 bits long ( when the L bit is set ). The mask field in the FEC level header indicates which packets are associated with the FEC packet at the current level . It is either 16 or 48 bits depending on the value of the L bit . If bit i in the mask is set to 1 , then the media packet with sequence number N + i is associated with this FEC packet , where N is the SN Base field in the FEC packet header . The most significant bit of the mask corresponds to i=0 , and the least significant to i=15 when the L bit is set to 0 , or i=47 when the L bit is set to 1 .	210	1
5191	Reserved	This 16-bit field is reserved for future use . It MUST be set to zero and ignored by the receiver .	500	0
5191	Message Length	The Message Length field is two octets and indicates the length of the PANA message including the header fields .	100	0
5191	Flags	The Flags field is two octets . The following bits are assigned	301	0
5414	C	This field distinguishes between a WiCoP control and WiCoP data packet . Each type of information is tunneled separately across the WiCoP tunnel interfaces between WTPs and the AC . A ' 0 ' value for the ' C ' field indicates a data packet , while a ' 1 ' value indicates a control packet . The ' C ' field is also used to assign WiCoP packets to distinct data and control tunnels between the AC and WTP . WiCoP also maintains logical groups in WLANs with the ' C ' field .	210	0
5414	R	The retransmission field , ' R ', is used to differentiate between the first and subsequent transmissions of WiCoP packets . The ' R ' field is used for critical WiCoP packets such as those relating to security key exchanges . A ' 0 ' value for the ' R ' field indicates the first transmission of a WiCoP packet , while a ' 1 ' value indicates a retransmission .	210	0
5414	E	The encryption field , ' E ', is used to indicate if the WiCoP packet is encrypted between the AC and WTPs . The ' E ' field is used for those WiCoP packets that are exchanged during initialization . A ' 0 ' value indicates the WiCoP packet is unencrypted , while a ' 1 ' value indicates the packet is encrypted .	210	0
5414	F	The fragmentation field indicates if the packet is a fragment of a larger packet . A ' 0 ' value indicates a non-fragmented packet while a ' 1 ' value indicates a fragmented packet . The ' F ', ' L ', ' Fragment ID ', and ' Fragment No .' fields are used together .	210	0
5414	L	This field is used to indicate the last fragment of a larger packet . It is only valid when the ' F ' field has a ' 1 ' value . A ' 0 ' value for the ' L ' field indicates the last fragment of a larger packet while a ' 1 ' value indicates an intermediate fragment of a larger packet . The ' F ', ' L ', ' Fragment ID ', and ' Fragment No .' fields are used together .	210	0
5106	Message Length	The Message Length field is not always present; its presence is determined by a certain flag in the Flags field , as described in Section 8.1 .	100	1
5106	Integrity Checksum Data	The Integrity Checksum Data field is not always present; its presence is determined by a certain flag in the Flags field , as described in Section 8.1 . The Integrity Checksum Data field contains a cryptographic checksum that covers the entire EAP message , starting with the Code field , and ending at the end of the EAP Data field . This field , shown in Figure 4 , is present only if the I bit is set in the Flags field . The Integrity Checksum Data field immediately follows the EAP Data field without padding .	301	1
5109	FEC Level	The FEC level header is 4 or 8 octets ( depending on the L bit in the FEC header ). The formats of the headers are shown in Figure 4 . The FEC level headers consist of a protection length field and a mask field . The protection length field is 16 bits long . The mask field is 16 bits long ( when the L bit is not set ) or 48 bits long ( when the L bit is set ). The mask field in the FEC level header indicates which packets are associated with the FEC packet at the current level . It is either 16 or 48 bits depending on the value of the L bit . If bit i in the mask is set to 1 , then the media packet with sequence number N + i is associated with this FEC packet , where N is the SN Base field in the FEC packet header . The most significant bit of the mask corresponds to i=0 , and the least significant to i=15 when the L bit is set to 0 , or i=47 when the L bit is set to 1 .	210	1
5320	M	the  More Segments  bit . Set to 1 if this SEAL protocol packet contains a non-final segment of a multi-segment mid-layer packet .	231	0
5793	B-Type	This field MUST have one of the values from the following table . If any other value is received , the recipient MUST ignore the contents of the batch and send a fatal Invalid Parameter error code in a CLOSE batch . If the value received is not permitted for the current state , according to the state machine in section 3.2 ., the recipient MUST ignore the contents of the batch and send a fatal Unexpected Batch Type error code in a CLOSE batch . Number Name Definition ------ ---- ---------- 1 CDATA The Posture Broker Client may send a batch with this Batch Type to convey messages to the Posture Broker Server . A Posture Broker Server MUST NOT send this Batch Type . A CDATA batch may be empty ( contain no messages ) if the Posture Broker Client has nothing to send . 2 SDATA The Posture Broker Server may send a batch with this Batch Type to convey messages to the Posture Broker Client . A Posture Broker Client MUST NOT send this Batch Type . An SDATA batch may be empty ( contain no messages ) if the Posture Broker Server has nothing to send . 3 RESULT The Posture Broker Server may send a batch with this Batch Type to indicate that it has completed its evaluation . The batch MUST include a PB-Assessment-Result message and MAY include a PB-Access-Recommendation message . 4 CRETRY The Posture Broker Client may send a batch with this Batch Type to indicate that it wishes to restart an exchange . A Posture Broker Server MUST NOT send this Batch Type . A CRETRY batch may be empty ( contain no messages ) if the Posture Broker Client has nothing else to send . 5 SRETRY The Posture Broker Server may send a batch with this Batch Type to indicate that it wishes to restart the exchange . A Posture Broker Client MUST NOT send this Batch Type . A SRETRY batch may be empty ( contain no messages ) if the Posture Broker Server has nothing else to send . 6 CLOSE The Posture Broker Server or Posture Broker Client may send a batch with this Batch Type to indicate that it is about to terminate the underlying PT connection . A CLOSE batch may be empty ( contain no messages ) if there is nothing to send . However , if the termination is due to a fatal error , then the CLOSE batch MUST contain a PB-Error message .	240	0
5793	Batch Length	This length field contains the size of the full PB-TNC batch in octets . This length includes the PB-TNC header and all the PB-TNC messages in the batch . In other words , it includes the entire contents of the batch . This field MUST contain at least the value 8 for the fixed-length fields in this header . Any Posture Broker Client or Posture Broker Server that receives a PB-TNC message with a PB-TNC Message Length field whose value is less than 8 MUST respond with a fatal Invalid Parameter error code in a CLOSE batch .	400	0
5793	Flags	This field contains flags relating to the PA message . Bit 0 of this flags field ( the most significant bit ) is known as the EXCL flag ( for exclusive ). If the EXCL bit is cleared ( value 0 ), the Posture Broker Client or Posture Broker Server that receives this PB-TNC message SHOULD deliver the PA message contained in this PB-TNC message to all Posture Collectors or Posture Validators that have expressed an interest in PA messages with this PA Message Vendor ID and PA subtype . If a Posture Broker Client receives a message with the EXCL flag set ( value 1 ), the Posture Broker Client SHOULD deliver the PA message contained in this PB-TNC message only to the Posture Collector identified by the Posture Collector Identifier field . However , if the identified Posture Collector has not expressed an interest in PA messages with this PA Message Vendor ID and PA subtype , the PA message should be silently discarded . Analogous requirements apply to a Posture Broker Server that receives a message with the EXCL flag set .	231	0
5793	PA Message Vendor ID	The PA Message Vendor ID field identifies a vendor by using the SMI Private Enterprise Number ( PEN ). Any organization can receive its own unique PEN from IANA , the Internet Assigned Numbers Authority . The PA Message Vendor ID qualifies the PA Subtype field so that each vendor has 2^32-1 separate PA subtypes available for its use . PA subtypes standardized by the IETF are always used with a PA Message Vendor ID of the value zero ( 0 ) in this field . The PA Message Vendor ID 0xffffff is reserved . A Posture Broker Client or Posture Broker Server MUST NOT send messages in which the PA Message Vendor ID field has this reserved value ( 0xffffff ). If a Posture Broker Client or Posture Broker Server receives a message in which the PA Message Vendor ID has this reserved value ( 0xffffff ), it MUST respond with a fatal Invalid Parameter error code in a CLOSE batch .	231	0
5793	PA Subtype	The PA Subtype field identifies the type of the PA message contained in the PA Message Body field . The PA subtype 0xffffffff is reserved . A Posture Broker Client or Posture Broker Server MUST NOT send messages in which the PA Subtype field has this reserved value ( 0xffffffff ). If a Posture Broker Client or Posture Broker Server receives a message in which the PA Subtype has this reserved value ( 0xffffffff ), it MUST respond with a fatal Invalid Parameter error code in a CLOSE batch . A Posture Broker Client or Posture Broker Server MUST support having multiple PA messages in a single PB-TNC batch that have the same PA subtype and/or PA Message Vendor ID .	231	0
5793	Posture Collector Identifier	The Posture Collector Identifier field contains the identifier of the Posture Collector associated with this PA message . The Posture Broker Client is responsible for assigning one or more Posture Collector Identifier values ( but not 0xffff ) to each Posture Collector involved in a message exchange . Multiple Posture Collector identifiers are required for appropriate correlation in cases where there are multiple components of the same type handled by a single Posture Collector , e.g ., an endpoint with two VPN client implementations handled by a single VPN Posture Collector . Please refer to section 3.3 of the PA-TNC specification for an example that illustrates the use of multiple Posture Collector Identifiers . The Posture Collector Identifier value(s ) assigned to a Posture Collector by a Posture Broker Client MUST NOT change during the course of a PT session . This identifier is used to identify a unique Posture Collector communicating with the Posture Broker Client on the endpoint during a NEA exchange , and is used by the Posture Validator to send response attributes to a specific Posture Collector component if required .	231	0
5793	Posture Validator Identifier	The Posture Validator Identifier field contains the identifier of the Posture Validator associated with this PA message . The Posture Broker Server MUST assign a unique Posture Validator Identifier value ( but not 0xffff ) to each Posture Validator involved in a message exchange and include this Posture Validator identifier in this field for any PA messages sent by that Posture Validator . The Posture Validator Identifier value assigned to a Posture Validator by a Posture Broker Server MUST NOT change during the course of a PT session . This identifier is used to identify a unique Posture Validator communicating with the Posture Broker Server endpoint during a NEA exchange , and is used by the Posture Collector to send attributes to a specific Posture Validator if required . When a Posture Broker Client sets the EXCL flag for a PA message , the Posture Broker Client MUST set the Posture Validator Identifier field to the identifier of the Posture Validator that should receive the PA message . If the EXCL flag is not set , a Posture Broker Client MAY still set the Posture Validator Identifier value for PA messages that it sends to indicate that the PA message is intended as a response to a message sent by the Posture Validator associated with the specified Posture Validator Identifier . If the Posture Broker Client does not wish to indicate any Posture Validator in this manner , it SHOULD set this field to the reserved value 0xffff .	230	0
5793	PA Message Body	The PA Message Body field contains the body of the PA message that is being carried in this PB-TNC message . The length of this field can be determined by subtracting the length of the fixed-length fields at the start of the PB-TNC message ( the fields Flags , PB - TNC Vendor ID , PB-TNC Message Type , and PB-TNC Message Length ) and the fixed-length fields at the start of the PB-PA message ( Flags , PA Message Vendor ID , PA Subtype , Posture Collector Identifier , and Posture Validator Identifier ) from the message length contained in the PB-TNC Message Length field . The length of these fixed-length fields is 24 octets . Therefore , any Posture Broker Client or Posture Broker Server that receives a PB-PA message with a PB-TNC Message Length field whose value is less than 24 MUST respond with a fatal Invalid Parameter error code in a CLOSE batch .	400	1
5793	Assessment Result	The PB-TNC message type named PB-Assessment-Result ( value 2 ) is used by the Posture Broker Server to provide the assessment result after the Posture Broker Server has completed the assessment of the endpoint .	400	0
5793	Reserved	These Reserved bits MUST be set to 0 on transmission and ignored on reception .	500	0
5793	Access Recommendation Code	The Access Recommendation Code field identifies the Access Recommendation that the Posture Broker Server has made for this Posture Broker Client at this time . This field MUST have one of these three values : 1 for Access Allowed ( full access ), 2 for Access Denied ( no access ), or 3 for Quarantined ( partial access ). If a Posture Broker Client receives an Access Recommendation Code value other than these three values , it MUST respond with a fatal Invalid Parameter error code in a CLOSE batch . Other values may	230	0
5798	IPvX Address(es)	This refers to one or more IPvX addresses associated with the virtual router . The number of addresses included is specified in the  Count IP Addr  field . These fields are used for troubleshooting misconfigured routers . If more than one address is sent , it is recommended that all routers be configured to send these addresses in the same order to make it easier to do this comparison . For IPv4 addresses , this refers to one or more IPv4 addresses that are backed up by the virtual router . For IPv6 , the first address must be the IPv6 link-local address associated with the virtual router . This field contains either one or more IPv4 addresses , or one or more IPv6 addresses , that is , IPv4 and IPv6 MUST NOT both be carried in one IPvX Address field .	230	0
7455	TRILL Header	Fixed size of 6 bytes when the Extended Header is not included [ RFC6325 ].	400	0
7455	Flow Entropy	A 96-byte , fixed-size field . The rightmost bits of the field MUST be padded with zeros , up to 96 bytes , when the flow-entropy information is less than 96 bytes . Flow Entropy enables emulation of the forwarding behavior of the desired data packets . The Flow Entropy field starts with the Inner.MacDA . The offset of the Inner.MacDA depends on whether extensions are included or not as specified in [ RFC7179 ] and [ RFC6325 ]. Such extensions are not commonly supported in current TRILL implementations .	400	0
7455	OAM Ethertype	A 16-bit Ethertype that identifies the OAM Message Channel that follows . This document specifies using the Ethertype 0x8902 allocated for CFM [ 8021Q ].	400	0
7455	OAM Message Channel	A variable-size section that carries OAM - related information . The message format is as specified in [ 8021Q ].	400	1
760	Total Length	16 bits Total Length is the length of the datagram , measured in octets , including internet header and data . This field allows the length of a datagram to be up to 65,535 octets . Such long datagrams are impractical for most hosts and networks . All hosts must be prepared to accept datagrams of up to 576 octets ( whether they arrive whole or in fragments ). It is recommended that hosts only send datagrams larger than 576 octets if they have assurance that the destination is prepared to accept the larger datagrams . The number 576 is selected to allow a reasonable sized data block to be transmitted in addition to the required header information . For example , this size allows a data block of 512 octets plus 64 header octets to fit in a datagram . The maximal internet header is 60 octets , and a typical internet header is 20 octets , allowing a margin for headers of higher level protocols .	100	0
760	Identification	16 bits An identifying value assigned by the sender to aid in assembling the fragments of a datagram .	400	0
760	Flags	Various Control Flags . Bit 0 : reserved , must be zero Bit 1 : Don't Fragment This Datagram ( DF ). Bit 2 : More Fragments Flag ( MF ).	240	0
2960	Source Port Number	16 bits ( unsigned integer ) This is the SCTP sender's port number . It can be used by the receiver in combination with the source IP address , the SCTP destination port and possibly the destination IP address to identify the association to which this packet belongs .	231	0
2960	Destination Port Number	16 bits ( unsigned integer ) This is the SCTP port number to which this packet is destined . The receiving host will use this port number to de-multiplex the SCTP packet to the correct receiving endpoint/application .	231	0
3095	Security Parameters Index	Static . If it changes , it needs to be reestablished .	231	0
3095	Sequence Number	Not sent when the offset from the sequence number of the compressed header is constant . When the offset is not constant , the sequence number may be compressed by sending LSBs .	231	0
3095	Payload Data	This is where subsequent headers are to be found . Parsed according to the Next Header field .	400	1
3095	Padding (0-255 octets)	The padding octets are assumed to be as defined in [ ESP ], i.e ., to take the values 1 , 2 , ..., k , where k = Pad Length . If the padding in the static context has this pattern , padding in compressed headers is assumed to have this pattern as well and is removed . If padding in the static context does not have this pattern , the padding is not removed .	301	1
3095	Pad Length	Dynamic . Always sent . 14th octet from end of packet .	100	0
3095	Next Header	Static . 13th octet from end of packet .	231	0
3095	Authentication Data(variable length, but assumed to be 12 octets)	Can have variable length , but when compression of NULL-encryption ESP header is attempted , it is assumed to have length 12 octets .	400	1
3331	Version	The version field contains the version of the M2UA adaptation layer .	220	0
3331	Spare	The Spare field is 8-bits . It SHOULD be set to all ' 0's by the sender and ignored by the receiver .	500	0
3331	Message Class	The following List contains the valid Message Classes : Message Class : 8 bits ( unsigned integer ) 0 Management ( MGMT ) Message [ IUA/M2UA/M3UA/SUA ] 1 Transfer Messages [ M3UA ] 2 SS7 Signalling Network Management ( SSNM ) Messages [ M3UA/SUA ] 3 ASP State Maintenance ( ASPSM ) Messages [ IUA/M2UA/M3UA/SUA ] 4 ASP Traffic Maintenance ( ASPTM ) Messages [ IUA/M2UA/M3UA/SUA ] 5 Q.921/Q.931 Boundary Primitives Transport ( QPTM ) Messages [ IUA ] 6 MTP2 User Adaptation ( MAUP ) Messages [ M2UA ] 7 Connectionless Messages [ SUA ] 8 Connection-Oriented Messages [ SUA ] 9 Routing Key Management ( RKM ) Messages ( M3UA ) 10 Interface Identifier Management ( IIM ) Messages ( M2UA ) 11 to 127 Reserved by the IETF128 to 255 Reserved for IETF-Defined Message Class extensions	240	0
3331	Message Type	The following List contains the Message Types for the valid Message Classes : MTP2 User Adaptation ( MAUP ) Messages 0 Reserved 1 Data 2 Establish Request 3 Establish Confirm 4 Release Request 5 Release Confirm 6 Release Indication 7 State Request 8 State Confirm	240	0
3451	S	Transport Session Identifier flag ( S ): 1 bit This is the number of full 32-bit words in the TSI field . The TSI field is 32*S + 16*H bits in length , i.e . the length is either 0 bits , 16 bits , 32 bits , or 48 bits .	210	0
3451	O	Transport Object Identifier flag ( O ): 2 bits This is the number of full 32-bit words in the TOI field . The TOI field is 32*O + 16*H bits in length , i.e ., the length is either 0 bits , 16 bits , 32 bits , 48 bits , 64 bits , 80 bits , 96 bits , or 112 bits .	100	0
3451	H	Half-word flag ( H ): 1 bit The TSI and the TOI fields are both multiples of 32-bits plus 16*H bits in length . This allows the TSI and TOI field lengths to be multiples of a half-word ( 16 bits ), while ensuring that the aggregate length of the TSI and TOI fields is a multiple of 32-bits .	210	0
3451	T	Sender Current Time present flag ( T ): 1 bit T = 0 indicates that the Sender Current Time ( SCT ) field is not present . T = 1 indicates that the SCT field is present . The SCT is inserted by senders to indicate to receivers how long the session has been in progress .	210	0
3451	R	Expected Residual Time present flag ( R ): 1 bit R = 0 indicates that the Expected Residual Time ( ERT ) field is not present . R = 1 indicates that the ERT field is present . The ERT is inserted by senders to indicate to receivers how much longer the session / object transmission will continue . Senders MUST NOT set R = 1 when the ERT for the session is more than 2^32-1 time units ( approximately 49 days ), where time is measured in units of milliseconds .	210	0
